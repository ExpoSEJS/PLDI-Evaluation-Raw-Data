J$.iids = {"8":[9,13,9,41],"9":[1,20,1,27],"10":[8,39,8,53],"16":[7,9,7,32],"17":[1,28,1,32],"18":[8,27,8,53],"24":[18,13,18,41],"25":[1,20,1,33],"26":[8,56,8,71],"32":[16,9,16,32],"33":[1,20,1,33],"34":[8,27,8,71],"40":[29,22,29,59],"41":[1,20,1,33],"42":[8,74,8,89],"48":[32,17,32,61],"49":[2,26,2,38],"50":[8,27,8,89],"56":[32,64,32,89],"57":[2,26,2,45],"58":[9,13,9,41],"64":[32,17,32,61],"65":[2,26,2,45],"66":[10,35,10,118],"72":[33,23,33,66],"73":[2,26,2,45],"74":[10,35,10,129],"80":[33,69,33,93],"81":[3,19,3,26],"82":[10,35,10,143],"88":[33,23,33,66],"89":[3,27,3,43],"90":[10,35,10,149],"96":[35,9,35,79],"97":[3,19,3,44],"98":[17,39,17,53],"104":[35,9,35,79],"105":[3,19,3,56],"106":[17,27,17,53],"112":[42,9,42,45],"113":[3,69,3,76],"114":[17,56,17,71],"120":[46,9,46,100],"121":[3,77,3,83],"122":[17,27,17,71],"128":[46,9,46,100],"129":[3,69,3,84],"130":[17,74,17,89],"136":[48,9,48,107],"137":[3,69,3,93],"138":[17,27,17,89],"144":[48,9,48,107],"145":[3,19,3,56],"146":[18,13,18,41],"152":[86,13,86,41],"153":[3,19,3,56],"154":[19,35,19,122],"160":[84,9,84,32],"161":[3,69,3,93],"162":[19,35,19,133],"168":[103,13,103,41],"169":[3,69,3,93],"170":[19,35,19,147],"176":[101,9,101,32],"177":[4,21,4,28],"178":[19,35,19,153],"185":[5,5,5,16],"186":[29,22,29,46],"193":[5,22,5,26],"194":[29,22,29,59],"201":[5,5,5,27],"202":[32,17,32,32],"203":[5,5,5,21],"209":[5,5,5,28],"210":[32,36,32,61],"217":[6,18,6,22],"218":[32,64,32,89],"225":[6,18,6,22],"226":[33,23,33,38],"233":[6,18,6,22],"234":[33,42,33,66],"241":[7,9,7,15],"242":[33,69,33,93],"249":[7,25,7,31],"250":[34,27,34,76],"257":[7,9,7,32],"258":[35,9,35,46],"259":[7,9,7,24],"265":[8,27,8,33],"266":[42,11,42,45],"273":[8,34,8,35],"274":[42,10,42,45],"281":[8,27,8,36],"282":[42,9,42,45],"289":[8,39,8,45],"290":[45,32,45,74],"297":[8,46,8,47],"298":[45,32,45,78],"305":[8,39,8,48],"306":[45,32,45,82],"313":[8,52,8,53],"314":[45,32,45,141],"321":[8,56,8,62],"322":[45,32,45,222],"329":[8,63,8,64],"330":[45,225,45,230],"337":[8,56,8,65],"338":[45,32,45,230],"345":[8,69,8,71],"346":[46,9,46,49],"353":[8,74,8,80],"354":[46,53,46,100],"361":[8,81,8,82],"362":[47,25,47,100],"369":[8,74,8,83],"370":[47,25,47,111],"377":[8,87,8,89],"378":[48,52,48,107],"385":[8,27,8,89],"386":[49,25,49,102],"393":[8,27,8,89],"394":[49,25,49,113],"401":[9,13,9,24],"402":[52,14,52,24],"409":[9,28,9,34],"410":[52,28,52,54],"417":[9,28,9,41],"418":[52,28,52,60],"425":[10,29,10,34],"426":[53,14,53,24],"433":[10,35,10,102],"434":[53,28,53,54],"441":[10,105,10,111],"442":[53,28,53,60],"449":[10,105,10,118],"450":[54,14,54,24],"457":[10,121,10,129],"458":[54,28,54,53],"465":[10,132,10,143],"466":[54,28,54,59],"473":[10,146,10,149],"474":[55,24,55,50],"481":[10,25,10,150],"482":[56,14,56,24],"489":[10,25,10,150],"490":[57,14,57,24],"497":[10,25,10,150],"498":[57,28,57,48],"505":[11,13,11,18],"506":[57,28,57,54],"513":[11,26,11,38],"514":[58,14,58,24],"521":[11,13,11,38],"522":[58,28,58,48],"529":[11,13,11,39],"530":[58,28,58,54],"537":[12,19,12,24],"538":[59,14,59,24],"545":[12,19,12,24],"546":[59,28,59,47],"553":[12,13,12,25],"554":[59,28,59,53],"561":[15,18,15,26],"562":[60,24,60,44],"569":[15,18,15,26],"570":[61,14,61,24],"577":[15,18,15,26],"578":[62,14,62,22],"585":[16,9,16,15],"593":[16,25,16,31],"594":[62,14,62,22],"601":[16,9,16,32],"602":[63,14,63,22],"603":[16,9,16,24],"609":[17,27,17,33],"617":[17,34,17,35],"618":[63,14,63,22],"625":[17,27,17,36],"626":[64,14,64,22],"633":[17,39,17,45],"641":[17,46,17,47],"642":[64,14,64,22],"649":[17,39,17,48],"650":[65,14,65,22],"657":[17,52,17,53],"665":[17,56,17,62],"666":[65,14,65,22],"673":[17,63,17,64],"674":[66,14,66,24],"681":[17,56,17,65],"682":[66,28,66,57],"689":[17,69,17,71],"690":[66,28,66,63],"697":[17,74,17,80],"698":[67,14,67,24],"705":[17,81,17,82],"706":[67,28,67,57],"713":[17,74,17,83],"714":[67,28,67,63],"721":[17,87,17,89],"722":[68,14,68,24],"729":[17,27,17,89],"730":[68,28,68,56],"737":[17,27,17,89],"738":[68,28,68,62],"745":[18,13,18,24],"746":[69,24,69,53],"753":[18,28,18,34],"754":[70,14,70,24],"761":[18,28,18,41],"762":[71,14,71,22],"769":[19,29,19,34],"777":[19,35,19,106],"778":[71,14,71,22],"785":[19,109,19,115],"786":[72,14,72,22],"793":[19,109,19,122],"801":[19,125,19,133],"802":[72,14,72,22],"809":[19,136,19,147],"810":[73,14,73,22],"817":[19,150,19,153],"825":[19,25,19,154],"826":[73,14,73,22],"833":[19,25,19,154],"834":[74,14,74,22],"841":[19,25,19,154],"849":[20,13,20,18],"850":[74,14,74,22],"857":[20,26,20,38],"858":[75,14,75,74],"865":[20,13,20,38],"866":[75,14,75,78],"873":[20,13,20,39],"874":[76,14,76,24],"881":[21,19,21,24],"882":[77,14,77,24],"889":[21,19,21,24],"890":[77,28,77,44],"897":[21,13,21,25],"898":[77,28,77,50],"905":[24,5,24,9],"906":[78,14,78,24],"913":[24,27,24,41],"914":[78,28,78,44],"921":[24,5,24,41],"922":[78,28,78,50],"929":[24,5,24,42],"930":[79,14,79,24],"937":[25,5,25,9],"938":[79,28,79,43],"945":[25,17,25,21],"946":[79,28,79,49],"953":[25,5,25,21],"954":[80,24,80,40],"961":[25,5,25,22],"962":[81,14,81,24],"969":[26,5,26,9],"970":[85,39,85,53],"977":[26,21,26,29],"978":[85,27,85,53],"985":[26,5,26,29],"986":[85,56,85,71],"993":[26,5,26,30],"994":[85,27,85,71],"1001":[27,5,27,9],"1002":[85,74,85,89],"1009":[27,15,27,17],"1010":[85,27,85,89],"1017":[27,5,27,17],"1018":[86,13,86,41],"1025":[27,5,27,18],"1026":[87,29,87,100],"1033":[28,5,28,9],"1034":[87,29,87,111],"1041":[28,31,28,36],"1042":[87,29,87,125],"1049":[28,5,28,36],"1050":[87,29,87,131],"1057":[28,5,28,37],"1058":[91,26,91,124],"1065":[29,5,29,9],"1066":[91,26,91,128],"1073":[29,29,29,36],"1074":[93,14,93,24],"1081":[29,29,29,46],"1082":[93,28,93,48],"1089":[29,50,29,59],"1090":[93,28,93,54],"1097":[29,62,29,67],"1098":[94,14,94,24],"1105":[29,70,29,77],"1106":[94,28,94,48],"1113":[29,70,29,87],"1114":[94,28,94,54],"1121":[29,5,29,87],"1122":[95,14,95,24],"1129":[29,5,29,88],"1130":[95,28,95,47],"1137":[30,21,30,22],"1138":[95,28,95,53],"1145":[30,21,30,22],"1146":[96,24,96,44],"1153":[30,21,30,22],"1154":[97,14,97,37],"1161":[31,27,31,28],"1162":[98,14,98,24],"1169":[31,27,31,28],"1170":[102,39,102,53],"1177":[31,27,31,28],"1178":[102,27,102,53],"1185":[32,17,32,24],"1186":[102,56,102,71],"1193":[32,28,32,32],"1194":[102,27,102,71],"1201":[32,36,32,43],"1202":[102,74,102,89],"1209":[32,44,32,52],"1210":[102,27,102,89],"1217":[32,36,32,53],"1218":[103,13,103,41],"1225":[32,57,32,61],"1226":[104,29,104,100],"1233":[32,64,32,71],"1234":[104,29,104,111],"1241":[32,72,32,80],"1242":[104,29,104,125],"1249":[32,64,32,81],"1250":[104,29,104,131],"1257":[32,85,32,89],"1258":[108,26,108,133],"1265":[32,92,32,93],"1266":[108,26,108,137],"1273":[32,96,32,97],"1274":[110,14,110,24],"1281":[32,100,32,109],"1282":[110,28,110,48],"1289":[32,17,32,109],"1290":[110,28,110,54],"1297":[32,5,32,110],"1298":[111,14,111,24],"1305":[33,23,33,30],"1306":[111,28,111,48],"1313":[33,34,33,38],"1314":[111,28,111,54],"1321":[33,42,33,49],"1322":[112,14,112,24],"1329":[33,50,33,57],"1330":[112,28,112,47],"1337":[33,42,33,58],"1338":[112,28,112,53],"1345":[33,62,33,66],"1346":[113,24,113,44],"1353":[33,69,33,76],"1354":[114,14,114,37],"1361":[33,77,33,84],"1362":[115,14,115,24],"1369":[33,69,33,85],"1377":[33,89,33,93],"1385":[33,96,33,97],"1393":[33,100,33,101],"1401":[33,104,33,119],"1409":[33,23,33,119],"1417":[33,5,33,120],"1425":[34,5,34,9],"1433":[34,18,34,26],"1441":[34,27,34,42],"1449":[34,27,34,53],"1451":[34,27,34,51],"1457":[34,56,34,65],"1465":[34,56,34,76],"1467":[34,56,34,74],"1473":[34,78,34,79],"1481":[34,18,34,80],"1489":[34,5,34,80],"1497":[34,5,34,81],"1505":[35,9,35,16],"1513":[35,17,35,37],"1521":[35,9,35,38],"1529":[35,42,35,46],"1537":[35,50,35,57],"1545":[35,58,35,78],"1553":[35,50,35,79],"1561":[36,9,36,13],"1569":[36,35,36,39],"1577":[36,9,36,39],"1585":[36,9,36,40],"1593":[4,45,38,2],"1601":[4,45,38,2],"1609":[4,45,38,2],"1617":[4,45,38,2],"1625":[4,45,38,2],"1633":[4,45,38,2],"1641":[4,45,38,2],"1649":[4,45,38,2],"1657":[4,45,38,2],"1665":[4,45,38,2],"1673":[4,45,38,2],"1681":[4,45,38,2],"1689":[4,45,38,2],"1697":[4,21,38,2],"1705":[4,21,38,2],"1713":[4,21,38,2],"1721":[39,1,39,9],"1729":[39,10,39,23],"1737":[39,25,39,36],"1745":[39,1,39,37],"1753":[39,1,39,38],"1761":[40,1,40,14],"1769":[40,27,40,31],"1777":[40,1,40,31],"1785":[40,1,40,32],"1793":[41,1,41,14],"1801":[41,1,41,24],"1809":[42,12,42,16],"1817":[42,12,42,31],"1825":[42,40,42,44],"1833":[42,12,42,45],"1835":[42,12,42,39],"1841":[43,19,43,24],"1849":[43,25,43,68],"1857":[43,15,43,69],"1865":[43,15,43,69],"1873":[43,9,43,70],"1881":[45,32,45,33],"1889":[45,36,45,42],"1897":[45,54,45,58],"1905":[45,54,45,73],"1913":[45,36,45,74],"1915":[45,36,45,53],"1921":[45,77,45,78],"1929":[45,81,45,82],"1937":[45,85,45,89],"1945":[45,85,45,92],"1953":[45,85,45,97],"1961":[45,118,45,122],"1969":[45,118,45,127],"1977":[45,129,45,134],"1985":[45,136,45,140],"1993":[45,85,45,141],"1995":[45,85,45,117],"2001":[45,144,45,148],"2009":[45,144,45,151],"2017":[45,144,45,156],"2025":[45,177,45,181],"2033":[45,177,45,190],"2041":[45,192,45,196],"2049":[45,192,45,215],"2057":[45,217,45,221],"2065":[45,144,45,222],"2067":[45,144,45,176],"2073":[45,225,45,226],"2081":[45,229,45,230],"2089":[45,32,45,230],"2097":[45,32,45,230],"2105":[46,10,46,22],"2113":[46,10,46,49],"2121":[46,53,46,73],"2129":[46,76,46,88],"2137":[46,76,46,100],"2145":[47,19,47,24],"2153":[47,25,47,73],"2161":[47,76,47,88],"2169":[47,76,47,100],"2177":[47,103,47,111],"2185":[47,15,47,112],"2193":[47,15,47,112],"2201":[47,9,47,113],"2209":[48,9,48,21],"2217":[48,9,48,48],"2225":[48,52,48,72],"2233":[48,75,48,87],"2241":[48,75,48,107],"2249":[49,19,49,24],"2257":[49,25,49,67],"2265":[49,70,49,82],"2273":[49,70,49,102],"2281":[49,105,49,113],"2289":[49,15,49,114],"2297":[49,15,49,114],"2305":[49,9,49,115],"2313":[50,18,50,19],"2321":[50,18,50,19],"2329":[50,18,50,19],"2337":[51,24,51,30],"2345":[51,31,51,51],"2353":[51,20,51,52],"2361":[51,20,51,52],"2369":[51,20,51,52],"2377":[52,5,52,13],"2385":[52,14,52,20],"2393":[52,23,52,24],"2401":[52,28,52,48],"2409":[52,52,52,54],"2417":[52,57,52,60],"2425":[52,5,52,60],"2433":[52,5,52,61],"2441":[53,5,53,13],"2449":[53,14,53,20],"2457":[53,23,53,24],"2465":[53,28,53,48],"2473":[53,52,53,54],"2481":[53,57,53,60],"2489":[53,5,53,60],"2497":[53,5,53,61],"2505":[54,5,54,13],"2513":[54,14,54,20],"2521":[54,23,54,24],"2529":[54,28,54,48],"2537":[54,52,54,53],"2545":[54,56,54,59],"2553":[54,5,54,59],"2561":[54,5,54,60],"2569":[55,5,55,13],"2577":[55,14,55,20],"2585":[55,24,55,44],"2593":[55,47,55,50],"2601":[55,5,55,50],"2609":[55,5,55,51],"2617":[56,14,56,20],"2625":[56,23,56,24],"2633":[56,14,56,24],"2641":[56,5,56,25],"2649":[57,5,57,13],"2657":[57,14,57,20],"2665":[57,23,57,24],"2673":[57,28,57,32],"2681":[57,28,57,42],"2689":[57,46,57,48],"2697":[57,51,57,54],"2705":[57,5,57,54],"2713":[57,5,57,55],"2721":[58,5,58,13],"2729":[58,14,58,20],"2737":[58,23,58,24],"2745":[58,28,58,32],"2753":[58,28,58,42],"2761":[58,46,58,48],"2769":[58,51,58,54],"2777":[58,5,58,54],"2785":[58,5,58,55],"2793":[59,5,59,13],"2801":[59,14,59,20],"2809":[59,23,59,24],"2817":[59,28,59,32],"2825":[59,28,59,42],"2833":[59,46,59,47],"2841":[59,50,59,53],"2849":[59,5,59,53],"2857":[59,5,59,54],"2865":[60,5,60,13],"2873":[60,14,60,20],"2881":[60,24,60,28],"2889":[60,24,60,38],"2897":[60,41,60,44],"2905":[60,5,60,44],"2913":[60,5,60,45],"2921":[61,14,61,20],"2929":[61,23,61,24],"2937":[61,14,61,24],"2945":[61,5,61,25],"2953":[62,5,62,13],"2969":[62,14,62,20],"2977":[62,14,62,22],"2993":[62,26,62,27],"3001":[62,5,62,27],"3009":[62,5,62,28],"3017":[63,5,63,13],"3033":[63,14,63,20],"3041":[63,14,63,22],"3057":[63,26,63,27],"3065":[63,5,63,27],"3073":[63,5,63,28],"3081":[64,5,64,13],"3097":[64,14,64,20],"3105":[64,14,64,22],"3121":[64,26,64,27],"3129":[64,5,64,27],"3137":[64,5,64,28],"3145":[65,5,65,13],"3161":[65,14,65,20],"3169":[65,14,65,22],"3185":[65,26,65,27],"3193":[65,5,65,27],"3201":[65,5,65,28],"3209":[66,5,66,13],"3217":[66,14,66,20],"3225":[66,23,66,24],"3233":[66,28,66,41],"3241":[66,28,66,51],"3249":[66,55,66,57],"3257":[66,60,66,63],"3265":[66,5,66,63],"3273":[66,5,66,64],"3281":[67,5,67,13],"3289":[67,14,67,20],"3297":[67,23,67,24],"3305":[67,28,67,41],"3313":[67,28,67,51],"3321":[67,55,67,57],"3329":[67,60,67,63],"3337":[67,5,67,63],"3345":[67,5,67,64],"3353":[68,5,68,13],"3361":[68,14,68,20],"3369":[68,23,68,24],"3377":[68,28,68,41],"3385":[68,28,68,51],"3393":[68,55,68,56],"3401":[68,59,68,62],"3409":[68,5,68,62],"3417":[68,5,68,63],"3425":[69,5,69,13],"3433":[69,14,69,20],"3441":[69,24,69,37],"3449":[69,24,69,47],"3457":[69,50,69,53],"3465":[69,5,69,53],"3473":[69,5,69,54],"3481":[70,14,70,20],"3489":[70,23,70,24],"3497":[70,14,70,24],"3505":[70,5,70,25],"3513":[71,5,71,13],"3529":[71,14,71,20],"3537":[71,14,71,22],"3553":[71,26,71,27],"3561":[71,5,71,27],"3569":[71,5,71,28],"3577":[72,5,72,13],"3593":[72,14,72,20],"3601":[72,14,72,22],"3617":[72,26,72,27],"3625":[72,5,72,27],"3633":[72,5,72,28],"3641":[73,5,73,13],"3657":[73,14,73,20],"3665":[73,14,73,22],"3681":[73,26,73,27],"3689":[73,5,73,27],"3697":[73,5,73,28],"3705":[74,5,74,13],"3721":[74,14,74,20],"3729":[74,14,74,22],"3745":[74,26,74,27],"3753":[74,5,74,27],"3761":[74,5,74,28],"3769":[75,14,75,20],"3777":[75,23,75,31],"3785":[75,38,75,42],"3793":[75,38,75,57],"3801":[75,59,75,65],"3809":[75,67,75,73],"3817":[75,23,75,74],"3819":[75,23,75,37],"3825":[75,77,75,78],"3833":[75,14,75,78],"3841":[75,5,75,79],"3849":[76,5,76,13],"3857":[76,14,76,20],"3865":[76,23,76,24],"3873":[76,28,76,29],"3881":[76,5,76,29],"3889":[76,5,76,30],"3897":[77,5,77,13],"3905":[77,14,77,20],"3913":[77,23,77,24],"3921":[77,28,77,32],"3929":[77,28,77,38],"3937":[77,42,77,44],"3945":[77,47,77,50],"3953":[77,5,77,50],"3961":[77,5,77,51],"3969":[78,5,78,13],"3977":[78,14,78,20],"3985":[78,23,78,24],"3993":[78,28,78,32],"4001":[78,28,78,38],"4009":[78,42,78,44],"4017":[78,47,78,50],"4025":[78,5,78,50],"4033":[78,5,78,51],"4041":[79,5,79,13],"4049":[79,14,79,20],"4057":[79,23,79,24],"4065":[79,28,79,32],"4073":[79,28,79,38],"4081":[79,42,79,43],"4089":[79,46,79,49],"4097":[79,5,79,49],"4105":[79,5,79,50],"4113":[80,5,80,13],"4121":[80,14,80,20],"4129":[80,24,80,28],"4137":[80,24,80,34],"4145":[80,37,80,40],"4153":[80,5,80,40],"4161":[80,5,80,41],"4169":[81,14,81,20],"4177":[81,23,81,24],"4185":[81,14,81,24],"4193":[81,5,81,25],"4201":[82,26,82,27],"4209":[82,26,82,27],"4217":[82,26,82,27],"4225":[83,18,83,22],"4233":[83,18,83,27],"4241":[83,18,83,27],"4249":[83,18,83,27],"4257":[84,9,84,15],"4265":[84,25,84,31],"4273":[84,9,84,32],"4275":[84,9,84,24],"4281":[85,27,85,33],"4289":[85,34,85,35],"4297":[85,27,85,36],"4305":[85,39,85,45],"4313":[85,46,85,47],"4321":[85,39,85,48],"4329":[85,52,85,53],"4337":[85,56,85,62],"4345":[85,63,85,64],"4353":[85,56,85,65],"4361":[85,69,85,71],"4369":[85,74,85,80],"4377":[85,81,85,82],"4385":[85,74,85,83],"4393":[85,87,85,89],"4401":[85,27,85,89],"4409":[85,27,85,89],"4417":[86,13,86,24],"4425":[86,28,86,34],"4433":[86,28,86,41],"4441":[87,23,87,28],"4449":[87,29,87,84],"4457":[87,87,87,93],"4465":[87,87,87,100],"4473":[87,103,87,111],"4481":[87,114,87,125],"4489":[87,128,87,131],"4497":[87,19,87,132],"4505":[87,19,87,132],"4513":[87,13,87,133],"4521":[88,26,88,32],"4529":[88,26,88,39],"4537":[88,26,88,39],"4545":[88,9,88,40],"4553":[89,9,89,15],"4561":[89,21,89,29],"4569":[89,31,89,37],"4577":[89,9,89,38],"4579":[89,9,89,20],"4585":[89,9,89,39],"4593":[91,26,91,30],"4601":[91,26,91,33],"4609":[91,26,91,38],"4617":[91,67,91,73],"4625":[91,75,91,79],"4633":[91,75,91,89],"4641":[91,91,91,99],"4649":[91,101,91,107],"4657":[91,109,91,114],"4665":[91,26,91,115],"4667":[91,26,91,66],"4673":[91,118,91,124],"4681":[91,127,91,128],"4689":[91,26,91,128],"4697":[91,9,91,129],"4705":[93,5,93,13],"4713":[93,14,93,20],"4721":[93,23,93,24],"4729":[93,28,93,42],"4737":[93,46,93,48],"4745":[93,51,93,54],"4753":[93,5,93,54],"4761":[93,5,93,55],"4769":[94,5,94,13],"4777":[94,14,94,20],"4785":[94,23,94,24],"4793":[94,28,94,42],"4801":[94,46,94,48],"4809":[94,51,94,54],"4817":[94,5,94,54],"4825":[94,5,94,55],"4833":[95,5,95,13],"4841":[95,14,95,20],"4849":[95,23,95,24],"4857":[95,28,95,42],"4865":[95,46,95,47],"4873":[95,50,95,53],"4881":[95,5,95,53],"4889":[95,5,95,54],"4897":[96,5,96,13],"4905":[96,14,96,20],"4913":[96,24,96,38],"4921":[96,41,96,44],"4929":[96,5,96,44],"4937":[96,5,96,45],"4945":[97,14,97,20],"4953":[97,23,97,37],"4961":[97,14,97,37],"4969":[97,5,97,38],"4977":[98,5,98,13],"4985":[98,14,98,20],"4993":[98,23,98,24],"5001":[98,28,98,29],"5009":[98,5,98,29],"5017":[98,5,98,30],"5025":[99,26,99,27],"5033":[99,26,99,27],"5041":[99,26,99,27],"5049":[100,18,100,22],"5057":[100,18,100,31],"5065":[100,18,100,31],"5073":[100,18,100,31],"5081":[101,9,101,15],"5089":[101,25,101,31],"5097":[101,9,101,32],"5099":[101,9,101,24],"5105":[102,27,102,33],"5113":[102,34,102,35],"5121":[102,27,102,36],"5129":[102,39,102,45],"5137":[102,46,102,47],"5145":[102,39,102,48],"5153":[102,52,102,53],"5161":[102,56,102,62],"5169":[102,63,102,64],"5177":[102,56,102,65],"5185":[102,69,102,71],"5193":[102,74,102,80],"5201":[102,81,102,82],"5209":[102,74,102,83],"5217":[102,87,102,89],"5225":[102,27,102,89],"5233":[102,27,102,89],"5241":[103,13,103,24],"5249":[103,28,103,34],"5257":[103,28,103,41],"5265":[104,23,104,28],"5273":[104,29,104,84],"5281":[104,87,104,93],"5289":[104,87,104,100],"5297":[104,103,104,111],"5305":[104,114,104,125],"5313":[104,128,104,131],"5321":[104,19,104,132],"5329":[104,19,104,132],"5337":[104,13,104,133],"5345":[105,26,105,32],"5353":[105,26,105,39],"5361":[105,26,105,39],"5369":[105,9,105,40],"5377":[106,9,106,15],"5385":[106,21,106,29],"5393":[106,31,106,37],"5401":[106,9,106,38],"5403":[106,9,106,20],"5409":[106,9,106,39],"5417":[108,26,108,30],"5425":[108,26,108,33],"5433":[108,26,108,38],"5441":[108,67,108,73],"5449":[108,75,108,80],"5457":[108,82,108,90],"5465":[108,92,108,98],"5473":[108,100,108,104],"5481":[108,100,108,123],"5489":[108,26,108,124],"5491":[108,26,108,66],"5497":[108,127,108,133],"5505":[108,136,108,137],"5513":[108,26,108,137],"5521":[108,9,108,138],"5529":[110,5,110,13],"5537":[110,14,110,20],"5545":[110,23,110,24],"5553":[110,28,110,42],"5561":[110,46,110,48],"5569":[110,51,110,54],"5577":[110,5,110,54],"5585":[110,5,110,55],"5593":[111,5,111,13],"5601":[111,14,111,20],"5609":[111,23,111,24],"5617":[111,28,111,42],"5625":[111,46,111,48],"5633":[111,51,111,54],"5641":[111,5,111,54],"5649":[111,5,111,55],"5657":[112,5,112,13],"5665":[112,14,112,20],"5673":[112,23,112,24],"5681":[112,28,112,42],"5689":[112,46,112,47],"5697":[112,50,112,53],"5705":[112,5,112,53],"5713":[112,5,112,54],"5721":[113,5,113,13],"5729":[113,14,113,20],"5737":[113,24,113,38],"5745":[113,41,113,44],"5753":[113,5,113,44],"5761":[113,5,113,45],"5769":[114,14,114,20],"5777":[114,23,114,37],"5785":[114,14,114,37],"5793":[114,5,114,38],"5801":[115,5,115,13],"5809":[115,14,115,20],"5817":[115,23,115,24],"5825":[115,28,115,29],"5833":[115,5,115,29],"5841":[115,5,115,30],"5849":[116,12,116,20],"5857":[116,12,116,20],"5865":[116,5,116,21],"5873":[41,36,117,2],"5881":[41,36,117,2],"5889":[41,36,117,2],"5897":[41,36,117,2],"5905":[41,36,117,2],"5913":[41,36,117,2],"5921":[41,36,117,2],"5929":[41,36,117,2],"5937":[41,36,117,2],"5945":[41,36,117,2],"5953":[41,1,117,2],"5961":[41,1,117,3],"5969":[118,1,118,14],"5977":[118,27,118,28],"5985":[118,1,118,28],"5993":[118,1,118,29],"6001":[119,1,119,14],"6009":[119,33,119,34],"6017":[119,1,119,34],"6025":[119,1,119,35],"6033":[1,1,119,35],"6041":[1,1,119,35],"6049":[1,1,119,35],"6057":[1,1,119,35],"6065":[1,1,119,35],"6073":[1,1,119,35],"6081":[9,9,13,10],"6089":[7,5,14,6],"6097":[18,9,22,10],"6105":[16,5,23,6],"6113":[29,22,29,87],"6121":[32,64,32,97],"6129":[32,17,32,109],"6137":[33,69,33,101],"6145":[33,23,33,119],"6153":[35,5,37,6],"6161":[4,45,38,2],"6169":[4,45,38,2],"6177":[42,5,44,6],"6185":[46,5,47,113],"6193":[48,5,49,115],"6201":[86,9,87,133],"6209":[84,5,92,6],"6217":[103,9,104,133],"6225":[101,5,109,6],"6233":[41,36,117,2],"6241":[41,36,117,2],"6249":[1,1,119,35],"6257":[1,1,119,35],"nBranches":44,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/commands/update_command.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/commands/update_command_jalangi_.js","code":"var BaseCommand = require('./base_command').BaseCommand,\n  inherits = require('util').inherits;\n\n/**\n  Update Document Command\n**/\nvar UpdateCommand = exports.UpdateCommand = function(db, collectionName, spec, document, options) {\n  BaseCommand.call(this);\n\n  var object = spec;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;    \n    if(object_size != object.length)  {\n      var error = new Error(\"update spec raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  var object = document;\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;    \n    if(object_size != object.length)  {\n      var error = new Error(\"update document raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n      error.name = 'MongoError';\n      throw error;\n    }\n  }\n\n  this.collectionName = collectionName;\n  this.spec = spec;\n  this.document = document;\n  this.db = db;\n  this.serializeFunctions = false;\n  this.checkKeys = typeof options.checkKeys != 'boolean' ? false : options.checkKeys;\n\n  // Generate correct flags\n  var db_upsert = 0;\n  var db_multi_update = 0;\n  db_upsert = options != null && options['upsert'] != null ? (options['upsert'] == true ? 1 : 0) : db_upsert;\n  db_multi_update = options != null && options['multi'] != null ? (options['multi'] == true ? 1 : 0) : db_multi_update;\n\n  // Flags\n  this.flags = parseInt(db_multi_update.toString() + db_upsert.toString(), 2);\n  // Let us defined on a command basis if we want functions to be serialized or not\n  if(options['serializeFunctions'] != null && options['serializeFunctions']) {\n    this.serializeFunctions = true;\n  }\n};\n\ninherits(UpdateCommand, BaseCommand);\n\nUpdateCommand.OP_UPDATE = 2001;\n\n/*\nstruct {\n    MsgHeader header;             // standard message header\n    int32     ZERO;               // 0 - reserved for future use\n    cstring   fullCollectionName; // \"dbname.collectionname\"\n    int32     flags;              // bit vector. see below\n    BSON      spec;               // the query to select the document\n    BSON      document;           // the document data to update with or insert\n}\n*/\nUpdateCommand.prototype.toBinary = function(bsonSettings) {\n  // Validate that we are not passing 0x00 in the colletion name\n  if(!!~this.collectionName.indexOf(\"\\x00\")) {\n    throw new Error(\"namespace cannot contain a null character\");\n  }\n\n  // Calculate total length of the document\n  var totalLengthOfCommand = 4 + Buffer.byteLength(this.collectionName) + 1 + 4 + this.db.bson.calculateObjectSize(this.spec, false, true) +\n      this.db.bson.calculateObjectSize(this.document, this.serializeFunctions, true) + (4 * 4);\n\n  // Enforce maximum bson size\n  if(!bsonSettings.disableDriverBSONSizeCheck \n    && totalLengthOfCommand > bsonSettings.maxBsonSize) \n    throw new Error(\"Document exceeds maximum allowed bson size of \" + bsonSettings.maxBsonSize + \" bytes\");\n\n  if(bsonSettings.disableDriverBSONSizeCheck \n    && totalLengthOfCommand > bsonSettings.maxMessageSizeBytes) \n    throw new Error(\"Command exceeds maximum message size of \" + bsonSettings.maxMessageSizeBytes + \" bytes\");\n\n  // Let's build the single pass buffer command\n  var _index = 0;\n  var _command = new Buffer(totalLengthOfCommand);\n  // Write the header information to the buffer\n  _command[_index + 3] = (totalLengthOfCommand >> 24) & 0xff;     \n  _command[_index + 2] = (totalLengthOfCommand >> 16) & 0xff;\n  _command[_index + 1] = (totalLengthOfCommand >> 8) & 0xff;\n  _command[_index] = totalLengthOfCommand & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write the request ID\n  _command[_index + 3] = (this.requestId >> 24) & 0xff;     \n  _command[_index + 2] = (this.requestId >> 16) & 0xff;\n  _command[_index + 1] = (this.requestId >> 8) & 0xff;\n  _command[_index] = this.requestId & 0xff;\n  // Adjust index\n  _index = _index + 4;\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  // Write the op_code for the command\n  _command[_index + 3] = (UpdateCommand.OP_UPDATE >> 24) & 0xff;     \n  _command[_index + 2] = (UpdateCommand.OP_UPDATE >> 16) & 0xff;\n  _command[_index + 1] = (UpdateCommand.OP_UPDATE >> 8) & 0xff;\n  _command[_index] = UpdateCommand.OP_UPDATE & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Write zero\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n  _command[_index++] = 0;\n\n  // Write the collection name to the command\n  _index = _index + _command.write(this.collectionName, _index, 'utf8') + 1;\n  _command[_index - 1] = 0;    \n\n  // Write the update flags\n  _command[_index + 3] = (this.flags >> 24) & 0xff;     \n  _command[_index + 2] = (this.flags >> 16) & 0xff;\n  _command[_index + 1] = (this.flags >> 8) & 0xff;\n  _command[_index] = this.flags & 0xff;\n  // Adjust index\n  _index = _index + 4;\n\n  // Document binary length\n  var documentLength = 0\n  var object = this.spec;\n\n  // Serialize the selector\n  // If we are passing a raw buffer, do minimal validation\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) throw new Error(\"raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n  } else {\n    documentLength = this.db.bson.serializeWithBufferAndIndex(object, this.checkKeys, _command, _index, false) - _index + 1;\n  }\n\n  // Write the length to the document\n  _command[_index + 3] = (documentLength >> 24) & 0xff;     \n  _command[_index + 2] = (documentLength >> 16) & 0xff;\n  _command[_index + 1] = (documentLength >> 8) & 0xff;\n  _command[_index] = documentLength & 0xff;\n  // Update index in buffer\n  _index = _index + documentLength;\n  // Add terminating 0 for the object\n  _command[_index - 1] = 0;    \n\n  // Document binary length\n  var documentLength = 0\n  var object = this.document;\n\n  // Serialize the document\n  // If we are passing a raw buffer, do minimal validation\n  if(Buffer.isBuffer(object)) {\n    var object_size = object[0] | object[1] << 8 | object[2] << 16 | object[3] << 24;\n    if(object_size != object.length) throw new Error(\"raw message size does not match message header size [\" + object.length + \"] != [\" + object_size + \"]\");\n    documentLength = object.length;\n    // Copy the data into the current buffer\n    object.copy(_command, _index);\n  } else {    \n    documentLength = this.db.bson.serializeWithBufferAndIndex(object, false, _command, _index, this.serializeFunctions) - _index + 1;\n  }\n\n  // Write the length to the document\n  _command[_index + 3] = (documentLength >> 24) & 0xff;     \n  _command[_index + 2] = (documentLength >> 16) & 0xff;\n  _command[_index + 1] = (documentLength >> 8) & 0xff;\n  _command[_index] = documentLength & 0xff;\n  // Update index in buffer\n  _index = _index + documentLength;\n  // Add terminating 0 for the object\n  _command[_index - 1] = 0;    \n\n  return _command;\n};\n\n// Constants\nUpdateCommand.DB_UPSERT = 0;\nUpdateCommand.DB_MULTI_UPDATE = 1;"};
jalangiLabel1572:
    while (true) {
        try {
            J$.Se(6033, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/commands/update_command_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/commands/update_command.js');
            J$.N(6041, '__secret__S$', __secret__S$, 0);
            J$.N(6049, '__secret__traits__', __secret__traits__, 0);
            J$.N(6057, 'BaseCommand', BaseCommand, 0);
            J$.N(6065, 'inherits', inherits, 0);
            J$.N(6073, 'UpdateCommand', UpdateCommand, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var BaseCommand = J$.X1(153, J$.W(145, 'BaseCommand', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './base_command', 21, false)), 'BaseCommand', 0), BaseCommand, 3)), inherits = J$.X1(169, J$.W(161, 'inherits', J$.G(137, J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, 'util', 21, false)), 'inherits', 0), inherits, 3));
            var UpdateCommand = J$.X1(1713, J$.W(1705, 'UpdateCommand', J$.P(1697, J$.R(177, 'exports', exports, 2), 'UpdateCommand', J$.T(1689, function (db, collectionName, spec, document, options) {
                jalangiLabel1570:
                    while (true) {
                        try {
                            J$.Fe(1593, arguments.callee, this, arguments);
                            arguments = J$.N(1601, 'arguments', arguments, 4);
                            db = J$.N(1609, 'db', db, 4);
                            collectionName = J$.N(1617, 'collectionName', collectionName, 4);
                            spec = J$.N(1625, 'spec', spec, 4);
                            document = J$.N(1633, 'document', document, 4);
                            options = J$.N(1641, 'options', options, 4);
                            J$.N(1649, 'object', object, 0);
                            J$.N(1657, 'object_size', object_size, 0);
                            J$.N(1665, 'error', error, 0);
                            J$.N(1673, 'db_upsert', db_upsert, 0);
                            J$.N(1681, 'db_multi_update', db_multi_update, 0);
                            J$.X1(209, J$.M(201, J$.R(185, 'BaseCommand', BaseCommand, 1), 'call', 0)(J$.R(193, 'this', this, 0)));
                            var object = J$.X1(233, J$.W(225, 'object', J$.R(217, 'spec', spec, 0), object, 1));
                            if (J$.X1(6089, J$.C(16, J$.M(257, J$.R(241, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(249, 'object', object, 0))))) {
                                var object_size = J$.X1(393, J$.W(385, 'object_size', J$.B(50, '|', J$.B(34, '|', J$.B(18, '|', J$.G(281, J$.R(265, 'object', object, 0), J$.T(273, 0, 22, false), 4), J$.B(10, '<<', J$.G(305, J$.R(289, 'object', object, 0), J$.T(297, 1, 22, false), 4), J$.T(313, 8, 22, false), 0), 0), J$.B(26, '<<', J$.G(337, J$.R(321, 'object', object, 0), J$.T(329, 2, 22, false), 4), J$.T(345, 16, 22, false), 0), 0), J$.B(42, '<<', J$.G(369, J$.R(353, 'object', object, 0), J$.T(361, 3, 22, false), 4), J$.T(377, 24, 22, false), 0), 0), object_size, 1));
                                if (J$.X1(6081, J$.C(8, J$.B(58, '!=', J$.R(401, 'object_size', object_size, 0), J$.G(417, J$.R(409, 'object', object, 0), 'length', 0), 0)))) {
                                    var error = J$.X1(497, J$.W(489, 'error', J$.F(481, J$.R(425, 'Error', Error, 2), 1)(J$.B(90, '+', J$.B(82, '+', J$.B(74, '+', J$.B(66, '+', J$.T(433, 'update spec raw message size does not match message header size [', 21, false), J$.G(449, J$.R(441, 'object', object, 0), 'length', 0), 0), J$.T(457, '] != [', 21, false), 0), J$.R(465, 'object_size', object_size, 0), 0), J$.T(473, ']', 21, false), 0)), error, 1));
                                    J$.X1(529, J$.P(521, J$.R(505, 'error', error, 0), 'name', J$.T(513, 'MongoError', 21, false), 0));
                                    throw J$.X1(553, J$.Th(545, J$.R(537, 'error', error, 0)));
                                }
                            }
                            var object = J$.X1(577, J$.W(569, 'object', J$.R(561, 'document', document, 0), object, 1));
                            if (J$.X1(6105, J$.C(32, J$.M(601, J$.R(585, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(593, 'object', object, 0))))) {
                                var object_size = J$.X1(737, J$.W(729, 'object_size', J$.B(138, '|', J$.B(122, '|', J$.B(106, '|', J$.G(625, J$.R(609, 'object', object, 0), J$.T(617, 0, 22, false), 4), J$.B(98, '<<', J$.G(649, J$.R(633, 'object', object, 0), J$.T(641, 1, 22, false), 4), J$.T(657, 8, 22, false), 0), 0), J$.B(114, '<<', J$.G(681, J$.R(665, 'object', object, 0), J$.T(673, 2, 22, false), 4), J$.T(689, 16, 22, false), 0), 0), J$.B(130, '<<', J$.G(713, J$.R(697, 'object', object, 0), J$.T(705, 3, 22, false), 4), J$.T(721, 24, 22, false), 0), 0), object_size, 1));
                                if (J$.X1(6097, J$.C(24, J$.B(146, '!=', J$.R(745, 'object_size', object_size, 0), J$.G(761, J$.R(753, 'object', object, 0), 'length', 0), 0)))) {
                                    var error = J$.X1(841, J$.W(833, 'error', J$.F(825, J$.R(769, 'Error', Error, 2), 1)(J$.B(178, '+', J$.B(170, '+', J$.B(162, '+', J$.B(154, '+', J$.T(777, 'update document raw message size does not match message header size [', 21, false), J$.G(793, J$.R(785, 'object', object, 0), 'length', 0), 0), J$.T(801, '] != [', 21, false), 0), J$.R(809, 'object_size', object_size, 0), 0), J$.T(817, ']', 21, false), 0)), error, 1));
                                    J$.X1(873, J$.P(865, J$.R(849, 'error', error, 0), 'name', J$.T(857, 'MongoError', 21, false), 0));
                                    throw J$.X1(897, J$.Th(889, J$.R(881, 'error', error, 0)));
                                }
                            }
                            J$.X1(929, J$.P(921, J$.R(905, 'this', this, 0), 'collectionName', J$.R(913, 'collectionName', collectionName, 0), 0));
                            J$.X1(961, J$.P(953, J$.R(937, 'this', this, 0), 'spec', J$.R(945, 'spec', spec, 0), 0));
                            J$.X1(993, J$.P(985, J$.R(969, 'this', this, 0), 'document', J$.R(977, 'document', document, 0), 0));
                            J$.X1(1025, J$.P(1017, J$.R(1001, 'this', this, 0), 'db', J$.R(1009, 'db', db, 0), 0));
                            J$.X1(1057, J$.P(1049, J$.R(1033, 'this', this, 0), 'serializeFunctions', J$.T(1041, false, 23, false), 0));
                            J$.X1(1129, J$.P(1121, J$.R(1065, 'this', this, 0), 'checkKeys', J$.X1(6113, J$.C(40, J$.B(194, '!=', J$.U(186, 'typeof', J$.G(1081, J$.R(1073, 'options', options, 0), 'checkKeys', 0)), J$.T(1089, 'boolean', 21, false), 0))) ? J$.T(1097, false, 23, false) : J$.G(1113, J$.R(1105, 'options', options, 0), 'checkKeys', 0), 0));
                            var db_upsert = J$.X1(1153, J$.W(1145, 'db_upsert', J$.T(1137, 0, 22, false), db_upsert, 1));
                            var db_multi_update = J$.X1(1177, J$.W(1169, 'db_multi_update', J$.T(1161, 0, 22, false), db_multi_update, 1));
                            J$.X1(1297, db_upsert = J$.W(1289, 'db_upsert', J$.X1(6129, J$.C(64, J$.C(48, J$.B(202, '!=', J$.R(1185, 'options', options, 0), J$.T(1193, null, 25, false), 0)) ? J$.B(210, '!=', J$.G(1217, J$.R(1201, 'options', options, 0), J$.T(1209, 'upsert', 21, false), 4), J$.T(1225, null, 25, false), 0) : J$._())) ? J$.X1(6121, J$.C(56, J$.B(218, '==', J$.G(1249, J$.R(1233, 'options', options, 0), J$.T(1241, 'upsert', 21, false), 4), J$.T(1257, true, 23, false), 0))) ? J$.T(1265, 1, 22, false) : J$.T(1273, 0, 22, false) : J$.R(1281, 'db_upsert', db_upsert, 0), db_upsert, 0));
                            J$.X1(1417, db_multi_update = J$.W(1409, 'db_multi_update', J$.X1(6145, J$.C(88, J$.C(72, J$.B(226, '!=', J$.R(1305, 'options', options, 0), J$.T(1313, null, 25, false), 0)) ? J$.B(234, '!=', J$.G(1337, J$.R(1321, 'options', options, 0), J$.T(1329, 'multi', 21, false), 4), J$.T(1345, null, 25, false), 0) : J$._())) ? J$.X1(6137, J$.C(80, J$.B(242, '==', J$.G(1369, J$.R(1353, 'options', options, 0), J$.T(1361, 'multi', 21, false), 4), J$.T(1377, true, 23, false), 0))) ? J$.T(1385, 1, 22, false) : J$.T(1393, 0, 22, false) : J$.R(1401, 'db_multi_update', db_multi_update, 0), db_multi_update, 0));
                            J$.X1(1497, J$.P(1489, J$.R(1425, 'this', this, 0), 'flags', J$.F(1481, J$.R(1433, 'parseInt', parseInt, 2), 0)(J$.B(250, '+', J$.M(1449, J$.R(1441, 'db_multi_update', db_multi_update, 0), 'toString', 0)(), J$.M(1465, J$.R(1457, 'db_upsert', db_upsert, 0), 'toString', 0)(), 0), J$.T(1473, 2, 22, false)), 0));
                            if (J$.X1(6153, J$.C(104, J$.C(96, J$.B(258, '!=', J$.G(1521, J$.R(1505, 'options', options, 0), J$.T(1513, 'serializeFunctions', 21, false), 4), J$.T(1529, null, 25, false), 0)) ? J$.G(1553, J$.R(1537, 'options', options, 0), J$.T(1545, 'serializeFunctions', 21, false), 4) : J$._()))) {
                                J$.X1(1585, J$.P(1577, J$.R(1561, 'this', this, 0), 'serializeFunctions', J$.T(1569, true, 23, false), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(6161, J$e);
                        } finally {
                            if (J$.Fr(6169))
                                continue jalangiLabel1570;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1593), 0), UpdateCommand, 3));
            J$.X1(1753, J$.F(1745, J$.R(1721, 'inherits', inherits, 1), 0)(J$.R(1729, 'UpdateCommand', UpdateCommand, 1), J$.R(1737, 'BaseCommand', BaseCommand, 1)));
            J$.X1(1785, J$.P(1777, J$.R(1761, 'UpdateCommand', UpdateCommand, 1), 'OP_UPDATE', J$.T(1769, 2001, 22, false), 0));
            J$.X1(5961, J$.P(5953, J$.G(1801, J$.R(1793, 'UpdateCommand', UpdateCommand, 1), 'prototype', 0), 'toBinary', J$.T(5945, function (bsonSettings) {
                jalangiLabel1571:
                    while (true) {
                        try {
                            J$.Fe(5873, arguments.callee, this, arguments);
                            arguments = J$.N(5881, 'arguments', arguments, 4);
                            bsonSettings = J$.N(5889, 'bsonSettings', bsonSettings, 4);
                            J$.N(5897, 'totalLengthOfCommand', totalLengthOfCommand, 0);
                            J$.N(5905, '_index', _index, 0);
                            J$.N(5913, '_command', _command, 0);
                            J$.N(5921, 'documentLength', documentLength, 0);
                            J$.N(5929, 'object', object, 0);
                            J$.N(5937, 'object_size', object_size, 0);
                            if (J$.X1(6177, J$.C(112, J$.U(282, '!', J$.U(274, '!', J$.U(266, '~', J$.M(1833, J$.G(1817, J$.R(1809, 'this', this, 0), 'collectionName', 0), 'indexOf', 0)(J$.T(1825, '\0', 21, false)))))))) {
                                throw J$.X1(1873, J$.Th(1865, J$.F(1857, J$.R(1841, 'Error', Error, 2), 1)(J$.T(1849, 'namespace cannot contain a null character', 21, false))));
                            }
                            var totalLengthOfCommand = J$.X1(2097, J$.W(2089, 'totalLengthOfCommand', J$.B(338, '+', J$.B(322, '+', J$.B(314, '+', J$.B(306, '+', J$.B(298, '+', J$.B(290, '+', J$.T(1881, 4, 22, false), J$.M(1913, J$.R(1889, 'Buffer', Buffer, 2), 'byteLength', 0)(J$.G(1905, J$.R(1897, 'this', this, 0), 'collectionName', 0)), 0), J$.T(1921, 1, 22, false), 0), J$.T(1929, 4, 22, false), 0), J$.M(1993, J$.G(1953, J$.G(1945, J$.R(1937, 'this', this, 0), 'db', 0), 'bson', 0), 'calculateObjectSize', 0)(J$.G(1969, J$.R(1961, 'this', this, 0), 'spec', 0), J$.T(1977, false, 23, false), J$.T(1985, true, 23, false)), 0), J$.M(2065, J$.G(2017, J$.G(2009, J$.R(2001, 'this', this, 0), 'db', 0), 'bson', 0), 'calculateObjectSize', 0)(J$.G(2033, J$.R(2025, 'this', this, 0), 'document', 0), J$.G(2049, J$.R(2041, 'this', this, 0), 'serializeFunctions', 0), J$.T(2057, true, 23, false)), 0), J$.B(330, '*', J$.T(2073, 4, 22, false), J$.T(2081, 4, 22, false), 0), 0), totalLengthOfCommand, 1));
                            if (J$.X1(6185, J$.C(128, J$.C(120, J$.U(346, '!', J$.G(2113, J$.R(2105, 'bsonSettings', bsonSettings, 0), 'disableDriverBSONSizeCheck', 0))) ? J$.B(354, '>', J$.R(2121, 'totalLengthOfCommand', totalLengthOfCommand, 0), J$.G(2137, J$.R(2129, 'bsonSettings', bsonSettings, 0), 'maxBsonSize', 0), 0) : J$._())))
                                throw J$.X1(2201, J$.Th(2193, J$.F(2185, J$.R(2145, 'Error', Error, 2), 1)(J$.B(370, '+', J$.B(362, '+', J$.T(2153, 'Document exceeds maximum allowed bson size of ', 21, false), J$.G(2169, J$.R(2161, 'bsonSettings', bsonSettings, 0), 'maxBsonSize', 0), 0), J$.T(2177, ' bytes', 21, false), 0))));
                            if (J$.X1(6193, J$.C(144, J$.C(136, J$.G(2217, J$.R(2209, 'bsonSettings', bsonSettings, 0), 'disableDriverBSONSizeCheck', 0)) ? J$.B(378, '>', J$.R(2225, 'totalLengthOfCommand', totalLengthOfCommand, 0), J$.G(2241, J$.R(2233, 'bsonSettings', bsonSettings, 0), 'maxMessageSizeBytes', 0), 0) : J$._())))
                                throw J$.X1(2305, J$.Th(2297, J$.F(2289, J$.R(2249, 'Error', Error, 2), 1)(J$.B(394, '+', J$.B(386, '+', J$.T(2257, 'Command exceeds maximum message size of ', 21, false), J$.G(2273, J$.R(2265, 'bsonSettings', bsonSettings, 0), 'maxMessageSizeBytes', 0), 0), J$.T(2281, ' bytes', 21, false), 0))));
                            var _index = J$.X1(2329, J$.W(2321, '_index', J$.T(2313, 0, 22, false), _index, 1));
                            var _command = J$.X1(2369, J$.W(2361, '_command', J$.F(2353, J$.R(2337, 'Buffer', Buffer, 2), 1)(J$.R(2345, 'totalLengthOfCommand', totalLengthOfCommand, 0)), _command, 1));
                            J$.X1(2433, J$.P(2425, J$.R(2377, '_command', _command, 0), J$.B(402, '+', J$.R(2385, '_index', _index, 0), J$.T(2393, 3, 22, false), 0), J$.B(418, '&', J$.B(410, '>>', J$.R(2401, 'totalLengthOfCommand', totalLengthOfCommand, 0), J$.T(2409, 24, 22, false), 0), J$.T(2417, 255, 22, false), 0), 2));
                            J$.X1(2497, J$.P(2489, J$.R(2441, '_command', _command, 0), J$.B(426, '+', J$.R(2449, '_index', _index, 0), J$.T(2457, 2, 22, false), 0), J$.B(442, '&', J$.B(434, '>>', J$.R(2465, 'totalLengthOfCommand', totalLengthOfCommand, 0), J$.T(2473, 16, 22, false), 0), J$.T(2481, 255, 22, false), 0), 2));
                            J$.X1(2561, J$.P(2553, J$.R(2505, '_command', _command, 0), J$.B(450, '+', J$.R(2513, '_index', _index, 0), J$.T(2521, 1, 22, false), 0), J$.B(466, '&', J$.B(458, '>>', J$.R(2529, 'totalLengthOfCommand', totalLengthOfCommand, 0), J$.T(2537, 8, 22, false), 0), J$.T(2545, 255, 22, false), 0), 2));
                            J$.X1(2609, J$.P(2601, J$.R(2569, '_command', _command, 0), J$.R(2577, '_index', _index, 0), J$.B(474, '&', J$.R(2585, 'totalLengthOfCommand', totalLengthOfCommand, 0), J$.T(2593, 255, 22, false), 0), 2));
                            J$.X1(2641, _index = J$.W(2633, '_index', J$.B(482, '+', J$.R(2617, '_index', _index, 0), J$.T(2625, 4, 22, false), 0), _index, 0));
                            J$.X1(2713, J$.P(2705, J$.R(2649, '_command', _command, 0), J$.B(490, '+', J$.R(2657, '_index', _index, 0), J$.T(2665, 3, 22, false), 0), J$.B(506, '&', J$.B(498, '>>', J$.G(2681, J$.R(2673, 'this', this, 0), 'requestId', 0), J$.T(2689, 24, 22, false), 0), J$.T(2697, 255, 22, false), 0), 2));
                            J$.X1(2785, J$.P(2777, J$.R(2721, '_command', _command, 0), J$.B(514, '+', J$.R(2729, '_index', _index, 0), J$.T(2737, 2, 22, false), 0), J$.B(530, '&', J$.B(522, '>>', J$.G(2753, J$.R(2745, 'this', this, 0), 'requestId', 0), J$.T(2761, 16, 22, false), 0), J$.T(2769, 255, 22, false), 0), 2));
                            J$.X1(2857, J$.P(2849, J$.R(2793, '_command', _command, 0), J$.B(538, '+', J$.R(2801, '_index', _index, 0), J$.T(2809, 1, 22, false), 0), J$.B(554, '&', J$.B(546, '>>', J$.G(2825, J$.R(2817, 'this', this, 0), 'requestId', 0), J$.T(2833, 8, 22, false), 0), J$.T(2841, 255, 22, false), 0), 2));
                            J$.X1(2913, J$.P(2905, J$.R(2865, '_command', _command, 0), J$.R(2873, '_index', _index, 0), J$.B(562, '&', J$.G(2889, J$.R(2881, 'this', this, 0), 'requestId', 0), J$.T(2897, 255, 22, false), 0), 2));
                            J$.X1(2945, _index = J$.W(2937, '_index', J$.B(570, '+', J$.R(2921, '_index', _index, 0), J$.T(2929, 4, 22, false), 0), _index, 0));
                            J$.X1(3009, J$.P(3001, J$.R(2953, '_command', _command, 0), J$.B(594, '-', _index = J$.W(2977, '_index', J$.B(586, '+', J$.U(578, '+', J$.R(2969, '_index', _index, 0)), J$.T(2961, 1, 22, false), 0), _index, 0), J$.T(2985, 1, 22, false), 0), J$.T(2993, 0, 22, false), 2));
                            J$.X1(3073, J$.P(3065, J$.R(3017, '_command', _command, 0), J$.B(618, '-', _index = J$.W(3041, '_index', J$.B(610, '+', J$.U(602, '+', J$.R(3033, '_index', _index, 0)), J$.T(3025, 1, 22, false), 0), _index, 0), J$.T(3049, 1, 22, false), 0), J$.T(3057, 0, 22, false), 2));
                            J$.X1(3137, J$.P(3129, J$.R(3081, '_command', _command, 0), J$.B(642, '-', _index = J$.W(3105, '_index', J$.B(634, '+', J$.U(626, '+', J$.R(3097, '_index', _index, 0)), J$.T(3089, 1, 22, false), 0), _index, 0), J$.T(3113, 1, 22, false), 0), J$.T(3121, 0, 22, false), 2));
                            J$.X1(3201, J$.P(3193, J$.R(3145, '_command', _command, 0), J$.B(666, '-', _index = J$.W(3169, '_index', J$.B(658, '+', J$.U(650, '+', J$.R(3161, '_index', _index, 0)), J$.T(3153, 1, 22, false), 0), _index, 0), J$.T(3177, 1, 22, false), 0), J$.T(3185, 0, 22, false), 2));
                            J$.X1(3273, J$.P(3265, J$.R(3209, '_command', _command, 0), J$.B(674, '+', J$.R(3217, '_index', _index, 0), J$.T(3225, 3, 22, false), 0), J$.B(690, '&', J$.B(682, '>>', J$.G(3241, J$.R(3233, 'UpdateCommand', UpdateCommand, 1), 'OP_UPDATE', 0), J$.T(3249, 24, 22, false), 0), J$.T(3257, 255, 22, false), 0), 2));
                            J$.X1(3345, J$.P(3337, J$.R(3281, '_command', _command, 0), J$.B(698, '+', J$.R(3289, '_index', _index, 0), J$.T(3297, 2, 22, false), 0), J$.B(714, '&', J$.B(706, '>>', J$.G(3313, J$.R(3305, 'UpdateCommand', UpdateCommand, 1), 'OP_UPDATE', 0), J$.T(3321, 16, 22, false), 0), J$.T(3329, 255, 22, false), 0), 2));
                            J$.X1(3417, J$.P(3409, J$.R(3353, '_command', _command, 0), J$.B(722, '+', J$.R(3361, '_index', _index, 0), J$.T(3369, 1, 22, false), 0), J$.B(738, '&', J$.B(730, '>>', J$.G(3385, J$.R(3377, 'UpdateCommand', UpdateCommand, 1), 'OP_UPDATE', 0), J$.T(3393, 8, 22, false), 0), J$.T(3401, 255, 22, false), 0), 2));
                            J$.X1(3473, J$.P(3465, J$.R(3425, '_command', _command, 0), J$.R(3433, '_index', _index, 0), J$.B(746, '&', J$.G(3449, J$.R(3441, 'UpdateCommand', UpdateCommand, 1), 'OP_UPDATE', 0), J$.T(3457, 255, 22, false), 0), 2));
                            J$.X1(3505, _index = J$.W(3497, '_index', J$.B(754, '+', J$.R(3481, '_index', _index, 0), J$.T(3489, 4, 22, false), 0), _index, 0));
                            J$.X1(3569, J$.P(3561, J$.R(3513, '_command', _command, 0), J$.B(778, '-', _index = J$.W(3537, '_index', J$.B(770, '+', J$.U(762, '+', J$.R(3529, '_index', _index, 0)), J$.T(3521, 1, 22, false), 0), _index, 0), J$.T(3545, 1, 22, false), 0), J$.T(3553, 0, 22, false), 2));
                            J$.X1(3633, J$.P(3625, J$.R(3577, '_command', _command, 0), J$.B(802, '-', _index = J$.W(3601, '_index', J$.B(794, '+', J$.U(786, '+', J$.R(3593, '_index', _index, 0)), J$.T(3585, 1, 22, false), 0), _index, 0), J$.T(3609, 1, 22, false), 0), J$.T(3617, 0, 22, false), 2));
                            J$.X1(3697, J$.P(3689, J$.R(3641, '_command', _command, 0), J$.B(826, '-', _index = J$.W(3665, '_index', J$.B(818, '+', J$.U(810, '+', J$.R(3657, '_index', _index, 0)), J$.T(3649, 1, 22, false), 0), _index, 0), J$.T(3673, 1, 22, false), 0), J$.T(3681, 0, 22, false), 2));
                            J$.X1(3761, J$.P(3753, J$.R(3705, '_command', _command, 0), J$.B(850, '-', _index = J$.W(3729, '_index', J$.B(842, '+', J$.U(834, '+', J$.R(3721, '_index', _index, 0)), J$.T(3713, 1, 22, false), 0), _index, 0), J$.T(3737, 1, 22, false), 0), J$.T(3745, 0, 22, false), 2));
                            J$.X1(3841, _index = J$.W(3833, '_index', J$.B(866, '+', J$.B(858, '+', J$.R(3769, '_index', _index, 0), J$.M(3817, J$.R(3777, '_command', _command, 0), 'write', 0)(J$.G(3793, J$.R(3785, 'this', this, 0), 'collectionName', 0), J$.R(3801, '_index', _index, 0), J$.T(3809, 'utf8', 21, false)), 0), J$.T(3825, 1, 22, false), 0), _index, 0));
                            J$.X1(3889, J$.P(3881, J$.R(3849, '_command', _command, 0), J$.B(874, '-', J$.R(3857, '_index', _index, 0), J$.T(3865, 1, 22, false), 0), J$.T(3873, 0, 22, false), 2));
                            J$.X1(3961, J$.P(3953, J$.R(3897, '_command', _command, 0), J$.B(882, '+', J$.R(3905, '_index', _index, 0), J$.T(3913, 3, 22, false), 0), J$.B(898, '&', J$.B(890, '>>', J$.G(3929, J$.R(3921, 'this', this, 0), 'flags', 0), J$.T(3937, 24, 22, false), 0), J$.T(3945, 255, 22, false), 0), 2));
                            J$.X1(4033, J$.P(4025, J$.R(3969, '_command', _command, 0), J$.B(906, '+', J$.R(3977, '_index', _index, 0), J$.T(3985, 2, 22, false), 0), J$.B(922, '&', J$.B(914, '>>', J$.G(4001, J$.R(3993, 'this', this, 0), 'flags', 0), J$.T(4009, 16, 22, false), 0), J$.T(4017, 255, 22, false), 0), 2));
                            J$.X1(4105, J$.P(4097, J$.R(4041, '_command', _command, 0), J$.B(930, '+', J$.R(4049, '_index', _index, 0), J$.T(4057, 1, 22, false), 0), J$.B(946, '&', J$.B(938, '>>', J$.G(4073, J$.R(4065, 'this', this, 0), 'flags', 0), J$.T(4081, 8, 22, false), 0), J$.T(4089, 255, 22, false), 0), 2));
                            J$.X1(4161, J$.P(4153, J$.R(4113, '_command', _command, 0), J$.R(4121, '_index', _index, 0), J$.B(954, '&', J$.G(4137, J$.R(4129, 'this', this, 0), 'flags', 0), J$.T(4145, 255, 22, false), 0), 2));
                            J$.X1(4193, _index = J$.W(4185, '_index', J$.B(962, '+', J$.R(4169, '_index', _index, 0), J$.T(4177, 4, 22, false), 0), _index, 0));
                            var documentLength = J$.X1(4217, J$.W(4209, 'documentLength', J$.T(4201, 0, 22, false), documentLength, 1));
                            var object = J$.X1(4249, J$.W(4241, 'object', J$.G(4233, J$.R(4225, 'this', this, 0), 'spec', 0), object, 1));
                            if (J$.X1(6209, J$.C(160, J$.M(4273, J$.R(4257, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(4265, 'object', object, 0))))) {
                                var object_size = J$.X1(4409, J$.W(4401, 'object_size', J$.B(1010, '|', J$.B(994, '|', J$.B(978, '|', J$.G(4297, J$.R(4281, 'object', object, 0), J$.T(4289, 0, 22, false), 4), J$.B(970, '<<', J$.G(4321, J$.R(4305, 'object', object, 0), J$.T(4313, 1, 22, false), 4), J$.T(4329, 8, 22, false), 0), 0), J$.B(986, '<<', J$.G(4353, J$.R(4337, 'object', object, 0), J$.T(4345, 2, 22, false), 4), J$.T(4361, 16, 22, false), 0), 0), J$.B(1002, '<<', J$.G(4385, J$.R(4369, 'object', object, 0), J$.T(4377, 3, 22, false), 4), J$.T(4393, 24, 22, false), 0), 0), object_size, 1));
                                if (J$.X1(6201, J$.C(152, J$.B(1018, '!=', J$.R(4417, 'object_size', object_size, 0), J$.G(4433, J$.R(4425, 'object', object, 0), 'length', 0), 0))))
                                    throw J$.X1(4513, J$.Th(4505, J$.F(4497, J$.R(4441, 'Error', Error, 2), 1)(J$.B(1050, '+', J$.B(1042, '+', J$.B(1034, '+', J$.B(1026, '+', J$.T(4449, 'raw message size does not match message header size [', 21, false), J$.G(4465, J$.R(4457, 'object', object, 0), 'length', 0), 0), J$.T(4473, '] != [', 21, false), 0), J$.R(4481, 'object_size', object_size, 0), 0), J$.T(4489, ']', 21, false), 0))));
                                J$.X1(4545, documentLength = J$.W(4537, 'documentLength', J$.G(4529, J$.R(4521, 'object', object, 0), 'length', 0), documentLength, 0));
                                J$.X1(4585, J$.M(4577, J$.R(4553, 'object', object, 0), 'copy', 0)(J$.R(4561, '_command', _command, 0), J$.R(4569, '_index', _index, 0)));
                            } else {
                                J$.X1(4697, documentLength = J$.W(4689, 'documentLength', J$.B(1066, '+', J$.B(1058, '-', J$.M(4665, J$.G(4609, J$.G(4601, J$.R(4593, 'this', this, 0), 'db', 0), 'bson', 0), 'serializeWithBufferAndIndex', 0)(J$.R(4617, 'object', object, 0), J$.G(4633, J$.R(4625, 'this', this, 0), 'checkKeys', 0), J$.R(4641, '_command', _command, 0), J$.R(4649, '_index', _index, 0), J$.T(4657, false, 23, false)), J$.R(4673, '_index', _index, 0), 0), J$.T(4681, 1, 22, false), 0), documentLength, 0));
                            }
                            J$.X1(4761, J$.P(4753, J$.R(4705, '_command', _command, 0), J$.B(1074, '+', J$.R(4713, '_index', _index, 0), J$.T(4721, 3, 22, false), 0), J$.B(1090, '&', J$.B(1082, '>>', J$.R(4729, 'documentLength', documentLength, 0), J$.T(4737, 24, 22, false), 0), J$.T(4745, 255, 22, false), 0), 2));
                            J$.X1(4825, J$.P(4817, J$.R(4769, '_command', _command, 0), J$.B(1098, '+', J$.R(4777, '_index', _index, 0), J$.T(4785, 2, 22, false), 0), J$.B(1114, '&', J$.B(1106, '>>', J$.R(4793, 'documentLength', documentLength, 0), J$.T(4801, 16, 22, false), 0), J$.T(4809, 255, 22, false), 0), 2));
                            J$.X1(4889, J$.P(4881, J$.R(4833, '_command', _command, 0), J$.B(1122, '+', J$.R(4841, '_index', _index, 0), J$.T(4849, 1, 22, false), 0), J$.B(1138, '&', J$.B(1130, '>>', J$.R(4857, 'documentLength', documentLength, 0), J$.T(4865, 8, 22, false), 0), J$.T(4873, 255, 22, false), 0), 2));
                            J$.X1(4937, J$.P(4929, J$.R(4897, '_command', _command, 0), J$.R(4905, '_index', _index, 0), J$.B(1146, '&', J$.R(4913, 'documentLength', documentLength, 0), J$.T(4921, 255, 22, false), 0), 2));
                            J$.X1(4969, _index = J$.W(4961, '_index', J$.B(1154, '+', J$.R(4945, '_index', _index, 0), J$.R(4953, 'documentLength', documentLength, 0), 0), _index, 0));
                            J$.X1(5017, J$.P(5009, J$.R(4977, '_command', _command, 0), J$.B(1162, '-', J$.R(4985, '_index', _index, 0), J$.T(4993, 1, 22, false), 0), J$.T(5001, 0, 22, false), 2));
                            var documentLength = J$.X1(5041, J$.W(5033, 'documentLength', J$.T(5025, 0, 22, false), documentLength, 1));
                            var object = J$.X1(5073, J$.W(5065, 'object', J$.G(5057, J$.R(5049, 'this', this, 0), 'document', 0), object, 1));
                            if (J$.X1(6225, J$.C(176, J$.M(5097, J$.R(5081, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(5089, 'object', object, 0))))) {
                                var object_size = J$.X1(5233, J$.W(5225, 'object_size', J$.B(1210, '|', J$.B(1194, '|', J$.B(1178, '|', J$.G(5121, J$.R(5105, 'object', object, 0), J$.T(5113, 0, 22, false), 4), J$.B(1170, '<<', J$.G(5145, J$.R(5129, 'object', object, 0), J$.T(5137, 1, 22, false), 4), J$.T(5153, 8, 22, false), 0), 0), J$.B(1186, '<<', J$.G(5177, J$.R(5161, 'object', object, 0), J$.T(5169, 2, 22, false), 4), J$.T(5185, 16, 22, false), 0), 0), J$.B(1202, '<<', J$.G(5209, J$.R(5193, 'object', object, 0), J$.T(5201, 3, 22, false), 4), J$.T(5217, 24, 22, false), 0), 0), object_size, 1));
                                if (J$.X1(6217, J$.C(168, J$.B(1218, '!=', J$.R(5241, 'object_size', object_size, 0), J$.G(5257, J$.R(5249, 'object', object, 0), 'length', 0), 0))))
                                    throw J$.X1(5337, J$.Th(5329, J$.F(5321, J$.R(5265, 'Error', Error, 2), 1)(J$.B(1250, '+', J$.B(1242, '+', J$.B(1234, '+', J$.B(1226, '+', J$.T(5273, 'raw message size does not match message header size [', 21, false), J$.G(5289, J$.R(5281, 'object', object, 0), 'length', 0), 0), J$.T(5297, '] != [', 21, false), 0), J$.R(5305, 'object_size', object_size, 0), 0), J$.T(5313, ']', 21, false), 0))));
                                J$.X1(5369, documentLength = J$.W(5361, 'documentLength', J$.G(5353, J$.R(5345, 'object', object, 0), 'length', 0), documentLength, 0));
                                J$.X1(5409, J$.M(5401, J$.R(5377, 'object', object, 0), 'copy', 0)(J$.R(5385, '_command', _command, 0), J$.R(5393, '_index', _index, 0)));
                            } else {
                                J$.X1(5521, documentLength = J$.W(5513, 'documentLength', J$.B(1266, '+', J$.B(1258, '-', J$.M(5489, J$.G(5433, J$.G(5425, J$.R(5417, 'this', this, 0), 'db', 0), 'bson', 0), 'serializeWithBufferAndIndex', 0)(J$.R(5441, 'object', object, 0), J$.T(5449, false, 23, false), J$.R(5457, '_command', _command, 0), J$.R(5465, '_index', _index, 0), J$.G(5481, J$.R(5473, 'this', this, 0), 'serializeFunctions', 0)), J$.R(5497, '_index', _index, 0), 0), J$.T(5505, 1, 22, false), 0), documentLength, 0));
                            }
                            J$.X1(5585, J$.P(5577, J$.R(5529, '_command', _command, 0), J$.B(1274, '+', J$.R(5537, '_index', _index, 0), J$.T(5545, 3, 22, false), 0), J$.B(1290, '&', J$.B(1282, '>>', J$.R(5553, 'documentLength', documentLength, 0), J$.T(5561, 24, 22, false), 0), J$.T(5569, 255, 22, false), 0), 2));
                            J$.X1(5649, J$.P(5641, J$.R(5593, '_command', _command, 0), J$.B(1298, '+', J$.R(5601, '_index', _index, 0), J$.T(5609, 2, 22, false), 0), J$.B(1314, '&', J$.B(1306, '>>', J$.R(5617, 'documentLength', documentLength, 0), J$.T(5625, 16, 22, false), 0), J$.T(5633, 255, 22, false), 0), 2));
                            J$.X1(5713, J$.P(5705, J$.R(5657, '_command', _command, 0), J$.B(1322, '+', J$.R(5665, '_index', _index, 0), J$.T(5673, 1, 22, false), 0), J$.B(1338, '&', J$.B(1330, '>>', J$.R(5681, 'documentLength', documentLength, 0), J$.T(5689, 8, 22, false), 0), J$.T(5697, 255, 22, false), 0), 2));
                            J$.X1(5761, J$.P(5753, J$.R(5721, '_command', _command, 0), J$.R(5729, '_index', _index, 0), J$.B(1346, '&', J$.R(5737, 'documentLength', documentLength, 0), J$.T(5745, 255, 22, false), 0), 2));
                            J$.X1(5793, _index = J$.W(5785, '_index', J$.B(1354, '+', J$.R(5769, '_index', _index, 0), J$.R(5777, 'documentLength', documentLength, 0), 0), _index, 0));
                            J$.X1(5841, J$.P(5833, J$.R(5801, '_command', _command, 0), J$.B(1362, '-', J$.R(5809, '_index', _index, 0), J$.T(5817, 1, 22, false), 0), J$.T(5825, 0, 22, false), 2));
                            return J$.X1(5865, J$.Rt(5857, J$.R(5849, '_command', _command, 0)));
                        } catch (J$e) {
                            J$.Ex(6233, J$e);
                        } finally {
                            if (J$.Fr(6241))
                                continue jalangiLabel1571;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5873), 0));
            J$.X1(5993, J$.P(5985, J$.R(5969, 'UpdateCommand', UpdateCommand, 1), 'DB_UPSERT', J$.T(5977, 0, 22, false), 0));
            J$.X1(6025, J$.P(6017, J$.R(6001, 'UpdateCommand', UpdateCommand, 1), 'DB_MULTI_UPDATE', J$.T(6009, 1, 22, false), 0));
        } catch (J$e) {
            J$.Ex(6249, J$e);
        } finally {
            if (J$.Sr(6257)) {
                J$.L();
                continue jalangiLabel1572;
            } else {
                J$.L();
                break jalangiLabel1572;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
