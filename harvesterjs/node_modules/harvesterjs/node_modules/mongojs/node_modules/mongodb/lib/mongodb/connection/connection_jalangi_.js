J$.iids = {"8":[7,26,7,39],"9":[1,20,1,27],"10":[12,9,12,45],"16":[12,51,12,109],"17":[1,28,1,32],"18":[12,51,12,78],"24":[12,9,12,110],"25":[1,20,1,33],"26":[12,82,12,109],"32":[12,9,12,110],"33":[1,20,1,33],"34":[12,49,12,110],"40":[19,24,19,49],"41":[1,20,1,33],"42":[52,36,52,47],"48":[20,32,20,65],"49":[2,26,2,38],"50":[52,36,52,51],"56":[21,35,21,66],"57":[2,26,2,45],"58":[64,13,64,32],"64":[37,37,37,94],"65":[2,26,2,45],"66":[67,36,67,79],"72":[59,13,59,30],"73":[2,26,2,45],"74":[68,48,68,50],"80":[64,13,64,55],"81":[3,13,3,20],"82":[68,13,68,50],"88":[64,13,64,55],"89":[3,21,3,41],"90":[70,48,70,50],"96":[67,36,67,79],"97":[3,13,3,42],"98":[70,13,70,50],"104":[68,13,68,50],"105":[3,55,3,62],"106":[71,17,71,49],"112":[71,17,71,49],"113":[3,63,3,69],"114":[77,37,77,75],"120":[70,13,70,50],"121":[3,55,3,70],"122":[117,13,117,32],"128":[77,37,77,75],"129":[3,55,3,79],"130":[120,36,120,79],"136":[82,13,82,34],"137":[3,87,3,94],"138":[121,48,121,50],"144":[85,13,85,39],"145":[3,95,3,100],"146":[121,13,121,50],"152":[89,13,89,39],"153":[3,87,3,101],"154":[123,48,123,50],"160":[95,21,95,74],"161":[3,118,3,125],"162":[123,13,123,50],"168":[95,21,95,74],"169":[3,126,3,134],"170":[124,17,124,49],"176":[112,13,112,30],"177":[3,118,3,135],"178":[141,9,141,40],"184":[117,13,117,55],"185":[3,118,3,148],"186":[141,9,141,52],"192":[117,13,117,55],"193":[3,161,3,168],"194":[144,9,144,39],"200":[120,36,120,79],"201":[3,169,3,175],"202":[144,9,144,51],"208":[121,13,121,50],"209":[3,161,3,176],"210":[150,30,150,56],"216":[124,17,124,49],"217":[3,161,3,185],"218":[153,9,153,40],"224":[123,13,123,50],"225":[3,201,3,208],"226":[155,9,155,52],"232":[58,9,58,31],"233":[3,209,3,219],"234":[155,56,155,99],"240":[140,15,140,28],"241":[3,201,3,220],"242":[157,9,157,70],"248":[141,9,141,52],"249":[3,228,3,235],"250":[157,74,157,135],"256":[144,9,144,51],"257":[3,236,3,241],"258":[164,29,164,47],"264":[150,12,150,56],"265":[3,228,3,242],"266":[164,49,164,52],"272":[150,12,150,84],"273":[3,13,3,42],"280":[153,9,153,40],"281":[3,13,3,42],"282":[164,49,164,52],"288":[155,9,155,99],"289":[3,55,3,79],"290":[167,25,167,44],"296":[155,9,155,99],"297":[3,55,3,79],"298":[180,21,180,40],"304":[157,9,157,135],"305":[3,87,3,101],"306":[191,13,191,28],"312":[157,9,157,135],"313":[3,87,3,101],"314":[191,13,191,43],"320":[167,25,167,67],"321":[3,118,3,148],"322":[200,9,200,28],"328":[167,25,167,67],"329":[3,118,3,148],"330":[214,27,214,50],"336":[164,29,164,47],"337":[3,161,3,185],"338":[216,25,216,40],"344":[180,21,180,63],"345":[3,161,3,185],"346":[216,42,216,45],"352":[180,21,180,63],"353":[3,201,3,220],"360":[163,13,163,35],"361":[3,201,3,220],"362":[216,42,216,45],"368":[191,13,191,43],"369":[3,228,3,242],"370":[224,36,224,78],"376":[200,9,200,51],"377":[3,228,3,242],"378":[230,16,230,31],"384":[200,9,200,51],"385":[4,18,4,25],"386":[231,17,231,35],"392":[214,9,214,50],"393":[5,16,5,20],"394":[231,39,231,61],"400":[216,25,216,40],"401":[5,16,5,20],"402":[232,44,232,79],"408":[214,9,214,50],"409":[5,16,5,20],"410":[233,21,233,55],"416":[224,36,224,78],"417":[6,5,6,17],"418":[235,38,235,66],"424":[231,17,231,61],"425":[6,23,6,27],"426":[258,29,258,48],"432":[258,29,258,71],"433":[6,5,6,28],"434":[264,21,264,44],"435":[6,5,6,22],"440":[258,29,258,71],"441":[6,5,6,29],"442":[264,48,264,74],"448":[233,21,233,55],"449":[7,5,7,9],"450":[265,25,265,61],"456":[264,21,264,74],"457":[7,26,7,39],"458":[265,25,265,65],"464":[265,25,265,65],"465":[7,42,7,55],"466":[266,50,266,86],"472":[283,29,283,90],"473":[8,15,8,26],"474":[275,56,275,92],"480":[294,33,294,75],"481":[9,15,9,20],"482":[281,25,281,40],"488":[294,33,294,75],"489":[10,23,10,28],"490":[283,29,283,46],"496":[283,29,283,90],"497":[7,58,11,6],"498":[283,50,283,90],"504":[299,29,299,90],"505":[7,5,11,6],"506":[294,33,294,52],"512":[299,29,299,121],"513":[7,5,11,7],"514":[299,29,299,46],"520":[306,36,306,97],"521":[12,9,12,13],"522":[299,50,299,90],"528":[306,36,306,129],"529":[12,9,12,27],"530":[299,94,299,121],"536":[326,37,326,79],"537":[12,9,12,37],"538":[306,36,306,53],"544":[326,37,326,79],"545":[12,41,12,45],"546":[306,57,306,97],"552":[330,36,330,98],"553":[12,51,12,58],"554":[306,101,306,129],"560":[342,33,342,75],"561":[12,51,12,67],"562":[326,37,326,56],"568":[342,33,342,75],"569":[12,71,12,78],"570":[330,36,330,54],"576":[370,37,370,79],"577":[12,82,12,89],"578":[330,58,330,98],"584":[370,37,370,79],"585":[12,82,12,98],"586":[342,33,342,52],"592":[330,36,330,98],"593":[12,102,12,109],"594":[370,37,370,56],"600":[306,36,306,129],"601":[13,9,13,13],"602":[388,33,388,98],"608":[299,29,299,121],"609":[13,9,13,27],"610":[388,33,388,104],"616":[281,25,281,40],"617":[13,40,13,43],"618":[388,33,388,130],"624":[264,21,264,74],"625":[13,9,13,43],"626":[388,33,388,136],"632":[231,17,231,61],"633":[13,9,13,44],"634":[394,37,394,80],"640":[230,16,230,31],"641":[14,5,14,9],"642":[394,37,394,86],"648":[410,13,410,40],"649":[14,15,14,17],"650":[394,37,394,112],"656":[410,13,410,40],"657":[14,5,14,17],"658":[394,37,394,128],"665":[14,5,14,18],"666":[405,35,405,85],"673":[15,5,15,9],"674":[405,35,405,91],"681":[15,22,15,27],"682":[405,35,405,117],"689":[15,5,15,27],"690":[405,35,405,123],"697":[15,5,15,28],"698":[410,25,410,40],"705":[16,5,16,9],"706":[412,39,412,89],"713":[16,25,16,29],"714":[412,39,412,95],"721":[16,25,16,43],"722":[412,39,412,121],"729":[16,25,16,56],"730":[412,39,412,127],"737":[16,5,16,56],"738":[415,39,415,89],"745":[16,5,16,57],"746":[415,39,415,95],"753":[17,5,17,9],"754":[415,39,415,121],"761":[17,27,17,28],"762":[415,39,415,127],"769":[17,5,17,28],"777":[17,5,17,29],"785":[18,5,18,9],"793":[18,27,18,28],"801":[18,5,18,28],"809":[18,5,18,29],"817":[19,5,19,9],"825":[19,24,19,37],"833":[19,24,19,49],"841":[19,52,19,65],"849":[19,52,19,77],"857":[19,80,19,90],"865":[19,80,19,112],"873":[19,5,19,112],"881":[19,5,19,113],"889":[20,5,20,9],"897":[20,32,20,45],"905":[20,32,20,65],"913":[20,68,20,81],"921":[20,68,20,101],"929":[20,104,20,114],"937":[20,104,20,139],"945":[20,5,20,139],"953":[20,5,20,140],"961":[21,5,21,9],"969":[21,35,21,48],"977":[21,35,21,66],"985":[21,69,21,82],"993":[21,69,21,100],"1001":[21,103,21,113],"1009":[21,103,21,142],"1017":[21,5,21,142],"1025":[21,5,21,143],"1033":[22,5,22,9],"1041":[22,19,22,23],"1049":[22,5,22,23],"1057":[22,5,22,24],"1065":[23,5,23,9],"1073":[23,26,23,27],"1081":[23,5,23,27],"1089":[23,5,23,28],"1097":[24,5,24,9],"1105":[24,22,24,23],"1113":[24,5,24,23],"1121":[24,5,24,24],"1129":[25,5,25,9],"1137":[25,23,25,24],"1145":[25,5,25,24],"1153":[25,5,25,25],"1161":[26,5,26,9],"1169":[27,16,27,18],"1177":[28,21,28,23],"1185":[29,20,29,22],"1193":[30,18,30,20],"1201":[31,16,31,18],"1209":[32,18,32,20],"1217":[33,14,33,16],"1225":[26,26,34,6],"1233":[26,5,34,6],"1241":[26,5,34,7],"1249":[35,5,35,18],"1257":[35,19,35,23],"1265":[35,25,35,30],"1273":[35,5,35,31],"1281":[35,5,35,32],"1289":[36,5,36,9],"1297":[37,37,37,41],"1305":[37,37,37,55],"1313":[37,56,37,84],"1321":[37,37,37,85],"1329":[37,89,37,94],"1337":[38,22,38,26],"1345":[38,22,38,38],"1353":[39,30,39,34],"1361":[39,30,39,54],"1369":[36,28,40,6],"1377":[36,5,40,6],"1385":[36,5,40,7],"1393":[41,5,41,11],"1401":[41,27,41,31],"1409":[41,33,41,50],"1417":[42,21,42,25],"1425":[44,20,44,24],"1433":[44,20,44,38],"1441":[44,20,44,54],"1449":[44,20,44,54],"1457":[44,13,44,55],"1465":[43,14,45,10],"1473":[43,14,45,10],"1481":[43,14,45,10],"1489":[47,13,47,17],"1497":[47,13,47,31],"1505":[47,50,47,55],"1513":[47,13,47,55],"1521":[47,13,47,56],"1529":[48,13,48,17],"1537":[48,13,48,28],"1545":[48,40,48,44],"1553":[48,40,48,58],"1561":[48,40,48,74],"1569":[48,13,48,75],"1571":[48,13,48,39],"1577":[48,13,48,76],"1585":[46,14,49,10],"1593":[46,14,49,10],"1601":[46,14,49,10],"1609":[46,14,49,10],"1617":[41,52,50,6],"1625":[41,5,50,7],"1627":[41,5,41,26],"1633":[41,5,50,8],"1641":[4,39,51,2],"1649":[4,39,51,2],"1657":[4,39,51,2],"1665":[4,39,51,2],"1673":[4,39,51,2],"1681":[4,39,51,2],"1689":[4,18,51,2],"1697":[4,18,51,2],"1705":[4,18,51,2],"1713":[52,1,52,11],"1721":[52,36,52,40],"1729":[52,43,52,47],"1737":[52,50,52,51],"1745":[52,1,52,51],"1753":[52,1,52,52],"1761":[53,1,53,11],"1769":[53,39,53,49],"1777":[53,39,53,71],"1785":[53,1,53,71],"1793":[53,1,53,72],"1801":[54,1,54,11],"1809":[54,43,54,47],"1817":[54,1,54,47],"1825":[54,1,54,48],"1833":[55,1,55,9],"1841":[55,10,55,20],"1849":[55,22,55,34],"1857":[55,1,55,35],"1865":[55,1,55,36],"1873":[56,1,56,11],"1881":[56,1,56,21],"1889":[57,16,57,20],"1897":[57,16,57,20],"1905":[57,16,57,20],"1913":[58,9,58,13],"1921":[58,9,58,27],"1929":[58,9,58,31],"1937":[59,13,59,17],"1945":[59,13,59,30],"1953":[60,13,60,17],"1961":[60,31,60,34],"1969":[60,52,60,56],"1977":[60,52,60,70],"1985":[60,52,60,75],"1993":[60,31,60,76],"1995":[60,31,60,51],"2001":[60,13,60,76],"2009":[60,13,60,77],"2017":[62,13,62,17],"2025":[62,31,62,34],"2033":[62,52,62,56],"2041":[62,52,62,70],"2049":[62,52,62,75],"2057":[62,77,62,81],"2065":[62,77,62,95],"2073":[62,77,62,100],"2081":[62,31,62,101],"2083":[62,31,62,51],"2089":[62,13,62,101],"2097":[62,13,62,102],"2105":[64,13,64,17],"2113":[64,13,64,24],"2121":[64,28,64,32],"2129":[64,36,64,40],"2137":[64,36,64,47],"2145":[64,36,64,55],"2153":[65,13,65,17],"2161":[65,13,65,24],"2169":[65,31,65,50],"2177":[65,52,65,56],"2185":[65,52,65,70],"2193":[65,13,65,71],"2195":[65,13,65,30],"2201":[65,13,65,72],"2209":[67,9,67,13],"2217":[67,9,67,24],"2225":[67,36,67,40],"2233":[67,36,67,54],"2241":[67,36,67,71],"2249":[67,75,67,79],"2257":[67,82,67,86],"2265":[67,82,67,100],"2273":[67,82,67,117],"2281":[67,120,67,124],"2289":[67,120,67,138],"2297":[67,120,67,146],"2305":[67,9,67,147],"2307":[67,9,67,35],"2313":[67,9,67,148],"2321":[68,13,68,20],"2329":[68,13,68,28],"2337":[68,37,68,43],"2345":[68,13,68,44],"2347":[68,13,68,36],"2353":[68,49,68,50],"2361":[69,13,69,17],"2369":[69,13,69,28],"2377":[69,40,69,44],"2385":[69,40,69,58],"2393":[69,40,69,66],"2401":[69,13,69,67],"2403":[69,13,69,39],"2409":[69,13,69,68],"2417":[70,13,70,20],"2425":[70,13,70,28],"2433":[70,37,70,43],"2441":[70,13,70,44],"2443":[70,13,70,36],"2449":[70,49,70,50],"2457":[71,17,71,21],"2465":[71,17,71,35],"2473":[71,17,71,45],"2481":[71,48,71,49],"2489":[72,17,72,21],"2497":[72,17,72,32],"2505":[72,46,72,50],"2513":[72,52,72,56],"2521":[72,52,72,70],"2529":[72,52,72,80],"2537":[72,17,72,81],"2539":[72,17,72,45],"2545":[72,17,72,82],"2553":[74,17,74,21],"2561":[74,17,74,32],"2569":[74,46,74,51],"2577":[74,17,74,52],"2579":[74,17,74,45],"2585":[74,17,74,53],"2593":[77,37,77,41],"2601":[77,37,77,55],"2609":[77,37,77,67],"2617":[77,71,77,75],"2625":[77,78,77,82],"2633":[77,85,77,90],"2641":[77,37,77,90],"2649":[77,37,77,90],"2657":[79,21,79,25],"2665":[79,21,79,36],"2673":[80,33,80,38],"2681":[78,27,81,10],"2689":[78,27,81,10],"2697":[78,27,81,10],"2705":[82,13,82,34],"2713":[83,13,83,24],"2721":[83,30,83,34],"2729":[83,30,83,48],"2737":[83,30,83,54],"2745":[83,13,83,54],"2753":[83,13,83,55],"2761":[85,13,85,17],"2769":[85,13,85,31],"2777":[85,13,85,39],"2785":[86,13,86,24],"2793":[86,32,86,36],"2801":[86,32,86,50],"2809":[86,32,86,58],"2817":[86,13,86,58],"2825":[86,13,86,59],"2833":[87,13,87,24],"2841":[87,31,87,35],"2849":[87,31,87,49],"2857":[87,31,87,56],"2865":[87,13,87,56],"2873":[87,13,87,57],"2881":[89,13,89,17],"2889":[89,13,89,31],"2897":[89,13,89,39],"2905":[90,13,90,24],"2913":[90,38,90,42],"2921":[90,38,90,56],"2929":[90,38,90,64],"2937":[90,13,90,64],"2945":[90,13,90,65],"2953":[92,25,92,29],"2961":[92,25,92,29],"2969":[92,25,92,29],"2977":[94,25,94,28],"2985":[94,37,94,41],"2993":[94,37,94,55],"3001":[94,37,94,60],"3009":[94,62,94,66],"3017":[94,62,94,80],"3025":[94,62,94,85],"3033":[94,87,94,98],"3041":[95,21,95,30],"3049":[95,21,95,49],"3057":[95,53,95,74],"3065":[96,28,96,32],"3073":[96,38,96,45],"3081":[96,47,96,56],"3089":[96,47,96,75],"3097":[96,77,96,81],"3105":[96,90,96,94],"3113":[96,83,96,96],"3121":[96,28,96,97],"3123":[96,28,96,37],"3129":[96,28,96,97],"3137":[96,21,96,98],"3145":[98,17,98,31],"3153":[98,32,98,36],"3161":[98,17,98,37],"3169":[98,17,98,39],"3177":[98,17,98,40],"3185":[94,100,99,14],"3193":[94,100,99,14],"3201":[94,100,99,14],"3209":[94,25,99,15],"3211":[94,25,94,36],"3217":[94,25,99,15],"3225":[94,13,99,16],"3233":[101,20,101,24],"3241":[101,30,101,37],"3249":[101,39,101,62],"3257":[101,64,101,68],"3265":[101,77,101,81],"3273":[101,70,101,83],"3281":[101,20,101,84],"3283":[101,20,101,29],"3289":[101,20,101,84],"3297":[101,13,101,85],"3305":[100,11,102,10],"3313":[103,9,103,13],"3321":[103,27,103,36],"3329":[103,9,103,36],"3337":[103,9,103,37],"3345":[104,9,104,18],"3353":[104,22,104,28],"3361":[104,30,104,47],"3369":[104,48,104,52],"3377":[104,30,104,53],"3385":[104,9,104,54],"3387":[104,9,104,21],"3393":[104,9,104,55],"3401":[105,9,105,18],"3409":[105,22,105,27],"3417":[105,29,105,39],"3425":[105,40,105,44],"3433":[105,29,105,45],"3441":[105,9,105,46],"3443":[105,9,105,21],"3449":[105,9,105,47],"3457":[106,9,106,18],"3465":[106,22,106,29],"3473":[106,31,106,43],"3481":[106,44,106,48],"3489":[106,31,106,49],"3497":[106,9,106,50],"3499":[106,9,106,21],"3505":[106,9,106,51],"3513":[107,9,107,13],"3521":[107,9,107,24],"3529":[107,28,107,35],"3537":[107,37,107,49],"3545":[107,50,107,54],"3553":[107,37,107,55],"3561":[107,9,107,56],"3563":[107,9,107,27],"3569":[107,9,107,57],"3577":[108,9,108,13],"3585":[108,9,108,24],"3593":[108,28,108,37],"3601":[108,39,108,53],"3609":[108,54,108,58],"3617":[108,39,108,59],"3625":[108,9,108,60],"3627":[108,9,108,27],"3633":[108,9,108,61],"3641":[109,9,109,13],"3649":[109,9,109,24],"3657":[109,28,109,35],"3665":[109,37,109,49],"3673":[109,50,109,54],"3681":[109,37,109,55],"3689":[109,9,109,56],"3691":[109,9,109,27],"3697":[109,9,109,57],"3705":[110,9,110,13],"3713":[110,9,110,24],"3721":[110,28,110,35],"3729":[110,37,110,49],"3737":[110,50,110,54],"3745":[110,37,110,55],"3753":[110,9,110,56],"3755":[110,9,110,27],"3761":[110,9,110,57],"3769":[112,13,112,17],"3777":[112,13,112,30],"3785":[113,13,113,17],"3793":[113,31,113,34],"3801":[113,52,113,56],"3809":[113,52,113,70],"3817":[113,52,113,75],"3825":[113,31,113,76],"3827":[113,31,113,51],"3833":[113,13,113,76],"3841":[113,13,113,77],"3849":[115,13,115,17],"3857":[115,31,115,34],"3865":[115,52,115,56],"3873":[115,52,115,70],"3881":[115,52,115,75],"3889":[115,77,115,81],"3897":[115,77,115,95],"3905":[115,77,115,100],"3913":[115,31,115,101],"3915":[115,31,115,51],"3921":[115,13,115,101],"3929":[115,13,115,102],"3937":[117,13,117,17],"3945":[117,13,117,24],"3953":[117,28,117,32],"3961":[117,36,117,40],"3969":[117,36,117,47],"3977":[117,36,117,55],"3985":[118,13,118,17],"3993":[118,13,118,24],"4001":[118,31,118,50],"4009":[118,52,118,56],"4017":[118,52,118,70],"4025":[118,13,118,71],"4027":[118,13,118,30],"4033":[118,13,118,72],"4041":[120,9,120,13],"4049":[120,9,120,24],"4057":[120,36,120,40],"4065":[120,36,120,54],"4073":[120,36,120,71],"4081":[120,75,120,79],"4089":[120,82,120,86],"4097":[120,82,120,100],"4105":[120,82,120,117],"4113":[120,120,120,124],"4121":[120,120,120,138],"4129":[120,120,120,146],"4137":[120,9,120,147],"4139":[120,9,120,35],"4145":[120,9,120,148],"4153":[121,13,121,20],"4161":[121,13,121,28],"4169":[121,37,121,43],"4177":[121,13,121,44],"4179":[121,13,121,36],"4185":[121,49,121,50],"4193":[122,13,122,17],"4201":[122,13,122,28],"4209":[122,40,122,44],"4217":[122,40,122,58],"4225":[122,40,122,66],"4233":[122,13,122,67],"4235":[122,13,122,39],"4241":[122,13,122,68],"4249":[123,13,123,20],"4257":[123,13,123,28],"4265":[123,37,123,43],"4273":[123,13,123,44],"4275":[123,13,123,36],"4281":[123,49,123,50],"4289":[124,17,124,21],"4297":[124,17,124,35],"4305":[124,17,124,45],"4313":[124,48,124,49],"4321":[125,17,125,21],"4329":[125,17,125,32],"4337":[125,46,125,50],"4345":[125,52,125,56],"4353":[125,52,125,70],"4361":[125,52,125,80],"4369":[125,17,125,81],"4371":[125,17,125,45],"4377":[125,17,125,82],"4385":[127,17,127,21],"4393":[127,17,127,32],"4401":[127,46,127,51],"4409":[127,17,127,52],"4411":[127,17,127,45],"4417":[127,17,127,53],"4425":[130,9,130,13],"4433":[130,27,130,31],"4441":[130,27,130,42],"4449":[130,9,130,42],"4457":[130,9,130,43],"4465":[131,9,131,13],"4473":[131,9,131,24],"4481":[131,28,131,35],"4489":[131,37,131,49],"4497":[131,50,131,54],"4505":[131,37,131,55],"4513":[131,9,131,56],"4515":[131,9,131,27],"4521":[131,9,131,57],"4529":[132,9,132,13],"4537":[132,9,132,24],"4545":[132,28,132,37],"4553":[132,39,132,53],"4561":[132,54,132,58],"4569":[132,39,132,59],"4577":[132,9,132,60],"4579":[132,9,132,27],"4585":[132,9,132,61],"4593":[133,9,133,13],"4601":[133,9,133,24],"4609":[133,28,133,34],"4617":[133,36,133,53],"4625":[133,54,133,58],"4633":[133,36,133,59],"4641":[133,9,133,60],"4643":[133,9,133,27],"4649":[133,9,133,61],"4657":[134,9,134,13],"4665":[134,9,134,24],"4673":[134,28,134,37],"4681":[134,39,134,53],"4689":[134,54,134,58],"4697":[134,39,134,59],"4705":[134,9,134,60],"4707":[134,9,134,27],"4713":[134,9,134,61],"4721":[135,9,135,13],"4729":[135,9,135,24],"4737":[135,28,135,35],"4745":[135,37,135,49],"4753":[135,50,135,54],"4761":[135,37,135,55],"4769":[135,9,135,56],"4771":[135,9,135,27],"4777":[135,9,135,57],"4785":[136,9,136,13],"4793":[136,9,136,24],"4801":[136,28,136,35],"4809":[136,37,136,49],"4817":[136,50,136,54],"4825":[136,37,136,55],"4833":[136,9,136,56],"4835":[136,9,136,27],"4841":[136,9,136,57],"4849":[56,30,138,2],"4857":[56,30,138,2],"4865":[56,30,138,2],"4873":[56,30,138,2],"4881":[56,30,138,2],"4889":[56,30,138,2],"4897":[56,30,138,2],"4905":[56,1,138,2],"4913":[56,1,138,3],"4921":[139,1,139,11],"4929":[139,1,139,21],"4937":[140,15,140,22],"4945":[140,26,140,28],"4953":[140,15,140,28],"4961":[140,5,140,29],"4969":[141,16,141,23],"4977":[141,16,141,40],"4985":[141,44,141,52],"4993":[142,9,142,13],"5001":[142,9,142,27],"5009":[142,47,142,54],"5017":[142,47,142,71],"5025":[142,9,142,71],"5033":[142,9,142,72],"5041":[144,16,144,23],"5049":[144,16,144,39],"5057":[144,43,144,51],"5065":[145,9,145,13],"5073":[145,9,145,27],"5081":[145,46,145,53],"5089":[145,46,145,69],"5097":[145,9,145,69],"5105":[145,9,145,70],"5113":[146,9,146,13],"5121":[146,9,146,24],"5129":[146,36,146,43],"5137":[146,36,146,59],"5145":[146,9,146,60],"5147":[146,9,146,35],"5153":[146,9,146,61],"5161":[139,41,148,2],"5169":[139,41,148,2],"5177":[139,41,148,2],"5185":[139,41,148,2],"5193":[139,1,148,2],"5201":[139,1,148,3],"5209":[149,1,149,11],"5217":[149,1,149,21],"5225":[150,12,150,16],"5233":[150,12,150,26],"5241":[150,31,150,35],"5249":[150,31,150,46],"5257":[150,31,150,56],"5265":[150,60,150,64],"5273":[150,60,150,75],"5281":[150,60,150,84],"5289":[150,12,150,84],"5297":[150,5,150,85],"5305":[149,36,151,2],"5313":[149,36,151,2],"5321":[149,36,151,2],"5329":[149,1,151,2],"5337":[149,1,151,3],"5345":[152,1,152,11],"5353":[152,1,152,21],"5361":[153,9,153,13],"5369":[153,9,153,32],"5377":[153,36,153,40],"5385":[154,16,154,20],"5393":[154,16,154,20],"5401":[154,9,154,21],"5409":[155,9,155,13],"5417":[155,9,155,32],"5425":[155,9,155,47],"5433":[155,51,155,52],"5441":[155,56,155,60],"5449":[155,56,155,79],"5457":[155,56,155,94],"5465":[155,98,155,99],"5473":[156,16,156,20],"5481":[156,16,156,20],"5489":[156,9,156,21],"5497":[157,9,157,13],"5505":[157,9,157,32],"5513":[157,9,157,47],"5521":[157,51,157,55],"5529":[157,51,157,70],"5537":[157,74,157,78],"5545":[157,74,157,97],"5553":[157,74,157,112],"5561":[157,116,157,120],"5569":[157,116,157,135],"5577":[158,16,158,20],"5585":[158,16,158,20],"5593":[158,9,158,21],"5601":[159,12,159,17],"5609":[159,12,159,17],"5617":[159,5,159,18],"5625":[152,37,160,2],"5633":[152,37,160,2],"5641":[152,37,160,2],"5649":[152,1,160,2],"5657":[152,1,160,3],"5665":[161,1,161,11],"5673":[161,1,161,21],"5681":[163,13,163,18],"5689":[163,27,163,34],"5697":[163,13,163,35],"5699":[163,13,163,26],"5705":[164,26,164,27],"5713":[164,26,164,27],"5721":[164,26,164,27],"5729":[164,29,164,30],"5737":[164,33,164,40],"5745":[164,33,164,47],"5761":[164,49,164,50],"5769":[164,49,164,52],"5785":[166,41,166,48],"5793":[166,49,166,50],"5801":[166,41,166,51],"5809":[166,61,166,65],"5817":[166,61,166,81],"5825":[166,41,166,82],"5827":[166,41,166,60],"5833":[166,41,166,82],"5841":[166,41,166,82],"5849":[167,25,167,29],"5857":[167,25,167,36],"5865":[167,40,167,44],"5873":[167,48,167,52],"5881":[167,48,167,59],"5889":[167,48,167,67],"5897":[168,25,168,29],"5905":[168,25,168,36],"5913":[168,43,168,71],"5921":[169,37,169,50],"5929":[170,35,170,42],"5937":[170,43,170,44],"5945":[170,35,170,45],"5953":[168,73,171,26],"5961":[168,25,171,27],"5963":[168,25,168,42],"5969":[168,25,171,28],"5977":[172,21,172,25],"5985":[172,21,172,36],"5993":[172,43,172,56],"6001":[172,21,172,57],"6003":[172,21,172,42],"6009":[172,21,172,58],"6017":[174,28,174,36],"6025":[174,37,174,40],"6033":[174,42,174,46],"6041":[174,28,174,47],"6049":[174,28,174,47],"6057":[174,21,174,48],"6065":[173,19,175,18],"6073":[179,37,179,44],"6081":[179,54,179,58],"6089":[179,54,179,74],"6097":[179,37,179,75],"6099":[179,37,179,53],"6105":[179,37,179,75],"6113":[179,37,179,75],"6121":[180,21,180,25],"6129":[180,21,180,32],"6137":[180,36,180,40],"6145":[180,44,180,48],"6153":[180,44,180,55],"6161":[180,44,180,63],"6169":[181,21,181,25],"6177":[181,21,181,32],"6185":[181,39,181,67],"6193":[182,33,182,46],"6201":[183,31,183,38],"6209":[181,69,184,22],"6217":[181,21,184,23],"6219":[181,21,181,38],"6225":[181,21,184,24],"6233":[185,17,185,21],"6241":[185,17,185,32],"6249":[185,39,185,52],"6257":[185,17,185,53],"6259":[185,17,185,38],"6265":[185,17,185,54],"6273":[187,24,187,32],"6281":[187,33,187,36],"6289":[187,38,187,42],"6297":[187,24,187,43],"6305":[187,24,187,43],"6313":[187,17,187,44],"6321":[186,15,188,14],"6329":[191,20,191,28],"6337":[191,33,191,43],"6345":[192,13,192,21],"6353":[192,22,192,25],"6361":[192,13,192,26],"6369":[192,13,192,27],"6377":[190,7,193,6],"6385":[161,30,194,2],"6393":[161,30,194,2],"6401":[161,30,194,2],"6409":[161,30,194,2],"6417":[161,30,194,2],"6425":[161,30,194,2],"6433":[161,30,194,2],"6441":[161,1,194,2],"6449":[161,1,194,3],"6457":[195,1,195,11],"6465":[195,1,195,21],"6473":[196,5,196,18],"6481":[196,19,196,23],"6489":[196,25,196,29],"6497":[196,5,196,30],"6505":[196,5,196,31],"6513":[197,5,197,9],"6521":[197,5,197,20],"6529":[197,24,197,31],"6537":[197,33,198,6],"6545":[197,33,198,6],"6553":[197,33,198,6],"6561":[197,5,198,7],"6563":[197,5,197,23],"6569":[197,5,198,8],"6577":[199,5,199,9],"6585":[199,5,199,20],"6593":[199,5,199,30],"6595":[199,5,199,28],"6601":[199,5,199,31],"6609":[200,9,200,13],"6617":[200,9,200,20],"6625":[200,24,200,28],"6633":[200,32,200,36],"6641":[200,32,200,43],"6649":[200,32,200,51],"6657":[201,9,201,13],"6665":[201,9,201,20],"6673":[201,27,201,46],"6681":[201,48,201,52],"6689":[201,48,201,63],"6697":[201,9,201,64],"6699":[201,9,201,26],"6705":[201,9,201,65],"6713":[195,30,203,2],"6721":[195,30,203,2],"6729":[195,30,203,2],"6737":[195,1,203,2],"6745":[195,1,203,3],"6753":[205,5,205,9],"6761":[206,16,206,18],"6769":[207,18,207,20],"6777":[208,16,208,18],"6785":[209,14,209,16],"6793":[210,18,210,20],"6801":[211,21,211,23],"6809":[212,18,212,20],"6817":[205,26,213,6],"6825":[205,5,213,6],"6833":[205,5,213,7],"6841":[214,9,214,23],"6849":[214,27,214,31],"6857":[214,27,214,42],"6865":[214,46,214,50],"6873":[215,20,215,26],"6881":[215,32,215,36],"6889":[215,32,215,50],"6897":[215,20,215,51],"6899":[215,20,215,31],"6905":[215,20,215,51],"6913":[215,20,215,51],"6921":[216,22,216,23],"6929":[216,22,216,23],"6937":[216,22,216,23],"6945":[216,25,216,26],"6953":[216,29,216,33],"6961":[216,29,216,40],"6977":[216,42,216,43],"6985":[216,42,216,45],"7001":[217,13,217,17],"7009":[217,13,217,28],"7017":[217,48,217,52],"7025":[217,53,217,54],"7033":[217,48,217,55],"7041":[217,13,217,56],"7043":[217,13,217,47],"7049":[217,13,217,57],"7057":[204,21,220,2],"7065":[204,21,220,2],"7073":[204,21,220,2],"7081":[204,21,220,2],"7089":[204,21,220,2],"7097":[204,21,220,2],"7105":[204,21,220,2],"7113":[204,21,220,2],"7121":[204,21,220,2],"7129":[223,9,223,13],"7137":[223,26,223,30],"7145":[223,9,223,30],"7153":[223,9,223,31],"7161":[224,9,224,13],"7169":[224,9,224,24],"7177":[224,36,224,40],"7185":[224,36,224,54],"7193":[224,36,224,70],"7201":[224,74,224,78],"7209":[224,81,224,85],"7217":[224,81,224,99],"7225":[224,81,224,115],"7233":[224,118,224,122],"7241":[224,118,224,136],"7249":[224,118,224,144],"7257":[224,9,224,145],"7259":[224,9,224,35],"7265":[224,9,224,146],"7273":[225,9,225,13],"7281":[225,19,225,28],"7289":[225,30,225,34],"7297":[225,36,225,40],"7305":[225,9,225,41],"7307":[225,9,225,18],"7313":[225,9,225,42],"7321":[222,12,226,6],"7329":[222,12,226,6],"7337":[222,12,226,6],"7345":[222,12,226,6],"7353":[222,12,226,6],"7361":[222,5,226,7],"7369":[221,22,227,2],"7377":[221,22,227,2],"7385":[221,22,227,2],"7393":[221,22,227,2],"7401":[221,22,227,2],"7409":[221,22,227,2],"7417":[228,25,228,32],"7425":[228,25,228,43],"7433":[230,16,230,20],"7441":[230,16,230,27],"7449":[230,30,230,31],"7457":[231,17,231,21],"7465":[231,17,231,31],"7473":[231,34,231,35],"7481":[231,39,231,43],"7489":[231,39,231,57],"7497":[231,60,231,61],"7505":[232,44,232,48],"7513":[232,44,232,62],"7521":[232,65,232,69],"7529":[232,65,232,79],"7537":[232,44,232,79],"7545":[232,44,232,79],"7553":[233,21,233,41],"7561":[233,44,233,48],"7569":[233,44,233,55],"7577":[234,21,234,25],"7585":[234,31,234,35],"7593":[234,31,234,42],"7601":[234,44,234,48],"7609":[234,44,234,58],"7617":[234,21,234,59],"7619":[234,21,234,30],"7625":[234,21,234,60],"7633":[235,21,235,25],"7641":[235,38,235,42],"7649":[235,38,235,52],"7657":[235,55,235,59],"7665":[235,55,235,66],"7673":[235,21,235,66],"7681":[235,21,235,67],"7689":[236,32,236,38],"7697":[236,39,236,40],"7705":[236,28,236,41],"7713":[236,28,236,41],"7721":[236,21,236,42],"7729":[238,21,238,25],"7737":[238,31,238,35],"7745":[238,31,238,42],"7753":[238,44,238,48],"7761":[238,44,238,58],"7769":[238,60,238,61],"7777":[238,63,238,83],"7785":[238,21,238,84],"7787":[238,21,238,30],"7793":[238,21,238,85],"7801":[239,28,239,32],"7809":[239,39,239,59],"7817":[239,28,239,60],"7819":[239,28,239,38],"7825":[239,28,239,60],"7833":[239,21,239,61],"7841":[241,42,241,46],"7849":[241,42,241,53],"7857":[241,42,241,53],"7865":[241,42,241,53],"7873":[242,25,242,29],"7881":[242,39,242,43],"7889":[242,25,242,43],"7897":[242,25,242,44],"7905":[243,25,243,29],"7913":[243,46,243,47],"7921":[243,25,243,47],"7929":[243,25,243,48],"7937":[244,25,244,29],"7945":[244,42,244,43],"7953":[244,25,244,43],"7961":[244,25,244,44],"7969":[245,25,245,29],"7977":[245,43,245,47],"7985":[245,25,245,47],"7993":[245,25,245,48],"8001":[246,25,246,29],"8009":[246,35,246,44],"8017":[246,46,246,56],"8025":[246,58,246,62],"8033":[246,25,246,63],"8035":[246,25,246,34],"8041":[246,25,246,64],"8049":[249,34,249,49],"8057":[250,36,250,39],"8065":[251,34,251,38],"8073":[251,34,251,45],"8081":[253,48,253,52],"8089":[253,48,253,66],"8097":[254,44,254,48],"8105":[254,44,254,58],"8113":[255,45,255,49],"8121":[255,45,255,60],"8129":[252,41,256,30],"8137":[248,43,257,26],"8145":[248,43,257,26],"8153":[248,43,257,26],"8161":[258,29,258,33],"8169":[258,29,258,40],"8177":[258,44,258,48],"8185":[258,52,258,56],"8193":[258,52,258,63],"8201":[258,52,258,71],"8209":[259,29,259,33],"8217":[259,29,259,40],"8225":[259,47,259,59],"8233":[259,61,259,72],"8241":[259,29,259,73],"8243":[259,29,259,46],"8249":[259,29,259,74],"8257":[260,25,260,29],"8265":[260,35,260,47],"8273":[260,49,260,60],"8281":[260,62,260,66],"8289":[260,25,260,67],"8291":[260,25,260,34],"8297":[260,25,260,68],"8305":[247,23,261,22],"8313":[264,21,264,25],"8321":[264,21,264,36],"8329":[264,40,264,44],"8337":[264,48,264,52],"8345":[264,48,264,63],"8353":[264,48,264,70],"8361":[264,73,264,74],"8369":[265,25,265,29],"8377":[265,25,265,40],"8385":[265,25,265,47],"8393":[265,50,265,54],"8401":[265,50,265,61],"8409":[265,64,265,65],"8417":[266,43,266,49],"8425":[266,50,266,54],"8433":[266,50,266,65],"8441":[266,50,266,72],"8449":[266,75,266,79],"8457":[266,75,266,86],"8465":[266,39,266,87],"8473":[266,39,266,87],"8481":[266,39,266,87],"8489":[267,25,267,29],"8497":[267,25,267,40],"8505":[267,46,267,53],"8513":[267,55,267,56],"8521":[267,25,267,57],"8523":[267,25,267,45],"8529":[267,25,267,58],"8537":[268,25,268,29],"8545":[268,35,268,42],"8553":[268,44,268,48],"8561":[268,44,268,59],"8569":[268,44,268,66],"8577":[268,25,268,67],"8579":[268,25,268,34],"8585":[268,25,268,68],"8593":[269,32,269,39],"8601":[269,32,269,39],"8609":[269,25,269,40],"8617":[270,25,270,29],"8625":[270,39,270,43],"8633":[270,25,270,43],"8641":[270,25,270,44],"8649":[271,25,271,29],"8657":[271,46,271,47],"8665":[271,25,271,47],"8673":[271,25,271,48],"8681":[272,25,272,29],"8689":[272,42,272,43],"8697":[272,25,272,43],"8705":[272,25,272,44],"8713":[273,25,273,29],"8721":[273,43,273,47],"8729":[273,25,273,47],"8737":[273,25,273,48],"8745":[275,49,275,55],"8753":[275,56,275,60],"8761":[275,56,275,71],"8769":[275,56,275,78],"8777":[275,81,275,85],"8785":[275,81,275,92],"8793":[275,45,275,93],"8801":[275,45,275,93],"8809":[275,45,275,93],"8817":[276,25,276,29],"8825":[276,25,276,40],"8833":[276,46,276,59],"8841":[276,61,276,62],"8849":[276,25,276,63],"8851":[276,25,276,45],"8857":[276,25,276,64],"8865":[277,25,277,29],"8873":[277,35,277,48],"8881":[277,50,277,54],"8889":[277,50,277,65],"8897":[277,50,277,72],"8905":[277,25,277,73],"8907":[277,25,277,34],"8913":[277,25,277,74],"8921":[278,36,278,42],"8929":[278,43,278,44],"8937":[278,32,278,45],"8945":[278,32,278,45],"8953":[278,25,278,46],"8961":[281,25,281,29],"8969":[281,25,281,36],"8977":[281,39,281,40],"8985":[282,45,282,56],"8993":[282,70,282,74],"9001":[282,76,282,77],"9009":[282,45,282,78],"9011":[282,45,282,69],"9017":[282,45,282,78],"9025":[282,45,282,78],"9033":[283,29,283,42],"9041":[283,45,283,46],"9049":[283,50,283,63],"9057":[283,66,283,70],"9065":[283,66,283,90],"9073":[285,38,285,53],"9081":[286,40,286,42],"9089":[287,38,287,42],"9097":[287,38,287,49],"9105":[289,52,289,65],"9113":[290,48,290,52],"9121":[290,48,290,62],"9129":[291,49,291,53],"9137":[291,49,291,64],"9145":[288,45,292,34],"9153":[284,47,293,30],"9161":[284,47,293,30],"9169":[284,47,293,30],"9177":[294,33,294,37],"9185":[294,33,294,44],"9193":[294,48,294,52],"9201":[294,56,294,60],"9209":[294,56,294,67],"9217":[294,56,294,75],"9225":[295,33,295,37],"9233":[295,33,295,44],"9241":[295,51,295,63],"9249":[295,65,295,76],"9257":[295,33,295,77],"9259":[295,33,295,50],"9265":[295,33,295,78],"9273":[296,29,296,33],"9281":[296,39,296,51],"9289":[296,53,296,64],"9297":[296,66,296,70],"9305":[296,29,296,71],"9307":[296,29,296,38],"9313":[296,29,296,72],"9321":[297,29,297,36],"9329":[297,29,297,36],"9337":[299,29,299,42],"9345":[299,45,299,46],"9353":[299,50,299,63],"9361":[299,66,299,70],"9369":[299,66,299,90],"9377":[299,94,299,107],"9385":[299,110,299,114],"9393":[299,110,299,121],"9401":[300,29,300,33],"9409":[300,47,300,53],"9417":[300,54,300,67],"9425":[300,43,300,68],"9433":[300,29,300,68],"9441":[300,29,300,69],"9449":[301,29,301,33],"9457":[301,39,301,43],"9465":[301,39,301,50],"9473":[301,52,301,53],"9481":[301,29,301,54],"9483":[301,29,301,38],"9489":[301,29,301,55],"9497":[302,29,302,33],"9505":[302,46,302,50],"9513":[302,46,302,57],"9521":[302,29,302,57],"9529":[302,29,302,58],"9537":[303,29,303,33],"9545":[303,50,303,63],"9553":[303,29,303,63],"9561":[303,29,303,64],"9569":[304,29,304,33],"9577":[304,47,304,51],"9585":[304,29,304,51],"9593":[304,29,304,52],"9601":[305,40,305,46],"9609":[305,47,305,48],"9617":[305,36,305,49],"9625":[305,36,305,49],"9633":[305,29,305,50],"9641":[306,36,306,49],"9649":[306,52,306,53],"9657":[306,57,306,70],"9665":[306,73,306,77],"9673":[306,73,306,97],"9681":[306,101,306,114],"9689":[306,118,306,122],"9697":[306,118,306,129],"9705":[308,50,308,54],"9713":[308,50,308,54],"9721":[308,50,308,54],"9729":[309,33,309,37],"9737":[309,47,309,51],"9745":[309,33,309,51],"9753":[309,33,309,52],"9761":[310,33,310,37],"9769":[310,54,310,55],"9777":[310,33,310,55],"9785":[310,33,310,56],"9793":[311,33,311,37],"9801":[311,50,311,51],"9809":[311,33,311,51],"9817":[311,33,311,52],"9825":[312,33,312,37],"9833":[312,51,312,55],"9841":[312,33,312,55],"9849":[312,33,312,56],"9857":[313,44,313,50],"9865":[313,51,313,52],"9873":[313,40,313,53],"9881":[313,40,313,53],"9889":[313,33,313,54],"9897":[314,33,314,37],"9905":[314,43,314,52],"9913":[314,54,314,64],"9921":[314,66,314,70],"9929":[314,33,314,71],"9931":[314,33,314,42],"9937":[314,33,314,72],"9945":[317,42,317,57],"9953":[318,44,318,47],"9961":[319,42,319,46],"9969":[319,42,319,53],"9977":[321,56,321,60],"9985":[321,56,321,74],"9993":[322,52,322,56],"10001":[322,52,322,66],"10009":[323,53,323,57],"10017":[323,53,323,68],"10025":[320,49,324,38],"10033":[316,51,325,34],"10041":[316,51,325,34],"10049":[316,51,325,34],"10057":[326,37,326,41],"10065":[326,37,326,48],"10073":[326,52,326,56],"10081":[326,60,326,64],"10089":[326,60,326,71],"10097":[326,60,326,79],"10105":[327,37,327,41],"10113":[327,37,327,48],"10121":[327,55,327,67],"10129":[327,69,327,80],"10137":[327,37,327,81],"10139":[327,37,327,54],"10145":[327,37,327,82],"10153":[328,33,328,37],"10161":[328,43,328,55],"10169":[328,57,328,68],"10177":[328,70,328,74],"10185":[328,33,328,75],"10187":[328,33,328,42],"10193":[328,33,328,76],"10201":[315,31,329,30],"10209":[330,36,330,49],"10217":[330,53,330,54],"10225":[330,58,330,71],"10233":[330,74,330,78],"10241":[330,74,330,98],"10249":[332,38,332,53],"10257":[333,40,333,44],"10265":[334,38,334,42],"10273":[336,52,336,65],"10281":[337,48,337,49],"10289":[338,45,338,49],"10297":[339,49,339,53],"10305":[335,45,340,34],"10313":[331,47,341,30],"10321":[331,47,341,30],"10329":[331,47,341,30],"10337":[342,33,342,37],"10345":[342,33,342,44],"10353":[342,48,342,52],"10361":[342,56,342,60],"10369":[342,56,342,67],"10377":[342,56,342,75],"10385":[343,33,343,37],"10393":[343,33,343,44],"10401":[343,51,343,63],"10409":[343,65,343,76],"10417":[343,33,343,77],"10419":[343,33,343,50],"10425":[343,33,343,78],"10433":[344,29,344,33],"10441":[344,39,344,51],"10449":[344,53,344,64],"10457":[344,66,344,70],"10465":[344,29,344,71],"10467":[344,29,344,38],"10473":[344,29,344,72],"10481":[345,29,345,33],"10489":[345,43,345,47],"10497":[345,29,345,47],"10505":[345,29,345,48],"10513":[346,29,346,33],"10521":[346,50,346,51],"10529":[346,29,346,51],"10537":[346,29,346,52],"10545":[347,29,347,33],"10553":[347,46,347,47],"10561":[347,29,347,47],"10569":[347,29,347,48],"10577":[348,29,348,33],"10585":[348,47,348,51],"10593":[348,29,348,51],"10601":[348,29,348,52],"10609":[349,40,349,46],"10617":[349,47,349,48],"10625":[349,36,349,49],"10633":[349,36,349,49],"10641":[349,29,349,50],"10649":[352,50,352,54],"10657":[352,61,352,62],"10665":[352,64,352,77],"10673":[352,50,352,78],"10675":[352,50,352,60],"10681":[352,50,352,78],"10689":[352,50,352,78],"10697":[353,33,353,37],"10705":[353,47,353,51],"10713":[353,33,353,51],"10721":[353,33,353,52],"10729":[354,33,354,37],"10737":[354,54,354,55],"10745":[354,33,354,55],"10753":[354,33,354,56],"10761":[355,33,355,37],"10769":[355,50,355,51],"10777":[355,33,355,51],"10785":[355,33,355,52],"10793":[356,33,356,37],"10801":[356,51,356,55],"10809":[356,33,356,55],"10817":[356,33,356,56],"10825":[357,40,357,44],"10833":[357,51,357,64],"10841":[357,40,357,65],"10843":[357,40,357,50],"10849":[357,40,357,65],"10857":[357,33,357,66],"10865":[358,33,358,37],"10873":[358,43,358,52],"10881":[358,54,358,64],"10889":[358,66,358,70],"10897":[358,33,358,71],"10899":[358,33,358,42],"10905":[358,33,358,72],"10913":[361,42,361,57],"10921":[362,44,362,47],"10929":[363,42,363,46],"10937":[363,42,363,53],"10945":[365,56,365,69],"10953":[366,52,366,56],"10961":[366,52,366,66],"10969":[367,53,367,57],"10977":[367,53,367,68],"10985":[364,49,368,38],"10993":[360,51,369,34],"11001":[360,51,369,34],"11009":[360,51,369,34],"11017":[370,37,370,41],"11025":[370,37,370,48],"11033":[370,52,370,56],"11041":[370,60,370,64],"11049":[370,60,370,71],"11057":[370,60,370,79],"11065":[371,37,371,41],"11073":[371,37,371,48],"11081":[371,55,371,67],"11089":[371,69,371,80],"11097":[371,37,371,81],"11099":[371,37,371,54],"11105":[371,37,371,82],"11113":[372,33,372,37],"11121":[372,43,372,55],"11129":[372,57,372,68],"11137":[372,70,372,74],"11145":[372,33,372,75],"11147":[372,33,372,42],"11153":[372,33,372,76],"11161":[359,31,373,30],"11169":[376,25,376,29],"11177":[376,47,376,53],"11185":[376,54,376,58],"11193":[376,54,376,65],"11201":[376,43,376,66],"11209":[376,25,376,66],"11217":[376,25,376,67],"11225":[377,25,377,29],"11233":[377,35,377,39],"11241":[377,35,377,50],"11249":[377,52,377,53],"11257":[377,25,377,54],"11259":[377,25,377,34],"11265":[377,25,377,55],"11273":[378,36,378,42],"11281":[378,43,378,44],"11289":[378,32,378,45],"11297":[378,32,378,45],"11305":[378,25,378,46],"11313":[229,12,383,6],"11321":[229,12,383,6],"11329":[229,12,383,6],"11337":[229,12,383,6],"11345":[229,12,383,6],"11353":[229,12,383,6],"11361":[229,12,383,6],"11369":[229,12,383,6],"11377":[229,12,383,6],"11385":[229,12,383,6],"11393":[229,12,383,6],"11401":[229,5,383,7],"11409":[228,64,384,2],"11417":[228,64,384,2],"11425":[228,64,384,2],"11433":[228,64,384,2],"11441":[228,25,384,2],"11449":[228,25,384,2],"11457":[228,25,384,2],"11465":[387,9,387,13],"11473":[387,26,387,31],"11481":[387,9,387,31],"11489":[387,9,387,32],"11497":[388,9,388,13],"11505":[388,19,388,24],"11513":[388,33,388,72],"11521":[388,75,388,79],"11529":[388,75,388,93],"11537":[388,75,388,98],"11545":[388,101,388,104],"11553":[388,107,388,111],"11561":[388,107,388,125],"11569":[388,107,388,130],"11577":[388,133,388,136],"11585":[388,26,388,138],"11593":[388,140,388,144],"11601":[388,9,388,145],"11603":[388,9,388,18],"11609":[388,9,388,146],"11617":[386,12,389,6],"11625":[386,12,389,6],"11633":[386,12,389,6],"11641":[386,12,389,6],"11649":[386,5,389,7],"11657":[385,18,390,2],"11665":[385,18,390,2],"11673":[385,18,390,2],"11681":[385,18,390,2],"11689":[385,18,390,2],"11697":[385,18,390,2],"11705":[393,9,393,13],"11713":[393,26,393,31],"11721":[393,9,393,31],"11729":[393,9,393,32],"11737":[394,9,394,13],"11745":[394,19,394,28],"11753":[394,37,394,54],"11761":[394,57,394,61],"11769":[394,57,394,75],"11777":[394,57,394,80],"11785":[394,83,394,86],"11793":[394,89,394,93],"11801":[394,89,394,107],"11809":[394,89,394,112],"11817":[394,115,394,128],"11825":[394,30,394,130],"11833":[394,132,394,136],"11841":[394,9,394,137],"11843":[394,9,394,18],"11849":[394,9,394,138],"11857":[392,12,395,6],"11865":[392,12,395,6],"11873":[392,12,395,6],"11881":[392,12,395,6],"11889":[392,5,395,7],"11897":[391,22,396,2],"11905":[391,22,396,2],"11913":[391,22,396,2],"11921":[391,22,396,2],"11929":[391,22,396,2],"11937":[391,22,396,2],"11945":[398,12,399,6],"11953":[398,12,399,6],"11961":[398,12,399,6],"11969":[398,12,399,6],"11977":[398,5,399,7],"11985":[397,20,400,2],"11993":[397,20,400,2],"12001":[397,20,400,2],"12009":[397,20,400,2],"12017":[397,20,400,2],"12025":[397,20,400,2],"12033":[403,9,403,13],"12041":[403,9,403,24],"12049":[403,9,403,34],"12051":[403,9,403,32],"12057":[403,9,403,35],"12065":[404,9,404,13],"12073":[404,26,404,31],"12081":[404,9,404,31],"12089":[404,9,404,32],"12097":[405,9,405,13],"12105":[405,19,405,26],"12113":[405,35,405,59],"12121":[405,62,405,66],"12129":[405,62,405,80],"12137":[405,62,405,85],"12145":[405,88,405,91],"12153":[405,94,405,98],"12161":[405,94,405,112],"12169":[405,94,405,117],"12177":[405,120,405,123],"12185":[405,28,405,125],"12193":[405,127,405,131],"12201":[405,9,405,132],"12203":[405,9,405,18],"12209":[405,9,405,133],"12217":[402,12,406,6],"12225":[402,12,406,6],"12233":[402,12,406,6],"12241":[402,12,406,6],"12249":[402,12,406,6],"12257":[402,5,406,7],"12265":[401,20,407,2],"12273":[401,20,407,2],"12281":[401,20,407,2],"12289":[401,20,407,2],"12297":[401,20,407,2],"12305":[401,20,407,2],"12313":[410,13,410,21],"12321":[410,26,410,30],"12329":[410,26,410,40],"12337":[411,13,411,17],"12345":[411,30,411,35],"12353":[411,13,411,35],"12361":[411,13,411,36],"12369":[412,13,412,17],"12377":[412,23,412,30],"12385":[412,39,412,63],"12393":[412,66,412,70],"12401":[412,66,412,84],"12409":[412,66,412,89],"12417":[412,92,412,95],"12425":[412,98,412,102],"12433":[412,98,412,116],"12441":[412,98,412,121],"12449":[412,124,412,127],"12457":[412,32,412,129],"12465":[412,131,412,135],"12473":[412,13,412,136],"12475":[412,13,412,22],"12481":[412,13,412,137],"12489":[414,13,414,17],"12497":[414,30,414,35],"12505":[414,13,414,35],"12513":[414,13,414,36],"12521":[415,13,415,17],"12529":[415,23,415,30],"12537":[415,39,415,63],"12545":[415,66,415,70],"12553":[415,66,415,84],"12561":[415,66,415,89],"12569":[415,92,415,95],"12577":[415,98,415,102],"12585":[415,98,415,116],"12593":[415,98,415,121],"12601":[415,124,415,127],"12609":[415,32,415,129],"12617":[415,131,415,135],"12625":[415,13,415,136],"12627":[415,13,415,22],"12633":[415,13,415,137],"12641":[409,12,417,6],"12649":[409,12,417,6],"12657":[409,12,417,6],"12665":[409,12,417,6],"12673":[409,12,417,6],"12681":[409,5,417,7],"12689":[408,20,418,2],"12697":[408,20,418,2],"12705":[408,20,418,2],"12713":[408,20,418,2],"12721":[408,20,418,2],"12729":[408,20,418,2],"12737":[419,1,419,11],"12745":[419,27,419,32],"12753":[419,1,419,32],"12761":[419,1,419,33],"12769":[1,1,419,33],"12777":[1,1,419,33],"12785":[1,1,419,33],"12793":[1,1,419,33],"12801":[1,1,419,33],"12809":[1,1,419,33],"12817":[1,1,419,33],"12825":[1,1,419,33],"12833":[1,1,419,33],"12841":[1,1,419,33],"12849":[1,1,419,33],"12857":[1,1,419,33],"12865":[1,1,419,33],"12873":[1,1,419,33],"12881":[1,1,419,33],"12889":[1,1,419,33],"12897":[1,1,419,33],"12905":[1,1,419,33],"12913":[7,26,11,6],"12921":[12,5,13,44],"12929":[19,24,19,112],"12937":[20,32,20,139],"12945":[21,35,21,142],"12953":[43,14,45,10],"12961":[43,14,45,10],"12969":[46,14,49,10],"12977":[46,14,49,10],"12985":[4,39,51,2],"12993":[4,39,51,2],"13001":[59,9,63,10],"13009":[64,9,66,10],"13017":[67,36,67,146],"13025":[68,9,69,68],"13033":[71,13,75,14],"13041":[70,9,76,10],"13049":[77,37,77,90],"13057":[82,9,84,10],"13065":[85,9,88,10],"13073":[89,9,91,10],"13081":[95,17,97,18],"13089":[94,100,99,14],"13097":[94,100,99,14],"13105":[112,9,116,10],"13113":[117,9,119,10],"13121":[120,36,120,146],"13129":[121,9,122,68],"13137":[124,13,128,14],"13145":[123,9,129,10],"13153":[58,5,137,6],"13161":[56,30,138,2],"13169":[56,30,138,2],"13177":[141,5,143,6],"13185":[144,5,147,6],"13193":[139,41,148,2],"13201":[139,41,148,2],"13209":[149,36,151,2],"13217":[149,36,151,2],"13225":[153,5,154,21],"13233":[155,5,156,21],"13241":[157,5,158,21],"13249":[152,37,160,2],"13257":[152,37,160,2],"13265":[167,21,171,28],"13273":[164,13,176,14],"13281":[164,13,176,14],"13289":[180,17,184,24],"13297":[163,9,189,10],"13305":[191,9,192,27],"13313":[161,30,194,2],"13321":[161,30,194,2],"13329":[197,33,198,6],"13337":[197,33,198,6],"13345":[200,5,202,6],"13353":[195,30,203,2],"13361":[195,30,203,2],"13369":[216,9,218,10],"13377":[216,9,218,10],"13385":[214,5,219,6],"13393":[204,21,220,2],"13401":[204,21,220,2],"13409":[224,36,224,144],"13417":[222,12,226,6],"13425":[222,12,226,6],"13433":[221,22,227,2],"13441":[221,22,227,2],"13449":[258,25,259,74],"13457":[233,17,262,18],"13465":[265,21,279,22],"13473":[294,29,295,78],"13481":[283,25,298,26],"13489":[326,33,327,82],"13497":[342,29,343,78],"13505":[370,33,371,82],"13513":[330,32,374,26],"13521":[306,32,374,26],"13529":[299,25,374,26],"13537":[281,21,379,22],"13545":[264,17,380,18],"13553":[231,13,381,14],"13561":[230,9,382,10],"13569":[229,12,383,6],"13577":[229,12,383,6],"13585":[228,64,384,2],"13593":[228,64,384,2],"13601":[386,12,389,6],"13609":[386,12,389,6],"13617":[385,18,390,2],"13625":[385,18,390,2],"13633":[392,12,395,6],"13641":[392,12,395,6],"13649":[391,22,396,2],"13657":[391,22,396,2],"13665":[398,12,399,6],"13673":[398,12,399,6],"13681":[397,20,400,2],"13689":[397,20,400,2],"13697":[402,12,406,6],"13705":[402,12,406,6],"13713":[401,20,407,2],"13721":[401,20,407,2],"13729":[410,9,416,10],"13737":[409,12,417,6],"13745":[409,12,417,6],"13753":[408,20,418,2],"13761":[408,20,418,2],"13769":[1,1,419,33],"13777":[1,1,419,33],"nBranches":164,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection_jalangi_.js","code":"var utils = require('./connection_utils'),\n  inherits = require('util').inherits,\n  net = require('net'),\n  EventEmitter = require('events').EventEmitter,\n  inherits = require('util').inherits,\n  binaryutils = require('../utils'),\n  tls = require('tls');\n\nvar Connection = exports.Connection = function(id, socketOptions) {\n  var self = this;\n  // Set up event emitter\n  EventEmitter.call(this);\n  // Store all socket options\n  this.socketOptions = socketOptions ? socketOptions : {host:'localhost', port:27017, domainSocket:false};\n  // Set keep alive default if not overriden\n  if(this.socketOptions.keepAlive == null && !(process.platform == \"sunos\" || process.platform == \"win32\")) this.socketOptions.keepAlive = 100;\n  // Id for the connection\n  this.id = id;\n  // State of the connection\n  this.connected = false;\n  // Set if this is a domain socket\n  this.domainSocket = this.socketOptions.domainSocket;\n\n  // Supported min and max wire protocol\n  this.minWireVersion = 0;\n  this.maxWireVersion = 3;\n\n  //\n  // Connection parsing state\n  //\n  this.maxBsonSize = socketOptions.maxBsonSize ? socketOptions.maxBsonSize : Connection.DEFAULT_MAX_BSON_SIZE;\n  this.maxMessageSizeBytes = socketOptions.maxMessageSizeBytes ? socketOptions.maxMessageSizeBytes : Connection.DEFAULT_MAX_MESSAGE_SIZE;\n  this.maxNumberOfDocsInBatch = socketOptions.maxWriteBatchSize ? socketOptions.maxWriteBatchSize : Connection.DEFAULT_MAX_WRITE_BATCH_SIZE;\n  // Contains the current message bytes\n  this.buffer = null;\n  // Contains the current message size\n  this.sizeOfMessage = 0;\n  // Contains the readIndex for the messaage\n  this.bytesRead = 0;\n  // Contains spill over bytes from additional messages\n  this.stubBuffer = 0;\n\n  // Just keeps list of events we allow\n  this.eventHandlers = {error:[], parseError:[], poolReady:[], message:[], close:[], timeout:[], end:[]};\n\n  // Just keeps list of events we allow\n  resetHandlers(this, false);\n  \n  // Bson object\n  this.maxBsonSettings = {\n      disableDriverBSONSizeCheck: this.socketOptions['disableDriverBSONSizeCheck'] || false\n    , maxBsonSize: this.maxBsonSize\n    , maxMessageSizeBytes: this.maxMessageSizeBytes\n  }\n\n  // Allow setting the socketTimeoutMS on all connections\n  // to work around issues such as secondaries blocking due to compaction\n  Object.defineProperty(this, \"socketTimeoutMS\", {\n      enumerable: true\n    , get: function () { return self.socketOptions.socketTimeoutMS; }\n    , set: function (value) { \n      // Set the socket timeoutMS value\n      self.socketOptions.socketTimeoutMS = value;\n      // Set the physical connection timeout\n      self.connection.setTimeout(self.socketOptions.socketTimeoutMS);\n    }\n  });  \n}\n\n// Set max bson size\nConnection.DEFAULT_MAX_BSON_SIZE = 1024 * 1024 * 4;\n// Set default to max bson to avoid overflow or bad guesses\nConnection.DEFAULT_MAX_MESSAGE_SIZE = Connection.DEFAULT_MAX_BSON_SIZE;\n// Max default write bulk ops\nConnection.DEFAULT_MAX_WRITE_BATCH_SIZE = 2000;\n\n// Inherit event emitter so we can emit stuff wohoo\ninherits(Connection, EventEmitter);\n\nConnection.prototype.start = function() {\n  var self = this;\n\n  // If we have a normal connection\n  if(this.socketOptions.ssl) {\n    // Create new connection instance\n    if(this.domainSocket) {\n      this.connection = net.createConnection(this.socketOptions.host);\n    } else {\n      this.connection = net.createConnection(this.socketOptions.port, this.socketOptions.host);\n    }\n    if(this.logger != null && this.logger.doDebug){\n      this.logger.debug(\"opened connection\", this.socketOptions);\n    }\n\n    // Set options on the socket\n    this.connection.setTimeout(this.socketOptions.connectTimeoutMS != null ? this.socketOptions.connectTimeoutMS : this.socketOptions.timeout);\n    // Work around for 0.4.X\n    if(process.version.indexOf(\"v0.4\") == -1) this.connection.setNoDelay(this.socketOptions.noDelay);\n    // Set keep alive if defined\n    if(process.version.indexOf(\"v0.4\") == -1) {\n      if(this.socketOptions.keepAlive > 0) {\n        this.connection.setKeepAlive(true, this.socketOptions.keepAlive);\n      } else {\n        this.connection.setKeepAlive(false);\n      }\n    }\n\n    // Check if the driver should validate the certificate\n    var validate_certificates = this.socketOptions.sslValidate == true ? true : false;\n\n    // Create options for the tls connection\n    var tls_options = {\n        socket: this.connection\n      , rejectUnauthorized: false\n    }\n\n    // If we wish to validate the certificate we have provided a ca store\n    if(validate_certificates) {\n      tls_options.ca = this.socketOptions.sslCA;\n    }\n\n    // If we have a certificate to present\n    if(this.socketOptions.sslCert) {      \n      tls_options.cert = this.socketOptions.sslCert;\n      tls_options.key = this.socketOptions.sslKey;\n    }\n\n    // If the driver has been provided a private key password\n    if(this.socketOptions.sslPass) {\n      tls_options.passphrase = this.socketOptions.sslPass;\n    }\n\n    // Contains the cleartext stream\n    var cleartext = null;\n    // Attempt to establish a TLS connection to the server\n    try {\n      cleartext = tls.connect(this.socketOptions.port, this.socketOptions.host, tls_options, function() {      \n        // If we have a ssl certificate validation error return an error\n        if(cleartext.authorizationError && validate_certificates) {          \n          // Emit an error\n          return self.emit(\"error\", cleartext.authorizationError, self, {ssl:true});        \n        }\n        \n        // Connect to the server\n        connectHandler(self)();\n      })      \n    } catch(err) {\n      return self.emit(\"error\", \"SSL connection failed\", self, {ssl:true});\n    }\n\n    // Save the output stream\n    this.writeSteam = cleartext;\n\n    // Set up data handler for the clear stream\n    cleartext.on(\"data\", createDataHandler(this));\n    // Do any handling of end event of the stream\n    cleartext.on(\"end\", endHandler(this));\n    cleartext.on(\"error\", errorHandler(this));    \n\n    // Handle any errors\n    this.connection.on(\"error\", errorHandler(this));    \n    // Handle timeout\n    this.connection.on(\"timeout\", timeoutHandler(this));\n    // Handle drain event\n    this.connection.on(\"drain\", drainHandler(this));\n    // Handle the close event\n    this.connection.on(\"close\", closeHandler(this));\n  } else {\n    // Create new connection instance\n    if(this.domainSocket) {\n      this.connection = net.createConnection(this.socketOptions.host);\n    } else {\n      this.connection = net.createConnection(this.socketOptions.port, this.socketOptions.host);\n    }\n    if(this.logger != null && this.logger.doDebug){\n      this.logger.debug(\"opened connection\", this.socketOptions);\n    }\n\n    // Set options on the socket\n    this.connection.setTimeout(this.socketOptions.connectTimeoutMS != null ? this.socketOptions.connectTimeoutMS : this.socketOptions.timeout);\n    // Work around for 0.4.X\n    if(process.version.indexOf(\"v0.4\") == -1) this.connection.setNoDelay(this.socketOptions.noDelay);\n    // Set keep alive if defined\n    if(process.version.indexOf(\"v0.4\") == -1) {\n      if(this.socketOptions.keepAlive > 0) {\n        this.connection.setKeepAlive(true, this.socketOptions.keepAlive);\n      } else {\n        this.connection.setKeepAlive(false);\n      }\n    }\n\n    // Set up write stream\n    this.writeSteam = this.connection;\n    // Add handlers\n    this.connection.on(\"error\", errorHandler(this));\n    // Add all handlers to the socket to manage it\n    this.connection.on(\"connect\", connectHandler(this));\n    // this.connection.on(\"end\", endHandler(this));\n    this.connection.on(\"data\", createDataHandler(this));\n    this.connection.on(\"timeout\", timeoutHandler(this));\n    this.connection.on(\"drain\", drainHandler(this));\n    this.connection.on(\"close\", closeHandler(this));\n  }\n}\n\n/**\n * @ignore\n */\nConnection.prototype.setSocketOptions = function(options) {\n  options = options || {};\n\n  if(typeof options.connectTimeoutMS == 'number') {\n    this.socketOptions.connectTimeoutMS = options.connectTimeoutMS;\n  }\n\n  if(typeof options.socketTimeoutMS == 'number') {\n    this.socketOptions.socketTimeoutMS = options.socketTimeoutMS;\n    // Set the current socket timeout\n    this.connection.setTimeout(options.socketTimeoutMS);\n  }\n}\n\n// Check if the sockets are live\nConnection.prototype.isConnected = function() {\n  return this.connected && !this.connection.destroyed && this.connection.writable;\n}\n\n// Validate if the driver supports this server\nConnection.prototype.isCompatible = function() {\n  if(this.serverCapabilities == null) return true;\n\n  // Is compatible with backward server\n  if(this.serverCapabilities.minWireVersion == 0 \n    && this.serverCapabilities.maxWireVersion ==0) return true;\n\n  // Check if we overlap\n  if(this.serverCapabilities.minWireVersion >= this.minWireVersion\n    && this.serverCapabilities.maxWireVersion <= this.maxWireVersion) return true;\n\n  // Not compatible\n  return false;\n}\n\n// Write the data out to the socket\nConnection.prototype.write = function(command, callback) {\n  try {\n    // If we have a list off commands to be executed on the same socket\n    if(Array.isArray(command)) {\n      for(var i = 0; i < command.length; i++) {\n        try {\n          // Pass in the bson validation settings (validate early)\n          var binaryCommand = command[i].toBinary(this.maxBsonSettings);\n\n          if(this.logger != null && this.logger.doDebug) \n            this.logger.debug(\"writing command to mongodb\", {binary: binaryCommand, json: command[i]});\n\n          this.writeSteam.write(binaryCommand);\n        } catch(err) {\n          return callback(err, null);\n        }\n      }\n    } else {\n      try {\n        // Pass in the bson validation settings (validate early)\n        var binaryCommand = command.toBinary(this.maxBsonSettings);\n        // Do we have a logger active log the event\n        if(this.logger != null && this.logger.doDebug) \n          this.logger.debug(\"writing command to mongodb\", {binary: binaryCommand, json: command});\n        // Write the binary command out to socket\n        this.writeSteam.write(binaryCommand);\n      } catch(err) {\n        return callback(err, null);\n      }\n    }\n  } catch (err) {\n    if(typeof callback === 'function') callback(err);\n  }\n}\n\n// Force the closure of the connection\nConnection.prototype.close = function() {\n  // clear out all the listeners\n  resetHandlers(this, true);\n  // Add a dummy error listener to catch any weird last moment errors (and ignore them)\n  this.connection.on(\"error\", function() {})\n  // destroy connection\n  this.connection.destroy();\n  if(this.logger != null && this.logger.doDebug){\n    this.logger.debug(\"closed connection\", this.connection);\n  }\n}\n\n// Reset all handlers\nvar resetHandlers = function(self, clearListeners) {\n  self.eventHandlers = {error:[], connect:[], close:[], end:[], timeout:[], parseError:[], message:[]};\n\n  // If we want to clear all the listeners\n  if(clearListeners && self.connection != null) {\n    var keys = Object.keys(self.eventHandlers);\n    // Remove all listeners\n    for(var i = 0; i < keys.length; i++) {\n      self.connection.removeAllListeners(keys[i]);\n    }\n  }\n}\n\n//\n// Handlers\n//\n\n// Connect handler\nvar connectHandler = function(self) {\n  return function(data) {\n    // Set connected\n    self.connected = true;\n    // Now that we are connected set the socket timeout\n    self.connection.setTimeout(self.socketOptions.socketTimeoutMS != null ? self.socketOptions.socketTimeoutMS : self.socketOptions.timeout);\n    // Emit the connect event with no error\n    self.emit(\"connect\", null, self);\n  }\n}\n\nvar createDataHandler = exports.Connection.createDataHandler = function(self) {\n  // We need to handle the parsing of the data\n  // and emit the messages when there is a complete one\n  return function(data) {\n    // Parse until we are done with the data\n    while(data.length > 0) {\n      // If we still have bytes to read on the current message\n      if(self.bytesRead > 0 && self.sizeOfMessage > 0) {\n        // Calculate the amount of remaining bytes\n        var remainingBytesToRead = self.sizeOfMessage - self.bytesRead;\n        // Check if the current chunk contains the rest of the message\n        if(remainingBytesToRead > data.length) {\n          // Copy the new data into the exiting buffer (should have been allocated when we know the message size)\n          data.copy(self.buffer, self.bytesRead);\n          // Adjust the number of bytes read so it point to the correct index in the buffer\n          self.bytesRead = self.bytesRead + data.length;\n\n          // Reset state of buffer\n          data = new Buffer(0);\n        } else {\n          // Copy the missing part of the data into our current buffer\n          data.copy(self.buffer, self.bytesRead, 0, remainingBytesToRead);\n          // Slice the overflow into a new buffer that we will then re-parse\n          data = data.slice(remainingBytesToRead);\n\n          // Emit current complete message\n          try {\n            var emitBuffer = self.buffer;\n            // Reset state of buffer\n            self.buffer = null;\n            self.sizeOfMessage = 0;\n            self.bytesRead = 0;\n            self.stubBuffer = null;\n            // Emit the buffer\n            self.emit(\"message\", emitBuffer, self);\n          } catch(err) {\n            var errorObject = {err:\"socketHandler\", trace:err, bin:self.buffer, parseState:{\n              sizeOfMessage:self.sizeOfMessage,\n              bytesRead:self.bytesRead,\n              stubBuffer:self.stubBuffer}};\n            if(self.logger != null && self.logger.doError) self.logger.error(\"parseError\", errorObject);\n            // We got a parse Error fire it off then keep going\n            self.emit(\"parseError\", errorObject, self);\n          }\n        }\n      } else {\n        // Stub buffer is kept in case we don't get enough bytes to determine the\n        // size of the message (< 4 bytes)\n        if(self.stubBuffer != null && self.stubBuffer.length > 0) {\n\n          // If we have enough bytes to determine the message size let's do it\n          if(self.stubBuffer.length + data.length > 4) {\n            // Prepad the data\n            var newData = new Buffer(self.stubBuffer.length + data.length);\n            self.stubBuffer.copy(newData, 0);\n            data.copy(newData, self.stubBuffer.length);\n            // Reassign for parsing\n            data = newData;\n\n            // Reset state of buffer\n            self.buffer = null;\n            self.sizeOfMessage = 0;\n            self.bytesRead = 0;\n            self.stubBuffer = null;\n\n          } else {\n\n            // Add the the bytes to the stub buffer\n            var newStubBuffer = new Buffer(self.stubBuffer.length + data.length);\n            // Copy existing stub buffer\n            self.stubBuffer.copy(newStubBuffer, 0);\n            // Copy missing part of the data\n            data.copy(newStubBuffer, self.stubBuffer.length);\n            // Exit parsing loop\n            data = new Buffer(0);\n          }\n        } else {\n          if(data.length > 4) {\n            // Retrieve the message size\n            var sizeOfMessage = binaryutils.decodeUInt32(data, 0);\n            // If we have a negative sizeOfMessage emit error and return\n            if(sizeOfMessage < 0 || sizeOfMessage > self.maxMessageSizeBytes) {\n              var errorObject = {err:\"socketHandler\", trace:'', bin:self.buffer, parseState:{\n                sizeOfMessage: sizeOfMessage,\n                bytesRead: self.bytesRead,\n                stubBuffer: self.stubBuffer}};\n              if(self.logger != null && self.logger.doError) self.logger.error(\"parseError\", errorObject);\n              // We got a parse Error fire it off then keep going\n              self.emit(\"parseError\", errorObject, self);\n              return;\n            }\n\n            // Ensure that the size of message is larger than 0 and less than the max allowed\n            if(sizeOfMessage > 4 && sizeOfMessage < self.maxMessageSizeBytes && sizeOfMessage > data.length) {\n              self.buffer = new Buffer(sizeOfMessage);\n              // Copy all the data into the buffer\n              data.copy(self.buffer, 0);\n              // Update bytes read\n              self.bytesRead = data.length;\n              // Update sizeOfMessage\n              self.sizeOfMessage = sizeOfMessage;\n              // Ensure stub buffer is null\n              self.stubBuffer = null;\n              // Exit parsing loop\n              data = new Buffer(0);\n\n            } else if(sizeOfMessage > 4 && sizeOfMessage < self.maxMessageSizeBytes && sizeOfMessage == data.length) {\n              try {\n                var emitBuffer = data;\n                // Reset state of buffer\n                self.buffer = null;\n                self.sizeOfMessage = 0;\n                self.bytesRead = 0;\n                self.stubBuffer = null;\n                // Exit parsing loop\n                data = new Buffer(0);\n                // Emit the message\n                self.emit(\"message\", emitBuffer, self);\n              } catch (err) {\n                var errorObject = {err:\"socketHandler\", trace:err, bin:self.buffer, parseState:{\n                  sizeOfMessage:self.sizeOfMessage,\n                  bytesRead:self.bytesRead,\n                  stubBuffer:self.stubBuffer}};\n                if(self.logger != null && self.logger.doError) self.logger.error(\"parseError\", errorObject);\n                // We got a parse Error fire it off then keep going\n                self.emit(\"parseError\", errorObject, self);\n              }\n            } else if(sizeOfMessage <= 4 || sizeOfMessage > self.maxMessageSizeBytes) {\n              var errorObject = {err:\"socketHandler\", trace:null, bin:data, parseState:{\n                sizeOfMessage:sizeOfMessage,\n                bytesRead:0,\n                buffer:null,\n                stubBuffer:null}};\n              if(self.logger != null && self.logger.doError) self.logger.error(\"parseError\", errorObject);\n              // We got a parse Error fire it off then keep going\n              self.emit(\"parseError\", errorObject, self);\n\n              // Clear out the state of the parser\n              self.buffer = null;\n              self.sizeOfMessage = 0;\n              self.bytesRead = 0;\n              self.stubBuffer = null;\n              // Exit parsing loop\n              data = new Buffer(0);\n\n            } else {\n              try {\n                var emitBuffer = data.slice(0, sizeOfMessage);\n                // Reset state of buffer\n                self.buffer = null;\n                self.sizeOfMessage = 0;\n                self.bytesRead = 0;\n                self.stubBuffer = null;\n                // Copy rest of message\n                data = data.slice(sizeOfMessage);\n                // Emit the message\n                self.emit(\"message\", emitBuffer, self);\n              } catch (err) {\n                var errorObject = {err:\"socketHandler\", trace:err, bin:self.buffer, parseState:{\n                  sizeOfMessage:sizeOfMessage,\n                  bytesRead:self.bytesRead,\n                  stubBuffer:self.stubBuffer}};\n                if(self.logger != null && self.logger.doError) self.logger.error(\"parseError\", errorObject);\n                // We got a parse Error fire it off then keep going\n                self.emit(\"parseError\", errorObject, self);\n              }\n\n            }\n          } else {\n            // Create a buffer that contains the space for the non-complete message\n            self.stubBuffer = new Buffer(data.length)\n            // Copy the data to the stub buffer\n            data.copy(self.stubBuffer, 0);\n            // Exit parsing loop\n            data = new Buffer(0);\n          }\n        }\n      }\n    }\n  }\n}\n\nvar endHandler = function(self) {\n  return function() {\n    // Set connected to false\n    self.connected = false;\n    // Emit end event\n    self.emit(\"end\", {err: 'connection received Fin packet from [' + self.socketOptions.host + ':' + self.socketOptions.port + ']'}, self);\n  }\n}\n\nvar timeoutHandler = function(self) {\n  return function() {\n    // Set connected to false\n    self.connected = false;\n    // Emit timeout event\n    self.emit(\"timeout\", {err: 'connection to [' + self.socketOptions.host + ':' + self.socketOptions.port + '] timed out'}, self);\n  }\n}\n\nvar drainHandler = function(self) {\n  return function() {\n  }\n}\n\nvar errorHandler = function(self) {\n  return function(err) {\n    self.connection.destroy();\n    // Set connected to false\n    self.connected = false;\n    // Emit error\n    self.emit(\"error\", {err: 'failed to connect to [' + self.socketOptions.host + ':' + self.socketOptions.port + ']'}, self);\n  }\n}\n\nvar closeHandler = function(self) {\n  return function(hadError) {\n    // If we have an error during the connection phase\n    if(hadError && !self.connected) {\n      // Set disconnected\n      self.connected = false;\n      // Emit error\n      self.emit(\"error\", {err: 'failed to connect to [' + self.socketOptions.host + ':' + self.socketOptions.port + ']'}, self);\n    } else {\n      // Set disconnected\n      self.connected = false;\n      // Emit close\n      self.emit(\"close\", {err: 'connection closed to [' + self.socketOptions.host + ':' + self.socketOptions.port + ']'}, self);\n    }\n  }\n}\n\n// Some basic defaults\nConnection.DEFAULT_PORT = 27017;\n\n\n\n\n\n\n\n"};
jalangiLabel1917:
    while (true) {
        try {
            J$.Se(12769, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/connection.js');
            J$.N(12777, '__secret__S$', __secret__S$, 0);
            J$.N(12785, '__secret__traits__', __secret__traits__, 0);
            J$.N(12793, 'utils', utils, 0);
            J$.N(12801, 'inherits', inherits, 0);
            J$.N(12809, 'net', net, 0);
            J$.N(12817, 'EventEmitter', EventEmitter, 0);
            J$.N(12825, 'binaryutils', binaryutils, 0);
            J$.N(12833, 'tls', tls, 0);
            J$.N(12841, 'Connection', Connection, 0);
            J$.N(12849, 'resetHandlers', resetHandlers, 0);
            J$.N(12857, 'connectHandler', connectHandler, 0);
            J$.N(12865, 'createDataHandler', createDataHandler, 0);
            J$.N(12873, 'endHandler', endHandler, 0);
            J$.N(12881, 'timeoutHandler', timeoutHandler, 0);
            J$.N(12889, 'drainHandler', drainHandler, 0);
            J$.N(12897, 'errorHandler', errorHandler, 0);
            J$.N(12905, 'closeHandler', closeHandler, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var utils = J$.X1(281, J$.W(273, 'utils', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './connection_utils', 21, false)), utils, 3)), inherits = J$.X1(297, J$.W(289, 'inherits', J$.G(129, J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, 'util', 21, false)), 'inherits', 0), inherits, 3)), net = J$.X1(313, J$.W(305, 'net', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'net', 21, false)), net, 3)), EventEmitter = J$.X1(329, J$.W(321, 'EventEmitter', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), inherits = J$.X1(345, J$.W(337, 'inherits', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, 'util', 21, false)), 'inherits', 0), inherits, 3)), binaryutils = J$.X1(361, J$.W(353, 'binaryutils', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../utils', 21, false)), binaryutils, 3)), tls = J$.X1(377, J$.W(369, 'tls', J$.F(265, J$.R(249, 'require', require, 2), 0)(J$.T(257, 'tls', 21, false)), tls, 3));
            var Connection = J$.X1(1705, J$.W(1697, 'Connection', J$.P(1689, J$.R(385, 'exports', exports, 2), 'Connection', J$.T(1681, function (id, socketOptions) {
                jalangiLabel1893:
                    while (true) {
                        try {
                            J$.Fe(1641, arguments.callee, this, arguments);
                            arguments = J$.N(1649, 'arguments', arguments, 4);
                            id = J$.N(1657, 'id', id, 4);
                            socketOptions = J$.N(1665, 'socketOptions', socketOptions, 4);
                            J$.N(1673, 'self', self, 0);
                            var self = J$.X1(409, J$.W(401, 'self', J$.R(393, 'this', this, 0), self, 1));
                            J$.X1(441, J$.M(433, J$.R(417, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(425, 'this', this, 0)));
                            J$.X1(513, J$.P(505, J$.R(449, 'this', this, 0), 'socketOptions', J$.X1(12913, J$.C(8, J$.R(457, 'socketOptions', socketOptions, 0))) ? J$.R(465, 'socketOptions', socketOptions, 0) : J$.T(497, {
                                host: J$.T(473, 'localhost', 21, false),
                                port: J$.T(481, 27017, 22, false),
                                domainSocket: J$.T(489, false, 23, false)
                            }, 11, false), 0));
                            if (J$.X1(12921, J$.C(32, J$.C(24, J$.B(10, '==', J$.G(537, J$.G(529, J$.R(521, 'this', this, 0), 'socketOptions', 0), 'keepAlive', 0), J$.T(545, null, 25, false), 0)) ? J$.U(34, '!', J$.C(16, J$.B(18, '==', J$.G(561, J$.R(553, 'process', process, 2), 'platform', 0), J$.T(569, 'sunos', 21, false), 0)) ? J$._() : J$.B(26, '==', J$.G(585, J$.R(577, 'process', process, 2), 'platform', 0), J$.T(593, 'win32', 21, false), 0)) : J$._())))
                                J$.X1(633, J$.P(625, J$.G(609, J$.R(601, 'this', this, 0), 'socketOptions', 0), 'keepAlive', J$.T(617, 100, 22, false), 0));
                            J$.X1(665, J$.P(657, J$.R(641, 'this', this, 0), 'id', J$.R(649, 'id', id, 0), 0));
                            J$.X1(697, J$.P(689, J$.R(673, 'this', this, 0), 'connected', J$.T(681, false, 23, false), 0));
                            J$.X1(745, J$.P(737, J$.R(705, 'this', this, 0), 'domainSocket', J$.G(729, J$.G(721, J$.R(713, 'this', this, 0), 'socketOptions', 0), 'domainSocket', 0), 0));
                            J$.X1(777, J$.P(769, J$.R(753, 'this', this, 0), 'minWireVersion', J$.T(761, 0, 22, false), 0));
                            J$.X1(809, J$.P(801, J$.R(785, 'this', this, 0), 'maxWireVersion', J$.T(793, 3, 22, false), 0));
                            J$.X1(881, J$.P(873, J$.R(817, 'this', this, 0), 'maxBsonSize', J$.X1(12929, J$.C(40, J$.G(833, J$.R(825, 'socketOptions', socketOptions, 0), 'maxBsonSize', 0))) ? J$.G(849, J$.R(841, 'socketOptions', socketOptions, 0), 'maxBsonSize', 0) : J$.G(865, J$.R(857, 'Connection', Connection, 1), 'DEFAULT_MAX_BSON_SIZE', 0), 0));
                            J$.X1(953, J$.P(945, J$.R(889, 'this', this, 0), 'maxMessageSizeBytes', J$.X1(12937, J$.C(48, J$.G(905, J$.R(897, 'socketOptions', socketOptions, 0), 'maxMessageSizeBytes', 0))) ? J$.G(921, J$.R(913, 'socketOptions', socketOptions, 0), 'maxMessageSizeBytes', 0) : J$.G(937, J$.R(929, 'Connection', Connection, 1), 'DEFAULT_MAX_MESSAGE_SIZE', 0), 0));
                            J$.X1(1025, J$.P(1017, J$.R(961, 'this', this, 0), 'maxNumberOfDocsInBatch', J$.X1(12945, J$.C(56, J$.G(977, J$.R(969, 'socketOptions', socketOptions, 0), 'maxWriteBatchSize', 0))) ? J$.G(993, J$.R(985, 'socketOptions', socketOptions, 0), 'maxWriteBatchSize', 0) : J$.G(1009, J$.R(1001, 'Connection', Connection, 1), 'DEFAULT_MAX_WRITE_BATCH_SIZE', 0), 0));
                            J$.X1(1057, J$.P(1049, J$.R(1033, 'this', this, 0), 'buffer', J$.T(1041, null, 25, false), 0));
                            J$.X1(1089, J$.P(1081, J$.R(1065, 'this', this, 0), 'sizeOfMessage', J$.T(1073, 0, 22, false), 0));
                            J$.X1(1121, J$.P(1113, J$.R(1097, 'this', this, 0), 'bytesRead', J$.T(1105, 0, 22, false), 0));
                            J$.X1(1153, J$.P(1145, J$.R(1129, 'this', this, 0), 'stubBuffer', J$.T(1137, 0, 22, false), 0));
                            J$.X1(1241, J$.P(1233, J$.R(1161, 'this', this, 0), 'eventHandlers', J$.T(1225, {
                                error: J$.T(1169, [], 10, false),
                                parseError: J$.T(1177, [], 10, false),
                                poolReady: J$.T(1185, [], 10, false),
                                message: J$.T(1193, [], 10, false),
                                close: J$.T(1201, [], 10, false),
                                timeout: J$.T(1209, [], 10, false),
                                end: J$.T(1217, [], 10, false)
                            }, 11, false), 0));
                            J$.X1(1281, J$.F(1273, J$.R(1249, 'resetHandlers', resetHandlers, 1), 0)(J$.R(1257, 'this', this, 0), J$.T(1265, false, 23, false)));
                            J$.X1(1385, J$.P(1377, J$.R(1289, 'this', this, 0), 'maxBsonSettings', J$.T(1369, {
                                disableDriverBSONSizeCheck: J$.C(64, J$.G(1321, J$.G(1305, J$.R(1297, 'this', this, 0), 'socketOptions', 0), J$.T(1313, 'disableDriverBSONSizeCheck', 21, false), 4)) ? J$._() : J$.T(1329, false, 23, false),
                                maxBsonSize: J$.G(1345, J$.R(1337, 'this', this, 0), 'maxBsonSize', 0),
                                maxMessageSizeBytes: J$.G(1361, J$.R(1353, 'this', this, 0), 'maxMessageSizeBytes', 0)
                            }, 11, false), 0));
                            J$.X1(1633, J$.M(1625, J$.R(1393, 'Object', Object, 2), 'defineProperty', 0)(J$.R(1401, 'this', this, 0), J$.T(1409, 'socketTimeoutMS', 21, false), J$.T(1617, {
                                enumerable: J$.T(1417, true, 23, false),
                                get: J$.T(1481, function () {
                                    jalangiLabel1891:
                                        while (true) {
                                            try {
                                                J$.Fe(1465, arguments.callee, this, arguments);
                                                arguments = J$.N(1473, 'arguments', arguments, 4);
                                                return J$.X1(1457, J$.Rt(1449, J$.G(1441, J$.G(1433, J$.R(1425, 'self', self, 0), 'socketOptions', 0), 'socketTimeoutMS', 0)));
                                            } catch (J$e) {
                                                J$.Ex(12953, J$e);
                                            } finally {
                                                if (J$.Fr(12961))
                                                    continue jalangiLabel1891;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1465),
                                set: J$.T(1609, function (value) {
                                    jalangiLabel1892:
                                        while (true) {
                                            try {
                                                J$.Fe(1585, arguments.callee, this, arguments);
                                                arguments = J$.N(1593, 'arguments', arguments, 4);
                                                value = J$.N(1601, 'value', value, 4);
                                                J$.X1(1521, J$.P(1513, J$.G(1497, J$.R(1489, 'self', self, 0), 'socketOptions', 0), 'socketTimeoutMS', J$.R(1505, 'value', value, 0), 0));
                                                J$.X1(1577, J$.M(1569, J$.G(1537, J$.R(1529, 'self', self, 0), 'connection', 0), 'setTimeout', 0)(J$.G(1561, J$.G(1553, J$.R(1545, 'self', self, 0), 'socketOptions', 0), 'socketTimeoutMS', 0)));
                                            } catch (J$e) {
                                                J$.Ex(12969, J$e);
                                            } finally {
                                                if (J$.Fr(12977))
                                                    continue jalangiLabel1892;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 1585)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(12985, J$e);
                        } finally {
                            if (J$.Fr(12993))
                                continue jalangiLabel1893;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1641), 0), Connection, 3));
            J$.X1(1753, J$.P(1745, J$.R(1713, 'Connection', Connection, 1), 'DEFAULT_MAX_BSON_SIZE', J$.B(50, '*', J$.B(42, '*', J$.T(1721, 1024, 22, false), J$.T(1729, 1024, 22, false), 0), J$.T(1737, 4, 22, false), 0), 0));
            J$.X1(1793, J$.P(1785, J$.R(1761, 'Connection', Connection, 1), 'DEFAULT_MAX_MESSAGE_SIZE', J$.G(1777, J$.R(1769, 'Connection', Connection, 1), 'DEFAULT_MAX_BSON_SIZE', 0), 0));
            J$.X1(1825, J$.P(1817, J$.R(1801, 'Connection', Connection, 1), 'DEFAULT_MAX_WRITE_BATCH_SIZE', J$.T(1809, 2000, 22, false), 0));
            J$.X1(1865, J$.F(1857, J$.R(1833, 'inherits', inherits, 1), 0)(J$.R(1841, 'Connection', Connection, 1), J$.R(1849, 'EventEmitter', EventEmitter, 1)));
            J$.X1(4913, J$.P(4905, J$.G(1881, J$.R(1873, 'Connection', Connection, 1), 'prototype', 0), 'start', J$.T(4897, function () {
                jalangiLabel1895:
                    while (true) {
                        try {
                            J$.Fe(4849, arguments.callee, this, arguments);
                            arguments = J$.N(4857, 'arguments', arguments, 4);
                            J$.N(4865, 'self', self, 0);
                            J$.N(4873, 'validate_certificates', validate_certificates, 0);
                            J$.N(4881, 'tls_options', tls_options, 0);
                            J$.N(4889, 'cleartext', cleartext, 0);
                            var self = J$.X1(1905, J$.W(1897, 'self', J$.R(1889, 'this', this, 0), self, 1));
                            if (J$.X1(13153, J$.C(232, J$.G(1929, J$.G(1921, J$.R(1913, 'this', this, 0), 'socketOptions', 0), 'ssl', 0)))) {
                                if (J$.X1(13001, J$.C(72, J$.G(1945, J$.R(1937, 'this', this, 0), 'domainSocket', 0)))) {
                                    J$.X1(2009, J$.P(2001, J$.R(1953, 'this', this, 0), 'connection', J$.M(1993, J$.R(1961, 'net', net, 1), 'createConnection', 0)(J$.G(1985, J$.G(1977, J$.R(1969, 'this', this, 0), 'socketOptions', 0), 'host', 0)), 0));
                                } else {
                                    J$.X1(2097, J$.P(2089, J$.R(2017, 'this', this, 0), 'connection', J$.M(2081, J$.R(2025, 'net', net, 1), 'createConnection', 0)(J$.G(2049, J$.G(2041, J$.R(2033, 'this', this, 0), 'socketOptions', 0), 'port', 0), J$.G(2073, J$.G(2065, J$.R(2057, 'this', this, 0), 'socketOptions', 0), 'host', 0)), 0));
                                }
                                if (J$.X1(13009, J$.C(88, J$.C(80, J$.B(58, '!=', J$.G(2113, J$.R(2105, 'this', this, 0), 'logger', 0), J$.T(2121, null, 25, false), 0)) ? J$.G(2145, J$.G(2137, J$.R(2129, 'this', this, 0), 'logger', 0), 'doDebug', 0) : J$._()))) {
                                    J$.X1(2201, J$.M(2193, J$.G(2161, J$.R(2153, 'this', this, 0), 'logger', 0), 'debug', 0)(J$.T(2169, 'opened connection', 21, false), J$.G(2185, J$.R(2177, 'this', this, 0), 'socketOptions', 0)));
                                }
                                J$.X1(2313, J$.M(2305, J$.G(2217, J$.R(2209, 'this', this, 0), 'connection', 0), 'setTimeout', 0)(J$.X1(13017, J$.C(96, J$.B(66, '!=', J$.G(2241, J$.G(2233, J$.R(2225, 'this', this, 0), 'socketOptions', 0), 'connectTimeoutMS', 0), J$.T(2249, null, 25, false), 0))) ? J$.G(2273, J$.G(2265, J$.R(2257, 'this', this, 0), 'socketOptions', 0), 'connectTimeoutMS', 0) : J$.G(2297, J$.G(2289, J$.R(2281, 'this', this, 0), 'socketOptions', 0), 'timeout', 0)));
                                if (J$.X1(13025, J$.C(104, J$.B(82, '==', J$.M(2345, J$.G(2329, J$.R(2321, 'process', process, 2), 'version', 0), 'indexOf', 0)(J$.T(2337, 'v0.4', 21, false)), J$.U(74, '-', J$.T(2353, 1, 22, false)), 0))))
                                    J$.X1(2409, J$.M(2401, J$.G(2369, J$.R(2361, 'this', this, 0), 'connection', 0), 'setNoDelay', 0)(J$.G(2393, J$.G(2385, J$.R(2377, 'this', this, 0), 'socketOptions', 0), 'noDelay', 0)));
                                if (J$.X1(13041, J$.C(120, J$.B(98, '==', J$.M(2441, J$.G(2425, J$.R(2417, 'process', process, 2), 'version', 0), 'indexOf', 0)(J$.T(2433, 'v0.4', 21, false)), J$.U(90, '-', J$.T(2449, 1, 22, false)), 0)))) {
                                    if (J$.X1(13033, J$.C(112, J$.B(106, '>', J$.G(2473, J$.G(2465, J$.R(2457, 'this', this, 0), 'socketOptions', 0), 'keepAlive', 0), J$.T(2481, 0, 22, false), 0)))) {
                                        J$.X1(2545, J$.M(2537, J$.G(2497, J$.R(2489, 'this', this, 0), 'connection', 0), 'setKeepAlive', 0)(J$.T(2505, true, 23, false), J$.G(2529, J$.G(2521, J$.R(2513, 'this', this, 0), 'socketOptions', 0), 'keepAlive', 0)));
                                    } else {
                                        J$.X1(2585, J$.M(2577, J$.G(2561, J$.R(2553, 'this', this, 0), 'connection', 0), 'setKeepAlive', 0)(J$.T(2569, false, 23, false)));
                                    }
                                }
                                var validate_certificates = J$.X1(2649, J$.W(2641, 'validate_certificates', J$.X1(13049, J$.C(128, J$.B(114, '==', J$.G(2609, J$.G(2601, J$.R(2593, 'this', this, 0), 'socketOptions', 0), 'sslValidate', 0), J$.T(2617, true, 23, false), 0))) ? J$.T(2625, true, 23, false) : J$.T(2633, false, 23, false), validate_certificates, 1));
                                var tls_options = J$.X1(2697, J$.W(2689, 'tls_options', J$.T(2681, {
                                    socket: J$.G(2665, J$.R(2657, 'this', this, 0), 'connection', 0),
                                    rejectUnauthorized: J$.T(2673, false, 23, false)
                                }, 11, false), tls_options, 1));
                                if (J$.X1(13057, J$.C(136, J$.R(2705, 'validate_certificates', validate_certificates, 0)))) {
                                    J$.X1(2753, J$.P(2745, J$.R(2713, 'tls_options', tls_options, 0), 'ca', J$.G(2737, J$.G(2729, J$.R(2721, 'this', this, 0), 'socketOptions', 0), 'sslCA', 0), 0));
                                }
                                if (J$.X1(13065, J$.C(144, J$.G(2777, J$.G(2769, J$.R(2761, 'this', this, 0), 'socketOptions', 0), 'sslCert', 0)))) {
                                    J$.X1(2825, J$.P(2817, J$.R(2785, 'tls_options', tls_options, 0), 'cert', J$.G(2809, J$.G(2801, J$.R(2793, 'this', this, 0), 'socketOptions', 0), 'sslCert', 0), 0));
                                    J$.X1(2873, J$.P(2865, J$.R(2833, 'tls_options', tls_options, 0), 'key', J$.G(2857, J$.G(2849, J$.R(2841, 'this', this, 0), 'socketOptions', 0), 'sslKey', 0), 0));
                                }
                                if (J$.X1(13073, J$.C(152, J$.G(2897, J$.G(2889, J$.R(2881, 'this', this, 0), 'socketOptions', 0), 'sslPass', 0)))) {
                                    J$.X1(2945, J$.P(2937, J$.R(2905, 'tls_options', tls_options, 0), 'passphrase', J$.G(2929, J$.G(2921, J$.R(2913, 'this', this, 0), 'socketOptions', 0), 'sslPass', 0), 0));
                                }
                                var cleartext = J$.X1(2969, J$.W(2961, 'cleartext', J$.T(2953, null, 25, false), cleartext, 1));
                                try {
                                    J$.X1(3225, cleartext = J$.W(3217, 'cleartext', J$.M(3209, J$.R(2977, 'tls', tls, 1), 'connect', 0)(J$.G(3001, J$.G(2993, J$.R(2985, 'this', this, 0), 'socketOptions', 0), 'port', 0), J$.G(3025, J$.G(3017, J$.R(3009, 'this', this, 0), 'socketOptions', 0), 'host', 0), J$.R(3033, 'tls_options', tls_options, 0), J$.T(3201, function () {
                                        jalangiLabel1894:
                                            while (true) {
                                                try {
                                                    J$.Fe(3185, arguments.callee, this, arguments);
                                                    arguments = J$.N(3193, 'arguments', arguments, 4);
                                                    if (J$.X1(13081, J$.C(168, J$.C(160, J$.G(3049, J$.R(3041, 'cleartext', cleartext, 0), 'authorizationError', 0)) ? J$.R(3057, 'validate_certificates', validate_certificates, 0) : J$._()))) {
                                                        return J$.X1(3137, J$.Rt(3129, J$.M(3121, J$.R(3065, 'self', self, 0), 'emit', 0)(J$.T(3073, 'error', 21, false), J$.G(3089, J$.R(3081, 'cleartext', cleartext, 0), 'authorizationError', 0), J$.R(3097, 'self', self, 0), J$.T(3113, {
                                                            ssl: J$.T(3105, true, 23, false)
                                                        }, 11, false))));
                                                    }
                                                    J$.X1(3177, J$.F(3169, J$.F(3161, J$.R(3145, 'connectHandler', connectHandler, 1), 0)(J$.R(3153, 'self', self, 0)), 0)());
                                                } catch (J$e) {
                                                    J$.Ex(13089, J$e);
                                                } finally {
                                                    if (J$.Fr(13097))
                                                        continue jalangiLabel1894;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 3185)), cleartext, 0));
                                } catch (err) {
                                    err = J$.N(3305, 'err', err, 1);
                                    return J$.X1(3297, J$.Rt(3289, J$.M(3281, J$.R(3233, 'self', self, 0), 'emit', 0)(J$.T(3241, 'error', 21, false), J$.T(3249, 'SSL connection failed', 21, false), J$.R(3257, 'self', self, 0), J$.T(3273, {
                                        ssl: J$.T(3265, true, 23, false)
                                    }, 11, false))));
                                }
                                J$.X1(3337, J$.P(3329, J$.R(3313, 'this', this, 0), 'writeSteam', J$.R(3321, 'cleartext', cleartext, 0), 0));
                                J$.X1(3393, J$.M(3385, J$.R(3345, 'cleartext', cleartext, 0), 'on', 0)(J$.T(3353, 'data', 21, false), J$.F(3377, J$.R(3361, 'createDataHandler', createDataHandler, 1), 0)(J$.R(3369, 'this', this, 0))));
                                J$.X1(3449, J$.M(3441, J$.R(3401, 'cleartext', cleartext, 0), 'on', 0)(J$.T(3409, 'end', 21, false), J$.F(3433, J$.R(3417, 'endHandler', endHandler, 1), 0)(J$.R(3425, 'this', this, 0))));
                                J$.X1(3505, J$.M(3497, J$.R(3457, 'cleartext', cleartext, 0), 'on', 0)(J$.T(3465, 'error', 21, false), J$.F(3489, J$.R(3473, 'errorHandler', errorHandler, 1), 0)(J$.R(3481, 'this', this, 0))));
                                J$.X1(3569, J$.M(3561, J$.G(3521, J$.R(3513, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(3529, 'error', 21, false), J$.F(3553, J$.R(3537, 'errorHandler', errorHandler, 1), 0)(J$.R(3545, 'this', this, 0))));
                                J$.X1(3633, J$.M(3625, J$.G(3585, J$.R(3577, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(3593, 'timeout', 21, false), J$.F(3617, J$.R(3601, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(3609, 'this', this, 0))));
                                J$.X1(3697, J$.M(3689, J$.G(3649, J$.R(3641, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(3657, 'drain', 21, false), J$.F(3681, J$.R(3665, 'drainHandler', drainHandler, 1), 0)(J$.R(3673, 'this', this, 0))));
                                J$.X1(3761, J$.M(3753, J$.G(3713, J$.R(3705, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(3721, 'close', 21, false), J$.F(3745, J$.R(3729, 'closeHandler', closeHandler, 1), 0)(J$.R(3737, 'this', this, 0))));
                            } else {
                                if (J$.X1(13105, J$.C(176, J$.G(3777, J$.R(3769, 'this', this, 0), 'domainSocket', 0)))) {
                                    J$.X1(3841, J$.P(3833, J$.R(3785, 'this', this, 0), 'connection', J$.M(3825, J$.R(3793, 'net', net, 1), 'createConnection', 0)(J$.G(3817, J$.G(3809, J$.R(3801, 'this', this, 0), 'socketOptions', 0), 'host', 0)), 0));
                                } else {
                                    J$.X1(3929, J$.P(3921, J$.R(3849, 'this', this, 0), 'connection', J$.M(3913, J$.R(3857, 'net', net, 1), 'createConnection', 0)(J$.G(3881, J$.G(3873, J$.R(3865, 'this', this, 0), 'socketOptions', 0), 'port', 0), J$.G(3905, J$.G(3897, J$.R(3889, 'this', this, 0), 'socketOptions', 0), 'host', 0)), 0));
                                }
                                if (J$.X1(13113, J$.C(192, J$.C(184, J$.B(122, '!=', J$.G(3945, J$.R(3937, 'this', this, 0), 'logger', 0), J$.T(3953, null, 25, false), 0)) ? J$.G(3977, J$.G(3969, J$.R(3961, 'this', this, 0), 'logger', 0), 'doDebug', 0) : J$._()))) {
                                    J$.X1(4033, J$.M(4025, J$.G(3993, J$.R(3985, 'this', this, 0), 'logger', 0), 'debug', 0)(J$.T(4001, 'opened connection', 21, false), J$.G(4017, J$.R(4009, 'this', this, 0), 'socketOptions', 0)));
                                }
                                J$.X1(4145, J$.M(4137, J$.G(4049, J$.R(4041, 'this', this, 0), 'connection', 0), 'setTimeout', 0)(J$.X1(13121, J$.C(200, J$.B(130, '!=', J$.G(4073, J$.G(4065, J$.R(4057, 'this', this, 0), 'socketOptions', 0), 'connectTimeoutMS', 0), J$.T(4081, null, 25, false), 0))) ? J$.G(4105, J$.G(4097, J$.R(4089, 'this', this, 0), 'socketOptions', 0), 'connectTimeoutMS', 0) : J$.G(4129, J$.G(4121, J$.R(4113, 'this', this, 0), 'socketOptions', 0), 'timeout', 0)));
                                if (J$.X1(13129, J$.C(208, J$.B(146, '==', J$.M(4177, J$.G(4161, J$.R(4153, 'process', process, 2), 'version', 0), 'indexOf', 0)(J$.T(4169, 'v0.4', 21, false)), J$.U(138, '-', J$.T(4185, 1, 22, false)), 0))))
                                    J$.X1(4241, J$.M(4233, J$.G(4201, J$.R(4193, 'this', this, 0), 'connection', 0), 'setNoDelay', 0)(J$.G(4225, J$.G(4217, J$.R(4209, 'this', this, 0), 'socketOptions', 0), 'noDelay', 0)));
                                if (J$.X1(13145, J$.C(224, J$.B(162, '==', J$.M(4273, J$.G(4257, J$.R(4249, 'process', process, 2), 'version', 0), 'indexOf', 0)(J$.T(4265, 'v0.4', 21, false)), J$.U(154, '-', J$.T(4281, 1, 22, false)), 0)))) {
                                    if (J$.X1(13137, J$.C(216, J$.B(170, '>', J$.G(4305, J$.G(4297, J$.R(4289, 'this', this, 0), 'socketOptions', 0), 'keepAlive', 0), J$.T(4313, 0, 22, false), 0)))) {
                                        J$.X1(4377, J$.M(4369, J$.G(4329, J$.R(4321, 'this', this, 0), 'connection', 0), 'setKeepAlive', 0)(J$.T(4337, true, 23, false), J$.G(4361, J$.G(4353, J$.R(4345, 'this', this, 0), 'socketOptions', 0), 'keepAlive', 0)));
                                    } else {
                                        J$.X1(4417, J$.M(4409, J$.G(4393, J$.R(4385, 'this', this, 0), 'connection', 0), 'setKeepAlive', 0)(J$.T(4401, false, 23, false)));
                                    }
                                }
                                J$.X1(4457, J$.P(4449, J$.R(4425, 'this', this, 0), 'writeSteam', J$.G(4441, J$.R(4433, 'this', this, 0), 'connection', 0), 0));
                                J$.X1(4521, J$.M(4513, J$.G(4473, J$.R(4465, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(4481, 'error', 21, false), J$.F(4505, J$.R(4489, 'errorHandler', errorHandler, 1), 0)(J$.R(4497, 'this', this, 0))));
                                J$.X1(4585, J$.M(4577, J$.G(4537, J$.R(4529, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(4545, 'connect', 21, false), J$.F(4569, J$.R(4553, 'connectHandler', connectHandler, 1), 0)(J$.R(4561, 'this', this, 0))));
                                J$.X1(4649, J$.M(4641, J$.G(4601, J$.R(4593, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(4609, 'data', 21, false), J$.F(4633, J$.R(4617, 'createDataHandler', createDataHandler, 1), 0)(J$.R(4625, 'this', this, 0))));
                                J$.X1(4713, J$.M(4705, J$.G(4665, J$.R(4657, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(4673, 'timeout', 21, false), J$.F(4697, J$.R(4681, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(4689, 'this', this, 0))));
                                J$.X1(4777, J$.M(4769, J$.G(4729, J$.R(4721, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(4737, 'drain', 21, false), J$.F(4761, J$.R(4745, 'drainHandler', drainHandler, 1), 0)(J$.R(4753, 'this', this, 0))));
                                J$.X1(4841, J$.M(4833, J$.G(4793, J$.R(4785, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(4801, 'close', 21, false), J$.F(4825, J$.R(4809, 'closeHandler', closeHandler, 1), 0)(J$.R(4817, 'this', this, 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(13161, J$e);
                        } finally {
                            if (J$.Fr(13169))
                                continue jalangiLabel1895;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4849), 0));
            J$.X1(5201, J$.P(5193, J$.G(4929, J$.R(4921, 'Connection', Connection, 1), 'prototype', 0), 'setSocketOptions', J$.T(5185, function (options) {
                jalangiLabel1896:
                    while (true) {
                        try {
                            J$.Fe(5161, arguments.callee, this, arguments);
                            arguments = J$.N(5169, 'arguments', arguments, 4);
                            options = J$.N(5177, 'options', options, 4);
                            J$.X1(4961, options = J$.W(4953, 'options', J$.C(240, J$.R(4937, 'options', options, 0)) ? J$._() : J$.T(4945, {}, 11, false), options, 0));
                            if (J$.X1(13177, J$.C(248, J$.B(186, '==', J$.U(178, 'typeof', J$.G(4977, J$.R(4969, 'options', options, 0), 'connectTimeoutMS', 0)), J$.T(4985, 'number', 21, false), 0)))) {
                                J$.X1(5033, J$.P(5025, J$.G(5001, J$.R(4993, 'this', this, 0), 'socketOptions', 0), 'connectTimeoutMS', J$.G(5017, J$.R(5009, 'options', options, 0), 'connectTimeoutMS', 0), 0));
                            }
                            if (J$.X1(13185, J$.C(256, J$.B(202, '==', J$.U(194, 'typeof', J$.G(5049, J$.R(5041, 'options', options, 0), 'socketTimeoutMS', 0)), J$.T(5057, 'number', 21, false), 0)))) {
                                J$.X1(5105, J$.P(5097, J$.G(5073, J$.R(5065, 'this', this, 0), 'socketOptions', 0), 'socketTimeoutMS', J$.G(5089, J$.R(5081, 'options', options, 0), 'socketTimeoutMS', 0), 0));
                                J$.X1(5153, J$.M(5145, J$.G(5121, J$.R(5113, 'this', this, 0), 'connection', 0), 'setTimeout', 0)(J$.G(5137, J$.R(5129, 'options', options, 0), 'socketTimeoutMS', 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(13193, J$e);
                        } finally {
                            if (J$.Fr(13201))
                                continue jalangiLabel1896;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5161), 0));
            J$.X1(5337, J$.P(5329, J$.G(5217, J$.R(5209, 'Connection', Connection, 1), 'prototype', 0), 'isConnected', J$.T(5321, function () {
                jalangiLabel1897:
                    while (true) {
                        try {
                            J$.Fe(5305, arguments.callee, this, arguments);
                            arguments = J$.N(5313, 'arguments', arguments, 4);
                            return J$.X1(5297, J$.Rt(5289, J$.C(272, J$.C(264, J$.G(5233, J$.R(5225, 'this', this, 0), 'connected', 0)) ? J$.U(210, '!', J$.G(5257, J$.G(5249, J$.R(5241, 'this', this, 0), 'connection', 0), 'destroyed', 0)) : J$._()) ? J$.G(5281, J$.G(5273, J$.R(5265, 'this', this, 0), 'connection', 0), 'writable', 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(13209, J$e);
                        } finally {
                            if (J$.Fr(13217))
                                continue jalangiLabel1897;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5305), 0));
            J$.X1(5657, J$.P(5649, J$.G(5353, J$.R(5345, 'Connection', Connection, 1), 'prototype', 0), 'isCompatible', J$.T(5641, function () {
                jalangiLabel1898:
                    while (true) {
                        try {
                            J$.Fe(5625, arguments.callee, this, arguments);
                            arguments = J$.N(5633, 'arguments', arguments, 4);
                            if (J$.X1(13225, J$.C(280, J$.B(218, '==', J$.G(5369, J$.R(5361, 'this', this, 0), 'serverCapabilities', 0), J$.T(5377, null, 25, false), 0))))
                                return J$.X1(5401, J$.Rt(5393, J$.T(5385, true, 23, false)));
                            if (J$.X1(13233, J$.C(296, J$.C(288, J$.B(226, '==', J$.G(5425, J$.G(5417, J$.R(5409, 'this', this, 0), 'serverCapabilities', 0), 'minWireVersion', 0), J$.T(5433, 0, 22, false), 0)) ? J$.B(234, '==', J$.G(5457, J$.G(5449, J$.R(5441, 'this', this, 0), 'serverCapabilities', 0), 'maxWireVersion', 0), J$.T(5465, 0, 22, false), 0) : J$._())))
                                return J$.X1(5489, J$.Rt(5481, J$.T(5473, true, 23, false)));
                            if (J$.X1(13241, J$.C(312, J$.C(304, J$.B(242, '>=', J$.G(5513, J$.G(5505, J$.R(5497, 'this', this, 0), 'serverCapabilities', 0), 'minWireVersion', 0), J$.G(5529, J$.R(5521, 'this', this, 0), 'minWireVersion', 0), 0)) ? J$.B(250, '<=', J$.G(5553, J$.G(5545, J$.R(5537, 'this', this, 0), 'serverCapabilities', 0), 'maxWireVersion', 0), J$.G(5569, J$.R(5561, 'this', this, 0), 'maxWireVersion', 0), 0) : J$._())))
                                return J$.X1(5593, J$.Rt(5585, J$.T(5577, true, 23, false)));
                            return J$.X1(5617, J$.Rt(5609, J$.T(5601, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(13249, J$e);
                        } finally {
                            if (J$.Fr(13257))
                                continue jalangiLabel1898;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5625), 0));
            J$.X1(6449, J$.P(6441, J$.G(5673, J$.R(5665, 'Connection', Connection, 1), 'prototype', 0), 'write', J$.T(6433, function (command, callback) {
                jalangiLabel1899:
                    while (true) {
                        try {
                            J$.Fe(6385, arguments.callee, this, arguments);
                            arguments = J$.N(6393, 'arguments', arguments, 4);
                            command = J$.N(6401, 'command', command, 4);
                            callback = J$.N(6409, 'callback', callback, 4);
                            J$.N(6417, 'i', i, 0);
                            J$.N(6425, 'binaryCommand', binaryCommand, 0);
                            try {
                                if (J$.X1(13297, J$.C(360, J$.M(5697, J$.R(5681, 'Array', Array, 2), 'isArray', 0)(J$.R(5689, 'command', command, 0))))) {
                                    for (var i = J$.X1(5721, J$.W(5713, 'i', J$.T(5705, 0, 22, false), i, 1)); J$.X1(13273, J$.C(336, J$.B(258, '<', J$.R(5729, 'i', i, 0), J$.G(5745, J$.R(5737, 'command', command, 0), 'length', 0), 0))); J$.X1(13281, J$.B(282, '-', i = J$.W(5769, 'i', J$.B(274, '+', J$.U(266, '+', J$.R(5761, 'i', i, 0)), J$.T(5753, 1, 22, false), 0), i, 0), J$.T(5777, 1, 22, false), 0))) {
                                        try {
                                            var binaryCommand = J$.X1(5841, J$.W(5833, 'binaryCommand', J$.M(5825, J$.G(5801, J$.R(5785, 'command', command, 0), J$.R(5793, 'i', i, 0), 4), 'toBinary', 0)(J$.G(5817, J$.R(5809, 'this', this, 0), 'maxBsonSettings', 0)), binaryCommand, 1));
                                            if (J$.X1(13265, J$.C(328, J$.C(320, J$.B(290, '!=', J$.G(5857, J$.R(5849, 'this', this, 0), 'logger', 0), J$.T(5865, null, 25, false), 0)) ? J$.G(5889, J$.G(5881, J$.R(5873, 'this', this, 0), 'logger', 0), 'doDebug', 0) : J$._())))
                                                J$.X1(5969, J$.M(5961, J$.G(5905, J$.R(5897, 'this', this, 0), 'logger', 0), 'debug', 0)(J$.T(5913, 'writing command to mongodb', 21, false), J$.T(5953, {
                                                binary: J$.R(5921, 'binaryCommand', binaryCommand, 0),
                                                json: J$.G(5945, J$.R(5929, 'command', command, 0), J$.R(5937, 'i', i, 0), 4)
                                            }, 11, false)));
                                            J$.X1(6009, J$.M(6001, J$.G(5985, J$.R(5977, 'this', this, 0), 'writeSteam', 0), 'write', 0)(J$.R(5993, 'binaryCommand', binaryCommand, 0)));
                                        } catch (err) {
                                            err = J$.N(6065, 'err', err, 1);
                                            return J$.X1(6057, J$.Rt(6049, J$.F(6041, J$.R(6017, 'callback', callback, 0), 0)(J$.R(6025, 'err', err, 0), J$.T(6033, null, 25, false))));
                                        }
                                    }
                                } else {
                                    try {
                                        var binaryCommand = J$.X1(6113, J$.W(6105, 'binaryCommand', J$.M(6097, J$.R(6073, 'command', command, 0), 'toBinary', 0)(J$.G(6089, J$.R(6081, 'this', this, 0), 'maxBsonSettings', 0)), binaryCommand, 1));
                                        if (J$.X1(13289, J$.C(352, J$.C(344, J$.B(298, '!=', J$.G(6129, J$.R(6121, 'this', this, 0), 'logger', 0), J$.T(6137, null, 25, false), 0)) ? J$.G(6161, J$.G(6153, J$.R(6145, 'this', this, 0), 'logger', 0), 'doDebug', 0) : J$._())))
                                            J$.X1(6225, J$.M(6217, J$.G(6177, J$.R(6169, 'this', this, 0), 'logger', 0), 'debug', 0)(J$.T(6185, 'writing command to mongodb', 21, false), J$.T(6209, {
                                            binary: J$.R(6193, 'binaryCommand', binaryCommand, 0),
                                            json: J$.R(6201, 'command', command, 0)
                                        }, 11, false)));
                                        J$.X1(6265, J$.M(6257, J$.G(6241, J$.R(6233, 'this', this, 0), 'writeSteam', 0), 'write', 0)(J$.R(6249, 'binaryCommand', binaryCommand, 0)));
                                    } catch (err) {
                                        err = J$.N(6321, 'err', err, 1);
                                        return J$.X1(6313, J$.Rt(6305, J$.F(6297, J$.R(6273, 'callback', callback, 0), 0)(J$.R(6281, 'err', err, 0), J$.T(6289, null, 25, false))));
                                    }
                                }
                            } catch (err) {
                                err = J$.N(6377, 'err', err, 1);
                                if (J$.X1(13305, J$.C(368, J$.B(314, '===', J$.U(306, 'typeof', J$.R(6329, 'callback', callback, 0)), J$.T(6337, 'function', 21, false), 0))))
                                    J$.X1(6369, J$.F(6361, J$.R(6345, 'callback', callback, 0), 0)(J$.R(6353, 'err', err, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(13313, J$e);
                        } finally {
                            if (J$.Fr(13321))
                                continue jalangiLabel1899;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6385), 0));
            J$.X1(6745, J$.P(6737, J$.G(6465, J$.R(6457, 'Connection', Connection, 1), 'prototype', 0), 'close', J$.T(6729, function () {
                jalangiLabel1901:
                    while (true) {
                        try {
                            J$.Fe(6713, arguments.callee, this, arguments);
                            arguments = J$.N(6721, 'arguments', arguments, 4);
                            J$.X1(6505, J$.F(6497, J$.R(6473, 'resetHandlers', resetHandlers, 1), 0)(J$.R(6481, 'this', this, 0), J$.T(6489, true, 23, false)));
                            J$.X1(6569, J$.M(6561, J$.G(6521, J$.R(6513, 'this', this, 0), 'connection', 0), 'on', 0)(J$.T(6529, 'error', 21, false), J$.T(6553, function () {
                                jalangiLabel1900:
                                    while (true) {
                                        try {
                                            J$.Fe(6537, arguments.callee, this, arguments);
                                            arguments = J$.N(6545, 'arguments', arguments, 4);
                                        } catch (J$e) {
                                            J$.Ex(13329, J$e);
                                        } finally {
                                            if (J$.Fr(13337))
                                                continue jalangiLabel1900;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 6537)));
                            J$.X1(6601, J$.M(6593, J$.G(6585, J$.R(6577, 'this', this, 0), 'connection', 0), 'destroy', 0)());
                            if (J$.X1(13345, J$.C(384, J$.C(376, J$.B(322, '!=', J$.G(6617, J$.R(6609, 'this', this, 0), 'logger', 0), J$.T(6625, null, 25, false), 0)) ? J$.G(6649, J$.G(6641, J$.R(6633, 'this', this, 0), 'logger', 0), 'doDebug', 0) : J$._()))) {
                                J$.X1(6705, J$.M(6697, J$.G(6665, J$.R(6657, 'this', this, 0), 'logger', 0), 'debug', 0)(J$.T(6673, 'closed connection', 21, false), J$.G(6689, J$.R(6681, 'this', this, 0), 'connection', 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(13353, J$e);
                        } finally {
                            if (J$.Fr(13361))
                                continue jalangiLabel1901;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6713), 0));
            var resetHandlers = J$.X1(7121, J$.W(7113, 'resetHandlers', J$.T(7105, function (self, clearListeners) {
                jalangiLabel1902:
                    while (true) {
                        try {
                            J$.Fe(7057, arguments.callee, this, arguments);
                            arguments = J$.N(7065, 'arguments', arguments, 4);
                            self = J$.N(7073, 'self', self, 4);
                            clearListeners = J$.N(7081, 'clearListeners', clearListeners, 4);
                            J$.N(7089, 'keys', keys, 0);
                            J$.N(7097, 'i', i, 0);
                            J$.X1(6833, J$.P(6825, J$.R(6753, 'self', self, 0), 'eventHandlers', J$.T(6817, {
                                error: J$.T(6761, [], 10, false),
                                connect: J$.T(6769, [], 10, false),
                                close: J$.T(6777, [], 10, false),
                                end: J$.T(6785, [], 10, false),
                                timeout: J$.T(6793, [], 10, false),
                                parseError: J$.T(6801, [], 10, false),
                                message: J$.T(6809, [], 10, false)
                            }, 11, false), 0));
                            if (J$.X1(13385, J$.C(408, J$.C(392, J$.R(6841, 'clearListeners', clearListeners, 0)) ? J$.B(330, '!=', J$.G(6857, J$.R(6849, 'self', self, 0), 'connection', 0), J$.T(6865, null, 25, false), 0) : J$._()))) {
                                var keys = J$.X1(6913, J$.W(6905, 'keys', J$.M(6897, J$.R(6873, 'Object', Object, 2), 'keys', 0)(J$.G(6889, J$.R(6881, 'self', self, 0), 'eventHandlers', 0)), keys, 1));
                                for (var i = J$.X1(6937, J$.W(6929, 'i', J$.T(6921, 0, 22, false), i, 1)); J$.X1(13369, J$.C(400, J$.B(338, '<', J$.R(6945, 'i', i, 0), J$.G(6961, J$.R(6953, 'keys', keys, 0), 'length', 0), 0))); J$.X1(13377, J$.B(362, '-', i = J$.W(6985, 'i', J$.B(354, '+', J$.U(346, '+', J$.R(6977, 'i', i, 0)), J$.T(6969, 1, 22, false), 0), i, 0), J$.T(6993, 1, 22, false), 0))) {
                                    J$.X1(7049, J$.M(7041, J$.G(7009, J$.R(7001, 'self', self, 0), 'connection', 0), 'removeAllListeners', 0)(J$.G(7033, J$.R(7017, 'keys', keys, 0), J$.R(7025, 'i', i, 0), 4)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(13393, J$e);
                        } finally {
                            if (J$.Fr(13401))
                                continue jalangiLabel1902;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7057), resetHandlers, 3));
            var connectHandler = J$.X1(7409, J$.W(7401, 'connectHandler', J$.T(7393, function (self) {
                jalangiLabel1904:
                    while (true) {
                        try {
                            J$.Fe(7369, arguments.callee, this, arguments);
                            arguments = J$.N(7377, 'arguments', arguments, 4);
                            self = J$.N(7385, 'self', self, 4);
                            return J$.X1(7361, J$.Rt(7353, J$.T(7345, function (data) {
                                jalangiLabel1903:
                                    while (true) {
                                        try {
                                            J$.Fe(7321, arguments.callee, this, arguments);
                                            arguments = J$.N(7329, 'arguments', arguments, 4);
                                            data = J$.N(7337, 'data', data, 4);
                                            J$.X1(7153, J$.P(7145, J$.R(7129, 'self', self, 0), 'connected', J$.T(7137, true, 23, false), 0));
                                            J$.X1(7265, J$.M(7257, J$.G(7169, J$.R(7161, 'self', self, 0), 'connection', 0), 'setTimeout', 0)(J$.X1(13409, J$.C(416, J$.B(370, '!=', J$.G(7193, J$.G(7185, J$.R(7177, 'self', self, 0), 'socketOptions', 0), 'socketTimeoutMS', 0), J$.T(7201, null, 25, false), 0))) ? J$.G(7225, J$.G(7217, J$.R(7209, 'self', self, 0), 'socketOptions', 0), 'socketTimeoutMS', 0) : J$.G(7249, J$.G(7241, J$.R(7233, 'self', self, 0), 'socketOptions', 0), 'timeout', 0)));
                                            J$.X1(7313, J$.M(7305, J$.R(7273, 'self', self, 0), 'emit', 0)(J$.T(7281, 'connect', 21, false), J$.T(7289, null, 25, false), J$.R(7297, 'self', self, 0)));
                                        } catch (J$e) {
                                            J$.Ex(13417, J$e);
                                        } finally {
                                            if (J$.Fr(13425))
                                                continue jalangiLabel1903;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7321)));
                        } catch (J$e) {
                            J$.Ex(13433, J$e);
                        } finally {
                            if (J$.Fr(13441))
                                continue jalangiLabel1904;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7369), connectHandler, 3));
            var createDataHandler = J$.X1(11457, J$.W(11449, 'createDataHandler', J$.P(11441, J$.G(7425, J$.R(7417, 'exports', exports, 2), 'Connection', 0), 'createDataHandler', J$.T(11433, function (self) {
                jalangiLabel1906:
                    while (true) {
                        try {
                            J$.Fe(11409, arguments.callee, this, arguments);
                            arguments = J$.N(11417, 'arguments', arguments, 4);
                            self = J$.N(11425, 'self', self, 4);
                            return J$.X1(11401, J$.Rt(11393, J$.T(11385, function (data) {
                                jalangiLabel1905:
                                    while (true) {
                                        try {
                                            J$.Fe(11313, arguments.callee, this, arguments);
                                            arguments = J$.N(11321, 'arguments', arguments, 4);
                                            data = J$.N(11329, 'data', data, 4);
                                            J$.N(11337, 'remainingBytesToRead', remainingBytesToRead, 0);
                                            J$.N(11345, 'emitBuffer', emitBuffer, 0);
                                            J$.N(11353, 'errorObject', errorObject, 0);
                                            J$.N(11361, 'newData', newData, 0);
                                            J$.N(11369, 'newStubBuffer', newStubBuffer, 0);
                                            J$.N(11377, 'sizeOfMessage', sizeOfMessage, 0);
                                            while (J$.X1(13561, J$.C(640, J$.B(378, '>', J$.G(7441, J$.R(7433, 'data', data, 0), 'length', 0), J$.T(7449, 0, 22, false), 0)))) {
                                                if (J$.X1(13553, J$.C(632, J$.C(424, J$.B(386, '>', J$.G(7465, J$.R(7457, 'self', self, 0), 'bytesRead', 0), J$.T(7473, 0, 22, false), 0)) ? J$.B(394, '>', J$.G(7489, J$.R(7481, 'self', self, 0), 'sizeOfMessage', 0), J$.T(7497, 0, 22, false), 0) : J$._()))) {
                                                    var remainingBytesToRead = J$.X1(7545, J$.W(7537, 'remainingBytesToRead', J$.B(402, '-', J$.G(7513, J$.R(7505, 'self', self, 0), 'sizeOfMessage', 0), J$.G(7529, J$.R(7521, 'self', self, 0), 'bytesRead', 0), 0), remainingBytesToRead, 1));
                                                    if (J$.X1(13457, J$.C(448, J$.B(410, '>', J$.R(7553, 'remainingBytesToRead', remainingBytesToRead, 0), J$.G(7569, J$.R(7561, 'data', data, 0), 'length', 0), 0)))) {
                                                        J$.X1(7625, J$.M(7617, J$.R(7577, 'data', data, 0), 'copy', 0)(J$.G(7593, J$.R(7585, 'self', self, 0), 'buffer', 0), J$.G(7609, J$.R(7601, 'self', self, 0), 'bytesRead', 0)));
                                                        J$.X1(7681, J$.P(7673, J$.R(7633, 'self', self, 0), 'bytesRead', J$.B(418, '+', J$.G(7649, J$.R(7641, 'self', self, 0), 'bytesRead', 0), J$.G(7665, J$.R(7657, 'data', data, 0), 'length', 0), 0), 0));
                                                        J$.X1(7721, data = J$.W(7713, 'data', J$.F(7705, J$.R(7689, 'Buffer', Buffer, 2), 1)(J$.T(7697, 0, 22, false)), data, 0));
                                                    } else {
                                                        J$.X1(7793, J$.M(7785, J$.R(7729, 'data', data, 0), 'copy', 0)(J$.G(7745, J$.R(7737, 'self', self, 0), 'buffer', 0), J$.G(7761, J$.R(7753, 'self', self, 0), 'bytesRead', 0), J$.T(7769, 0, 22, false), J$.R(7777, 'remainingBytesToRead', remainingBytesToRead, 0)));
                                                        J$.X1(7833, data = J$.W(7825, 'data', J$.M(7817, J$.R(7801, 'data', data, 0), 'slice', 0)(J$.R(7809, 'remainingBytesToRead', remainingBytesToRead, 0)), data, 0));
                                                        try {
                                                            var emitBuffer = J$.X1(7865, J$.W(7857, 'emitBuffer', J$.G(7849, J$.R(7841, 'self', self, 0), 'buffer', 0), emitBuffer, 1));
                                                            J$.X1(7897, J$.P(7889, J$.R(7873, 'self', self, 0), 'buffer', J$.T(7881, null, 25, false), 0));
                                                            J$.X1(7929, J$.P(7921, J$.R(7905, 'self', self, 0), 'sizeOfMessage', J$.T(7913, 0, 22, false), 0));
                                                            J$.X1(7961, J$.P(7953, J$.R(7937, 'self', self, 0), 'bytesRead', J$.T(7945, 0, 22, false), 0));
                                                            J$.X1(7993, J$.P(7985, J$.R(7969, 'self', self, 0), 'stubBuffer', J$.T(7977, null, 25, false), 0));
                                                            J$.X1(8041, J$.M(8033, J$.R(8001, 'self', self, 0), 'emit', 0)(J$.T(8009, 'message', 21, false), J$.R(8017, 'emitBuffer', emitBuffer, 0), J$.R(8025, 'self', self, 0)));
                                                        } catch (err) {
                                                            err = J$.N(8305, 'err', err, 1);
                                                            var errorObject = J$.X1(8153, J$.W(8145, 'errorObject', J$.T(8137, {
                                                                err: J$.T(8049, 'socketHandler', 21, false),
                                                                trace: J$.R(8057, 'err', err, 0),
                                                                bin: J$.G(8073, J$.R(8065, 'self', self, 0), 'buffer', 0),
                                                                parseState: J$.T(8129, {
                                                                    sizeOfMessage: J$.G(8089, J$.R(8081, 'self', self, 0), 'sizeOfMessage', 0),
                                                                    bytesRead: J$.G(8105, J$.R(8097, 'self', self, 0), 'bytesRead', 0),
                                                                    stubBuffer: J$.G(8121, J$.R(8113, 'self', self, 0), 'stubBuffer', 0)
                                                                }, 11, false)
                                                            }, 11, false), errorObject, 1));
                                                            if (J$.X1(13449, J$.C(440, J$.C(432, J$.B(426, '!=', J$.G(8169, J$.R(8161, 'self', self, 0), 'logger', 0), J$.T(8177, null, 25, false), 0)) ? J$.G(8201, J$.G(8193, J$.R(8185, 'self', self, 0), 'logger', 0), 'doError', 0) : J$._())))
                                                                J$.X1(8249, J$.M(8241, J$.G(8217, J$.R(8209, 'self', self, 0), 'logger', 0), 'error', 0)(J$.T(8225, 'parseError', 21, false), J$.R(8233, 'errorObject', errorObject, 0)));
                                                            J$.X1(8297, J$.M(8289, J$.R(8257, 'self', self, 0), 'emit', 0)(J$.T(8265, 'parseError', 21, false), J$.R(8273, 'errorObject', errorObject, 0), J$.R(8281, 'self', self, 0)));
                                                        }
                                                    }
                                                } else {
                                                    if (J$.X1(13545, J$.C(624, J$.C(456, J$.B(434, '!=', J$.G(8321, J$.R(8313, 'self', self, 0), 'stubBuffer', 0), J$.T(8329, null, 25, false), 0)) ? J$.B(442, '>', J$.G(8353, J$.G(8345, J$.R(8337, 'self', self, 0), 'stubBuffer', 0), 'length', 0), J$.T(8361, 0, 22, false), 0) : J$._()))) {
                                                        if (J$.X1(13465, J$.C(464, J$.B(458, '>', J$.B(450, '+', J$.G(8385, J$.G(8377, J$.R(8369, 'self', self, 0), 'stubBuffer', 0), 'length', 0), J$.G(8401, J$.R(8393, 'data', data, 0), 'length', 0), 0), J$.T(8409, 4, 22, false), 0)))) {
                                                            var newData = J$.X1(8481, J$.W(8473, 'newData', J$.F(8465, J$.R(8417, 'Buffer', Buffer, 2), 1)(J$.B(466, '+', J$.G(8441, J$.G(8433, J$.R(8425, 'self', self, 0), 'stubBuffer', 0), 'length', 0), J$.G(8457, J$.R(8449, 'data', data, 0), 'length', 0), 0)), newData, 1));
                                                            J$.X1(8529, J$.M(8521, J$.G(8497, J$.R(8489, 'self', self, 0), 'stubBuffer', 0), 'copy', 0)(J$.R(8505, 'newData', newData, 0), J$.T(8513, 0, 22, false)));
                                                            J$.X1(8585, J$.M(8577, J$.R(8537, 'data', data, 0), 'copy', 0)(J$.R(8545, 'newData', newData, 0), J$.G(8569, J$.G(8561, J$.R(8553, 'self', self, 0), 'stubBuffer', 0), 'length', 0)));
                                                            J$.X1(8609, data = J$.W(8601, 'data', J$.R(8593, 'newData', newData, 0), data, 0));
                                                            J$.X1(8641, J$.P(8633, J$.R(8617, 'self', self, 0), 'buffer', J$.T(8625, null, 25, false), 0));
                                                            J$.X1(8673, J$.P(8665, J$.R(8649, 'self', self, 0), 'sizeOfMessage', J$.T(8657, 0, 22, false), 0));
                                                            J$.X1(8705, J$.P(8697, J$.R(8681, 'self', self, 0), 'bytesRead', J$.T(8689, 0, 22, false), 0));
                                                            J$.X1(8737, J$.P(8729, J$.R(8713, 'self', self, 0), 'stubBuffer', J$.T(8721, null, 25, false), 0));
                                                        } else {
                                                            var newStubBuffer = J$.X1(8809, J$.W(8801, 'newStubBuffer', J$.F(8793, J$.R(8745, 'Buffer', Buffer, 2), 1)(J$.B(474, '+', J$.G(8769, J$.G(8761, J$.R(8753, 'self', self, 0), 'stubBuffer', 0), 'length', 0), J$.G(8785, J$.R(8777, 'data', data, 0), 'length', 0), 0)), newStubBuffer, 1));
                                                            J$.X1(8857, J$.M(8849, J$.G(8825, J$.R(8817, 'self', self, 0), 'stubBuffer', 0), 'copy', 0)(J$.R(8833, 'newStubBuffer', newStubBuffer, 0), J$.T(8841, 0, 22, false)));
                                                            J$.X1(8913, J$.M(8905, J$.R(8865, 'data', data, 0), 'copy', 0)(J$.R(8873, 'newStubBuffer', newStubBuffer, 0), J$.G(8897, J$.G(8889, J$.R(8881, 'self', self, 0), 'stubBuffer', 0), 'length', 0)));
                                                            J$.X1(8953, data = J$.W(8945, 'data', J$.F(8937, J$.R(8921, 'Buffer', Buffer, 2), 1)(J$.T(8929, 0, 22, false)), data, 0));
                                                        }
                                                    } else {
                                                        if (J$.X1(13537, J$.C(616, J$.B(482, '>', J$.G(8969, J$.R(8961, 'data', data, 0), 'length', 0), J$.T(8977, 4, 22, false), 0)))) {
                                                            var sizeOfMessage = J$.X1(9025, J$.W(9017, 'sizeOfMessage', J$.M(9009, J$.R(8985, 'binaryutils', binaryutils, 1), 'decodeUInt32', 0)(J$.R(8993, 'data', data, 0), J$.T(9001, 0, 22, false)), sizeOfMessage, 1));
                                                            if (J$.X1(13481, J$.C(496, J$.C(472, J$.B(490, '<', J$.R(9033, 'sizeOfMessage', sizeOfMessage, 0), J$.T(9041, 0, 22, false), 0)) ? J$._() : J$.B(498, '>', J$.R(9049, 'sizeOfMessage', sizeOfMessage, 0), J$.G(9065, J$.R(9057, 'self', self, 0), 'maxMessageSizeBytes', 0), 0)))) {
                                                                var errorObject = J$.X1(9169, J$.W(9161, 'errorObject', J$.T(9153, {
                                                                    err: J$.T(9073, 'socketHandler', 21, false),
                                                                    trace: J$.T(9081, '', 21, false),
                                                                    bin: J$.G(9097, J$.R(9089, 'self', self, 0), 'buffer', 0),
                                                                    parseState: J$.T(9145, {
                                                                        sizeOfMessage: J$.R(9105, 'sizeOfMessage', sizeOfMessage, 0),
                                                                        bytesRead: J$.G(9121, J$.R(9113, 'self', self, 0), 'bytesRead', 0),
                                                                        stubBuffer: J$.G(9137, J$.R(9129, 'self', self, 0), 'stubBuffer', 0)
                                                                    }, 11, false)
                                                                }, 11, false), errorObject, 1));
                                                                if (J$.X1(13473, J$.C(488, J$.C(480, J$.B(506, '!=', J$.G(9185, J$.R(9177, 'self', self, 0), 'logger', 0), J$.T(9193, null, 25, false), 0)) ? J$.G(9217, J$.G(9209, J$.R(9201, 'self', self, 0), 'logger', 0), 'doError', 0) : J$._())))
                                                                    J$.X1(9265, J$.M(9257, J$.G(9233, J$.R(9225, 'self', self, 0), 'logger', 0), 'error', 0)(J$.T(9241, 'parseError', 21, false), J$.R(9249, 'errorObject', errorObject, 0)));
                                                                J$.X1(9313, J$.M(9305, J$.R(9273, 'self', self, 0), 'emit', 0)(J$.T(9281, 'parseError', 21, false), J$.R(9289, 'errorObject', errorObject, 0), J$.R(9297, 'self', self, 0)));
                                                                return J$.X1(9329, J$.Rt(9321, undefined));
                                                            }
                                                            if (J$.X1(13529, J$.C(608, J$.C(512, J$.C(504, J$.B(514, '>', J$.R(9337, 'sizeOfMessage', sizeOfMessage, 0), J$.T(9345, 4, 22, false), 0)) ? J$.B(522, '<', J$.R(9353, 'sizeOfMessage', sizeOfMessage, 0), J$.G(9369, J$.R(9361, 'self', self, 0), 'maxMessageSizeBytes', 0), 0) : J$._()) ? J$.B(530, '>', J$.R(9377, 'sizeOfMessage', sizeOfMessage, 0), J$.G(9393, J$.R(9385, 'data', data, 0), 'length', 0), 0) : J$._()))) {
                                                                J$.X1(9441, J$.P(9433, J$.R(9401, 'self', self, 0), 'buffer', J$.F(9425, J$.R(9409, 'Buffer', Buffer, 2), 1)(J$.R(9417, 'sizeOfMessage', sizeOfMessage, 0)), 0));
                                                                J$.X1(9489, J$.M(9481, J$.R(9449, 'data', data, 0), 'copy', 0)(J$.G(9465, J$.R(9457, 'self', self, 0), 'buffer', 0), J$.T(9473, 0, 22, false)));
                                                                J$.X1(9529, J$.P(9521, J$.R(9497, 'self', self, 0), 'bytesRead', J$.G(9513, J$.R(9505, 'data', data, 0), 'length', 0), 0));
                                                                J$.X1(9561, J$.P(9553, J$.R(9537, 'self', self, 0), 'sizeOfMessage', J$.R(9545, 'sizeOfMessage', sizeOfMessage, 0), 0));
                                                                J$.X1(9593, J$.P(9585, J$.R(9569, 'self', self, 0), 'stubBuffer', J$.T(9577, null, 25, false), 0));
                                                                J$.X1(9633, data = J$.W(9625, 'data', J$.F(9617, J$.R(9601, 'Buffer', Buffer, 2), 1)(J$.T(9609, 0, 22, false)), data, 0));
                                                            } else if (J$.X1(13521, J$.C(600, J$.C(528, J$.C(520, J$.B(538, '>', J$.R(9641, 'sizeOfMessage', sizeOfMessage, 0), J$.T(9649, 4, 22, false), 0)) ? J$.B(546, '<', J$.R(9657, 'sizeOfMessage', sizeOfMessage, 0), J$.G(9673, J$.R(9665, 'self', self, 0), 'maxMessageSizeBytes', 0), 0) : J$._()) ? J$.B(554, '==', J$.R(9681, 'sizeOfMessage', sizeOfMessage, 0), J$.G(9697, J$.R(9689, 'data', data, 0), 'length', 0), 0) : J$._()))) {
                                                                try {
                                                                    var emitBuffer = J$.X1(9721, J$.W(9713, 'emitBuffer', J$.R(9705, 'data', data, 0), emitBuffer, 1));
                                                                    J$.X1(9753, J$.P(9745, J$.R(9729, 'self', self, 0), 'buffer', J$.T(9737, null, 25, false), 0));
                                                                    J$.X1(9785, J$.P(9777, J$.R(9761, 'self', self, 0), 'sizeOfMessage', J$.T(9769, 0, 22, false), 0));
                                                                    J$.X1(9817, J$.P(9809, J$.R(9793, 'self', self, 0), 'bytesRead', J$.T(9801, 0, 22, false), 0));
                                                                    J$.X1(9849, J$.P(9841, J$.R(9825, 'self', self, 0), 'stubBuffer', J$.T(9833, null, 25, false), 0));
                                                                    J$.X1(9889, data = J$.W(9881, 'data', J$.F(9873, J$.R(9857, 'Buffer', Buffer, 2), 1)(J$.T(9865, 0, 22, false)), data, 0));
                                                                    J$.X1(9937, J$.M(9929, J$.R(9897, 'self', self, 0), 'emit', 0)(J$.T(9905, 'message', 21, false), J$.R(9913, 'emitBuffer', emitBuffer, 0), J$.R(9921, 'self', self, 0)));
                                                                } catch (err) {
                                                                    err = J$.N(10201, 'err', err, 1);
                                                                    var errorObject = J$.X1(10049, J$.W(10041, 'errorObject', J$.T(10033, {
                                                                        err: J$.T(9945, 'socketHandler', 21, false),
                                                                        trace: J$.R(9953, 'err', err, 0),
                                                                        bin: J$.G(9969, J$.R(9961, 'self', self, 0), 'buffer', 0),
                                                                        parseState: J$.T(10025, {
                                                                            sizeOfMessage: J$.G(9985, J$.R(9977, 'self', self, 0), 'sizeOfMessage', 0),
                                                                            bytesRead: J$.G(10001, J$.R(9993, 'self', self, 0), 'bytesRead', 0),
                                                                            stubBuffer: J$.G(10017, J$.R(10009, 'self', self, 0), 'stubBuffer', 0)
                                                                        }, 11, false)
                                                                    }, 11, false), errorObject, 1));
                                                                    if (J$.X1(13489, J$.C(544, J$.C(536, J$.B(562, '!=', J$.G(10065, J$.R(10057, 'self', self, 0), 'logger', 0), J$.T(10073, null, 25, false), 0)) ? J$.G(10097, J$.G(10089, J$.R(10081, 'self', self, 0), 'logger', 0), 'doError', 0) : J$._())))
                                                                        J$.X1(10145, J$.M(10137, J$.G(10113, J$.R(10105, 'self', self, 0), 'logger', 0), 'error', 0)(J$.T(10121, 'parseError', 21, false), J$.R(10129, 'errorObject', errorObject, 0)));
                                                                    J$.X1(10193, J$.M(10185, J$.R(10153, 'self', self, 0), 'emit', 0)(J$.T(10161, 'parseError', 21, false), J$.R(10169, 'errorObject', errorObject, 0), J$.R(10177, 'self', self, 0)));
                                                                }
                                                            } else if (J$.X1(13513, J$.C(592, J$.C(552, J$.B(570, '<=', J$.R(10209, 'sizeOfMessage', sizeOfMessage, 0), J$.T(10217, 4, 22, false), 0)) ? J$._() : J$.B(578, '>', J$.R(10225, 'sizeOfMessage', sizeOfMessage, 0), J$.G(10241, J$.R(10233, 'self', self, 0), 'maxMessageSizeBytes', 0), 0)))) {
                                                                var errorObject = J$.X1(10329, J$.W(10321, 'errorObject', J$.T(10313, {
                                                                    err: J$.T(10249, 'socketHandler', 21, false),
                                                                    trace: J$.T(10257, null, 25, false),
                                                                    bin: J$.R(10265, 'data', data, 0),
                                                                    parseState: J$.T(10305, {
                                                                        sizeOfMessage: J$.R(10273, 'sizeOfMessage', sizeOfMessage, 0),
                                                                        bytesRead: J$.T(10281, 0, 22, false),
                                                                        buffer: J$.T(10289, null, 25, false),
                                                                        stubBuffer: J$.T(10297, null, 25, false)
                                                                    }, 11, false)
                                                                }, 11, false), errorObject, 1));
                                                                if (J$.X1(13497, J$.C(568, J$.C(560, J$.B(586, '!=', J$.G(10345, J$.R(10337, 'self', self, 0), 'logger', 0), J$.T(10353, null, 25, false), 0)) ? J$.G(10377, J$.G(10369, J$.R(10361, 'self', self, 0), 'logger', 0), 'doError', 0) : J$._())))
                                                                    J$.X1(10425, J$.M(10417, J$.G(10393, J$.R(10385, 'self', self, 0), 'logger', 0), 'error', 0)(J$.T(10401, 'parseError', 21, false), J$.R(10409, 'errorObject', errorObject, 0)));
                                                                J$.X1(10473, J$.M(10465, J$.R(10433, 'self', self, 0), 'emit', 0)(J$.T(10441, 'parseError', 21, false), J$.R(10449, 'errorObject', errorObject, 0), J$.R(10457, 'self', self, 0)));
                                                                J$.X1(10505, J$.P(10497, J$.R(10481, 'self', self, 0), 'buffer', J$.T(10489, null, 25, false), 0));
                                                                J$.X1(10537, J$.P(10529, J$.R(10513, 'self', self, 0), 'sizeOfMessage', J$.T(10521, 0, 22, false), 0));
                                                                J$.X1(10569, J$.P(10561, J$.R(10545, 'self', self, 0), 'bytesRead', J$.T(10553, 0, 22, false), 0));
                                                                J$.X1(10601, J$.P(10593, J$.R(10577, 'self', self, 0), 'stubBuffer', J$.T(10585, null, 25, false), 0));
                                                                J$.X1(10641, data = J$.W(10633, 'data', J$.F(10625, J$.R(10609, 'Buffer', Buffer, 2), 1)(J$.T(10617, 0, 22, false)), data, 0));
                                                            } else {
                                                                try {
                                                                    var emitBuffer = J$.X1(10689, J$.W(10681, 'emitBuffer', J$.M(10673, J$.R(10649, 'data', data, 0), 'slice', 0)(J$.T(10657, 0, 22, false), J$.R(10665, 'sizeOfMessage', sizeOfMessage, 0)), emitBuffer, 1));
                                                                    J$.X1(10721, J$.P(10713, J$.R(10697, 'self', self, 0), 'buffer', J$.T(10705, null, 25, false), 0));
                                                                    J$.X1(10753, J$.P(10745, J$.R(10729, 'self', self, 0), 'sizeOfMessage', J$.T(10737, 0, 22, false), 0));
                                                                    J$.X1(10785, J$.P(10777, J$.R(10761, 'self', self, 0), 'bytesRead', J$.T(10769, 0, 22, false), 0));
                                                                    J$.X1(10817, J$.P(10809, J$.R(10793, 'self', self, 0), 'stubBuffer', J$.T(10801, null, 25, false), 0));
                                                                    J$.X1(10857, data = J$.W(10849, 'data', J$.M(10841, J$.R(10825, 'data', data, 0), 'slice', 0)(J$.R(10833, 'sizeOfMessage', sizeOfMessage, 0)), data, 0));
                                                                    J$.X1(10905, J$.M(10897, J$.R(10865, 'self', self, 0), 'emit', 0)(J$.T(10873, 'message', 21, false), J$.R(10881, 'emitBuffer', emitBuffer, 0), J$.R(10889, 'self', self, 0)));
                                                                } catch (err) {
                                                                    err = J$.N(11161, 'err', err, 1);
                                                                    var errorObject = J$.X1(11009, J$.W(11001, 'errorObject', J$.T(10993, {
                                                                        err: J$.T(10913, 'socketHandler', 21, false),
                                                                        trace: J$.R(10921, 'err', err, 0),
                                                                        bin: J$.G(10937, J$.R(10929, 'self', self, 0), 'buffer', 0),
                                                                        parseState: J$.T(10985, {
                                                                            sizeOfMessage: J$.R(10945, 'sizeOfMessage', sizeOfMessage, 0),
                                                                            bytesRead: J$.G(10961, J$.R(10953, 'self', self, 0), 'bytesRead', 0),
                                                                            stubBuffer: J$.G(10977, J$.R(10969, 'self', self, 0), 'stubBuffer', 0)
                                                                        }, 11, false)
                                                                    }, 11, false), errorObject, 1));
                                                                    if (J$.X1(13505, J$.C(584, J$.C(576, J$.B(594, '!=', J$.G(11025, J$.R(11017, 'self', self, 0), 'logger', 0), J$.T(11033, null, 25, false), 0)) ? J$.G(11057, J$.G(11049, J$.R(11041, 'self', self, 0), 'logger', 0), 'doError', 0) : J$._())))
                                                                        J$.X1(11105, J$.M(11097, J$.G(11073, J$.R(11065, 'self', self, 0), 'logger', 0), 'error', 0)(J$.T(11081, 'parseError', 21, false), J$.R(11089, 'errorObject', errorObject, 0)));
                                                                    J$.X1(11153, J$.M(11145, J$.R(11113, 'self', self, 0), 'emit', 0)(J$.T(11121, 'parseError', 21, false), J$.R(11129, 'errorObject', errorObject, 0), J$.R(11137, 'self', self, 0)));
                                                                }
                                                            }
                                                        } else {
                                                            J$.X1(11217, J$.P(11209, J$.R(11169, 'self', self, 0), 'stubBuffer', J$.F(11201, J$.R(11177, 'Buffer', Buffer, 2), 1)(J$.G(11193, J$.R(11185, 'data', data, 0), 'length', 0)), 0));
                                                            J$.X1(11265, J$.M(11257, J$.R(11225, 'data', data, 0), 'copy', 0)(J$.G(11241, J$.R(11233, 'self', self, 0), 'stubBuffer', 0), J$.T(11249, 0, 22, false)));
                                                            J$.X1(11305, data = J$.W(11297, 'data', J$.F(11289, J$.R(11273, 'Buffer', Buffer, 2), 1)(J$.T(11281, 0, 22, false)), data, 0));
                                                        }
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(13569, J$e);
                                        } finally {
                                            if (J$.Fr(13577))
                                                continue jalangiLabel1905;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11313)));
                        } catch (J$e) {
                            J$.Ex(13585, J$e);
                        } finally {
                            if (J$.Fr(13593))
                                continue jalangiLabel1906;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11409), 0), createDataHandler, 3));
            var endHandler = J$.X1(11697, J$.W(11689, 'endHandler', J$.T(11681, function (self) {
                jalangiLabel1908:
                    while (true) {
                        try {
                            J$.Fe(11657, arguments.callee, this, arguments);
                            arguments = J$.N(11665, 'arguments', arguments, 4);
                            self = J$.N(11673, 'self', self, 4);
                            return J$.X1(11649, J$.Rt(11641, J$.T(11633, function () {
                                jalangiLabel1907:
                                    while (true) {
                                        try {
                                            J$.Fe(11617, arguments.callee, this, arguments);
                                            arguments = J$.N(11625, 'arguments', arguments, 4);
                                            J$.X1(11489, J$.P(11481, J$.R(11465, 'self', self, 0), 'connected', J$.T(11473, false, 23, false), 0));
                                            J$.X1(11609, J$.M(11601, J$.R(11497, 'self', self, 0), 'emit', 0)(J$.T(11505, 'end', 21, false), J$.T(11585, {
                                                err: J$.B(626, '+', J$.B(618, '+', J$.B(610, '+', J$.B(602, '+', J$.T(11513, 'connection received Fin packet from [', 21, false), J$.G(11537, J$.G(11529, J$.R(11521, 'self', self, 0), 'socketOptions', 0), 'host', 0), 0), J$.T(11545, ':', 21, false), 0), J$.G(11569, J$.G(11561, J$.R(11553, 'self', self, 0), 'socketOptions', 0), 'port', 0), 0), J$.T(11577, ']', 21, false), 0)
                                            }, 11, false), J$.R(11593, 'self', self, 0)));
                                        } catch (J$e) {
                                            J$.Ex(13601, J$e);
                                        } finally {
                                            if (J$.Fr(13609))
                                                continue jalangiLabel1907;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11617)));
                        } catch (J$e) {
                            J$.Ex(13617, J$e);
                        } finally {
                            if (J$.Fr(13625))
                                continue jalangiLabel1908;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11657), endHandler, 3));
            var timeoutHandler = J$.X1(11937, J$.W(11929, 'timeoutHandler', J$.T(11921, function (self) {
                jalangiLabel1910:
                    while (true) {
                        try {
                            J$.Fe(11897, arguments.callee, this, arguments);
                            arguments = J$.N(11905, 'arguments', arguments, 4);
                            self = J$.N(11913, 'self', self, 4);
                            return J$.X1(11889, J$.Rt(11881, J$.T(11873, function () {
                                jalangiLabel1909:
                                    while (true) {
                                        try {
                                            J$.Fe(11857, arguments.callee, this, arguments);
                                            arguments = J$.N(11865, 'arguments', arguments, 4);
                                            J$.X1(11729, J$.P(11721, J$.R(11705, 'self', self, 0), 'connected', J$.T(11713, false, 23, false), 0));
                                            J$.X1(11849, J$.M(11841, J$.R(11737, 'self', self, 0), 'emit', 0)(J$.T(11745, 'timeout', 21, false), J$.T(11825, {
                                                err: J$.B(658, '+', J$.B(650, '+', J$.B(642, '+', J$.B(634, '+', J$.T(11753, 'connection to [', 21, false), J$.G(11777, J$.G(11769, J$.R(11761, 'self', self, 0), 'socketOptions', 0), 'host', 0), 0), J$.T(11785, ':', 21, false), 0), J$.G(11809, J$.G(11801, J$.R(11793, 'self', self, 0), 'socketOptions', 0), 'port', 0), 0), J$.T(11817, '] timed out', 21, false), 0)
                                            }, 11, false), J$.R(11833, 'self', self, 0)));
                                        } catch (J$e) {
                                            J$.Ex(13633, J$e);
                                        } finally {
                                            if (J$.Fr(13641))
                                                continue jalangiLabel1909;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11857)));
                        } catch (J$e) {
                            J$.Ex(13649, J$e);
                        } finally {
                            if (J$.Fr(13657))
                                continue jalangiLabel1910;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11897), timeoutHandler, 3));
            var drainHandler = J$.X1(12025, J$.W(12017, 'drainHandler', J$.T(12009, function (self) {
                jalangiLabel1912:
                    while (true) {
                        try {
                            J$.Fe(11985, arguments.callee, this, arguments);
                            arguments = J$.N(11993, 'arguments', arguments, 4);
                            self = J$.N(12001, 'self', self, 4);
                            return J$.X1(11977, J$.Rt(11969, J$.T(11961, function () {
                                jalangiLabel1911:
                                    while (true) {
                                        try {
                                            J$.Fe(11945, arguments.callee, this, arguments);
                                            arguments = J$.N(11953, 'arguments', arguments, 4);
                                        } catch (J$e) {
                                            J$.Ex(13665, J$e);
                                        } finally {
                                            if (J$.Fr(13673))
                                                continue jalangiLabel1911;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11945)));
                        } catch (J$e) {
                            J$.Ex(13681, J$e);
                        } finally {
                            if (J$.Fr(13689))
                                continue jalangiLabel1912;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11985), drainHandler, 3));
            var errorHandler = J$.X1(12305, J$.W(12297, 'errorHandler', J$.T(12289, function (self) {
                jalangiLabel1914:
                    while (true) {
                        try {
                            J$.Fe(12265, arguments.callee, this, arguments);
                            arguments = J$.N(12273, 'arguments', arguments, 4);
                            self = J$.N(12281, 'self', self, 4);
                            return J$.X1(12257, J$.Rt(12249, J$.T(12241, function (err) {
                                jalangiLabel1913:
                                    while (true) {
                                        try {
                                            J$.Fe(12217, arguments.callee, this, arguments);
                                            arguments = J$.N(12225, 'arguments', arguments, 4);
                                            err = J$.N(12233, 'err', err, 4);
                                            J$.X1(12057, J$.M(12049, J$.G(12041, J$.R(12033, 'self', self, 0), 'connection', 0), 'destroy', 0)());
                                            J$.X1(12089, J$.P(12081, J$.R(12065, 'self', self, 0), 'connected', J$.T(12073, false, 23, false), 0));
                                            J$.X1(12209, J$.M(12201, J$.R(12097, 'self', self, 0), 'emit', 0)(J$.T(12105, 'error', 21, false), J$.T(12185, {
                                                err: J$.B(690, '+', J$.B(682, '+', J$.B(674, '+', J$.B(666, '+', J$.T(12113, 'failed to connect to [', 21, false), J$.G(12137, J$.G(12129, J$.R(12121, 'self', self, 0), 'socketOptions', 0), 'host', 0), 0), J$.T(12145, ':', 21, false), 0), J$.G(12169, J$.G(12161, J$.R(12153, 'self', self, 0), 'socketOptions', 0), 'port', 0), 0), J$.T(12177, ']', 21, false), 0)
                                            }, 11, false), J$.R(12193, 'self', self, 0)));
                                        } catch (J$e) {
                                            J$.Ex(13697, J$e);
                                        } finally {
                                            if (J$.Fr(13705))
                                                continue jalangiLabel1913;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 12217)));
                        } catch (J$e) {
                            J$.Ex(13713, J$e);
                        } finally {
                            if (J$.Fr(13721))
                                continue jalangiLabel1914;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12265), errorHandler, 3));
            var closeHandler = J$.X1(12729, J$.W(12721, 'closeHandler', J$.T(12713, function (self) {
                jalangiLabel1916:
                    while (true) {
                        try {
                            J$.Fe(12689, arguments.callee, this, arguments);
                            arguments = J$.N(12697, 'arguments', arguments, 4);
                            self = J$.N(12705, 'self', self, 4);
                            return J$.X1(12681, J$.Rt(12673, J$.T(12665, function (hadError) {
                                jalangiLabel1915:
                                    while (true) {
                                        try {
                                            J$.Fe(12641, arguments.callee, this, arguments);
                                            arguments = J$.N(12649, 'arguments', arguments, 4);
                                            hadError = J$.N(12657, 'hadError', hadError, 4);
                                            if (J$.X1(13729, J$.C(656, J$.C(648, J$.R(12313, 'hadError', hadError, 0)) ? J$.U(698, '!', J$.G(12329, J$.R(12321, 'self', self, 0), 'connected', 0)) : J$._()))) {
                                                J$.X1(12361, J$.P(12353, J$.R(12337, 'self', self, 0), 'connected', J$.T(12345, false, 23, false), 0));
                                                J$.X1(12481, J$.M(12473, J$.R(12369, 'self', self, 0), 'emit', 0)(J$.T(12377, 'error', 21, false), J$.T(12457, {
                                                    err: J$.B(730, '+', J$.B(722, '+', J$.B(714, '+', J$.B(706, '+', J$.T(12385, 'failed to connect to [', 21, false), J$.G(12409, J$.G(12401, J$.R(12393, 'self', self, 0), 'socketOptions', 0), 'host', 0), 0), J$.T(12417, ':', 21, false), 0), J$.G(12441, J$.G(12433, J$.R(12425, 'self', self, 0), 'socketOptions', 0), 'port', 0), 0), J$.T(12449, ']', 21, false), 0)
                                                }, 11, false), J$.R(12465, 'self', self, 0)));
                                            } else {
                                                J$.X1(12513, J$.P(12505, J$.R(12489, 'self', self, 0), 'connected', J$.T(12497, false, 23, false), 0));
                                                J$.X1(12633, J$.M(12625, J$.R(12521, 'self', self, 0), 'emit', 0)(J$.T(12529, 'close', 21, false), J$.T(12609, {
                                                    err: J$.B(762, '+', J$.B(754, '+', J$.B(746, '+', J$.B(738, '+', J$.T(12537, 'connection closed to [', 21, false), J$.G(12561, J$.G(12553, J$.R(12545, 'self', self, 0), 'socketOptions', 0), 'host', 0), 0), J$.T(12569, ':', 21, false), 0), J$.G(12593, J$.G(12585, J$.R(12577, 'self', self, 0), 'socketOptions', 0), 'port', 0), 0), J$.T(12601, ']', 21, false), 0)
                                                }, 11, false), J$.R(12617, 'self', self, 0)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(13737, J$e);
                                        } finally {
                                            if (J$.Fr(13745))
                                                continue jalangiLabel1915;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 12641)));
                        } catch (J$e) {
                            J$.Ex(13753, J$e);
                        } finally {
                            if (J$.Fr(13761))
                                continue jalangiLabel1916;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12689), closeHandler, 3));
            J$.X1(12761, J$.P(12753, J$.R(12737, 'Connection', Connection, 1), 'DEFAULT_PORT', J$.T(12745, 27017, 22, false), 0));
        } catch (J$e) {
            J$.Ex(13769, J$e);
        } finally {
            if (J$.Sr(13777)) {
                J$.L();
                continue jalangiLabel1917;
            } else {
                J$.L();
                break jalangiLabel1917;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
