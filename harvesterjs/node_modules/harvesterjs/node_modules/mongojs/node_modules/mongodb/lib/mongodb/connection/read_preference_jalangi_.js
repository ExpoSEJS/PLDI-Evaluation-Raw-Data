J$.iids = {"8":[4,9,4,42],"9":[1,20,1,27],"10":[4,11,4,41],"16":[11,12,11,88],"17":[1,28,1,32],"18":[4,9,4,42],"24":[11,12,11,125],"25":[1,20,1,33],"26":[11,12,11,43],"32":[11,12,11,172],"33":[1,20,1,33],"34":[11,47,11,88],"40":[11,12,11,207],"41":[1,20,1,33],"42":[11,92,11,125],"48":[11,12,11,224],"49":[2,26,2,38],"50":[11,129,11,172],"56":[11,12,11,242],"57":[2,26,2,45],"58":[11,176,11,207],"64":[11,12,11,259],"65":[2,26,2,45],"66":[11,211,11,224],"72":[14,17,14,40],"73":[2,26,2,45],"74":[11,228,11,242],"80":[19,9,19,26],"81":[4,11,4,15],"82":[11,246,11,259],"89":[4,27,4,41],"90":[14,17,14,28],"97":[5,20,5,34],"98":[14,17,14,40],"105":[5,35,5,39],"106":[19,9,19,26],"113":[5,41,5,45],"121":[5,16,5,46],"129":[5,16,5,46],"137":[5,9,5,47],"145":[6,5,6,9],"153":[6,18,6,34],"161":[6,5,6,34],"169":[6,5,6,35],"177":[7,5,7,9],"185":[7,17,7,21],"193":[7,5,7,21],"201":[7,5,7,22],"209":[8,5,8,9],"217":[8,17,8,21],"225":[8,5,8,21],"233":[8,5,8,22],"241":[3,22,9,2],"249":[3,22,9,2],"257":[3,22,9,2],"265":[3,22,9,2],"273":[3,22,9,2],"281":[3,22,9,2],"289":[3,22,9,2],"297":[10,1,10,15],"305":[11,12,11,17],"313":[11,21,11,35],"321":[11,21,11,43],"329":[11,47,11,52],"337":[11,56,11,70],"345":[11,56,11,88],"353":[11,92,11,97],"361":[11,101,11,115],"369":[11,101,11,125],"377":[11,129,11,134],"385":[11,138,11,152],"393":[11,138,11,172],"401":[11,176,11,181],"409":[11,185,11,199],"417":[11,185,11,207],"425":[11,211,11,216],"433":[11,220,11,224],"441":[11,228,11,233],"449":[11,237,11,242],"457":[11,246,11,251],"465":[11,255,11,259],"473":[11,12,11,259],"481":[11,5,11,260],"489":[10,26,12,2],"497":[10,26,12,2],"505":[10,26,12,2],"513":[10,26,12,2],"521":[10,1,12,2],"529":[10,1,12,3],"537":[13,1,13,15],"545":[13,1,13,25],"553":[14,24,14,28],"561":[14,32,14,40],"569":[14,43,14,47],"577":[14,50,14,54],"585":[14,50,14,59],"593":[14,17,14,59],"601":[14,17,14,59],"609":[15,12,15,26],"617":[15,35,15,40],"625":[15,12,15,41],"627":[15,12,15,34],"633":[15,12,15,41],"641":[15,5,15,42],"649":[13,36,16,2],"657":[13,36,16,2],"665":[13,36,16,2],"673":[13,36,16,2],"681":[13,36,16,2],"689":[13,1,16,2],"697":[13,1,16,3],"705":[17,1,17,15],"713":[17,1,17,25],"721":[18,26,18,30],"729":[18,26,18,35],"737":[18,18,18,37],"745":[18,18,18,37],"753":[18,18,18,37],"761":[19,9,19,13],"769":[19,9,19,18],"777":[19,22,19,26],"785":[20,9,20,15],"793":[20,16,20,22],"801":[20,26,20,30],"809":[20,26,20,35],"817":[20,9,20,35],"825":[20,9,20,36],"833":[22,12,22,18],"841":[22,12,22,18],"849":[22,5,22,19],"857":[17,37,23,2],"865":[17,37,23,2],"873":[17,37,23,2],"881":[17,37,23,2],"889":[17,1,23,2],"897":[17,1,23,3],"905":[24,1,24,15],"913":[24,26,24,35],"921":[24,1,24,35],"929":[24,1,24,36],"937":[25,1,25,15],"945":[25,36,25,54],"953":[25,1,25,54],"961":[25,1,25,55],"969":[26,1,26,15],"977":[26,28,26,39],"985":[26,1,26,39],"993":[26,1,26,40],"1001":[27,1,27,15],"1009":[27,38,27,58],"1017":[27,1,27,58],"1025":[27,1,27,59],"1033":[28,1,28,15],"1041":[28,26,28,35],"1049":[28,1,28,35],"1057":[28,1,28,36],"1065":[29,1,29,8],"1073":[29,26,29,40],"1081":[29,1,29,40],"1089":[29,1,29,41],"1097":[1,1,29,41],"1105":[1,1,29,41],"1113":[1,1,29,41],"1121":[1,1,29,41],"1129":[4,5,5,47],"1137":[3,22,9,2],"1145":[3,22,9,2],"1153":[10,26,12,2],"1161":[10,26,12,2],"1169":[14,17,14,59],"1177":[13,36,16,2],"1185":[13,36,16,2],"1193":[19,5,21,6],"1201":[17,37,23,2],"1209":[17,37,23,2],"1217":[1,1,29,41],"1225":[1,1,29,41],"nBranches":20,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/read_preference.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/read_preference_jalangi_.js","code":"/**\n * A class representation of the Read Preference.\n *\n * Read Preferences\n *  - **ReadPreference.PRIMARY**, Read from primary only. All operations produce an error (throw an exception where applicable) if primary is unavailable. Cannot be combined with tags (This is the default.).\n *  - **ReadPreference.PRIMARY_PREFERRED**, Read from primary if available, otherwise a secondary.\n *  - **ReadPreference.SECONDARY**, Read from secondary if available, otherwise error.\n *  - **ReadPreference.SECONDARY_PREFERRED**, Read from a secondary if available, otherwise read from the primary.\n *  - **ReadPreference.NEAREST**, All modes read from among the nearest candidates, but unlike other modes, NEAREST will include both the primary and all secondaries in the random selection.\n *\n * @class Represents a Read Preference.\n * @param {String} the read preference type\n * @param {Object} tags\n * @return {ReadPreference}\n */\nvar ReadPreference = function(mode, tags) {\n  if(!(this instanceof ReadPreference))\n    return new ReadPreference(mode, tags);\n  this._type = 'ReadPreference';\n  this.mode = mode;\n  this.tags = tags;\n}\n\n/**\n * @ignore\n */\nReadPreference.isValid = function(_mode) {\n  return (_mode == ReadPreference.PRIMARY || _mode == ReadPreference.PRIMARY_PREFERRED\n    || _mode == ReadPreference.SECONDARY || _mode == ReadPreference.SECONDARY_PREFERRED\n    || _mode == ReadPreference.NEAREST\n    || _mode == true || _mode == false || _mode == null);\n}\n\n/**\n * @ignore\n */\nReadPreference.prototype.isValid = function(mode) {\n  var _mode = typeof mode == 'string' ? mode : this.mode;\n  return ReadPreference.isValid(_mode);\n}\n\n/**\n * @ignore\n */\nReadPreference.prototype.toObject = function() {\n  var object = {mode:this.mode};\n\n  if(this.tags != null) {\n    object['tags'] = this.tags;\n  }\n\n  return object;\n}\n\n/**\n * @ignore\n */\nReadPreference.PRIMARY = 'primary';\nReadPreference.PRIMARY_PREFERRED = 'primaryPreferred';\nReadPreference.SECONDARY = 'secondary';\nReadPreference.SECONDARY_PREFERRED = 'secondaryPreferred';\nReadPreference.NEAREST = 'nearest'\n\n/**\n * @ignore\n */\nexports.ReadPreference  = ReadPreference;"};
jalangiLabel1670:
    while (true) {
        try {
            J$.Se(1097, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/read_preference_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/lib/mongodb/connection/read_preference.js');
            J$.N(1105, '__secret__S$', __secret__S$, 0);
            J$.N(1113, '__secret__traits__', __secret__traits__, 0);
            J$.N(1121, 'ReadPreference', ReadPreference, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var ReadPreference = J$.X1(289, J$.W(281, 'ReadPreference', J$.T(273, function (mode, tags) {
                jalangiLabel1666:
                    while (true) {
                        try {
                            J$.Fe(241, arguments.callee, this, arguments);
                            arguments = J$.N(249, 'arguments', arguments, 4);
                            mode = J$.N(257, 'mode', mode, 4);
                            tags = J$.N(265, 'tags', tags, 4);
                            if (J$.X1(1129, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(81, 'this', this, 0), J$.R(89, 'ReadPreference', ReadPreference, 1), 0)))))
                                return J$.X1(137, J$.Rt(129, J$.F(121, J$.R(97, 'ReadPreference', ReadPreference, 1), 1)(J$.R(105, 'mode', mode, 0), J$.R(113, 'tags', tags, 0))));
                            J$.X1(169, J$.P(161, J$.R(145, 'this', this, 0), '_type', J$.T(153, 'ReadPreference', 21, false), 0));
                            J$.X1(201, J$.P(193, J$.R(177, 'this', this, 0), 'mode', J$.R(185, 'mode', mode, 0), 0));
                            J$.X1(233, J$.P(225, J$.R(209, 'this', this, 0), 'tags', J$.R(217, 'tags', tags, 0), 0));
                        } catch (J$e) {
                            J$.Ex(1137, J$e);
                        } finally {
                            if (J$.Fr(1145))
                                continue jalangiLabel1666;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 241), ReadPreference, 3));
            J$.X1(529, J$.P(521, J$.R(297, 'ReadPreference', ReadPreference, 1), 'isValid', J$.T(513, function (_mode) {
                jalangiLabel1667:
                    while (true) {
                        try {
                            J$.Fe(489, arguments.callee, this, arguments);
                            arguments = J$.N(497, 'arguments', arguments, 4);
                            _mode = J$.N(505, '_mode', _mode, 4);
                            return J$.X1(481, J$.Rt(473, J$.C(64, J$.C(56, J$.C(48, J$.C(40, J$.C(32, J$.C(24, J$.C(16, J$.B(26, '==', J$.R(305, '_mode', _mode, 0), J$.G(321, J$.R(313, 'ReadPreference', ReadPreference, 1), 'PRIMARY', 0), 0)) ? J$._() : J$.B(34, '==', J$.R(329, '_mode', _mode, 0), J$.G(345, J$.R(337, 'ReadPreference', ReadPreference, 1), 'PRIMARY_PREFERRED', 0), 0)) ? J$._() : J$.B(42, '==', J$.R(353, '_mode', _mode, 0), J$.G(369, J$.R(361, 'ReadPreference', ReadPreference, 1), 'SECONDARY', 0), 0)) ? J$._() : J$.B(50, '==', J$.R(377, '_mode', _mode, 0), J$.G(393, J$.R(385, 'ReadPreference', ReadPreference, 1), 'SECONDARY_PREFERRED', 0), 0)) ? J$._() : J$.B(58, '==', J$.R(401, '_mode', _mode, 0), J$.G(417, J$.R(409, 'ReadPreference', ReadPreference, 1), 'NEAREST', 0), 0)) ? J$._() : J$.B(66, '==', J$.R(425, '_mode', _mode, 0), J$.T(433, true, 23, false), 0)) ? J$._() : J$.B(74, '==', J$.R(441, '_mode', _mode, 0), J$.T(449, false, 23, false), 0)) ? J$._() : J$.B(82, '==', J$.R(457, '_mode', _mode, 0), J$.T(465, null, 25, false), 0)));
                        } catch (J$e) {
                            J$.Ex(1153, J$e);
                        } finally {
                            if (J$.Fr(1161))
                                continue jalangiLabel1667;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 489), 0));
            J$.X1(697, J$.P(689, J$.G(545, J$.R(537, 'ReadPreference', ReadPreference, 1), 'prototype', 0), 'isValid', J$.T(681, function (mode) {
                jalangiLabel1668:
                    while (true) {
                        try {
                            J$.Fe(649, arguments.callee, this, arguments);
                            arguments = J$.N(657, 'arguments', arguments, 4);
                            mode = J$.N(665, 'mode', mode, 4);
                            J$.N(673, '_mode', _mode, 0);
                            var _mode = J$.X1(601, J$.W(593, '_mode', J$.X1(1169, J$.C(72, J$.B(98, '==', J$.U(90, 'typeof', J$.R(553, 'mode', mode, 0)), J$.T(561, 'string', 21, false), 0))) ? J$.R(569, 'mode', mode, 0) : J$.G(585, J$.R(577, 'this', this, 0), 'mode', 0), _mode, 1));
                            return J$.X1(641, J$.Rt(633, J$.M(625, J$.R(609, 'ReadPreference', ReadPreference, 1), 'isValid', 0)(J$.R(617, '_mode', _mode, 0))));
                        } catch (J$e) {
                            J$.Ex(1177, J$e);
                        } finally {
                            if (J$.Fr(1185))
                                continue jalangiLabel1668;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 649), 0));
            J$.X1(897, J$.P(889, J$.G(713, J$.R(705, 'ReadPreference', ReadPreference, 1), 'prototype', 0), 'toObject', J$.T(881, function () {
                jalangiLabel1669:
                    while (true) {
                        try {
                            J$.Fe(857, arguments.callee, this, arguments);
                            arguments = J$.N(865, 'arguments', arguments, 4);
                            J$.N(873, 'object', object, 0);
                            var object = J$.X1(753, J$.W(745, 'object', J$.T(737, {
                                mode: J$.G(729, J$.R(721, 'this', this, 0), 'mode', 0)
                            }, 11, false), object, 1));
                            if (J$.X1(1193, J$.C(80, J$.B(106, '!=', J$.G(769, J$.R(761, 'this', this, 0), 'tags', 0), J$.T(777, null, 25, false), 0)))) {
                                J$.X1(825, J$.P(817, J$.R(785, 'object', object, 0), J$.T(793, 'tags', 21, false), J$.G(809, J$.R(801, 'this', this, 0), 'tags', 0), 2));
                            }
                            return J$.X1(849, J$.Rt(841, J$.R(833, 'object', object, 0)));
                        } catch (J$e) {
                            J$.Ex(1201, J$e);
                        } finally {
                            if (J$.Fr(1209))
                                continue jalangiLabel1669;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 857), 0));
            J$.X1(929, J$.P(921, J$.R(905, 'ReadPreference', ReadPreference, 1), 'PRIMARY', J$.T(913, 'primary', 21, false), 0));
            J$.X1(961, J$.P(953, J$.R(937, 'ReadPreference', ReadPreference, 1), 'PRIMARY_PREFERRED', J$.T(945, 'primaryPreferred', 21, false), 0));
            J$.X1(993, J$.P(985, J$.R(969, 'ReadPreference', ReadPreference, 1), 'SECONDARY', J$.T(977, 'secondary', 21, false), 0));
            J$.X1(1025, J$.P(1017, J$.R(1001, 'ReadPreference', ReadPreference, 1), 'SECONDARY_PREFERRED', J$.T(1009, 'secondaryPreferred', 21, false), 0));
            J$.X1(1057, J$.P(1049, J$.R(1033, 'ReadPreference', ReadPreference, 1), 'NEAREST', J$.T(1041, 'nearest', 21, false), 0));
            J$.X1(1089, J$.P(1081, J$.R(1065, 'exports', exports, 2), 'ReadPreference', J$.R(1073, 'ReadPreference', ReadPreference, 1), 0));
        } catch (J$e) {
            J$.Ex(1217, J$e);
        } finally {
            if (J$.Sr(1225)) {
                J$.L();
                continue jalangiLabel1670;
            } else {
                J$.L();
                break jalangiLabel1670;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
