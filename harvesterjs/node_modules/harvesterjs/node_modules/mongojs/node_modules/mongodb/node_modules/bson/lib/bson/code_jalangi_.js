J$.iids = {"8":[4,9,4,32],"9":[1,20,1,27],"10":[4,11,4,31],"16":[8,18,8,31],"17":[1,28,1,32],"18":[4,9,4,32],"25":[1,20,1,33],"26":[8,18,8,31],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,11,4,15],"89":[4,27,4,31],"97":[5,20,5,24],"105":[5,25,5,29],"113":[5,31,5,36],"121":[5,16,5,37],"129":[5,16,5,37],"137":[5,9,5,38],"145":[6,5,6,9],"153":[6,22,6,28],"161":[6,5,6,28],"169":[6,5,6,29],"177":[7,5,7,9],"185":[7,17,7,21],"193":[7,5,7,21],"201":[7,5,7,22],"209":[8,5,8,9],"217":[8,18,8,23],"225":[8,27,8,31],"233":[8,34,8,36],"241":[8,39,8,44],"249":[8,5,8,44],"257":[8,5,8,45],"265":[3,12,9,2],"273":[3,12,9,2],"281":[3,12,9,2],"289":[3,12,9,2],"297":[3,12,9,2],"305":[3,12,9,2],"313":[3,12,9,2],"321":[3,12,9,2],"329":[10,1,10,5],"337":[10,1,10,15],"345":[12,16,12,20],"353":[12,16,12,26],"361":[13,15,13,19],"369":[13,15,13,24],"377":[11,12,14,6],"385":[11,12,14,6],"393":[11,5,14,7],"401":[10,25,15,2],"409":[10,25,15,2],"417":[10,25,15,2],"425":[10,1,15,2],"433":[10,1,15,3],"441":[16,1,16,7],"449":[16,18,16,22],"457":[16,1,16,22],"465":[16,1,16,23],"473":[17,1,17,7],"481":[17,1,17,15],"489":[17,23,17,27],"497":[17,1,17,27],"505":[17,1,17,28],"513":[1,1,17,28],"521":[1,1,17,28],"529":[1,1,17,28],"537":[1,1,17,28],"545":[4,5,5,38],"553":[8,18,8,44],"561":[3,12,9,2],"569":[3,12,9,2],"577":[10,25,15,2],"585":[10,25,15,2],"593":[1,1,17,28],"601":[1,1,17,28],"nBranches":4,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/code.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/code_jalangi_.js","code":"/**\n * A class representation of the BSON Code type.\n *\n * @class\n * @param {(string|function)} code a string or function.\n * @param {Object} [scope] an optional scope for the function.\n * @return {Code}\n */\nvar Code = function Code(code, scope) {\n  if(!(this instanceof Code)) return new Code(code, scope);\n  this._bsontype = 'Code';\n  this.code = code;\n  this.scope = scope == null ? {} : scope;\n};\n\n/**\n * @ignore\n */\nCode.prototype.toJSON = function() {\n  return {scope:this.scope, code:this.code};\n}\n\nmodule.exports = Code;\nmodule.exports.Code = Code;"};
jalangiLabel1464:
    while (true) {
        try {
            J$.Se(513, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/code_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/code.js');
            J$.N(521, '__secret__S$', __secret__S$, 0);
            J$.N(529, '__secret__traits__', __secret__traits__, 0);
            J$.N(537, 'Code', Code, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var Code = J$.X1(321, J$.W(313, 'Code', J$.T(305, function Code(code, scope) {
                jalangiLabel1462:
                    while (true) {
                        try {
                            J$.Fe(265, arguments.callee, this, arguments);
                            arguments = J$.N(273, 'arguments', arguments, 4);
                            Code = J$.N(281, 'Code', Code, 0);
                            code = J$.N(289, 'code', code, 4);
                            scope = J$.N(297, 'scope', scope, 4);
                            if (J$.X1(545, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(81, 'this', this, 0), J$.R(89, 'Code', Code, 0), 0)))))
                                return J$.X1(137, J$.Rt(129, J$.F(121, J$.R(97, 'Code', Code, 0), 1)(J$.R(105, 'code', code, 0), J$.R(113, 'scope', scope, 0))));
                            J$.X1(169, J$.P(161, J$.R(145, 'this', this, 0), '_bsontype', J$.T(153, 'Code', 21, false), 0));
                            J$.X1(201, J$.P(193, J$.R(177, 'this', this, 0), 'code', J$.R(185, 'code', code, 0), 0));
                            J$.X1(257, J$.P(249, J$.R(209, 'this', this, 0), 'scope', J$.X1(553, J$.C(16, J$.B(26, '==', J$.R(217, 'scope', scope, 0), J$.T(225, null, 25, false), 0))) ? J$.T(233, {}, 11, false) : J$.R(241, 'scope', scope, 0), 0));
                        } catch (J$e) {
                            J$.Ex(561, J$e);
                        } finally {
                            if (J$.Fr(569))
                                continue jalangiLabel1462;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 265), Code, 3));
            J$.X1(433, J$.P(425, J$.G(337, J$.R(329, 'Code', Code, 1), 'prototype', 0), 'toJSON', J$.T(417, function () {
                jalangiLabel1463:
                    while (true) {
                        try {
                            J$.Fe(401, arguments.callee, this, arguments);
                            arguments = J$.N(409, 'arguments', arguments, 4);
                            return J$.X1(393, J$.Rt(385, J$.T(377, {
                                scope: J$.G(353, J$.R(345, 'this', this, 0), 'scope', 0),
                                code: J$.G(369, J$.R(361, 'this', this, 0), 'code', 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(577, J$e);
                        } finally {
                            if (J$.Fr(585))
                                continue jalangiLabel1463;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 401), 0));
            J$.X1(465, J$.P(457, J$.R(441, 'module', module, 2), 'exports', J$.R(449, 'Code', Code, 1), 0));
            J$.X1(505, J$.P(497, J$.G(481, J$.R(473, 'module', module, 2), 'exports', 0), 'Code', J$.R(489, 'Code', Code, 1), 0));
        } catch (J$e) {
            J$.Ex(593, J$e);
        } finally {
            if (J$.Sr(601)) {
                J$.L();
                continue jalangiLabel1464;
            } else {
                J$.L();
                break jalangiLabel1464;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
