J$.iids = {"9":[1,20,1,27],"10":[21,26,21,37],"17":[1,28,1,32],"18":[42,30,42,41],"25":[1,20,1,33],"26":[65,30,65,41],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,5,4,12],"89":[4,24,4,31],"97":[4,32,4,40],"105":[4,24,4,41],"113":[4,5,4,41],"121":[4,5,4,42],"129":[5,5,5,12],"137":[5,26,5,33],"145":[5,34,5,45],"153":[5,26,5,46],"161":[5,5,5,46],"169":[5,5,5,47],"177":[6,3,7,2],"185":[9,5,9,22],"193":[10,5,10,15],"201":[11,5,11,13],"209":[12,5,12,15],"217":[13,5,13,15],"225":[14,5,14,16],"233":[15,5,15,16],"241":[16,5,16,17],"249":[17,5,17,15],"257":[18,5,18,18],"265":[19,5,19,13],"273":[8,1,20,2],"281":[21,18,21,25],"289":[21,26,21,30],"297":[21,33,21,37],"305":[21,18,21,38],"313":[21,18,21,38],"321":[21,18,21,38],"329":[22,19,22,25],"337":[23,9,23,16],"345":[23,17,23,18],"353":[23,22,23,28],"361":[23,29,23,30],"369":[23,22,23,31],"377":[23,9,23,31],"385":[23,9,23,32],"393":[22,19,22,25],"401":[22,5,24,6],"409":[22,5,24,6],"417":[20,11,25,2],"425":[20,11,25,2],"433":[20,11,25,2],"441":[20,11,25,2],"449":[20,11,25,2],"457":[20,11,25,2],"465":[8,1,25,3],"467":[8,1,20,10],"473":[8,1,25,4],"481":[26,1,26,8],"489":[27,19,27,21],"497":[27,19,27,21],"505":[27,19,27,21],"513":[29,9,29,26],"521":[30,9,30,19],"529":[31,9,31,17],"537":[32,9,32,19],"545":[33,9,33,19],"553":[34,9,34,20],"561":[35,9,35,20],"569":[36,9,36,21],"577":[37,9,37,19],"585":[38,9,38,22],"593":[39,9,39,17],"601":[40,9,40,20],"609":[28,5,41,6],"617":[42,22,42,29],"625":[42,30,42,34],"633":[42,37,42,41],"641":[42,22,42,42],"649":[42,22,42,42],"657":[42,22,42,42],"665":[43,23,43,29],"673":[44,13,44,20],"681":[44,21,44,22],"689":[44,26,44,32],"697":[44,33,44,34],"705":[44,26,44,35],"713":[44,13,44,35],"721":[44,13,44,36],"729":[43,23,43,29],"737":[43,9,45,10],"745":[43,9,45,10],"753":[41,15,46,6],"761":[41,15,46,6],"769":[41,15,46,6],"777":[41,15,46,6],"785":[41,15,46,6],"793":[41,15,46,6],"801":[28,5,46,7],"803":[28,5,41,14],"809":[28,5,46,8],"817":[47,12,47,19],"825":[47,12,47,19],"833":[47,5,47,20],"841":[26,18,48,2],"849":[26,18,48,2],"857":[26,18,48,2],"865":[26,18,48,2],"873":[26,1,48,2],"881":[26,1,48,3],"889":[49,1,49,8],"897":[50,19,50,21],"905":[50,19,50,21],"913":[50,19,50,21],"921":[52,9,52,26],"929":[53,9,53,19],"937":[54,9,54,17],"945":[55,9,55,19],"953":[56,9,56,19],"961":[57,9,57,20],"969":[58,9,58,20],"977":[59,9,59,21],"985":[60,9,60,19],"993":[61,9,61,22],"1001":[62,9,62,17],"1009":[63,9,63,19],"1017":[51,5,64,6],"1025":[65,22,65,29],"1033":[65,30,65,34],"1041":[65,37,65,41],"1049":[65,22,65,42],"1057":[65,22,65,42],"1065":[65,22,65,42],"1073":[66,23,66,29],"1081":[67,13,67,20],"1089":[67,21,67,22],"1097":[67,26,67,32],"1105":[67,33,67,34],"1113":[67,26,67,35],"1121":[67,13,67,35],"1129":[67,13,67,36],"1137":[66,23,66,29],"1145":[66,9,68,10],"1153":[66,9,68,10],"1161":[64,15,69,6],"1169":[64,15,69,6],"1177":[64,15,69,6],"1185":[64,15,69,6],"1193":[64,15,69,6],"1201":[64,15,69,6],"1209":[51,5,69,7],"1211":[51,5,64,14],"1217":[51,5,69,8],"1225":[70,12,70,19],"1233":[70,12,70,19],"1241":[70,5,70,20],"1249":[49,16,71,2],"1257":[49,16,71,2],"1265":[49,16,71,2],"1273":[49,16,71,2],"1281":[49,1,71,2],"1289":[49,1,71,3],"1297":[1,1,71,3],"1305":[1,1,71,3],"1313":[1,1,71,3],"1321":[20,11,25,2],"1329":[20,11,25,2],"1337":[41,15,46,6],"1345":[41,15,46,6],"1353":[26,18,48,2],"1361":[26,18,48,2],"1369":[64,15,69,6],"1377":[64,15,69,6],"1385":[49,16,71,2],"1393":[49,16,71,2],"1401":[1,1,71,3],"1409":[1,1,71,3],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/index_jalangi_.js","code":"try {\n  exports.BSONPure = require('./bson');\n  exports.BSONNative = require('../../ext');\n} catch(err) {\n  // do nothing\n}\n\n[ './binary_parser'\n  , './binary'\n  , './code'\n  , './db_ref'\n  , './double'\n  , './max_key'\n  , './min_key'\n  , './objectid'\n  , './symbol'\n  , './timestamp'\n  , './long'].forEach(function (path) {\n  \tvar module = require('./' + path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n});\n\n// Exports all the classes for the NATIVE JS BSON Parser\nexports.native = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './symbol'\n    , './timestamp'\n    , './long'\n    , '../../ext'\n].forEach(function (path) {\n    \tvar module = require('./' + path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n  // Return classes list\n  return classes;\n}\n\n// Exports all the classes for the PURE JS BSON Parser\nexports.pure = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './symbol'\n    , './timestamp'\n    , './long'\n    , '././bson'].forEach(function (path) {\n    \tvar module = require('./' + path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n  // Return classes list\n  return classes;\n}\n"};
jalangiLabel1294:
    while (true) {
        try {
            J$.Se(1297, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongojs/node_modules/mongodb/node_modules/bson/lib/bson/index.js');
            J$.N(1305, '__secret__S$', __secret__S$, 0);
            J$.N(1313, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            try {
                J$.X1(121, J$.P(113, J$.R(81, 'exports', exports, 2), 'BSONPure', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, './bson', 21, false)), 0));
                J$.X1(169, J$.P(161, J$.R(129, 'exports', exports, 2), 'BSONNative', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, '../../ext', 21, false)), 0));
            } catch (err) {
                err = J$.N(177, 'err', err, 1);
            }
            J$.X1(473, J$.M(465, J$.T(273, [
                J$.T(185, './binary_parser', 21, false),
                J$.T(193, './binary', 21, false),
                J$.T(201, './code', 21, false),
                J$.T(209, './db_ref', 21, false),
                J$.T(217, './double', 21, false),
                J$.T(225, './max_key', 21, false),
                J$.T(233, './min_key', 21, false),
                J$.T(241, './objectid', 21, false),
                J$.T(249, './symbol', 21, false),
                J$.T(257, './timestamp', 21, false),
                J$.T(265, './long', 21, false)
            ], 10, false), 'forEach', 0)(J$.T(457, function (path) {
                jalangiLabel1289:
                    while (true) {
                        try {
                            J$.Fe(417, arguments.callee, this, arguments);
                            arguments = J$.N(425, 'arguments', arguments, 4);
                            path = J$.N(433, 'path', path, 4);
                            J$.N(441, 'module', module, 0);
                            J$.N(449, 'i', i, 0);
                            var module = J$.X1(321, J$.W(313, 'module', J$.F(305, J$.R(281, 'require', require, 2), 0)(J$.B(10, '+', J$.T(289, './', 21, false), J$.R(297, 'path', path, 0), 0)), module, 1));
                            for (J$._tm_p in J$.H(393, J$.R(329, 'module', module, 0))) {
                                var i = J$.X1(409, J$.W(401, 'i', J$._tm_p, i, 1));
                                {
                                    {
                                        J$.X1(385, J$.P(377, J$.R(337, 'exports', exports, 2), J$.R(345, 'i', i, 0), J$.G(369, J$.R(353, 'module', module, 0), J$.R(361, 'i', i, 0), 4), 2));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1321, J$e);
                        } finally {
                            if (J$.Fr(1329))
                                continue jalangiLabel1289;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 417)));
            J$.X1(881, J$.P(873, J$.R(481, 'exports', exports, 2), 'native', J$.T(865, function () {
                jalangiLabel1291:
                    while (true) {
                        try {
                            J$.Fe(841, arguments.callee, this, arguments);
                            arguments = J$.N(849, 'arguments', arguments, 4);
                            J$.N(857, 'classes', classes, 0);
                            var classes = J$.X1(505, J$.W(497, 'classes', J$.T(489, {}, 11, false), classes, 1));
                            J$.X1(809, J$.M(801, J$.T(609, [
                                J$.T(513, './binary_parser', 21, false),
                                J$.T(521, './binary', 21, false),
                                J$.T(529, './code', 21, false),
                                J$.T(537, './db_ref', 21, false),
                                J$.T(545, './double', 21, false),
                                J$.T(553, './max_key', 21, false),
                                J$.T(561, './min_key', 21, false),
                                J$.T(569, './objectid', 21, false),
                                J$.T(577, './symbol', 21, false),
                                J$.T(585, './timestamp', 21, false),
                                J$.T(593, './long', 21, false),
                                J$.T(601, '../../ext', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(793, function (path) {
                                jalangiLabel1290:
                                    while (true) {
                                        try {
                                            J$.Fe(753, arguments.callee, this, arguments);
                                            arguments = J$.N(761, 'arguments', arguments, 4);
                                            path = J$.N(769, 'path', path, 4);
                                            J$.N(777, 'module', module, 0);
                                            J$.N(785, 'i', i, 0);
                                            var module = J$.X1(657, J$.W(649, 'module', J$.F(641, J$.R(617, 'require', require, 2), 0)(J$.B(18, '+', J$.T(625, './', 21, false), J$.R(633, 'path', path, 0), 0)), module, 1));
                                            for (J$._tm_p in J$.H(729, J$.R(665, 'module', module, 0))) {
                                                var i = J$.X1(745, J$.W(737, 'i', J$._tm_p, i, 1));
                                                {
                                                    {
                                                        J$.X1(721, J$.P(713, J$.R(673, 'classes', classes, 0), J$.R(681, 'i', i, 0), J$.G(705, J$.R(689, 'module', module, 0), J$.R(697, 'i', i, 0), 4), 2));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1337, J$e);
                                        } finally {
                                            if (J$.Fr(1345))
                                                continue jalangiLabel1290;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 753)));
                            return J$.X1(833, J$.Rt(825, J$.R(817, 'classes', classes, 0)));
                        } catch (J$e) {
                            J$.Ex(1353, J$e);
                        } finally {
                            if (J$.Fr(1361))
                                continue jalangiLabel1291;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 841), 0));
            J$.X1(1289, J$.P(1281, J$.R(889, 'exports', exports, 2), 'pure', J$.T(1273, function () {
                jalangiLabel1293:
                    while (true) {
                        try {
                            J$.Fe(1249, arguments.callee, this, arguments);
                            arguments = J$.N(1257, 'arguments', arguments, 4);
                            J$.N(1265, 'classes', classes, 0);
                            var classes = J$.X1(913, J$.W(905, 'classes', J$.T(897, {}, 11, false), classes, 1));
                            J$.X1(1217, J$.M(1209, J$.T(1017, [
                                J$.T(921, './binary_parser', 21, false),
                                J$.T(929, './binary', 21, false),
                                J$.T(937, './code', 21, false),
                                J$.T(945, './db_ref', 21, false),
                                J$.T(953, './double', 21, false),
                                J$.T(961, './max_key', 21, false),
                                J$.T(969, './min_key', 21, false),
                                J$.T(977, './objectid', 21, false),
                                J$.T(985, './symbol', 21, false),
                                J$.T(993, './timestamp', 21, false),
                                J$.T(1001, './long', 21, false),
                                J$.T(1009, '././bson', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(1201, function (path) {
                                jalangiLabel1292:
                                    while (true) {
                                        try {
                                            J$.Fe(1161, arguments.callee, this, arguments);
                                            arguments = J$.N(1169, 'arguments', arguments, 4);
                                            path = J$.N(1177, 'path', path, 4);
                                            J$.N(1185, 'module', module, 0);
                                            J$.N(1193, 'i', i, 0);
                                            var module = J$.X1(1065, J$.W(1057, 'module', J$.F(1049, J$.R(1025, 'require', require, 2), 0)(J$.B(26, '+', J$.T(1033, './', 21, false), J$.R(1041, 'path', path, 0), 0)), module, 1));
                                            for (J$._tm_p in J$.H(1137, J$.R(1073, 'module', module, 0))) {
                                                var i = J$.X1(1153, J$.W(1145, 'i', J$._tm_p, i, 1));
                                                {
                                                    {
                                                        J$.X1(1129, J$.P(1121, J$.R(1081, 'classes', classes, 0), J$.R(1089, 'i', i, 0), J$.G(1113, J$.R(1097, 'module', module, 0), J$.R(1105, 'i', i, 0), 4), 2));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1369, J$e);
                                        } finally {
                                            if (J$.Fr(1377))
                                                continue jalangiLabel1292;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1161)));
                            return J$.X1(1241, J$.Rt(1233, J$.R(1225, 'classes', classes, 0)));
                        } catch (J$e) {
                            J$.Ex(1385, J$e);
                        } finally {
                            if (J$.Fr(1393))
                                continue jalangiLabel1293;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1249), 0));
        } catch (J$e) {
            J$.Ex(1401, J$e);
        } finally {
            if (J$.Sr(1409)) {
                J$.L();
                continue jalangiLabel1294;
            } else {
                J$.L();
                break jalangiLabel1294;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
