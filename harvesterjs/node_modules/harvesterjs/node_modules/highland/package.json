{
  "_args": [
    [
      {
        "raw": "highland@https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
        "scope": null,
        "escapedName": "highland",
        "name": "highland",
        "rawSpec": "https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
        "spec": "https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
        "type": "remote"
      },
      "/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs"
    ]
  ],
  "_from": "highland@>=2.5.1 <3.0.0",
  "_id": "highland@2.5.1",
  "_inCache": true,
  "_location": "/harvesterjs/highland",
  "_phantomChildren": {},
  "_requested": {
    "raw": "highland@https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
    "scope": null,
    "escapedName": "highland",
    "name": "highland",
    "rawSpec": "https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
    "spec": "https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/harvesterjs"
  ],
  "_resolved": "https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
  "_shasum": "ffa802fe0a4d574e2033621a5cfa4b6d4159ab76",
  "_shrinkwrap": null,
  "_spec": "highland@https://registry.npmjs.org/highland/-/highland-2.5.1.tgz",
  "_where": "/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs",
  "bugs": {
    "url": "https://github.com/caolan/highland/issues"
  },
  "dependencies": {},
  "description": "The high-level streams library",
  "devDependencies": {
    "browserify": "~3.30.1",
    "concat-stream": "~1.4.1",
    "es6-promise": "~0.1.1",
    "eslint": "~0.10.0",
    "grunt": "~0.4.2",
    "grunt-browserify": "~1.3.1",
    "grunt-bump": "0.0.13",
    "grunt-contrib-nodeunit": "~0.3.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-eslint": "~2.1.0",
    "grunt-gh-pages": "~0.9.0",
    "grunt-npm": "0.0.2",
    "handlebars": "~1.3.0",
    "nodeunit": "~0.8.6",
    "nodeunit-tape": "~0.2.0",
    "scrawl": "0.0.5",
    "sinon": "~1.8.2",
    "stream-array": "~1.0.1",
    "tape": "~2.4.2",
    "through": "~2.3.4",
    "transducers-js": "~0.4.135"
  },
  "files": [
    "lib"
  ],
  "homepage": "http://highlandjs.org/",
  "license": {
    "type": "Apache 2.0",
    "url": "https://github.com/caolan/highland/raw/master/LICENSE"
  },
  "main": "lib/index.js",
  "name": "highland",
  "optionalDependencies": {},
  "readme": "# Highland\n\nThe high-level streams library for Node.js and the browser.\nView the [Highland website](http://highlandjs.org) for more in-depth\ndocumentation.\n\n[![build status](https://secure.travis-ci.org/caolan/highland.png)](http://travis-ci.org/caolan/highland)\n[![Join the chat at https://gitter.im/caolan/highland](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/highland?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## Introduction\n\nRe-thinking the [JavaScript](http://underscorejs.org)\n[utility](http://lodash.com) [belt](https://github.com/caolan/async),\nHighland manages synchronous and asynchronous code easily, using nothing more than\nstandard JavaScript and Node-like Streams.\nYou may be familiar with Promises, EventEmitters and callbacks, but moving\nbetween them is far from seamless. Thankfully, there exists a deeper abstraction\nwhich can free our code. By updating the tools we use on Arrays, and applying them\nto values distributed in time instead of space, we can discard plumbing and\nfocus on the important things. With Highland, you can switch between\nsynchronous and asynchronous data sources at will, without having to\nre-write your code. Time to dive in!\n\nMade by <a href=\"http://twitter.com/caolan\">@caolan</a>, with help and patience from friends - <a href=\"http://gittip.com/caolan\">Leave a tip</a> or <a href=\"https://github.com/caolan/highland\">fork this</a> :)\n\n## Examples\n\nUsage as a Node.js module\n\n```javascript\nvar _ = require('highland');\n```\n\nConverting to/from Highland Streams\n\n```javascript\n_([1,2,3,4]).toArray(function (xs) {\n    // xs is [1,2,3,4]\n});\n```\n\nMapping over a Stream\n\n```javascript\nvar doubled = _([1,2,3,4]).map(function (x) {\n    return x * 2;\n});\n```\n\nReading files in parallel (4 at once)\n\n```javascript\nvar data = _(filenames).map(readFile).parallel(4);\n```\n\nHandling errors\n\n```javascript\ndata.errors(function (err, rethrow) {\n    // handle or rethrow error\n});\n```\n\nPiping to a Node Stream\n\n```javascript\ndata.pipe(output);\n```\n\nPiping in data from Node Streams\n\n```javascript\nvar output = fs.createWriteStream('output');\nvar docs = db.createReadStream();\n\n// wrap a node stream and pipe to file\n_(docs).filter(isBlogpost).pipe(output);\n\n// or, pipe in a node stream directly:\nvar through = _.pipeline(_.filter(isBlogpost));\ndocs.pipe(through).pipe(output);\n```\n\nHandling events\n\n```javascript\nvar clicks = _('click', btn).map(1);\nvar counter = clicks.scan(0, _.add);\n\ncounter.each(function (n) {\n    $('#count').text(n);\n});\n```\n\nLearn more at [highlandjs.org](http://highlandjs.org)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/caolan/highland.git"
  },
  "scripts": {
    "test": "eslint Gruntfile.js lib && nodeunit test/test.js"
  },
  "testling": {
    "files": "test/testling.js",
    "browsers": [
      "ie/8..latest",
      "chrome/latest",
      "firefox/latest",
      "safari/latest",
      "opera/latest",
      "iphone/latest",
      "ipad/latest",
      "android-browser/latest"
    ]
  },
  "version": "2.5.1"
}
