J$.iids = {"8":[9,9,9,32],"9":[1,20,1,27],"10":[9,9,9,32],"16":[15,13,15,16],"17":[1,28,1,32],"18":[30,13,30,28],"24":[28,15,28,28],"25":[1,20,1,33],"32":[30,13,30,28],"33":[1,20,1,33],"40":[38,17,38,20],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,17,3,24],"89":[3,25,3,31],"97":[3,17,3,32],"105":[3,33,3,46],"113":[3,17,3,47],"121":[3,17,3,47],"129":[3,17,3,47],"137":[4,10,4,17],"145":[4,18,4,22],"153":[4,10,4,23],"161":[4,10,4,23],"169":[4,10,4,23],"177":[5,12,5,19],"185":[5,20,5,26],"193":[5,12,5,27],"201":[5,12,5,27],"209":[5,12,5,27],"217":[6,11,6,17],"225":[6,28,6,37],"233":[6,47,6,57],"241":[6,59,6,115],"249":[6,28,6,116],"251":[6,28,6,46],"257":[6,11,6,116],"265":[6,11,6,116],"273":[6,1,6,117],"281":[7,18,7,22],"289":[7,28,7,37],"297":[7,39,7,44],"305":[7,46,7,53],"313":[7,18,7,54],"315":[7,18,7,27],"321":[7,18,7,54],"329":[7,18,7,54],"337":[8,1,8,3],"345":[8,16,8,26],"353":[8,1,8,27],"355":[8,1,8,15],"361":[9,10,9,17],"369":[9,23,9,31],"377":[9,10,9,32],"379":[9,10,9,22],"385":[10,9,10,16],"393":[10,9,10,16],"401":[11,15,11,19],"409":[11,28,11,38],"417":[11,40,11,48],"425":[11,15,11,49],"427":[11,15,11,27],"433":[11,15,11,49],"441":[11,15,11,49],"449":[13,16,13,20],"457":[13,30,13,38],"465":[13,40,13,45],"473":[13,16,13,46],"475":[13,16,13,29],"481":[13,16,13,46],"489":[13,16,13,46],"497":[15,13,15,16],"505":[16,20,16,23],"513":[16,20,16,23],"521":[16,13,16,24],"529":[18,22,18,29],"537":[18,30,18,33],"545":[18,22,18,34],"553":[18,22,18,34],"561":[18,16,18,34],"569":[18,9,18,35],"577":[14,5,19,6],"585":[14,5,19,6],"593":[20,5,20,11],"601":[20,27,20,34],"609":[20,36,20,40],"617":[21,23,21,27],"625":[22,21,22,25],"633":[23,14,23,18],"641":[20,42,24,6],"649":[20,5,24,7],"651":[20,5,20,26],"657":[20,5,24,8],"665":[8,36,25,2],"673":[8,36,25,2],"681":[8,36,25,2],"689":[8,36,25,2],"697":[8,36,25,2],"705":[8,36,25,2],"713":[8,36,25,2],"721":[14,5,19,6],"729":[8,36,25,2],"737":[8,36,25,2],"745":[8,1,25,3],"747":[8,1,8,35],"753":[8,1,25,4],"761":[27,16,27,18],"769":[27,16,27,18],"777":[27,16,27,18],"785":[28,15,28,22],"793":[28,26,28,28],"801":[28,15,28,28],"809":[28,5,28,29],"817":[29,22,29,29],"825":[30,13,30,19],"833":[30,24,30,28],"841":[31,13,31,17],"849":[31,18,31,22],"857":[31,26,31,33],"865":[31,34,31,38],"873":[31,26,31,39],"881":[31,13,31,39],"889":[31,13,31,40],"897":[29,22,29,29],"905":[29,5,33,6],"913":[29,5,33,6],"921":[34,23,34,30],"929":[34,42,34,46],"937":[34,23,34,47],"939":[34,23,34,41],"945":[34,23,34,47],"953":[34,23,34,47],"961":[35,17,35,24],"969":[35,30,35,34],"977":[35,17,35,35],"979":[35,17,35,29],"985":[35,17,35,35],"993":[35,17,35,35],"1001":[37,9,37,14],"1009":[37,15,37,18],"1017":[37,20,37,23],"1025":[38,17,38,20],"1033":[39,24,39,28],"1041":[39,29,39,32],"1049":[39,24,39,33],"1057":[39,24,39,33],"1065":[39,17,39,34],"1073":[40,13,40,24],"1081":[40,25,40,28],"1089":[40,30,40,33],"1097":[40,35,40,39],"1105":[40,13,40,40],"1113":[40,13,40,41],"1121":[37,25,41,10],"1129":[37,25,41,10],"1137":[37,25,41,10],"1145":[37,25,41,10],"1153":[37,9,41,11],"1161":[37,9,41,12],"1169":[36,12,42,6],"1177":[36,12,42,6],"1185":[36,12,42,6],"1193":[36,12,42,6],"1201":[36,12,42,6],"1209":[36,12,42,6],"1217":[36,12,42,6],"1225":[36,12,42,6],"1233":[36,5,42,7],"1241":[26,1,43,2],"1249":[26,1,43,2],"1257":[26,1,43,2],"1265":[26,1,43,2],"1273":[26,1,43,2],"1281":[26,1,43,2],"1289":[26,1,43,2],"1297":[1,1,43,2],"1305":[1,1,43,2],"1313":[1,1,43,2],"1321":[1,1,43,2],"1329":[1,1,43,2],"1337":[1,1,43,2],"1345":[1,1,43,2],"1353":[26,1,43,2],"1361":[1,1,43,2],"1369":[9,5,10,16],"1377":[15,9,17,10],"1385":[14,5,19,6],"1393":[14,5,19,6],"1401":[8,36,25,2],"1409":[8,36,25,2],"1417":[30,9,32,10],"1425":[38,13,39,34],"1433":[37,25,41,10],"1441":[37,25,41,10],"1449":[36,12,42,6],"1457":[36,12,42,6],"1465":[26,1,43,2],"1473":[26,1,43,2],"1481":[1,1,43,2],"1489":[1,1,43,2],"nBranches":10,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/body-parser/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/body-parser/index_jalangi_.js","code":"/*!\n * body-parser\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar deprecate = require('depd')('body-parser')\nvar fs = require('fs')\nvar path = require('path')\n\n/**\n * Module exports.\n */\n\nexports = module.exports = deprecate.function(bodyParser,\n  'bodyParser: use individual json/urlencoded middlewares')\n\n/**\n * Path to the parser modules.\n */\n\nvar parsersDir = path.join(__dirname, 'lib', 'types')\n\n/**\n * Auto-load bundled parsers with getters.\n */\n\nfs.readdirSync(parsersDir).forEach(function onfilename(filename) {\n  if (!/\\.js$/.test(filename)) return\n\n  var loc = path.resolve(parsersDir, filename)\n  var mod\n  var name = path.basename(filename, '.js')\n\n  function load() {\n    if (mod) {\n      return mod\n    }\n\n    return mod = require(loc)\n  }\n\n  Object.defineProperty(exports, name, {\n    configurable: true,\n    enumerable: true,\n    get: load\n  })\n})\n\n/**\n * Create a middleware to parse json and urlencoded bodies.\n *\n * @param {object} [options]\n * @return {function}\n * @deprecated\n * @api public\n */\n\nfunction bodyParser(options){\n  var opts = {}\n\n  options = options || {}\n\n  // exclude type option\n  for (var prop in options) {\n    if ('type' !== prop) {\n      opts[prop] = options[prop]\n    }\n  }\n\n  var _urlencoded = exports.urlencoded(opts)\n  var _json = exports.json(opts)\n\n  return function bodyParser(req, res, next) {\n    _json(req, res, function(err){\n      if (err) return next(err);\n      _urlencoded(req, res, next);\n    });\n  }\n}\n"};
jalangiLabel611:
    while (true) {
        try {
            J$.Se(1297, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/body-parser/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/body-parser/index.js');
            function bodyParser(options) {
                jalangiLabel610:
                    while (true) {
                        try {
                            J$.Fe(1241, arguments.callee, this, arguments);
                            arguments = J$.N(1249, 'arguments', arguments, 4);
                            options = J$.N(1257, 'options', options, 4);
                            J$.N(1265, 'opts', opts, 0);
                            J$.N(1273, 'prop', prop, 0);
                            J$.N(1281, '_urlencoded', _urlencoded, 0);
                            J$.N(1289, '_json', _json, 0);
                            var opts = J$.X1(777, J$.W(769, 'opts', J$.T(761, {}, 11, false), opts, 1));
                            J$.X1(809, options = J$.W(801, 'options', J$.C(24, J$.R(785, 'options', options, 0)) ? J$._() : J$.T(793, {}, 11, false), options, 0));
                            for (J$._tm_p in J$.H(897, J$.R(817, 'options', options, 0))) {
                                var prop = J$.X1(913, J$.W(905, 'prop', J$._tm_p, prop, 1));
                                {
                                    {
                                        if (J$.X1(1417, J$.C(32, J$.B(18, '!==', J$.T(825, 'type', 21, false), J$.R(833, 'prop', prop, 0), 0)))) {
                                            J$.X1(889, J$.P(881, J$.R(841, 'opts', opts, 0), J$.R(849, 'prop', prop, 0), J$.G(873, J$.R(857, 'options', options, 0), J$.R(865, 'prop', prop, 0), 4), 2));
                                        }
                                    }
                                }
                            }
                            var _urlencoded = J$.X1(953, J$.W(945, '_urlencoded', J$.M(937, J$.R(921, 'exports', exports, 2), 'urlencoded', 0)(J$.R(929, 'opts', opts, 0)), _urlencoded, 1));
                            var _json = J$.X1(993, J$.W(985, '_json', J$.M(977, J$.R(961, 'exports', exports, 2), 'json', 0)(J$.R(969, 'opts', opts, 0)), _json, 1));
                            return J$.X1(1233, J$.Rt(1225, J$.T(1217, function bodyParser(req, res, next) {
                                jalangiLabel609:
                                    while (true) {
                                        try {
                                            J$.Fe(1169, arguments.callee, this, arguments);
                                            arguments = J$.N(1177, 'arguments', arguments, 4);
                                            bodyParser = J$.N(1185, 'bodyParser', bodyParser, 0);
                                            req = J$.N(1193, 'req', req, 4);
                                            res = J$.N(1201, 'res', res, 4);
                                            next = J$.N(1209, 'next', next, 4);
                                            J$.X1(1161, J$.F(1153, J$.R(1001, '_json', _json, 0), 0)(J$.R(1009, 'req', req, 0), J$.R(1017, 'res', res, 0), J$.T(1145, function (err) {
                                                jalangiLabel608:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(1121, arguments.callee, this, arguments);
                                                            arguments = J$.N(1129, 'arguments', arguments, 4);
                                                            err = J$.N(1137, 'err', err, 4);
                                                            if (J$.X1(1425, J$.C(40, J$.R(1025, 'err', err, 0))))
                                                                return J$.X1(1065, J$.Rt(1057, J$.F(1049, J$.R(1033, 'next', next, 0), 0)(J$.R(1041, 'err', err, 0))));
                                                            J$.X1(1113, J$.F(1105, J$.R(1073, '_urlencoded', _urlencoded, 0), 0)(J$.R(1081, 'req', req, 0), J$.R(1089, 'res', res, 0), J$.R(1097, 'next', next, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(1433, J$e);
                                                        } finally {
                                                            if (J$.Fr(1441))
                                                                continue jalangiLabel608;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 1121)));
                                        } catch (J$e) {
                                            J$.Ex(1449, J$e);
                                        } finally {
                                            if (J$.Fr(1457))
                                                continue jalangiLabel609;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1169)));
                        } catch (J$e) {
                            J$.Ex(1465, J$e);
                        } finally {
                            if (J$.Fr(1473))
                                continue jalangiLabel610;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1305, '__secret__S$', __secret__S$, 0);
            J$.N(1313, '__secret__traits__', __secret__traits__, 0);
            J$.N(1321, 'deprecate', deprecate, 0);
            J$.N(1329, 'fs', fs, 0);
            J$.N(1337, 'path', path, 0);
            J$.N(1345, 'parsersDir', parsersDir, 0);
            bodyParser = J$.N(1361, 'bodyParser', J$.T(1353, bodyParser, 12, false, 1241), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var deprecate = J$.X1(129, J$.W(121, 'deprecate', J$.F(113, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'depd', 21, false)), 0)(J$.T(105, 'body-parser', 21, false)), deprecate, 3));
            var fs = J$.X1(169, J$.W(161, 'fs', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, 'fs', 21, false)), fs, 3));
            var path = J$.X1(209, J$.W(201, 'path', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, 'path', 21, false)), path, 3));
            J$.X1(273, exports = J$.W(265, 'exports', J$.P(257, J$.R(217, 'module', module, 2), 'exports', J$.M(249, J$.R(225, 'deprecate', deprecate, 1), 'function', 0)(J$.R(233, 'bodyParser', bodyParser, 1), J$.T(241, 'bodyParser: use individual json/urlencoded middlewares', 21, false)), 0), J$.I(typeof exports === 'undefined' ? undefined : exports), 4));
            var parsersDir = J$.X1(329, J$.W(321, 'parsersDir', J$.M(313, J$.R(281, 'path', path, 1), 'join', 0)(J$.R(289, '__dirname', __dirname, 2), J$.T(297, 'lib', 21, false), J$.T(305, 'types', 21, false)), parsersDir, 3));
            J$.X1(753, J$.M(745, J$.M(353, J$.R(337, 'fs', fs, 1), 'readdirSync', 0)(J$.R(345, 'parsersDir', parsersDir, 1)), 'forEach', 0)(J$.T(737, function onfilename(filename) {
                jalangiLabel607:
                    while (true) {
                        try {
                            J$.Fe(665, arguments.callee, this, arguments);
                            function load() {
                                jalangiLabel606:
                                    while (true) {
                                        try {
                                            J$.Fe(577, arguments.callee, this, arguments);
                                            arguments = J$.N(585, 'arguments', arguments, 4);
                                            if (J$.X1(1377, J$.C(16, J$.R(497, 'mod', mod, 0)))) {
                                                return J$.X1(521, J$.Rt(513, J$.R(505, 'mod', mod, 0)));
                                            }
                                            return J$.X1(569, J$.Rt(561, mod = J$.W(553, 'mod', J$.F(545, J$.R(529, 'require', require, 2), 0)(J$.R(537, 'loc', loc, 0)), mod, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1385, J$e);
                                        } finally {
                                            if (J$.Fr(1393))
                                                continue jalangiLabel606;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(673, 'arguments', arguments, 4);
                            onfilename = J$.N(681, 'onfilename', onfilename, 0);
                            filename = J$.N(689, 'filename', filename, 4);
                            J$.N(697, 'loc', loc, 0);
                            J$.N(705, 'mod', mod, 0);
                            J$.N(713, 'name', name, 0);
                            load = J$.N(729, 'load', J$.T(721, load, 12, false, 577), 0);
                            if (J$.X1(1369, J$.C(8, J$.U(10, '!', J$.M(377, J$.T(361, /\.js$/, 14, false), 'test', 0)(J$.R(369, 'filename', filename, 0))))))
                                return J$.X1(393, J$.Rt(385, undefined));
                            var loc = J$.X1(441, J$.W(433, 'loc', J$.M(425, J$.R(401, 'path', path, 1), 'resolve', 0)(J$.R(409, 'parsersDir', parsersDir, 1), J$.R(417, 'filename', filename, 0)), loc, 1));
                            var mod;
                            var name = J$.X1(489, J$.W(481, 'name', J$.M(473, J$.R(449, 'path', path, 1), 'basename', 0)(J$.R(457, 'filename', filename, 0), J$.T(465, '.js', 21, false)), name, 1));
                            J$.X1(657, J$.M(649, J$.R(593, 'Object', Object, 2), 'defineProperty', 0)(J$.R(601, 'exports', exports, 2), J$.R(609, 'name', name, 0), J$.T(641, {
                                configurable: J$.T(617, true, 23, false),
                                enumerable: J$.T(625, true, 23, false),
                                get: J$.R(633, 'load', load, 0)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(1401, J$e);
                        } finally {
                            if (J$.Fr(1409))
                                continue jalangiLabel607;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 665)));
        } catch (J$e) {
            J$.Ex(1481, J$e);
        } finally {
            if (J$.Sr(1489)) {
                J$.L();
                continue jalangiLabel611;
            } else {
                J$.L();
                break jalangiLabel611;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
