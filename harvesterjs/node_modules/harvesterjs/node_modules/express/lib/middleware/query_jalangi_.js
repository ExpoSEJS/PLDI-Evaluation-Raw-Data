J$.iids = {"8":[8,25,8,46],"9":[1,20,1,27],"10":[7,13,7,23],"16":[7,13,7,23],"17":[1,28,1,32],"18":[8,25,8,46],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,10,3,17],"89":[3,18,3,22],"97":[3,10,3,23],"105":[3,10,3,23],"113":[3,10,3,23],"121":[4,16,4,23],"129":[4,24,4,34],"137":[4,16,4,35],"145":[4,16,4,35],"153":[4,16,4,35],"161":[5,1,5,7],"169":[7,14,7,17],"177":[7,14,7,23],"185":[8,13,8,16],"193":[8,26,8,29],"201":[8,26,8,33],"209":[8,42,8,45],"217":[8,26,8,46],"219":[8,26,8,41],"225":[8,49,8,51],"233":[8,58,8,66],"241":[8,67,8,70],"249":[8,58,8,71],"257":[8,58,8,77],"265":[8,79,8,86],"273":[8,49,8,87],"275":[8,49,8,57],"281":[8,90,8,92],"289":[8,13,8,92],"297":[8,13,8,93],"305":[10,9,10,13],"313":[10,9,10,15],"321":[10,9,10,16],"329":[6,12,11,6],"337":[6,12,11,6],"345":[6,12,11,6],"353":[6,12,11,6],"361":[6,12,11,6],"369":[6,12,11,6],"377":[6,12,11,6],"385":[6,12,11,6],"393":[6,5,11,7],"401":[5,18,12,2],"409":[5,18,12,2],"417":[5,18,12,2],"425":[5,18,12,2],"433":[5,18,12,2],"441":[5,1,12,2],"449":[5,1,12,3],"457":[1,1,12,3],"465":[1,1,12,3],"473":[1,1,12,3],"481":[1,1,12,3],"489":[1,1,12,3],"497":[8,25,8,92],"505":[7,9,9,10],"513":[6,12,11,6],"521":[6,12,11,6],"529":[5,18,12,2],"537":[5,18,12,2],"545":[1,1,12,3],"553":[1,1,12,3],"nBranches":4,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/lib/middleware/query.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/lib/middleware/query_jalangi_.js","code":"/**\n * Module dependencies.\n */\n\nvar qs = require('qs');\nvar parseUrl = require('parseurl');\n\n/**\n * Query:\n *\n * Automatically parse the query-string when available,\n * populating the `req.query` object using\n * [qs](https://github.com/visionmedia/node-querystring).\n *\n * Examples:\n *\n *       .use(connect.query())\n *       .use(function(req, res){\n *         res.end(JSON.stringify(req.query));\n *       });\n *\n *  The `options` passed are provided to qs.parse function.\n *\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options){\n  return function query(req, res, next){\n    if (!req.query) {\n      req.query = ~req.url.indexOf('?')\n        ? qs.parse(parseUrl(req).query, options)\n        : {};\n    }\n\n    next();\n  };\n};\n"};
jalangiLabel392:
    while (true) {
        try {
            J$.Se(457, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/lib/middleware/query_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/lib/middleware/query.js');
            J$.N(465, '__secret__S$', __secret__S$, 0);
            J$.N(473, '__secret__traits__', __secret__traits__, 0);
            J$.N(481, 'qs', qs, 0);
            J$.N(489, 'parseUrl', parseUrl, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var qs = J$.X1(113, J$.W(105, 'qs', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'qs', 21, false)), qs, 3));
            var parseUrl = J$.X1(153, J$.W(145, 'parseUrl', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'parseurl', 21, false)), parseUrl, 3));
            J$.X1(449, J$.P(441, J$.R(161, 'module', module, 2), 'exports', J$.T(433, function query(options) {
                jalangiLabel391:
                    while (true) {
                        try {
                            J$.Fe(401, arguments.callee, this, arguments);
                            arguments = J$.N(409, 'arguments', arguments, 4);
                            query = J$.N(417, 'query', query, 0);
                            options = J$.N(425, 'options', options, 4);
                            return J$.X1(393, J$.Rt(385, J$.T(377, function query(req, res, next) {
                                jalangiLabel390:
                                    while (true) {
                                        try {
                                            J$.Fe(329, arguments.callee, this, arguments);
                                            arguments = J$.N(337, 'arguments', arguments, 4);
                                            query = J$.N(345, 'query', query, 0);
                                            req = J$.N(353, 'req', req, 4);
                                            res = J$.N(361, 'res', res, 4);
                                            next = J$.N(369, 'next', next, 4);
                                            if (J$.X1(505, J$.C(16, J$.U(10, '!', J$.G(177, J$.R(169, 'req', req, 0), 'query', 0))))) {
                                                J$.X1(297, J$.P(289, J$.R(185, 'req', req, 0), 'query', J$.X1(497, J$.C(8, J$.U(18, '~', J$.M(217, J$.G(201, J$.R(193, 'req', req, 0), 'url', 0), 'indexOf', 0)(J$.T(209, '?', 21, false))))) ? J$.M(273, J$.R(225, 'qs', qs, 1), 'parse', 0)(J$.G(257, J$.F(249, J$.R(233, 'parseUrl', parseUrl, 1), 0)(J$.R(241, 'req', req, 0)), 'query', 0), J$.R(265, 'options', options, 0)) : J$.T(281, {}, 11, false), 0));
                                            }
                                            J$.X1(321, J$.F(313, J$.R(305, 'next', next, 0), 0)());
                                        } catch (J$e) {
                                            J$.Ex(513, J$e);
                                        } finally {
                                            if (J$.Fr(521))
                                                continue jalangiLabel390;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 329)));
                        } catch (J$e) {
                            J$.Ex(529, J$e);
                        } finally {
                            if (J$.Fr(537))
                                continue jalangiLabel391;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 401), 0));
        } catch (J$e) {
            J$.Ex(545, J$e);
        } finally {
            if (J$.Sr(553)) {
                J$.L();
                continue jalangiLabel392;
            } else {
                J$.L();
                break jalangiLabel392;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
