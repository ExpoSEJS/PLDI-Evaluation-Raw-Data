{"8":[13,17,13,59],"9":[1,20,1,27],"10":[12,25,12,40],"16":[13,17,13,59],"17":[1,28,1,32],"18":[12,42,12,45],"24":[12,25,12,40],"25":[1,20,1,33],"32":[18,13,18,35],"33":[1,20,1,33],"34":[12,42,12,45],"40":[35,12,35,39],"41":[1,20,1,33],"42":[14,65,14,86],"48":[35,12,35,60],"49":[2,26,2,38],"50":[14,65,14,113],"56":[48,16,48,40],"57":[2,26,2,45],"58":[14,65,14,132],"65":[2,26,2,45],"66":[14,65,14,141],"73":[2,26,2,45],"74":[14,65,14,148],"81":[3,12,3,19],"82":[18,13,18,35],"89":[3,20,3,26],"97":[3,12,3,27],"105":[3,12,3,27],"113":[3,12,3,27],"121":[4,10,4,17],"129":[4,18,4,22],"137":[4,10,4,23],"145":[4,10,4,23],"153":[4,10,4,23],"161":[6,5,6,9],"169":[6,18,6,24],"177":[6,32,6,36],"185":[6,18,6,37],"187":[6,18,6,31],"193":[6,5,6,37],"201":[6,5,6,38],"209":[7,5,7,9],"217":[7,23,7,29],"225":[7,37,7,41],"233":[7,23,7,42],"235":[7,23,7,36],"241":[7,5,7,42],"249":[7,5,7,43],"257":[5,1,8,2],"265":[5,1,8,2],"273":[9,1,9,5],"281":[9,1,9,15],"289":[10,22,10,25],"297":[11,20,11,23],"305":[11,24,11,28],"313":[11,20,11,29],"321":[11,20,11,29],"329":[11,20,11,29],"337":[12,22,12,23],"345":[12,22,12,23],"353":[12,22,12,23],"361":[12,25,12,26],"369":[12,29,12,33],"377":[12,29,12,40],"393":[12,42,12,43],"401":[12,42,12,45],"417":[13,17,13,24],"425":[13,17,13,28],"433":[13,17,13,39],"441":[13,43,13,47],"449":[13,43,13,53],"457":[13,54,13,58],"465":[13,43,13,59],"473":[14,17,14,24],"481":[14,30,14,34],"489":[14,30,14,43],"497":[14,52,14,58],"505":[14,60,14,62],"513":[14,30,14,63],"515":[14,30,14,51],"521":[14,65,14,76],"529":[14,79,14,83],"537":[14,84,14,85],"545":[14,79,14,86],"553":[14,89,14,113],"561":[14,116,14,120],"569":[14,116,14,126],"577":[14,127,14,131],"585":[14,116,14,132],"593":[14,135,14,141],"601":[14,144,14,148],"609":[14,17,14,149],"611":[14,17,14,29],"617":[14,17,14,150],"625":[16,13,16,17],"633":[16,13,16,23],"641":[16,24,16,28],"649":[16,29,16,30],"657":[16,24,16,31],"665":[16,35,16,39],"673":[16,13,16,39],"681":[16,13,16,40],"689":[18,14,18,18],"697":[18,14,18,29],"705":[18,30,18,34],"713":[18,14,18,35],"721":[19,13,19,17],"729":[19,13,19,28],"737":[19,29,19,33],"745":[19,37,19,41],"753":[19,42,19,43],"761":[19,37,19,44],"769":[19,13,19,44],"777":[19,13,19,45],"785":[10,22,10,25],"793":[10,5,21,6],"801":[10,5,21,6],"809":[9,25,22,2],"817":[9,25,22,2],"825":[9,25,22,2],"833":[9,25,22,2],"841":[9,25,22,2],"849":[9,25,22,2],"857":[9,25,22,2],"865":[9,1,22,2],"873":[9,1,22,3],"881":[23,1,23,5],"889":[23,1,23,15],"897":[24,5,24,9],"905":[24,21,24,25],"913":[24,5,24,25],"921":[24,5,24,26],"929":[25,15,25,17],"937":[25,29,25,31],"945":[25,45,25,49],"953":[25,51,25,58],"961":[25,29,25,59],"963":[25,29,25,44],"969":[25,69,25,76],"977":[25,83,25,92],"985":[25,69,25,93],"987":[25,69,25,82],"993":[25,15,25,17],"1001":[25,15,25,17],"1009":[25,29,25,59],"1017":[25,29,25,59],"1025":[25,69,25,93],"1033":[25,69,25,93],"1041":[26,5,26,10],"1049":[27,22,27,26],"1057":[27,35,27,54],"1065":[27,56,27,58],"1073":[27,22,27,59],"1075":[27,22,27,34],"1081":[27,66,27,71],"1089":[27,22,27,72],"1091":[27,22,27,65],"1097":[27,22,27,72],"1105":[27,22,27,72],"1113":[28,9,28,12],"1121":[28,13,28,19],"1129":[28,13,28,27],"1131":[28,13,28,25],"1137":[28,31,28,37],"1145":[28,9,28,37],"1153":[28,9,28,38],"1161":[26,19,29,6],"1169":[26,19,29,6],"1177":[26,19,29,6],"1185":[26,19,29,6],"1193":[26,19,29,6],"1201":[26,5,29,7],"1203":[26,5,26,18],"1209":[26,5,29,8],"1217":[30,5,30,9],"1225":[30,17,30,20],"1233":[30,5,30,21],"1235":[30,5,30,16],"1241":[30,5,30,22],"1249":[31,5,31,9],"1257":[31,21,31,25],"1265":[31,5,31,25],"1273":[31,5,31,26],"1281":[23,23,32,2],"1289":[23,23,32,2],"1297":[23,23,32,2],"1305":[23,23,32,2],"1313":[23,23,32,2],"1321":[23,23,32,2],"1329":[23,23,32,2],"1337":[23,1,32,2],"1345":[23,1,32,3],"1353":[33,1,33,5],"1361":[33,1,33,15],"1369":[34,15,34,19],"1377":[34,28,34,40],"1385":[34,42,34,44],"1393":[34,15,34,45],"1395":[34,15,34,27],"1401":[34,15,34,59],"1403":[34,15,34,57],"1409":[34,15,34,59],"1417":[34,15,34,59],"1425":[35,12,35,16],"1433":[35,12,35,22],"1441":[35,23,35,26],"1449":[35,12,35,27],"1457":[35,31,35,39],"1465":[35,43,35,47],"1473":[35,43,35,60],"1481":[35,12,35,60],"1489":[35,5,35,61],"1497":[33,25,36,2],"1505":[33,25,36,2],"1513":[33,25,36,2],"1521":[33,25,36,2],"1529":[33,25,36,2],"1537":[33,25,36,2],"1545":[33,1,36,2],"1553":[33,1,36,3],"1561":[37,1,37,5],"1569":[37,1,37,15],"1577":[38,16,38,24],"1585":[38,31,38,56],"1593":[38,16,38,57],"1595":[38,16,38,30],"1601":[38,58,38,59],"1609":[38,16,38,60],"1617":[38,16,38,74],"1619":[38,16,38,72],"1625":[38,16,38,74],"1633":[38,16,38,74],"1641":[39,12,39,16],"1649":[39,12,39,27],"1657":[39,28,39,32],"1665":[39,12,39,33],"1673":[39,12,39,33],"1681":[39,5,39,34],"1689":[37,28,40,2],"1697":[37,28,40,2],"1705":[37,28,40,2],"1713":[37,28,40,2],"1721":[37,28,40,2],"1729":[37,1,40,2],"1737":[37,1,40,3],"1745":[41,16,41,20],"1753":[41,12,41,22],"1761":[41,12,41,22],"1769":[41,12,41,22],"1777":[42,1,42,5],"1785":[42,11,42,15],"1793":[42,21,42,30],"1801":[42,32,42,50],"1809":[42,11,42,51],"1811":[42,11,42,20],"1817":[42,1,42,52],"1819":[42,1,42,10],"1825":[42,1,42,53],"1833":[43,1,43,5],"1841":[43,11,43,15],"1849":[43,21,43,30],"1857":[43,32,43,50],"1865":[43,11,43,51],"1867":[43,11,43,20],"1873":[43,1,43,52],"1875":[43,1,43,10],"1881":[43,1,43,53],"1889":[44,1,44,5],"1897":[44,21,44,25],"1905":[44,33,44,38],"1913":[44,21,44,39],"1915":[44,21,44,32],"1921":[44,1,44,39],"1929":[44,1,44,40],"1937":[45,1,45,5],"1945":[45,13,45,17],"1953":[45,1,45,17],"1961":[45,1,45,18],"1969":[46,1,46,5],"1977":[48,16,48,25],"1985":[48,31,48,39],"1993":[48,16,48,40],"1995":[48,16,48,30],"2001":[48,43,48,50],"2009":[48,53,48,61],"2017":[48,16,48,61],"2025":[48,9,48,62],"2033":[47,13,49,6],"2041":[47,13,49,6],"2049":[47,13,49,6],"2057":[47,13,49,6],"2065":[47,13,49,6],"2073":[46,17,50,2],"2081":[46,1,50,2],"2089":[46,1,50,3],"2097":[51,1,51,7],"2105":[51,18,51,22],"2113":[51,1,51,22],"2121":[51,1,51,23],"2129":[1,1,51,23],"2137":[1,1,51,23],"2145":[1,1,51,23],"2153":[1,1,51,23],"2161":[1,1,51,23],"2169":[5,1,8,2],"2177":[1,1,51,23],"2185":[1,1,51,23],"2193":[5,1,8,2],"2201":[5,1,8,2],"2209":[13,13,15,14],"2217":[12,9,17,10],"2225":[12,9,17,10],"2233":[18,9,20,10],"2241":[9,25,22,2],"2249":[9,25,22,2],"2257":[26,19,29,6],"2265":[26,19,29,6],"2273":[23,23,32,2],"2281":[23,23,32,2],"2289":[33,25,36,2],"2297":[33,25,36,2],"2305":[37,28,40,2],"2313":[37,28,40,2],"2321":[48,16,48,61],"2329":[47,13,49,6],"2337":[47,13,49,6],"2345":[1,1,51,23],"2353":[1,1,51,23],"nBranches":14,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/send/node_modules/mime/mime.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/send/node_modules/mime/mime_jalangi_.js","code":"var path = require('path');\nvar fs = require('fs');\n\nfunction Mime() {\n  // Map of extension -> mime type\n  this.types = Object.create(null);\n\n  // Map of mime type -> extension\n  this.extensions = Object.create(null);\n}\n\n/**\n * Define mimetype -> extension mappings.  Each key is a mime-type that maps\n * to an array of extensions associated with the type.  The first extension is\n * used as the default extension for the type.\n *\n * e.g. mime.define({'audio/ogg', ['oga', 'ogg', 'spx']});\n *\n * @param map (Object) type definitions\n */\nMime.prototype.define = function (map) {\n  for (var type in map) {\n    var exts = map[type];\n\n    for (var i = 0; i < exts.length; i++) {\n      if (process.env.DEBUG_MIME && this.types[exts]) {\n        console.warn(this._loading.replace(/.*\\//, ''), 'changes \"' + exts[i] + '\" extension type from ' +\n          this.types[exts] + ' to ' + type);\n      }\n\n      this.types[exts[i]] = type;\n    }\n\n    // Default extension is the first one we encounter\n    if (!this.extensions[type]) {\n      this.extensions[type] = exts[0];\n    }\n  }\n};\n\n/**\n * Load an Apache2-style \".types\" file\n *\n * This may be called multiple times (it's expected).  Where files declare\n * overlapping types/extensions, the last file wins.\n *\n * @param file (String) path of file to load.\n */\nMime.prototype.load = function(file) {\n\n  this._loading = file;\n  // Read file and split into lines\n  var map = {},\n      content = fs.readFileSync(file, 'ascii'),\n      lines = content.split(/[\\r\\n]+/);\n\n  lines.forEach(function(line) {\n    // Clean up whitespace/comments, and split into fields\n    var fields = line.replace(/\\s*#.*|^\\s*|\\s*$/g, '').split(/\\s+/);\n    map[fields.shift()] = fields;\n  });\n\n  this.define(map);\n\n  this._loading = null;\n};\n\n/**\n * Lookup a mime type based on extension\n */\nMime.prototype.lookup = function(path, fallback) {\n  var ext = path.replace(/.*[\\.\\/\\\\]/, '').toLowerCase();\n\n  return this.types[ext] || fallback || this.default_type;\n};\n\n/**\n * Return file extension associated with a mime type\n */\nMime.prototype.extension = function(mimeType) {\n  var type = mimeType.match(/^\\s*([^;\\s]*)(?:;|\\s|$)/)[1].toLowerCase();\n  return this.extensions[type];\n};\n\n// Default instance\nvar mime = new Mime();\n\n// Load local copy of\n// http://svn.apache.org/repos/asf/httpd/httpd/trunk/docs/conf/mime.types\nmime.load(path.join(__dirname, 'types/mime.types'));\n\n// Load additional types from node.js community\nmime.load(path.join(__dirname, 'types/node.types'));\n\n// Default type\nmime.default_type = mime.lookup('bin');\n\n//\n// Additional API specific to the default instance\n//\n\nmime.Mime = Mime;\n\n/**\n * Lookup a charset based on mime type.\n */\nmime.charsets = {\n  lookup: function(mimeType, fallback) {\n    // Assume text types are utf8\n    return (/^text\\//).test(mimeType) ? 'UTF-8' : fallback;\n  }\n};\n\nmodule.exports = mime;\n"}