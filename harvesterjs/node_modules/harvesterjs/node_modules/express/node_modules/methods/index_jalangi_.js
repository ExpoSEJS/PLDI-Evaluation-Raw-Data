J$.iids = {"8":[4,5,4,17],"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,12,3,19],"89":[3,20,3,26],"97":[3,12,3,27],"105":[3,12,3,27],"113":[3,12,3,27],"121":[4,5,4,9],"129":[4,5,4,17],"137":[5,5,5,11],"145":[5,22,5,26],"153":[5,22,5,34],"161":[6,16,6,22],"169":[6,16,6,36],"171":[6,16,6,34],"177":[6,16,6,36],"185":[6,9,6,37],"193":[5,39,7,6],"201":[5,39,7,6],"209":[5,39,7,6],"217":[5,39,7,6],"225":[5,22,7,7],"227":[5,22,5,38],"233":[5,5,7,7],"241":[5,5,7,8],"249":[9,5,9,11],"257":[10,9,10,14],"265":[11,9,11,15],"273":[12,9,12,14],"281":[13,9,13,15],"289":[14,9,14,17],"297":[15,9,15,18],"305":[16,9,16,16],"313":[17,9,17,15],"321":[18,9,18,15],"329":[19,9,19,16],"337":[20,9,20,15],"345":[21,9,21,16],"353":[22,9,22,19],"361":[23,9,23,20],"369":[24,9,24,17],"377":[25,9,25,17],"385":[26,9,26,21],"393":[27,9,27,19],"401":[28,9,28,16],"409":[29,9,29,19],"417":[30,9,30,17],"425":[31,9,31,20],"433":[32,9,32,22],"441":[33,9,33,16],"449":[34,9,34,17],"457":[35,9,35,18],"465":[9,22,36,6],"473":[9,5,36,6],"481":[9,5,36,7],"489":[1,1,37,2],"497":[1,1,37,2],"505":[1,1,37,2],"513":[1,1,37,2],"521":[5,39,7,6],"529":[5,39,7,6],"537":[4,1,37,2],"545":[1,1,37,2],"553":[1,1,37,2],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/methods/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/methods/index_jalangi_.js","code":"\nvar http = require('http');\n\nif (http.METHODS) {\n\n  module.exports = http.METHODS.map(function(method){\n    return method.toLowerCase();\n  });\n\n} else {\n\n  module.exports = [\n    'get',\n    'post',\n    'put',\n    'head',\n    'delete',\n    'options',\n    'trace',\n    'copy',\n    'lock',\n    'mkcol',\n    'move',\n    'purge',\n    'propfind',\n    'proppatch',\n    'unlock',\n    'report',\n    'mkactivity',\n    'checkout',\n    'merge',\n    'm-search',\n    'notify',\n    'subscribe',\n    'unsubscribe',\n    'patch',\n    'search',\n    'connect'\n  ];\n\n}\n"};
jalangiLabel199:
    while (true) {
        try {
            J$.Se(489, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/methods/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/methods/index.js');
            J$.N(497, '__secret__S$', __secret__S$, 0);
            J$.N(505, '__secret__traits__', __secret__traits__, 0);
            J$.N(513, 'http', http, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var http = J$.X1(113, J$.W(105, 'http', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'http', 21, false)), http, 3));
            if (J$.X1(537, J$.C(8, J$.G(129, J$.R(121, 'http', http, 1), 'METHODS', 0)))) {
                J$.X1(241, J$.P(233, J$.R(137, 'module', module, 2), 'exports', J$.M(225, J$.G(153, J$.R(145, 'http', http, 1), 'METHODS', 0), 'map', 0)(J$.T(217, function (method) {
                    jalangiLabel198:
                        while (true) {
                            try {
                                J$.Fe(193, arguments.callee, this, arguments);
                                arguments = J$.N(201, 'arguments', arguments, 4);
                                method = J$.N(209, 'method', method, 4);
                                return J$.X1(185, J$.Rt(177, J$.M(169, J$.R(161, 'method', method, 0), 'toLowerCase', 0)()));
                            } catch (J$e) {
                                J$.Ex(521, J$e);
                            } finally {
                                if (J$.Fr(529))
                                    continue jalangiLabel198;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 193)), 0));
            } else {
                J$.X1(481, J$.P(473, J$.R(249, 'module', module, 2), 'exports', J$.T(465, [
                    J$.T(257, 'get', 21, false),
                    J$.T(265, 'post', 21, false),
                    J$.T(273, 'put', 21, false),
                    J$.T(281, 'head', 21, false),
                    J$.T(289, 'delete', 21, false),
                    J$.T(297, 'options', 21, false),
                    J$.T(305, 'trace', 21, false),
                    J$.T(313, 'copy', 21, false),
                    J$.T(321, 'lock', 21, false),
                    J$.T(329, 'mkcol', 21, false),
                    J$.T(337, 'move', 21, false),
                    J$.T(345, 'purge', 21, false),
                    J$.T(353, 'propfind', 21, false),
                    J$.T(361, 'proppatch', 21, false),
                    J$.T(369, 'unlock', 21, false),
                    J$.T(377, 'report', 21, false),
                    J$.T(385, 'mkactivity', 21, false),
                    J$.T(393, 'checkout', 21, false),
                    J$.T(401, 'merge', 21, false),
                    J$.T(409, 'm-search', 21, false),
                    J$.T(417, 'notify', 21, false),
                    J$.T(425, 'subscribe', 21, false),
                    J$.T(433, 'unsubscribe', 21, false),
                    J$.T(441, 'patch', 21, false),
                    J$.T(449, 'search', 21, false),
                    J$.T(457, 'connect', 21, false)
                ], 10, false), 0));
            }
        } catch (J$e) {
            J$.Ex(545, J$e);
        } finally {
            if (J$.Sr(553)) {
                J$.L();
                continue jalangiLabel199;
            } else {
                J$.L();
                break jalangiLabel199;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
