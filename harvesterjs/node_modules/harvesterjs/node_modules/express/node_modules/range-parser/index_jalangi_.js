J$.iids = {"8":[6,9,6,16],"9":[1,20,1,27],"10":[6,9,6,11],"16":[13,20,13,30],"17":[1,28,1,32],"18":[6,9,6,16],"24":[10,13,10,25],"25":[1,20,1,33],"26":[7,16,7,18],"32":[16,13,16,27],"33":[1,20,1,33],"34":[8,25,8,30],"40":[18,13,18,39],"41":[1,20,1,33],"42":[11,21,11,31],"48":[18,13,18,54],"49":[2,26,2,38],"50":[12,19,12,27],"56":[18,13,18,67],"57":[2,26,2,45],"58":[14,19,14,27],"64":[18,13,18,67],"65":[2,26,2,45],"66":[16,19,16,27],"72":[26,12,26,17],"73":[2,26,2,45],"74":[16,13,16,27],"81":[3,1,3,7],"82":[17,19,17,27],"89":[4,17,4,21],"90":[18,43,18,54],"97":[4,17,4,21],"98":[18,58,18,67],"105":[4,17,4,21],"106":[26,26,26,28],"113":[5,13,5,16],"121":[5,25,5,28],"129":[5,13,5,29],"131":[5,13,5,24],"137":[5,13,5,29],"145":[5,13,5,29],"153":[6,10,6,11],"161":[6,15,6,16],"169":[7,17,7,18],"177":[7,16,7,18],"185":[7,9,7,19],"193":[8,15,8,18],"201":[8,25,8,26],"209":[8,29,8,30],"217":[8,15,8,31],"219":[8,15,8,24],"225":[8,38,8,41],"233":[8,15,8,42],"235":[8,15,8,37],"241":[9,21,9,26],"249":[9,33,9,36],"257":[9,21,9,37],"259":[9,21,9,32],"265":[9,47,9,55],"273":[9,56,9,61],"281":[9,62,9,63],"289":[9,56,9,64],"297":[9,66,9,68],"305":[9,47,9,69],"313":[9,77,9,85],"321":[9,86,9,91],"329":[9,92,9,93],"337":[9,86,9,94],"345":[9,96,9,98],"353":[9,77,9,99],"361":[9,21,9,37],"369":[9,21,9,37],"377":[9,47,9,69],"385":[9,47,9,69],"393":[9,77,9,99],"401":[9,77,9,99],"409":[10,13,10,18],"417":[10,19,10,24],"425":[10,13,10,25],"433":[11,21,11,25],"441":[11,28,11,31],"449":[11,21,11,31],"457":[11,13,11,32],"465":[12,19,12,23],"473":[12,26,12,27],"481":[12,19,12,27],"489":[12,13,12,28],"497":[13,20,13,25],"505":[13,26,13,29],"513":[13,20,13,30],"521":[14,19,14,23],"529":[14,26,14,27],"537":[14,19,14,27],"545":[14,13,14,28],"553":[16,13,16,16],"561":[16,19,16,23],"569":[16,26,16,27],"577":[17,19,17,23],"585":[17,26,17,27],"593":[17,19,17,27],"601":[17,13,17,28],"609":[18,13,18,18],"617":[18,19,18,24],"625":[18,13,18,25],"633":[18,29,18,34],"641":[18,35,18,38],"649":[18,29,18,39],"657":[18,43,18,48],"665":[18,51,18,54],"673":[18,58,18,63],"681":[18,66,18,67],"689":[19,21,19,26],"697":[19,21,19,26],"705":[19,13,19,27],"713":[21,20,21,25],"721":[22,18,22,21],"729":[20,16,23,10],"737":[20,16,23,10],"745":[20,9,23,11],"753":[8,47,24,6],"761":[8,47,24,6],"769":[8,47,24,6],"777":[8,47,24,6],"785":[8,47,24,6],"793":[8,47,24,6],"801":[8,15,24,7],"803":[8,15,8,46],"809":[8,15,24,7],"817":[8,15,24,7],"825":[25,5,25,8],"833":[25,16,25,19],"841":[25,26,25,27],"849":[25,29,25,30],"857":[25,16,25,31],"859":[25,16,25,25],"865":[25,5,25,31],"873":[25,5,25,32],"881":[26,12,26,17],"889":[26,20,26,23],"897":[26,27,26,28],"905":[26,12,26,28],"913":[26,5,26,29],"921":[3,18,27,2],"929":[3,18,27,2],"937":[3,18,27,2],"945":[3,18,27,2],"953":[3,18,27,2],"961":[3,18,27,2],"969":[3,18,27,2],"977":[3,18,27,2],"985":[3,1,27,2],"993":[3,1,27,3],"1001":[1,1,27,3],"1009":[1,1,27,3],"1017":[1,1,27,3],"1025":[6,5,7,19],"1033":[13,16,15,10],"1041":[10,9,15,10],"1049":[16,9,17,28],"1057":[18,9,19,27],"1065":[8,47,24,6],"1073":[8,47,24,6],"1081":[26,12,26,28],"1089":[3,18,27,2],"1097":[3,18,27,2],"1105":[1,1,27,3],"1113":[1,1,27,3],"nBranches":18,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/range-parser/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/range-parser/index_jalangi_.js","code":"\n/**\n * Parse \"Range\" header `str` relative to the given file `size`.\n *\n * @param {Number} size\n * @param {String} str\n * @return {Array}\n * @api public\n */\n\nmodule.exports = function(size, str){\n  var valid = true;\n  var i = str.indexOf('=');\n\n  if (-1 == i) return -2;\n\n  var arr = str.slice(i + 1).split(',').map(function(range){\n    var range = range.split('-')\n      , start = parseInt(range[0], 10)\n      , end = parseInt(range[1], 10);\n\n    // -nnn\n    if (isNaN(start)) {\n      start = size - end;\n      end = size - 1;\n    // nnn-\n    } else if (isNaN(end)) {\n      end = size - 1;\n    }\n\n    // limit last-byte-pos to current length\n    if (end > size - 1) end = size - 1;\n\n    // invalid\n    if (isNaN(start)\n      || isNaN(end)\n      || start > end\n      || start < 0) valid = false;\n\n    return {\n      start: start,\n      end: end\n    };\n  });\n\n  arr.type = str.slice(0, i);\n\n  return valid ? arr : -1;\n};"};
jalangiLabel278:
    while (true) {
        try {
            J$.Se(1001, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/range-parser/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/range-parser/index.js');
            J$.N(1009, '__secret__S$', __secret__S$, 0);
            J$.N(1017, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(993, J$.P(985, J$.R(81, 'module', module, 2), 'exports', J$.T(977, function (size, str) {
                jalangiLabel277:
                    while (true) {
                        try {
                            J$.Fe(921, arguments.callee, this, arguments);
                            arguments = J$.N(929, 'arguments', arguments, 4);
                            size = J$.N(937, 'size', size, 4);
                            str = J$.N(945, 'str', str, 4);
                            J$.N(953, 'valid', valid, 0);
                            J$.N(961, 'i', i, 0);
                            J$.N(969, 'arr', arr, 0);
                            var valid = J$.X1(105, J$.W(97, 'valid', J$.T(89, true, 23, false), valid, 1));
                            var i = J$.X1(145, J$.W(137, 'i', J$.M(129, J$.R(113, 'str', str, 0), 'indexOf', 0)(J$.T(121, '=', 21, false)), i, 1));
                            if (J$.X1(1025, J$.C(8, J$.B(18, '==', J$.U(10, '-', J$.T(153, 1, 22, false)), J$.R(161, 'i', i, 0), 0))))
                                return J$.X1(185, J$.Rt(177, J$.U(26, '-', J$.T(169, 2, 22, false))));
                            var arr = J$.X1(817, J$.W(809, 'arr', J$.M(801, J$.M(233, J$.M(217, J$.R(193, 'str', str, 0), 'slice', 0)(J$.B(34, '+', J$.R(201, 'i', i, 0), J$.T(209, 1, 22, false), 0)), 'split', 0)(J$.T(225, ',', 21, false)), 'map', 0)(J$.T(793, function (range) {
                                jalangiLabel276:
                                    while (true) {
                                        try {
                                            J$.Fe(753, arguments.callee, this, arguments);
                                            arguments = J$.N(761, 'arguments', arguments, 4);
                                            range = J$.N(769, 'range', range, 4);
                                            J$.N(777, 'start', start, 0);
                                            J$.N(785, 'end', end, 0);
                                            var range = J$.X1(369, J$.W(361, 'range', J$.M(257, J$.R(241, 'range', range, 0), 'split', 0)(J$.T(249, '-', 21, false)), range, 1)), start = J$.X1(385, J$.W(377, 'start', J$.F(305, J$.R(265, 'parseInt', parseInt, 2), 0)(J$.G(289, J$.R(273, 'range', range, 0), J$.T(281, 0, 22, false), 4), J$.T(297, 10, 22, false)), start, 1)), end = J$.X1(401, J$.W(393, 'end', J$.F(353, J$.R(313, 'parseInt', parseInt, 2), 0)(J$.G(337, J$.R(321, 'range', range, 0), J$.T(329, 1, 22, false), 4), J$.T(345, 10, 22, false)), end, 1));
                                            if (J$.X1(1041, J$.C(24, J$.F(425, J$.R(409, 'isNaN', isNaN, 2), 0)(J$.R(417, 'start', start, 0))))) {
                                                J$.X1(457, start = J$.W(449, 'start', J$.B(42, '-', J$.R(433, 'size', size, 0), J$.R(441, 'end', end, 0), 0), start, 0));
                                                J$.X1(489, end = J$.W(481, 'end', J$.B(50, '-', J$.R(465, 'size', size, 0), J$.T(473, 1, 22, false), 0), end, 0));
                                            } else if (J$.X1(1033, J$.C(16, J$.F(513, J$.R(497, 'isNaN', isNaN, 2), 0)(J$.R(505, 'end', end, 0))))) {
                                                J$.X1(545, end = J$.W(537, 'end', J$.B(58, '-', J$.R(521, 'size', size, 0), J$.T(529, 1, 22, false), 0), end, 0));
                                            }
                                            if (J$.X1(1049, J$.C(32, J$.B(74, '>', J$.R(553, 'end', end, 0), J$.B(66, '-', J$.R(561, 'size', size, 0), J$.T(569, 1, 22, false), 0), 0))))
                                                J$.X1(601, end = J$.W(593, 'end', J$.B(82, '-', J$.R(577, 'size', size, 0), J$.T(585, 1, 22, false), 0), end, 0));
                                            if (J$.X1(1057, J$.C(64, J$.C(56, J$.C(48, J$.C(40, J$.F(625, J$.R(609, 'isNaN', isNaN, 2), 0)(J$.R(617, 'start', start, 0))) ? J$._() : J$.F(649, J$.R(633, 'isNaN', isNaN, 2), 0)(J$.R(641, 'end', end, 0))) ? J$._() : J$.B(90, '>', J$.R(657, 'start', start, 0), J$.R(665, 'end', end, 0), 0)) ? J$._() : J$.B(98, '<', J$.R(673, 'start', start, 0), J$.T(681, 0, 22, false), 0))))
                                                J$.X1(705, valid = J$.W(697, 'valid', J$.T(689, false, 23, false), valid, 0));
                                            return J$.X1(745, J$.Rt(737, J$.T(729, {
                                                start: J$.R(713, 'start', start, 0),
                                                end: J$.R(721, 'end', end, 0)
                                            }, 11, false)));
                                        } catch (J$e) {
                                            J$.Ex(1065, J$e);
                                        } finally {
                                            if (J$.Fr(1073))
                                                continue jalangiLabel276;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 753)), arr, 1));
                            J$.X1(873, J$.P(865, J$.R(825, 'arr', arr, 0), 'type', J$.M(857, J$.R(833, 'str', str, 0), 'slice', 0)(J$.T(841, 0, 22, false), J$.R(849, 'i', i, 0)), 0));
                            return J$.X1(913, J$.Rt(905, J$.X1(1081, J$.C(72, J$.R(881, 'valid', valid, 0))) ? J$.R(889, 'arr', arr, 0) : J$.U(106, '-', J$.T(897, 1, 22, false))));
                        } catch (J$e) {
                            J$.Ex(1089, J$e);
                        } finally {
                            if (J$.Fr(1097))
                                continue jalangiLabel277;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 921), 0));
        } catch (J$e) {
            J$.Ex(1105, J$e);
        } finally {
            if (J$.Sr(1113)) {
                J$.L();
                continue jalangiLabel278;
            } else {
                J$.L();
                break jalangiLabel278;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
