{"8":[8,9,8,35],"9":[1,20,1,27],"10":[8,11,8,34],"16":[14,9,14,30],"17":[1,28,1,32],"18":[8,9,8,35],"24":[17,9,17,22],"25":[1,20,1,33],"26":[14,9,14,30],"32":[19,9,19,29],"33":[1,20,1,33],"34":[17,9,17,22],"40":[24,9,24,15],"41":[1,20,1,33],"42":[19,9,19,29],"48":[29,9,29,34],"49":[2,26,2,38],"50":[24,9,24,15],"56":[32,9,32,26],"57":[2,26,2,45],"58":[29,9,29,34],"64":[34,12,34,46],"65":[2,26,2,45],"66":[32,9,32,26],"72":[37,9,37,33],"73":[2,26,2,45],"74":[37,9,37,33],"80":[40,9,40,25],"81":[3,18,3,25],"82":[40,9,40,25],"88":[42,9,42,40],"89":[3,26,3,38],"90":[42,9,42,40],"96":[44,12,44,44],"97":[3,18,3,39],"98":[47,9,47,30],"104":[47,9,47,30],"105":[3,18,3,39],"106":[50,9,50,22],"112":[50,9,50,22],"113":[3,18,3,39],"114":[52,9,52,41],"120":[52,9,52,41],"121":[4,12,4,19],"122":[57,9,57,27],"128":[54,12,54,42],"129":[4,20,4,32],"130":[62,12,62,23],"136":[57,9,57,27],"137":[4,12,4,33],"138":[62,12,62,36],"145":[4,12,4,33],"153":[4,12,4,33],"161":[5,13,5,15],"169":[5,13,5,21],"177":[5,13,5,21],"185":[5,13,5,21],"193":[6,1,6,7],"201":[6,18,6,25],"209":[6,1,6,25],"217":[6,1,6,26],"225":[8,11,8,15],"233":[8,27,8,34],"241":[9,20,9,27],"249":[9,28,9,31],"257":[9,16,9,32],"265":[9,16,9,32],"273":[9,9,9,33],"281":[10,5,10,9],"289":[10,20,10,23],"297":[10,20,10,31],"305":[10,5,10,31],"313":[10,5,10,32],"321":[11,5,11,9],"329":[11,23,11,33],"337":[11,34,11,37],"345":[11,23,11,38],"353":[11,5,11,38],"361":[11,5,11,39],"369":[7,1,12,2],"377":[7,1,12,2],"385":[7,1,12,2],"393":[13,1,13,8],"401":[13,1,13,18],"409":[13,26,13,33],"417":[13,26,13,43],"425":[14,10,14,15],"433":[14,24,14,29],"441":[14,10,14,30],"443":[14,10,14,23],"449":[15,17,15,22],"457":[15,28,15,37],"465":[15,17,15,38],"467":[15,17,15,27],"473":[15,17,15,38],"481":[15,9,15,39],"489":[16,13,16,17],"497":[16,13,16,28],"505":[16,13,16,28],"513":[16,13,16,28],"521":[17,10,17,15],"529":[17,10,17,22],"537":[18,16,18,17],"545":[18,16,18,30],"547":[18,16,18,28],"553":[18,16,18,30],"561":[18,9,18,31],"569":[19,10,19,14],"577":[19,10,19,22],"585":[19,10,19,29],"593":[20,16,20,21],"601":[20,22,20,23],"609":[20,16,20,24],"617":[20,16,20,24],"625":[20,9,20,25],"633":[21,17,21,22],"641":[21,27,21,36],"649":[21,17,21,37],"651":[21,17,21,26],"657":[21,17,21,37],"665":[21,17,21,37],"673":[22,19,22,20],"681":[22,32,22,37],"689":[22,45,22,54],"697":[22,32,22,55],"699":[22,32,22,44],"705":[22,19,22,56],"707":[22,19,22,31],"713":[22,19,22,56],"721":[22,19,22,56],"729":[23,17,23,24],"737":[23,25,23,26],"745":[23,17,23,27],"753":[23,17,23,27],"761":[23,17,23,27],"769":[24,10,24,15],"777":[25,16,25,21],"785":[25,16,25,21],"793":[25,9,25,22],"801":[26,12,26,17],"809":[26,18,26,23],"817":[26,32,26,37],"825":[26,18,26,38],"827":[26,18,26,31],"833":[26,12,26,39],"841":[26,12,26,39],"849":[26,5,26,40],"857":[13,52,27,2],"865":[13,52,27,2],"873":[13,52,27,2],"881":[13,52,27,2],"889":[13,52,27,2],"897":[13,52,27,2],"905":[13,52,27,2],"913":[13,52,27,2],"921":[13,26,27,2],"929":[13,1,27,2],"937":[13,1,27,3],"945":[28,1,28,8],"953":[28,1,28,18],"961":[28,30,28,37],"969":[28,30,28,47],"977":[29,10,29,15],"985":[29,24,29,33],"993":[29,10,29,34],"995":[29,10,29,23],"1001":[30,21,30,26],"1009":[30,32,30,41],"1017":[30,21,30,42],"1019":[30,21,30,31],"1025":[30,21,30,42],"1033":[30,9,30,43],"1041":[31,13,31,17],"1049":[31,13,31,28],"1057":[31,13,31,28],"1065":[31,13,31,28],"1073":[32,10,32,19],"1081":[32,10,32,26],"1089":[33,16,33,17],"1097":[33,16,33,29],"1099":[33,16,33,27],"1105":[33,16,33,29],"1113":[33,9,33,30],"1121":[34,12,34,13],"1129":[34,24,34,33],"1137":[34,12,34,34],"1139":[34,12,34,23],"1145":[34,35,34,36],"1153":[34,12,34,37],"1161":[34,41,34,46],"1169":[34,12,34,46],"1177":[34,5,34,47],"1185":[28,60,35,2],"1193":[28,60,35,2],"1201":[28,60,35,2],"1209":[28,60,35,2],"1217":[28,60,35,2],"1225":[28,30,35,2],"1233":[28,1,35,2],"1241":[28,1,35,3],"1249":[36,1,36,8],"1257":[36,1,36,18],"1265":[36,29,36,36],"1273":[36,29,36,46],"1281":[37,10,37,15],"1289":[37,24,37,32],"1297":[37,10,37,33],"1299":[37,10,37,23],"1305":[38,20,38,22],"1313":[38,20,38,28],"1321":[38,34,38,43],"1329":[38,20,38,44],"1331":[38,20,38,33],"1337":[38,20,38,44],"1345":[38,9,38,45],"1353":[39,13,39,17],"1361":[39,13,39,28],"1369":[39,13,39,28],"1377":[39,13,39,28],"1385":[40,10,40,18],"1393":[40,10,40,25],"1401":[41,16,41,17],"1409":[41,16,41,28],"1411":[41,16,41,26],"1417":[41,16,41,28],"1425":[41,9,41,29],"1433":[42,10,42,14],"1441":[42,10,42,22],"1449":[42,23,42,39],"1457":[42,10,42,40],"1465":[43,16,43,24],"1473":[43,25,43,26],"1481":[43,16,43,27],"1489":[43,16,43,27],"1497":[43,9,43,28],"1505":[44,12,44,13],"1513":[44,23,44,31],"1521":[44,12,44,32],"1523":[44,12,44,22],"1529":[44,33,44,34],"1537":[44,12,44,35],"1545":[44,39,44,44],"1553":[44,12,44,44],"1561":[44,5,44,45],"1569":[36,58,45,2],"1577":[36,58,45,2],"1585":[36,58,45,2],"1593":[36,58,45,2],"1601":[36,58,45,2],"1609":[36,29,45,2],"1617":[36,1,45,2],"1625":[36,1,45,3],"1633":[46,1,46,8],"1641":[46,1,46,18],"1649":[46,26,46,33],"1657":[46,26,46,43],"1665":[46,52,46,59],"1673":[46,52,46,69],"1681":[46,81,46,88],"1689":[46,81,46,98],"1697":[47,10,47,15],"1705":[47,24,47,29],"1713":[47,10,47,30],"1715":[47,10,47,23],"1721":[48,17,48,22],"1729":[48,28,48,37],"1737":[48,17,48,38],"1739":[48,17,48,27],"1745":[48,17,48,38],"1753":[48,9,48,39],"1761":[49,13,49,17],"1769":[49,13,49,28],"1777":[49,13,49,28],"1785":[49,13,49,28],"1793":[50,10,50,15],"1801":[50,10,50,22],"1809":[51,16,51,17],"1817":[51,16,51,29],"1819":[51,16,51,27],"1825":[51,16,51,29],"1833":[51,9,51,30],"1841":[52,10,52,14],"1849":[52,10,52,22],"1857":[52,23,52,40],"1865":[52,10,52,41],"1873":[53,16,53,21],"1881":[53,22,53,23],"1889":[53,16,53,24],"1897":[53,16,53,24],"1905":[53,9,53,25],"1913":[54,12,54,13],"1921":[54,24,54,29],"1929":[54,12,54,30],"1931":[54,12,54,23],"1937":[54,31,54,32],"1945":[54,12,54,33],"1953":[54,37,54,42],"1961":[54,12,54,42],"1969":[54,5,54,43],"1977":[46,111,55,2],"1985":[46,111,55,2],"1993":[46,111,55,2],"2001":[46,111,55,2],"2009":[46,111,55,2],"2017":[46,81,55,2],"2025":[46,52,55,2],"2033":[46,26,55,2],"2041":[46,1,55,2],"2049":[46,1,55,3],"2057":[57,10,57,14],"2065":[57,23,57,26],"2073":[57,10,57,27],"2075":[57,10,57,22],"2081":[58,16,58,20],"2089":[58,16,58,20],"2097":[58,9,58,21],"2105":[59,12,59,16],"2113":[59,24,59,28],"2121":[59,12,59,29],"2123":[59,12,59,23],"2129":[59,12,59,29],"2137":[59,5,59,30],"2145":[56,1,60,2],"2153":[56,1,60,2],"2161":[56,1,60,2],"2169":[62,19,62,23],"2177":[62,28,62,36],"2185":[62,12,62,36],"2193":[62,5,62,37],"2201":[61,1,63,2],"2209":[61,1,63,2],"2217":[61,1,63,2],"2225":[1,1,63,2],"2233":[1,1,63,2],"2241":[1,1,63,2],"2249":[1,1,63,2],"2257":[1,1,63,2],"2265":[1,1,63,2],"2273":[7,1,12,2],"2281":[1,1,63,2],"2289":[56,1,60,2],"2297":[1,1,63,2],"2305":[61,1,63,2],"2313":[1,1,63,2],"2321":[8,5,9,33],"2329":[7,1,12,2],"2337":[7,1,12,2],"2345":[14,5,15,39],"2353":[17,5,18,31],"2361":[19,5,20,25],"2369":[24,5,25,22],"2377":[13,52,27,2],"2385":[13,52,27,2],"2393":[29,5,30,43],"2401":[32,5,33,30],"2409":[28,60,35,2],"2417":[28,60,35,2],"2425":[37,5,38,45],"2433":[40,5,41,29],"2441":[42,5,43,28],"2449":[36,58,45,2],"2457":[36,58,45,2],"2465":[47,5,48,39],"2473":[50,5,51,30],"2481":[52,5,53,25],"2489":[46,111,55,2],"2497":[46,111,55,2],"2505":[57,5,58,21],"2513":[56,1,60,2],"2521":[56,1,60,2],"2529":[61,1,63,2],"2537":[61,1,63,2],"2545":[1,1,63,2],"2553":[1,1,63,2],"nBranches":34,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/accepts/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/accepts/index_jalangi_.js","code":"var Negotiator = require('negotiator')\nvar mime = require('mime-types')\n\nvar slice = [].slice\n\nmodule.exports = Accepts\n\nfunction Accepts(req) {\n  if (!(this instanceof Accepts))\n    return new Accepts(req)\n\n  this.headers = req.headers\n  this.negotiator = Negotiator(req)\n}\n\n/**\n * Check if the given `type(s)` is acceptable, returning\n * the best match when true, otherwise `undefined`, in which\n * case you should respond with 406 \"Not Acceptable\".\n *\n * The `type` value may be a single mime type string\n * such as \"application/json\", the extension name\n * such as \"json\" or an array `[\"json\", \"html\", \"text/plain\"]`. When a list\n * or array is given the _best_ match, if any is returned.\n *\n * Examples:\n *\n *     // Accept: text/html\n *     this.types('html');\n *     // => \"html\"\n *\n *     // Accept: text/*, application/json\n *     this.types('html');\n *     // => \"html\"\n *     this.types('text/html');\n *     // => \"text/html\"\n *     this.types('json', 'text');\n *     // => \"json\"\n *     this.types('application/json');\n *     // => \"application/json\"\n *\n *     // Accept: text/*, application/json\n *     this.types('image/png');\n *     this.types('png');\n *     // => undefined\n *\n *     // Accept: text/*;q=.5, application/json\n *     this.types(['html', 'json']);\n *     this.types('html', 'json');\n *     // => \"json\"\n *\n * @param {String|Array} type(s)...\n * @return {String|Array|Boolean}\n * @api public\n */\n\nAccepts.prototype.type =\nAccepts.prototype.types = function (types) {\n  if (!Array.isArray(types)) types = slice.call(arguments);\n  var n = this.negotiator;\n  if (!types.length) return n.mediaTypes();\n  if (!this.headers.accept) return types[0];\n  var mimes = types.map(extToMime);\n  var accepts = n.mediaTypes(mimes.filter(validMime));\n  var first = accepts[0];\n  if (!first) return false;\n  return types[mimes.indexOf(first)];\n}\n\n/**\n * Return accepted encodings or best fit based on `encodings`.\n *\n * Given `Accept-Encoding: gzip, deflate`\n * an array sorted by quality is returned:\n *\n *     ['gzip', 'deflate']\n *\n * @param {String|Array} encoding(s)...\n * @return {String|Array}\n * @api public\n */\n\nAccepts.prototype.encoding =\nAccepts.prototype.encodings = function (encodings) {\n  if (!Array.isArray(encodings)) encodings = slice.call(arguments);\n  var n = this.negotiator;\n  if (!encodings.length) return n.encodings();\n  return n.encodings(encodings)[0] || false;\n}\n\n/**\n * Return accepted charsets or best fit based on `charsets`.\n *\n * Given `Accept-Charset: utf-8, iso-8859-1;q=0.2, utf-7;q=0.5`\n * an array sorted by quality is returned:\n *\n *     ['utf-8', 'utf-7', 'iso-8859-1']\n *\n * @param {String|Array} charset(s)...\n * @return {String|Array}\n * @api public\n */\n\nAccepts.prototype.charset =\nAccepts.prototype.charsets = function (charsets) {\n  if (!Array.isArray(charsets)) charsets = [].slice.call(arguments);\n  var n = this.negotiator;\n  if (!charsets.length) return n.charsets();\n  if (!this.headers['accept-charset']) return charsets[0];\n  return n.charsets(charsets)[0] || false;\n}\n\n/**\n * Return accepted languages or best fit based on `langs`.\n *\n * Given `Accept-Language: en;q=0.8, es, pt`\n * an array sorted by quality is returned:\n *\n *     ['es', 'pt', 'en']\n *\n * @param {String|Array} lang(s)...\n * @return {Array|String}\n * @api public\n */\n\nAccepts.prototype.lang =\nAccepts.prototype.langs =\nAccepts.prototype.language =\nAccepts.prototype.languages = function (langs) {\n  if (!Array.isArray(langs)) langs = slice.call(arguments);\n  var n = this.negotiator;\n  if (!langs.length) return n.languages();\n  if (!this.headers['accept-language']) return langs[0];\n  return n.languages(langs)[0] || false;\n}\n\n/**\n * Convert extnames to mime.\n *\n * @param {String} type\n * @return {String}\n * @api private\n */\n\nfunction extToMime(type) {\n  if (~type.indexOf('/')) return type;\n  return mime.lookup(type);\n}\n\n/**\n * Check if mime is valid.\n *\n * @param {String} type\n * @return {String}\n * @api private\n */\n\nfunction validMime(type) {\n  return typeof type === 'string';\n}\n"}