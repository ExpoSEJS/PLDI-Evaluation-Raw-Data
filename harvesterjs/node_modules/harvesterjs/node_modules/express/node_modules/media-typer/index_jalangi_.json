{"8":[14,9,14,40],"9":[1,20,1,27],"10":[14,9,14,13],"16":[14,9,14,40],"17":[1,28,1,32],"18":[14,17,14,27],"24":[21,9,21,44],"25":[1,20,1,33],"26":[14,17,14,40],"32":[21,9,21,44],"33":[1,20,1,33],"34":[21,9,21,14],"40":[24,9,24,53],"41":[1,20,1,33],"42":[21,18,21,44],"48":[24,9,24,53],"49":[2,26,2,38],"50":[24,9,24,17],"56":[29,13,29,41],"57":[2,26,2,45],"58":[24,21,24,53],"64":[28,9,28,15],"65":[2,26,2,45],"66":[27,18,27,28],"72":[34,9,34,53],"73":[2,26,2,45],"74":[27,18,27,38],"80":[39,17,39,41],"81":[3,19,3,171],"82":[29,13,29,41],"88":[37,25,37,42],"89":[3,19,3,171],"90":[32,19,32,31],"96":[34,9,34,53],"97":[3,19,3,171],"98":[32,19,32,31],"104":[48,9,48,16],"105":[4,18,4,51],"106":[34,23,34,40],"112":[51,9,51,35],"113":[4,18,4,51],"114":[34,23,34,53],"120":[54,9,54,35],"121":[4,18,4,51],"122":[37,25,37,42],"128":[58,16,58,28],"129":[5,19,5,56],"130":[37,44,37,47],"136":[68,13,68,29],"137":[5,19,5,56],"144":[65,12,65,44],"145":[5,19,5,56],"146":[37,44,37,47],"152":[77,9,77,44],"153":[6,18,6,40],"154":[39,17,39,41],"160":[81,16,81,58],"161":[6,18,6,40],"162":[42,23,42,35],"168":[80,9,80,40],"169":[6,18,6,40],"170":[42,23,42,41],"176":[86,9,86,30],"177":[7,19,7,29],"178":[42,23,42,70],"184":[89,9,89,48],"185":[7,19,7,29],"186":[42,23,42,70],"192":[89,9,89,48],"193":[7,19,7,29],"194":[48,9,48,16],"200":[96,9,96,15],"201":[8,25,8,66],"202":[51,9,51,22],"208":[103,9,103,21],"209":[8,25,8,66],"210":[51,9,51,35],"217":[8,25,8,66],"218":[54,9,54,22],"225":[9,22,9,62],"226":[54,9,54,35],"233":[9,22,9,62],"234":[58,26,58,28],"241":[9,22,9,62],"242":[58,16,58,28],"249":[10,18,10,106],"250":[68,13,68,29],"257":[10,18,10,106],"258":[69,37,69,53],"265":[10,18,10,106],"266":[77,9,77,29],"273":[11,1,11,8],"274":[77,9,77,44],"281":[11,18,11,24],"282":[80,9,80,27],"289":[11,1,11,24],"290":[80,9,80,40],"297":[11,1,11,25],"298":[89,9,89,23],"305":[12,1,12,8],"306":[89,27,89,48],"313":[12,17,12,22],"314":[92,12,92,50],"321":[12,1,12,22],"322":[92,12,92,56],"329":[12,1,12,23],"330":[96,9,96,15],"337":[14,10,14,13],"338":[103,19,103,21],"345":[14,24,14,27],"346":[103,9,103,21],"353":[14,32,14,40],"354":[104,33,104,42],"361":[15,19,15,28],"369":[15,29,15,55],"377":[15,15,15,56],"385":[15,15,15,56],"393":[15,9,15,57],"401":[17,22,17,25],"409":[17,22,17,36],"417":[17,22,17,36],"425":[17,22,17,36],"433":[18,19,18,22],"441":[18,19,18,30],"449":[18,19,18,30],"457":[18,19,18,30],"465":[19,18,19,21],"473":[19,18,19,28],"481":[19,18,19,28],"489":[19,18,19,28],"497":[20,16,20,19],"505":[20,16,20,24],"513":[20,16,20,24],"521":[20,16,20,24],"529":[21,10,21,14],"537":[21,19,21,33],"545":[21,39,21,43],"553":[21,19,21,44],"555":[21,19,21,38],"561":[22,19,22,28],"569":[22,29,22,43],"577":[22,15,22,44],"585":[22,15,22,44],"593":[22,9,22,45],"601":[24,10,24,17],"609":[24,22,24,39],"617":[24,45,24,52],"625":[24,22,24,53],"627":[24,22,24,44],"633":[25,19,25,28],"641":[25,29,25,46],"649":[25,15,25,47],"657":[25,15,25,47],"665":[25,9,25,48],"673":[27,18,27,22],"681":[27,25,27,28],"689":[27,31,27,38],"697":[27,18,27,38],"705":[27,18,27,38],"713":[28,9,28,15],"721":[29,14,29,28],"729":[29,34,29,40],"737":[29,14,29,41],"739":[29,14,29,33],"745":[30,23,30,32],"753":[30,33,30,49],"761":[30,19,30,50],"769":[30,19,30,50],"777":[30,13,30,51],"785":[32,19,32,22],"793":[32,25,32,31],"801":[32,9,32,15],"809":[32,9,32,31],"817":[32,9,32,32],"825":[34,9,34,19],"833":[34,30,34,40],"841":[34,45,34,53],"849":[36,22,36,28],"857":[36,34,36,44],"865":[36,22,36,45],"867":[36,22,36,33],"873":[36,22,36,52],"875":[36,22,36,50],"881":[36,22,36,52],"889":[36,22,36,52],"897":[37,22,37,23],"905":[37,22,37,23],"913":[37,22,37,23],"921":[37,25,37,26],"929":[37,29,37,35],"937":[37,29,37,42],"953":[37,44,37,45],"961":[37,44,37,47],"977":[38,21,38,27],"985":[38,28,38,29],"993":[38,21,38,30],"1001":[38,21,38,30],"1009":[38,13,38,31],"1017":[39,18,39,29],"1025":[39,35,39,40],"1033":[39,18,39,41],"1035":[39,18,39,34],"1041":[40,27,40,36],"1049":[40,37,40,61],"1057":[40,23,40,62],"1065":[40,23,40,62],"1073":[40,17,40,63],"1081":[42,23,42,27],"1089":[42,30,42,35],"1097":[42,38,42,41],"1105":[42,44,42,51],"1113":[42,52,42,62],"1121":[42,63,42,68],"1129":[42,52,42,69],"1137":[42,44,42,70],"1145":[42,13,42,19],"1153":[42,13,42,70],"1161":[42,13,42,71],"1169":[45,12,45,18],"1177":[45,12,45,18],"1185":[45,5,45,19],"1193":[13,1,46,2],"1201":[13,1,46,2],"1209":[13,1,46,2],"1217":[13,1,46,2],"1225":[13,1,46,2],"1233":[13,1,46,2],"1241":[13,1,46,2],"1249":[13,1,46,2],"1257":[13,1,46,2],"1265":[13,1,46,2],"1273":[13,1,46,2],"1281":[48,10,48,16],"1289":[49,19,49,28],"1297":[49,29,49,58],"1305":[49,15,49,59],"1313":[49,15,49,59],"1321":[49,9,49,60],"1329":[51,16,51,22],"1337":[51,27,51,35],"1345":[52,18,52,32],"1353":[52,33,52,39],"1361":[52,18,52,40],"1369":[52,18,52,40],"1377":[52,9,52,41],"1385":[54,16,54,22],"1393":[54,27,54,35],"1401":[55,19,55,28],"1409":[55,29,55,73],"1417":[55,15,55,74],"1425":[55,15,55,74],"1433":[55,9,55,75],"1441":[57,17,57,23],"1449":[57,32,57,35],"1457":[57,17,57,36],"1459":[57,17,57,31],"1465":[57,17,57,36],"1473":[57,17,57,36],"1481":[58,16,58,21],"1489":[58,27,58,28],"1497":[58,31,58,37],"1505":[58,45,58,46],"1513":[58,48,58,53],"1521":[58,31,58,54],"1523":[58,31,58,44],"1529":[58,57,58,63],"1537":[58,16,58,63],"1545":[58,16,58,63],"1553":[61,15,61,24],"1561":[61,25,61,29],"1569":[61,15,61,30],"1577":[61,15,61,30],"1585":[61,15,61,30],"1593":[62,18,62,20],"1601":[62,18,62,20],"1609":[62,18,62,20],"1617":[64,5,64,16],"1625":[64,29,64,34],"1633":[64,5,64,34],"1641":[64,5,64,35],"1649":[65,20,65,31],"1657":[65,37,65,43],"1665":[65,20,65,44],"1667":[65,20,65,36],"1673":[65,20,65,44],"1681":[66,15,66,20],"1689":[66,21,66,22],"1697":[66,15,66,23],"1705":[66,15,66,37],"1707":[66,15,66,35],"1713":[66,15,66,37],"1721":[66,9,66,38],"1729":[67,17,67,22],"1737":[67,23,67,24],"1745":[67,17,67,25],"1753":[67,17,67,25],"1761":[67,9,67,26],"1769":[68,13,68,18],"1777":[68,19,68,20],"1785":[68,13,68,21],"1793":[68,26,68,29],"1801":[69,21,69,26],"1809":[69,34,69,35],"1817":[69,37,69,42],"1825":[69,37,69,49],"1833":[69,52,69,53],"1841":[69,21,69,54],"1843":[69,21,69,33],"1849":[69,63,69,73],"1857":[69,75,69,79],"1865":[69,21,69,80],"1867":[69,21,69,62],"1873":[69,21,69,80],"1881":[69,13,69,81],"1889":[71,9,71,15],"1897":[71,16,71,19],"1905":[71,23,71,28],"1913":[71,9,71,28],"1921":[71,9,71,29],"1929":[73,5,73,8],"1937":[73,22,73,28],"1945":[73,5,73,28],"1953":[73,5,73,29],"1961":[74,12,74,15],"1969":[74,12,74,15],"1977":[74,5,74,16],"1985":[47,1,75,2],"1993":[47,1,75,2],"2001":[47,1,75,2],"2009":[47,1,75,2],"2017":[47,1,75,2],"2025":[47,1,75,2],"2033":[47,1,75,2],"2041":[47,1,75,2],"2049":[47,1,75,2],"2057":[47,1,75,2],"2065":[77,16,77,19],"2073":[77,16,77,29],"2081":[77,34,77,44],"2089":[78,16,78,19],"2097":[78,30,78,44],"2105":[78,16,78,45],"2107":[78,16,78,29],"2113":[78,16,78,45],"2121":[78,9,78,46],"2129":[80,16,80,19],"2137":[80,16,80,27],"2145":[80,32,80,40],"2153":[81,16,81,19],"2161":[81,16,81,27],"2169":[81,31,81,34],"2177":[81,31,81,42],"2185":[81,43,81,57],"2193":[81,31,81,58],"2201":[81,16,81,58],"2209":[81,9,81,59],"2217":[76,1,83,2],"2225":[76,1,83,2],"2233":[76,1,83,2],"2241":[85,15,85,21],"2249":[85,22,85,25],"2257":[85,15,85,26],"2265":[85,15,85,26],"2273":[85,15,85,26],"2281":[86,9,86,20],"2289":[86,26,86,29],"2297":[86,9,86,30],"2299":[86,9,86,25],"2305":[87,16,87,19],"2313":[87,16,87,19],"2321":[87,9,87,20],"2329":[89,9,89,12],"2337":[89,9,89,19],"2345":[89,22,89,23],"2353":[89,28,89,38],"2361":[89,44,89,47],"2369":[89,28,89,48],"2371":[89,28,89,43],"2377":[90,19,90,28],"2385":[90,29,90,54],"2393":[90,15,90,55],"2401":[90,15,90,55],"2409":[90,9,90,56],"2417":[92,12,92,15],"2425":[92,18,92,21],"2433":[92,30,92,41],"2441":[92,43,92,49],"2449":[92,18,92,50],"2451":[92,18,92,29],"2457":[92,53,92,56],"2465":[92,12,92,56],"2473":[92,5,92,57],"2481":[84,1,93,2],"2489":[84,1,93,2],"2497":[84,1,93,2],"2505":[84,1,93,2],"2513":[95,17,95,27],"2521":[95,33,95,39],"2529":[95,33,95,53],"2531":[95,33,95,51],"2537":[95,17,95,54],"2539":[95,17,95,32],"2545":[95,17,95,54],"2553":[95,17,95,54],"2561":[96,10,96,15],"2569":[97,19,97,28],"2577":[97,29,97,49],"2585":[97,15,97,50],"2593":[97,15,97,50],"2601":[97,9,97,51],"2609":[99,16,99,21],"2617":[99,22,99,23],"2625":[99,16,99,24],"2633":[99,16,99,24],"2641":[99,16,99,24],"2649":[100,19,100,24],"2657":[100,25,100,26],"2665":[100,19,100,27],"2673":[100,19,100,27],"2681":[100,19,100,27],"2689":[102,17,102,24],"2697":[102,37,102,40],"2705":[102,17,102,41],"2707":[102,17,102,36],"2713":[102,17,102,41],"2721":[102,17,102,41],"2729":[103,9,103,14],"2737":[103,20,103,21],"2745":[104,18,104,25],"2753":[104,33,104,38],"2761":[104,41,104,42],"2769":[104,18,104,43],"2771":[104,18,104,32],"2777":[104,18,104,43],"2785":[104,9,104,44],"2793":[105,19,105,26],"2801":[105,34,105,35],"2809":[105,37,105,42],"2817":[105,19,105,43],"2819":[105,19,105,33],"2825":[105,19,105,43],"2833":[105,9,105,44],"2841":[108,15,108,19],"2849":[109,18,109,25],"2857":[110,17,110,23],"2865":[107,15,111,6],"2873":[107,15,111,6],"2881":[107,15,111,6],"2889":[112,12,112,15],"2897":[112,12,112,15],"2905":[112,5,112,16],"2913":[94,1,113,2],"2921":[94,1,113,2],"2929":[94,1,113,2],"2937":[94,1,113,2],"2945":[94,1,113,2],"2953":[94,1,113,2],"2961":[94,1,113,2],"2969":[94,1,113,2],"2977":[94,1,113,2],"2985":[1,1,113,2],"2993":[1,1,113,2],"3001":[1,1,113,2],"3009":[1,1,113,2],"3017":[1,1,113,2],"3025":[1,1,113,2],"3033":[1,1,113,2],"3041":[1,1,113,2],"3049":[1,1,113,2],"3057":[1,1,113,2],"3065":[1,1,113,2],"3073":[13,1,46,2],"3081":[1,1,113,2],"3089":[47,1,75,2],"3097":[1,1,113,2],"3105":[76,1,83,2],"3113":[1,1,113,2],"3121":[84,1,93,2],"3129":[1,1,113,2],"3137":[94,1,113,2],"3145":[1,1,113,2],"3153":[14,5,16,6],"3161":[21,5,23,6],"3169":[24,5,26,6],"3177":[29,9,31,10],"3185":[28,5,33,6],"3193":[39,13,41,14],"3201":[37,9,43,10],"3209":[37,9,43,10],"3217":[34,5,44,6],"3225":[13,1,46,2],"3233":[13,1,46,2],"3241":[48,5,50,6],"3249":[51,5,53,6],"3257":[54,5,56,6],"3265":[58,16,58,63],"3273":[68,9,70,10],"3281":[65,5,72,6],"3289":[47,1,75,2],"3297":[47,1,75,2],"3305":[77,5,79,6],"3313":[80,5,82,6],"3321":[76,1,83,2],"3329":[76,1,83,2],"3337":[86,5,88,6],"3345":[89,5,91,6],"3353":[84,1,93,2],"3361":[84,1,93,2],"3369":[96,5,98,6],"3377":[103,5,106,6],"3385":[94,1,113,2],"3393":[94,1,113,2],"3401":[1,1,113,2],"3409":[1,1,113,2],"nBranches":52,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/media-typer/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/media-typer/index_jalangi_.js","code":"/*!\n * media-typer\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * RegExp to match *( \";\" parameter ) in RFC 2616 sec 3.7\n *\n * parameter     = token \"=\" ( token | quoted-string )\n * token         = 1*<any CHAR except CTLs or separators>\n * separators    = \"(\" | \")\" | \"<\" | \">\" | \"@\"\n *               | \",\" | \";\" | \":\" | \"\\\" | <\">\n *               | \"/\" | \"[\" | \"]\" | \"?\" | \"=\"\n *               | \"{\" | \"}\" | SP | HT\n * quoted-string = ( <\"> *(qdtext | quoted-pair ) <\"> )\n * qdtext        = <any TEXT except <\">>\n * quoted-pair   = \"\\\" CHAR\n * CHAR          = <any US-ASCII character (octets 0 - 127)>\n * TEXT          = <any OCTET except CTLs, but including LWS>\n * LWS           = [CRLF] 1*( SP | HT )\n * CRLF          = CR LF\n * CR            = <US-ASCII CR, carriage return (13)>\n * LF            = <US-ASCII LF, linefeed (10)>\n * SP            = <US-ASCII SP, space (32)>\n * SHT           = <US-ASCII HT, horizontal-tab (9)>\n * CTL           = <any US-ASCII control character (octets 0 - 31) and DEL (127)>\n * OCTET         = <any 8-bit sequence of data>\n */\nvar paramRegExp = /; *([!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) *= *(\"(?:[ !\\u0023-\\u005b\\u005d-\\u007e\\u0080-\\u00ff]|\\\\[\\u0020-\\u007e])*\"|[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+) */g;\nvar textRegExp = /^[\\u0020-\\u007e\\u0080-\\u00ff]+$/\nvar tokenRegExp = /^[!#$%&'\\*\\+\\-\\.0-9A-Z\\^_`a-z\\|~]+$/\n\n/**\n * RegExp to match quoted-pair in RFC 2616\n *\n * quoted-pair = \"\\\" CHAR\n * CHAR        = <any US-ASCII character (octets 0 - 127)>\n */\nvar qescRegExp = /\\\\([\\u0000-\\u007f])/g;\n\n/**\n * RegExp to match chars that must be quoted-pair in RFC 2616\n */\nvar quoteRegExp = /([\\\\\"])/g;\n\n/**\n * RegExp to match type in RFC 6838\n *\n * type-name = restricted-name\n * subtype-name = restricted-name\n * restricted-name = restricted-name-first *126restricted-name-chars\n * restricted-name-first  = ALPHA / DIGIT\n * restricted-name-chars  = ALPHA / DIGIT / \"!\" / \"#\" /\n *                          \"$\" / \"&\" / \"-\" / \"^\" / \"_\"\n * restricted-name-chars =/ \".\" ; Characters before first dot always\n *                              ; specify a facet name\n * restricted-name-chars =/ \"+\" ; Characters after last plus always\n *                              ; specify a structured syntax suffix\n * ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z\n * DIGIT =  %x30-39             ; 0-9\n */\nvar subtypeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_.-]{0,126}$/\nvar typeNameRegExp = /^[A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126}$/\nvar typeRegExp = /^ *([A-Za-z0-9][A-Za-z0-9!#$&^_-]{0,126})\\/([A-Za-z0-9][A-Za-z0-9!#$&^_.+-]{0,126}) *$/;\n\n/**\n * Module exports.\n */\n\nexports.format = format\nexports.parse = parse\n\n/**\n * Format object to media type.\n *\n * @param {object} obj\n * @return {string}\n * @api public\n */\n\nfunction format(obj) {\n  if (!obj || typeof obj !== 'object') {\n    throw new TypeError('argument obj is required')\n  }\n\n  var parameters = obj.parameters\n  var subtype = obj.subtype\n  var suffix = obj.suffix\n  var type = obj.type\n\n  if (!type || !typeNameRegExp.test(type)) {\n    throw new TypeError('invalid type')\n  }\n\n  if (!subtype || !subtypeNameRegExp.test(subtype)) {\n    throw new TypeError('invalid subtype')\n  }\n\n  // format as type/subtype\n  var string = type + '/' + subtype\n\n  // append +suffix\n  if (suffix) {\n    if (!typeNameRegExp.test(suffix)) {\n      throw new TypeError('invalid suffix')\n    }\n\n    string += '+' + suffix\n  }\n\n  // append parameters\n  if (parameters && typeof parameters === 'object') {\n    var param\n    var params = Object.keys(parameters).sort()\n\n    for (var i = 0; i < params.length; i++) {\n      param = params[i]\n\n      if (!tokenRegExp.test(param)) {\n        throw new TypeError('invalid parameter name')\n      }\n\n      string += '; ' + param + '=' + qstring(parameters[param])\n    }\n  }\n\n  return string\n}\n\n/**\n * Parse media type to object.\n *\n * @param {string|object} string\n * @return {Object}\n * @api public\n */\n\nfunction parse(string) {\n  if (!string) {\n    throw new TypeError('argument string is required')\n  }\n\n  // support req/res-like objects as argument\n  if (typeof string === 'object') {\n    string = getcontenttype(string)\n  }\n\n  if (typeof string !== 'string') {\n    throw new TypeError('argument string is required to be a string')\n  }\n\n  var index = string.indexOf(';')\n  var type = index !== -1\n    ? string.substr(0, index)\n    : string\n\n  var key\n  var match\n  var obj = splitType(type)\n  var params = {}\n  var value\n\n  paramRegExp.lastIndex = index\n\n  while (match = paramRegExp.exec(string)) {\n    key = match[1].toLowerCase()\n    value = match[2]\n\n    if (value[0] === '\"') {\n      // remove quotes and escapes\n      value = value\n        .substr(1, value.length - 2)\n        .replace(qescRegExp, '$1')\n    }\n\n    params[key] = value\n  }\n\n  obj.parameters = params\n\n  return obj\n}\n\n/**\n * Get content-type from req/res objects.\n *\n * @param {object}\n * @return {Object}\n * @api private\n */\n\nfunction getcontenttype(obj) {\n  if (typeof obj.getHeader === 'function') {\n    // res-like\n    return obj.getHeader('content-type')\n  }\n\n  if (typeof obj.headers === 'object') {\n    // req-like\n    return obj.headers && obj.headers['content-type']\n  }\n}\n\n/**\n * Quote a string if necessary.\n *\n * @param {string} val\n * @return {string}\n * @api private\n */\n\nfunction qstring(val) {\n  var str = String(val)\n\n  // no need to quote tokens\n  if (tokenRegExp.test(str)) {\n    return str\n  }\n\n  if (str.length > 0 && !textRegExp.test(str)) {\n    throw new TypeError('invalid parameter value')\n  }\n\n  return '\"' + str.replace(quoteRegExp, '\\\\$1') + '\"'\n}\n\n/**\n * Simply \"type/subtype+siffx\" into parts.\n *\n * @param {string} string\n * @return {Object}\n * @api private\n */\n\nfunction splitType(string) {\n  var match = typeRegExp.exec(string.toLowerCase())\n\n  if (!match) {\n    throw new TypeError('invalid media type')\n  }\n\n  var type = match[1]\n  var subtype = match[2]\n  var suffix\n\n  // suffix after last +\n  var index = subtype.lastIndexOf('+')\n  if (index !== -1) {\n    suffix = subtype.substr(index + 1)\n    subtype = subtype.substr(0, index)\n  }\n\n  var obj = {\n    type: type,\n    subtype: subtype,\n    suffix: suffix\n  }\n\n  return obj\n}\n"}