J$.iids = {"8":[6,9,6,31],"9":[1,20,1,27],"10":[6,9,6,13],"16":[6,9,6,49],"17":[1,28,1,32],"18":[6,17,6,31],"24":[6,9,6,49],"25":[1,20,1,33],"26":[6,35,6,49],"32":[9,9,9,15],"33":[1,20,1,33],"34":[9,9,9,15],"40":[12,18,12,39],"41":[1,20,1,33],"42":[12,18,12,39],"48":[14,13,14,39],"49":[2,26,2,38],"50":[13,21,13,38],"56":[13,21,13,38],"57":[2,26,2,45],"58":[13,40,13,43],"64":[18,15,18,42],"65":[2,26,2,45],"72":[19,19,19,37],"73":[2,26,2,45],"74":[13,40,13,43],"80":[20,9,20,24],"81":[3,1,3,7],"82":[20,9,20,24],"88":[24,9,24,63],"89":[3,18,3,22],"90":[24,33,24,35],"96":[24,9,24,63],"97":[3,1,3,22],"98":[24,9,24,35],"104":[32,23,32,30],"105":[3,1,3,23],"106":[24,61,24,63],"112":[30,13,30,39],"113":[4,18,4,60],"114":[24,39,24,63],"120":[28,21,28,38],"121":[4,18,4,60],"122":[28,21,28,38],"129":[4,18,4,60],"130":[28,40,28,43],"137":[6,10,6,13],"145":[6,18,6,21],"146":[28,40,28,43],"153":[6,18,6,31],"154":[30,37,30,39],"161":[6,36,6,39],"162":[30,13,30,39],"169":[6,36,6,49],"170":[32,33,32,47],"177":[7,19,7,28],"178":[32,33,32,59],"185":[7,29,7,55],"193":[7,15,7,56],"201":[7,15,7,56],"209":[7,9,7,57],"217":[9,10,9,15],"225":[10,19,10,28],"233":[10,29,10,57],"241":[10,15,10,58],"249":[10,15,10,58],"257":[10,9,10,59],"265":[12,19,12,24],"273":[12,33,12,38],"281":[12,19,12,39],"283":[12,19,12,32],"289":[12,43,12,49],"297":[12,50,12,55],"305":[12,43,12,56],"313":[12,42,12,57],"321":[12,60,12,65],"329":[12,18,12,65],"337":[12,18,12,65],"345":[13,18,13,19],"353":[13,18,13,19],"361":[13,18,13,19],"369":[13,21,13,22],"377":[13,25,13,31],"385":[13,25,13,38],"401":[13,40,13,41],"409":[13,40,13,43],"425":[14,13,14,23],"433":[14,29,14,35],"441":[14,36,14,37],"449":[14,29,14,38],"457":[14,13,14,39],"459":[14,13,14,28],"465":[15,23,15,32],"473":[15,33,15,76],"481":[15,19,15,77],"489":[15,19,15,77],"497":[15,13,15,78],"505":[18,15,18,18],"513":[18,29,18,35],"521":[18,15,18,36],"523":[18,15,18,28],"529":[18,40,18,42],"537":[18,15,18,42],"545":[18,15,18,42],"553":[19,19,19,24],"561":[19,33,19,36],"569":[19,19,19,37],"571":[19,19,19,32],"577":[19,40,19,43],"585":[19,49,19,53],"593":[19,40,19,54],"595":[19,40,19,48],"601":[19,57,19,63],"609":[19,64,19,67],"617":[19,57,19,68],"625":[19,19,19,68],"633":[19,19,19,68],"641":[20,9,20,16],"649":[20,21,20,24],"657":[21,9,21,16],"665":[21,9,21,16],"673":[23,16,23,23],"681":[23,16,23,37],"683":[23,16,23,35],"689":[23,44,23,51],"697":[23,16,23,52],"699":[23,16,23,43],"705":[23,16,23,52],"713":[23,16,23,52],"721":[24,9,24,15],"729":[24,24,24,27],"737":[24,9,24,28],"739":[24,9,24,23],"745":[24,34,24,35],"753":[24,39,24,43],"761":[24,52,24,55],"769":[24,39,24,56],"771":[24,39,24,51],"777":[24,62,24,63],"785":[25,9,25,12],"793":[25,23,25,29],"801":[25,31,25,34],"809":[25,9,25,35],"811":[25,9,25,22],"817":[25,9,25,36],"825":[26,9,26,16],"833":[26,9,26,16],"841":[28,18,28,19],"849":[28,18,28,19],"857":[28,18,28,19],"865":[28,21,28,22],"873":[28,25,28,31],"881":[28,25,28,38],"897":[28,40,28,41],"905":[28,40,28,43],"921":[29,17,29,23],"929":[29,24,29,25],"937":[29,17,29,26],"945":[29,17,29,40],"947":[29,17,29,38],"953":[29,17,29,40],"961":[29,9,29,41],"969":[30,13,30,17],"977":[30,26,30,31],"985":[30,13,30,32],"987":[30,13,30,25],"993":[30,38,30,39],"1001":[31,13,31,17],"1009":[31,23,31,28],"1017":[31,13,31,29],"1019":[31,13,31,22],"1025":[31,13,31,30],"1033":[32,23,32,30],"1041":[32,33,32,40],"1049":[32,43,32,47],"1057":[32,50,32,56],"1065":[32,57,32,58],"1073":[32,50,32,59],"1081":[32,62,32,68],"1089":[32,69,32,70],"1097":[32,62,32,71],"1105":[32,23,32,71],"1113":[32,13,32,72],"1121":[35,5,35,8],"1129":[35,19,35,25],"1137":[35,27,35,34],"1145":[35,5,35,35],"1147":[35,5,35,18],"1153":[35,5,35,36],"1161":[5,1,36,2],"1169":[5,1,36,2],"1177":[5,1,36,2],"1185":[5,1,36,2],"1193":[5,1,36,2],"1201":[5,1,36,2],"1209":[5,1,36,2],"1217":[5,1,36,2],"1225":[5,1,36,2],"1233":[1,1,36,2],"1241":[1,1,36,2],"1249":[1,1,36,2],"1257":[1,1,36,2],"1265":[5,1,36,2],"1273":[1,1,36,2],"1281":[6,5,8,6],"1289":[9,5,11,6],"1297":[12,18,12,65],"1305":[14,9,16,10],"1313":[13,5,17,6],"1321":[13,5,17,6],"1329":[19,19,19,68],"1337":[20,5,22,6],"1345":[24,5,27,6],"1353":[32,23,32,71],"1361":[30,9,33,10],"1369":[28,5,34,6],"1377":[28,5,34,6],"1385":[5,1,36,2],"1393":[5,1,36,2],"1401":[1,1,36,2],"1409":[1,1,36,2],"nBranches":30,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/vary/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/vary/index_jalangi_.js","code":"/*!\n * vary\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nmodule.exports = vary;\n\n/**\n * Variables.\n */\n\nvar separators = /[\\(\\)<>@,;:\\\\\"\\/\\[\\]\\?=\\{\\}\\u0020\\u0009]/;\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @api public\n */\n\nfunction vary(res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required');\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required');\n  }\n\n  var fields = !Array.isArray(field)\n    ? [String(field)]\n    : field;\n\n  for (var i = 0; i < fields.length; i++) {\n    if (separators.test(fields[i])) {\n      throw new TypeError('field argument contains an invalid header');\n    }\n  }\n\n  var val = res.getHeader('Vary') || ''\n  var headers = Array.isArray(val)\n    ? val.join(', ')\n    : String(val);\n\n  // existing unspecified vary\n  if (headers === '*') {\n    return;\n  }\n\n  // enumerate current values\n  var vals = headers.toLowerCase().split(/ *, */);\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    res.setHeader('Vary', '*');\n    return;\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    field = fields[i].toLowerCase();\n\n    // append value (case-preserving)\n    if (vals.indexOf(field) === -1) {\n      vals.push(field);\n      headers = headers\n        ? headers + ', ' + fields[i]\n        : fields[i];\n    }\n  }\n\n  res.setHeader('Vary', headers);\n}\n"};
jalangiLabel599:
    while (true) {
        try {
            J$.Se(1233, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/vary/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/vary/index.js');
            function vary(res, field) {
                jalangiLabel598:
                    while (true) {
                        try {
                            J$.Fe(1161, arguments.callee, this, arguments);
                            arguments = J$.N(1169, 'arguments', arguments, 4);
                            res = J$.N(1177, 'res', res, 4);
                            field = J$.N(1185, 'field', field, 4);
                            J$.N(1193, 'fields', fields, 0);
                            J$.N(1201, 'i', i, 0);
                            J$.N(1209, 'val', val, 0);
                            J$.N(1217, 'headers', headers, 0);
                            J$.N(1225, 'vals', vals, 0);
                            if (J$.X1(1281, J$.C(24, J$.C(16, J$.C(8, J$.U(10, '!', J$.R(137, 'res', res, 0))) ? J$._() : J$.U(18, '!', J$.G(153, J$.R(145, 'res', res, 0), 'getHeader', 0))) ? J$._() : J$.U(26, '!', J$.G(169, J$.R(161, 'res', res, 0), 'setHeader', 0))))) {
                                throw J$.X1(209, J$.Th(201, J$.F(193, J$.R(177, 'TypeError', TypeError, 2), 1)(J$.T(185, 'res argument is required', 21, false))));
                            }
                            if (J$.X1(1289, J$.C(32, J$.U(34, '!', J$.R(217, 'field', field, 0))))) {
                                throw J$.X1(257, J$.Th(249, J$.F(241, J$.R(225, 'TypeError', TypeError, 2), 1)(J$.T(233, 'field argument is required', 21, false))));
                            }
                            var fields = J$.X1(337, J$.W(329, 'fields', J$.X1(1297, J$.C(40, J$.U(42, '!', J$.M(281, J$.R(265, 'Array', Array, 2), 'isArray', 0)(J$.R(273, 'field', field, 0))))) ? J$.T(313, [J$.F(305, J$.R(289, 'String', String, 2), 0)(J$.R(297, 'field', field, 0))], 10, false) : J$.R(321, 'field', field, 0), fields, 1));
                            for (var i = J$.X1(361, J$.W(353, 'i', J$.T(345, 0, 22, false), i, 1)); J$.X1(1313, J$.C(56, J$.B(50, '<', J$.R(369, 'i', i, 0), J$.G(385, J$.R(377, 'fields', fields, 0), 'length', 0), 0))); J$.X1(1321, J$.B(74, '-', i = J$.W(409, 'i', J$.B(66, '+', J$.U(58, '+', J$.R(401, 'i', i, 0)), J$.T(393, 1, 22, false), 0), i, 0), J$.T(417, 1, 22, false), 0))) {
                                if (J$.X1(1305, J$.C(48, J$.M(457, J$.R(425, 'separators', separators, 1), 'test', 0)(J$.G(449, J$.R(433, 'fields', fields, 0), J$.R(441, 'i', i, 0), 4))))) {
                                    throw J$.X1(497, J$.Th(489, J$.F(481, J$.R(465, 'TypeError', TypeError, 2), 1)(J$.T(473, 'field argument contains an invalid header', 21, false))));
                                }
                            }
                            var val = J$.X1(545, J$.W(537, 'val', J$.C(64, J$.M(521, J$.R(505, 'res', res, 0), 'getHeader', 0)(J$.T(513, 'Vary', 21, false))) ? J$._() : J$.T(529, '', 21, false), val, 1));
                            var headers = J$.X1(633, J$.W(625, 'headers', J$.X1(1329, J$.C(72, J$.M(569, J$.R(553, 'Array', Array, 2), 'isArray', 0)(J$.R(561, 'val', val, 0)))) ? J$.M(593, J$.R(577, 'val', val, 0), 'join', 0)(J$.T(585, ', ', 21, false)) : J$.F(617, J$.R(601, 'String', String, 2), 0)(J$.R(609, 'val', val, 0)), headers, 1));
                            if (J$.X1(1337, J$.C(80, J$.B(82, '===', J$.R(641, 'headers', headers, 0), J$.T(649, '*', 21, false), 0)))) {
                                return J$.X1(665, J$.Rt(657, undefined));
                            }
                            var vals = J$.X1(713, J$.W(705, 'vals', J$.M(697, J$.M(681, J$.R(673, 'headers', headers, 0), 'toLowerCase', 0)(), 'split', 0)(J$.T(689, / *, */, 14, false)), vals, 1));
                            if (J$.X1(1345, J$.C(96, J$.C(88, J$.B(98, '!==', J$.M(737, J$.R(721, 'fields', fields, 0), 'indexOf', 0)(J$.T(729, '*', 21, false)), J$.U(90, '-', J$.T(745, 1, 22, false)), 0)) ? J$._() : J$.B(114, '!==', J$.M(769, J$.R(753, 'vals', vals, 0), 'indexOf', 0)(J$.T(761, '*', 21, false)), J$.U(106, '-', J$.T(777, 1, 22, false)), 0)))) {
                                J$.X1(817, J$.M(809, J$.R(785, 'res', res, 0), 'setHeader', 0)(J$.T(793, 'Vary', 21, false), J$.T(801, '*', 21, false)));
                                return J$.X1(833, J$.Rt(825, undefined));
                            }
                            for (var i = J$.X1(857, J$.W(849, 'i', J$.T(841, 0, 22, false), i, 1)); J$.X1(1369, J$.C(120, J$.B(122, '<', J$.R(865, 'i', i, 0), J$.G(881, J$.R(873, 'fields', fields, 0), 'length', 0), 0))); J$.X1(1377, J$.B(146, '-', i = J$.W(905, 'i', J$.B(138, '+', J$.U(130, '+', J$.R(897, 'i', i, 0)), J$.T(889, 1, 22, false), 0), i, 0), J$.T(913, 1, 22, false), 0))) {
                                J$.X1(961, field = J$.W(953, 'field', J$.M(945, J$.G(937, J$.R(921, 'fields', fields, 0), J$.R(929, 'i', i, 0), 4), 'toLowerCase', 0)(), field, 0));
                                if (J$.X1(1361, J$.C(112, J$.B(162, '===', J$.M(985, J$.R(969, 'vals', vals, 0), 'indexOf', 0)(J$.R(977, 'field', field, 0)), J$.U(154, '-', J$.T(993, 1, 22, false)), 0)))) {
                                    J$.X1(1025, J$.M(1017, J$.R(1001, 'vals', vals, 0), 'push', 0)(J$.R(1009, 'field', field, 0)));
                                    J$.X1(1113, headers = J$.W(1105, 'headers', J$.X1(1353, J$.C(104, J$.R(1033, 'headers', headers, 0))) ? J$.B(178, '+', J$.B(170, '+', J$.R(1041, 'headers', headers, 0), J$.T(1049, ', ', 21, false), 0), J$.G(1073, J$.R(1057, 'fields', fields, 0), J$.R(1065, 'i', i, 0), 4), 0) : J$.G(1097, J$.R(1081, 'fields', fields, 0), J$.R(1089, 'i', i, 0), 4), headers, 0));
                                }
                            }
                            J$.X1(1153, J$.M(1145, J$.R(1121, 'res', res, 0), 'setHeader', 0)(J$.T(1129, 'Vary', 21, false), J$.R(1137, 'headers', headers, 0)));
                        } catch (J$e) {
                            J$.Ex(1385, J$e);
                        } finally {
                            if (J$.Fr(1393))
                                continue jalangiLabel598;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1241, '__secret__S$', __secret__S$, 0);
            J$.N(1249, '__secret__traits__', __secret__traits__, 0);
            J$.N(1257, 'separators', separators, 0);
            vary = J$.N(1273, 'vary', J$.T(1265, vary, 12, false, 1161), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(105, J$.P(97, J$.R(81, 'module', module, 2), 'exports', J$.R(89, 'vary', vary, 1), 0));
            var separators = J$.X1(129, J$.W(121, 'separators', J$.T(113, /[\(\)<>@,;:\\"\/\[\]\?=\{\}\u0020\u0009]/, 14, false), separators, 3));
        } catch (J$e) {
            J$.Ex(1401, J$e);
        } finally {
            if (J$.Sr(1409)) {
                J$.L();
                continue jalangiLabel599;
            } else {
                J$.L();
                break jalangiLabel599;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
