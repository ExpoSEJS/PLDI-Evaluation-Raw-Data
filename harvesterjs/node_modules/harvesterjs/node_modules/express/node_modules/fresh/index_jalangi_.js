J$.iids = {"8":[12,9,12,37],"9":[1,20,1,27],"10":[12,9,12,23],"16":[12,9,12,37],"17":[1,28,1,32],"18":[12,27,12,37],"24":[14,9,14,44],"25":[1,20,1,33],"26":[14,42,14,44],"32":[14,9,14,44],"33":[1,20,1,33],"34":[14,15,14,44],"40":[16,9,16,18],"41":[1,20,1,33],"42":[19,23,19,47],"48":[19,23,19,70],"49":[2,26,2,38],"50":[19,51,19,70],"56":[18,9,18,18],"57":[2,26,2,45],"58":[23,23,23,52],"64":[20,9,20,22],"65":[2,26,2,45],"66":[25,13,25,42],"72":[25,15,25,41],"73":[2,26,2,45],"74":[25,12,25,42],"81":[3,1,3,7],"89":[3,18,3,23],"97":[3,1,3,23],"105":[3,1,3,24],"113":[5,23,5,27],"121":[5,23,5,27],"129":[5,23,5,27],"137":[6,23,6,27],"145":[6,23,6,27],"153":[6,23,6,27],"161":[7,25,7,28],"169":[7,29,7,48],"177":[7,25,7,49],"185":[7,25,7,49],"193":[7,25,7,49],"201":[8,21,8,24],"209":[8,25,8,40],"217":[8,21,8,41],"225":[8,21,8,41],"233":[8,21,8,41],"241":[9,24,9,27],"249":[9,28,9,43],"257":[9,24,9,44],"265":[9,24,9,44],"273":[9,24,9,44],"281":[10,16,10,19],"289":[10,20,10,26],"297":[10,16,10,27],"305":[10,16,10,27],"313":[10,16,10,27],"321":[11,14,11,17],"329":[11,18,11,33],"337":[11,14,11,34],"345":[11,14,11,34],"353":[11,14,11,34],"361":[12,10,12,23],"369":[12,28,12,37],"377":[13,16,13,21],"385":[13,16,13,21],"393":[13,9,13,22],"401":[14,9,14,11],"409":[14,15,14,17],"417":[14,26,14,36],"425":[14,15,14,37],"427":[14,15,14,25],"433":[14,43,14,44],"441":[15,16,15,21],"449":[15,16,15,21],"457":[15,9,15,22],"465":[16,9,16,18],"473":[17,21,17,30],"481":[17,37,17,44],"489":[17,21,17,45],"491":[17,21,17,36],"497":[17,21,17,45],"505":[17,9,17,46],"513":[18,9,18,18],"521":[19,24,19,33],"529":[19,42,19,46],"537":[19,24,19,47],"539":[19,24,19,41],"545":[19,51,19,54],"553":[19,58,19,67],"561":[19,68,19,69],"569":[19,58,19,70],"577":[19,23,19,70],"585":[19,9,19,71],"593":[20,9,20,22],"601":[21,29,21,33],"609":[21,34,21,47],"617":[21,25,21,48],"625":[21,25,21,48],"633":[21,9,21,49],"641":[22,28,22,32],"649":[22,33,22,45],"657":[22,24,22,46],"665":[22,24,22,46],"673":[22,9,22,47],"681":[23,23,23,35],"689":[23,39,23,52],"697":[23,23,23,52],"705":[23,9,23,53],"713":[25,15,25,26],"721":[25,30,25,41],"729":[25,12,25,42],"737":[25,5,25,43],"745":[4,1,26,2],"753":[4,1,26,2],"761":[4,1,26,2],"769":[4,1,26,2],"777":[4,1,26,2],"785":[4,1,26,2],"793":[4,1,26,2],"801":[4,1,26,2],"809":[4,1,26,2],"817":[4,1,26,2],"825":[4,1,26,2],"833":[1,1,26,2],"841":[1,1,26,2],"849":[1,1,26,2],"857":[4,1,26,2],"865":[1,1,26,2],"873":[12,5,13,22],"881":[14,5,15,22],"889":[16,5,17,46],"897":[18,5,19,71],"905":[20,5,24,6],"913":[4,1,26,2],"921":[4,1,26,2],"929":[1,1,26,2],"937":[1,1,26,2],"nBranches":18,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/fresh/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/fresh/index_jalangi_.js","code":"\n/**\n * Expose `fresh()`.\n */\n\nmodule.exports = fresh;\n\n/**\n * Check freshness of `req` and `res` headers.\n *\n * When the cache is \"fresh\" __true__ is returned,\n * otherwise __false__ is returned to indicate that\n * the cache is now stale.\n *\n * @param {Object} req\n * @param {Object} res\n * @return {Boolean}\n * @api public\n */\n\nfunction fresh(req, res) {\n  // defaults\n  var etagMatches = true;\n  var notModified = true;\n\n  // fields\n  var modifiedSince = req['if-modified-since'];\n  var noneMatch = req['if-none-match'];\n  var lastModified = res['last-modified'];\n  var etag = res['etag'];\n  var cc = req['cache-control'];\n\n  // unconditional request\n  if (!modifiedSince && !noneMatch) return false;\n\n  // check for no-cache cache request directive\n  if (cc && cc.indexOf('no-cache') !== -1) return false;  \n\n  // parse if-none-match\n  if (noneMatch) noneMatch = noneMatch.split(/ *, */);\n\n  // if-none-match\n  if (noneMatch) etagMatches = ~noneMatch.indexOf(etag) || '*' == noneMatch[0];\n\n  // if-modified-since\n  if (modifiedSince) {\n    modifiedSince = new Date(modifiedSince);\n    lastModified = new Date(lastModified);\n    notModified = lastModified <= modifiedSince;\n  }\n\n  return !! (etagMatches && notModified);\n}"};
jalangiLabel288:
    while (true) {
        try {
            J$.Se(833, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/fresh/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/express/node_modules/fresh/index.js');
            function fresh(req, res) {
                jalangiLabel287:
                    while (true) {
                        try {
                            J$.Fe(745, arguments.callee, this, arguments);
                            arguments = J$.N(753, 'arguments', arguments, 4);
                            req = J$.N(761, 'req', req, 4);
                            res = J$.N(769, 'res', res, 4);
                            J$.N(777, 'etagMatches', etagMatches, 0);
                            J$.N(785, 'notModified', notModified, 0);
                            J$.N(793, 'modifiedSince', modifiedSince, 0);
                            J$.N(801, 'noneMatch', noneMatch, 0);
                            J$.N(809, 'lastModified', lastModified, 0);
                            J$.N(817, 'etag', etag, 0);
                            J$.N(825, 'cc', cc, 0);
                            var etagMatches = J$.X1(129, J$.W(121, 'etagMatches', J$.T(113, true, 23, false), etagMatches, 1));
                            var notModified = J$.X1(153, J$.W(145, 'notModified', J$.T(137, true, 23, false), notModified, 1));
                            var modifiedSince = J$.X1(193, J$.W(185, 'modifiedSince', J$.G(177, J$.R(161, 'req', req, 0), J$.T(169, 'if-modified-since', 21, false), 4), modifiedSince, 1));
                            var noneMatch = J$.X1(233, J$.W(225, 'noneMatch', J$.G(217, J$.R(201, 'req', req, 0), J$.T(209, 'if-none-match', 21, false), 4), noneMatch, 1));
                            var lastModified = J$.X1(273, J$.W(265, 'lastModified', J$.G(257, J$.R(241, 'res', res, 0), J$.T(249, 'last-modified', 21, false), 4), lastModified, 1));
                            var etag = J$.X1(313, J$.W(305, 'etag', J$.G(297, J$.R(281, 'res', res, 0), J$.T(289, 'etag', 21, false), 4), etag, 1));
                            var cc = J$.X1(353, J$.W(345, 'cc', J$.G(337, J$.R(321, 'req', req, 0), J$.T(329, 'cache-control', 21, false), 4), cc, 1));
                            if (J$.X1(873, J$.C(16, J$.C(8, J$.U(10, '!', J$.R(361, 'modifiedSince', modifiedSince, 0))) ? J$.U(18, '!', J$.R(369, 'noneMatch', noneMatch, 0)) : J$._())))
                                return J$.X1(393, J$.Rt(385, J$.T(377, false, 23, false)));
                            if (J$.X1(881, J$.C(32, J$.C(24, J$.R(401, 'cc', cc, 0)) ? J$.B(34, '!==', J$.M(425, J$.R(409, 'cc', cc, 0), 'indexOf', 0)(J$.T(417, 'no-cache', 21, false)), J$.U(26, '-', J$.T(433, 1, 22, false)), 0) : J$._())))
                                return J$.X1(457, J$.Rt(449, J$.T(441, false, 23, false)));
                            if (J$.X1(889, J$.C(40, J$.R(465, 'noneMatch', noneMatch, 0))))
                                J$.X1(505, noneMatch = J$.W(497, 'noneMatch', J$.M(489, J$.R(473, 'noneMatch', noneMatch, 0), 'split', 0)(J$.T(481, / *, */, 14, false)), noneMatch, 0));
                            if (J$.X1(897, J$.C(56, J$.R(513, 'noneMatch', noneMatch, 0))))
                                J$.X1(585, etagMatches = J$.W(577, 'etagMatches', J$.C(48, J$.U(42, '~', J$.M(537, J$.R(521, 'noneMatch', noneMatch, 0), 'indexOf', 0)(J$.R(529, 'etag', etag, 0)))) ? J$._() : J$.B(50, '==', J$.T(545, '*', 21, false), J$.G(569, J$.R(553, 'noneMatch', noneMatch, 0), J$.T(561, 0, 22, false), 4), 0), etagMatches, 0));
                            if (J$.X1(905, J$.C(64, J$.R(593, 'modifiedSince', modifiedSince, 0)))) {
                                J$.X1(633, modifiedSince = J$.W(625, 'modifiedSince', J$.F(617, J$.R(601, 'Date', Date, 2), 1)(J$.R(609, 'modifiedSince', modifiedSince, 0)), modifiedSince, 0));
                                J$.X1(673, lastModified = J$.W(665, 'lastModified', J$.F(657, J$.R(641, 'Date', Date, 2), 1)(J$.R(649, 'lastModified', lastModified, 0)), lastModified, 0));
                                J$.X1(705, notModified = J$.W(697, 'notModified', J$.B(58, '<=', J$.R(681, 'lastModified', lastModified, 0), J$.R(689, 'modifiedSince', modifiedSince, 0), 0), notModified, 0));
                            }
                            return J$.X1(737, J$.Rt(729, J$.U(74, '!', J$.U(66, '!', J$.C(72, J$.R(713, 'etagMatches', etagMatches, 0)) ? J$.R(721, 'notModified', notModified, 0) : J$._()))));
                        } catch (J$e) {
                            J$.Ex(913, J$e);
                        } finally {
                            if (J$.Fr(921))
                                continue jalangiLabel287;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(841, '__secret__S$', __secret__S$, 0);
            J$.N(849, '__secret__traits__', __secret__traits__, 0);
            fresh = J$.N(865, 'fresh', J$.T(857, fresh, 12, false, 745), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(105, J$.P(97, J$.R(81, 'module', module, 2), 'exports', J$.R(89, 'fresh', fresh, 1), 0));
        } catch (J$e) {
            J$.Ex(929, J$e);
        } finally {
            if (J$.Sr(937)) {
                J$.L();
                continue jalangiLabel288;
            } else {
                J$.L();
                break jalangiLabel288;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
