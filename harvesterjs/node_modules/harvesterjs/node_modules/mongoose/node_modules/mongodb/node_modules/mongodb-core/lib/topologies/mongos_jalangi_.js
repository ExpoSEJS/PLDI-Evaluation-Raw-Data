J$.iids = {"8":[46,13,46,29],"9":[1,20,1,27],"10":[42,16,42,33],"16":[49,9,49,15],"17":[1,28,1,32],"18":[49,9,49,15],"24":[51,9,51,62],"25":[1,20,1,33],"26":[51,9,51,62],"32":[61,13,61,29],"33":[1,20,1,33],"34":[57,16,57,33],"40":[64,9,64,15],"41":[1,20,1,33],"42":[64,9,64,15],"48":[84,12,84,46],"49":[2,26,2,38],"50":[84,12,84,46],"56":[103,22,103,62],"57":[2,26,2,45],"58":[99,12,99,46],"64":[105,13,105,117],"65":[2,26,2,45],"66":[105,43,105,93],"72":[105,13,105,117],"73":[2,26,2,45],"74":[105,13,105,93],"80":[109,9,109,107],"81":[3,1,3,13],"82":[109,9,109,48],"88":[109,9,109,107],"89":[3,1,3,14],"90":[109,52,109,107],"96":[112,9,112,28],"97":[4,16,4,23],"98":[112,9,112,28],"104":[119,15,119,28],"105":[4,24,4,30],"106":[114,21,114,37],"112":[121,9,121,33],"113":[4,16,4,31],"114":[114,20,114,55],"120":[123,9,123,29],"121":[4,16,4,40],"122":[121,9,121,33],"128":[126,13,126,67],"129":[4,46,4,53],"130":[123,9,123,29],"136":[126,13,126,67],"137":[4,54,4,60],"138":[126,13,126,26],"144":[129,20,129,40],"145":[4,46,4,61],"146":[126,13,126,38],"152":[130,16,130,28],"153":[4,46,4,68],"154":[126,42,126,55],"160":[136,25,136,53],"161":[4,74,4,81],"162":[126,42,126,67],"168":[137,21,137,47],"169":[4,82,4,88],"170":[129,20,129,40],"176":[138,27,138,57],"177":[4,74,4,89],"178":[146,20,146,44],"184":[140,17,140,53],"185":[4,113,4,120],"186":[146,20,146,57],"192":[146,20,146,57],"193":[4,121,4,142],"194":[149,13,149,23],"200":[152,22,152,50],"201":[4,113,4,143],"208":[155,33,155,66],"209":[4,113,4,163],"210":[149,13,149,23],"216":[161,20,161,38],"217":[4,180,4,187],"218":[161,20,161,38],"224":[191,9,191,72],"225":[4,188,4,196],"226":[191,70,191,72],"232":[199,16,199,28],"233":[4,180,4,197],"234":[191,9,191,72],"240":[197,9,197,22],"241":[4,180,4,210],"242":[197,9,197,22],"248":[208,9,208,36],"249":[4,226,4,233],"250":[199,16,199,28],"256":[215,9,215,17],"257":[4,234,4,245],"258":[208,9,208,36],"264":[246,13,246,35],"265":[4,226,4,246],"266":[229,12,229,30],"272":[229,12,229,30],"273":[4,255,4,262],"274":[253,22,253,56],"280":[253,9,253,56],"281":[4,263,4,269],"282":[261,12,261,37],"288":[253,9,253,56],"289":[4,255,4,270],"290":[264,9,264,23],"296":[264,9,264,37],"297":[4,255,4,279],"298":[264,9,264,37],"299":[4,255,4,277],"304":[266,9,266,34],"305":[4,255,4,284],"306":[266,9,266,34],"312":[268,9,268,64],"313":[4,300,4,307],"314":[268,9,268,28],"320":[268,9,268,64],"321":[4,308,4,319],"322":[268,32,268,64],"328":[275,9,275,37],"329":[4,300,4,320],"330":[275,9,275,23],"336":[277,9,277,34],"337":[4,331,4,338],"338":[275,9,275,37],"344":[279,9,279,64],"345":[4,339,4,349],"346":[277,9,277,34],"352":[279,9,279,64],"353":[4,331,4,350],"354":[279,9,279,28],"360":[286,9,286,37],"361":[4,361,4,368],"362":[279,32,279,64],"368":[288,9,288,34],"369":[4,369,4,391],"370":[286,9,286,23],"376":[290,9,290,64],"377":[4,361,4,392],"378":[286,9,286,37],"384":[290,9,290,64],"385":[4,411,4,418],"386":[288,9,288,34],"392":[297,9,297,37],"393":[4,419,4,438],"394":[290,9,290,28],"400":[299,9,299,34],"401":[4,411,4,439],"402":[290,32,290,64],"408":[302,9,302,64],"409":[4,451,4,458],"410":[297,9,297,23],"416":[302,9,302,64],"417":[4,459,4,470],"418":[297,9,297,37],"424":[307,15,307,28],"425":[4,451,4,471],"426":[299,9,299,34],"432":[316,25,316,35],"433":[4,486,4,493],"434":[302,9,302,28],"440":[315,21,315,31],"441":[4,494,4,504],"442":[302,32,302,64],"448":[312,25,312,43],"449":[4,486,4,505],"450":[312,25,312,43],"456":[308,9,308,22],"457":[4,16,4,40],"458":[312,45,312,48],"464":[325,48,325,68],"465":[4,16,4,40],"472":[329,9,329,23],"473":[4,46,4,68],"474":[312,45,312,48],"480":[332,13,332,23],"481":[4,46,4,68],"482":[314,25,314,34],"488":[338,21,338,40],"489":[4,74,4,89],"490":[315,21,315,31],"496":[339,23,339,67],"497":[4,74,4,89],"498":[329,9,329,23],"504":[347,9,347,74],"505":[4,113,4,163],"506":[347,9,347,48],"512":[347,9,347,74],"513":[4,113,4,163],"514":[347,52,347,74],"520":[362,21,362,24],"521":[4,180,4,210],"522":[354,12,354,30],"528":[364,21,364,23],"529":[4,180,4,210],"530":[361,25,361,34],"536":[367,25,367,64],"537":[4,226,4,246],"538":[364,21,364,23],"544":[375,25,375,40],"545":[4,226,4,246],"546":[366,21,366,31],"552":[377,25,377,32],"553":[4,255,4,284],"554":[367,25,367,64],"560":[366,21,366,31],"561":[4,255,4,284],"562":[375,25,375,40],"568":[354,12,354,30],"569":[4,300,4,320],"570":[386,9,386,48],"576":[386,9,386,48],"577":[4,300,4,320],"578":[396,9,396,23],"584":[394,15,394,28],"585":[4,331,4,350],"586":[409,13,409,37],"592":[396,9,396,23],"593":[4,331,4,350],"594":[411,13,411,37],"600":[401,15,401,28],"601":[4,361,4,392],"602":[413,13,413,40],"608":[409,13,409,37],"609":[4,361,4,392],"610":[413,44,413,66],"616":[411,13,411,37],"617":[4,411,4,439],"618":[416,20,416,41],"624":[413,13,413,66],"625":[4,411,4,439],"626":[417,33,417,54],"632":[416,20,416,41],"633":[4,451,4,471],"634":[425,13,425,44],"640":[413,13,413,66],"641":[4,451,4,471],"642":[430,16,430,46],"648":[419,13,419,71],"649":[4,486,4,505],"650":[456,56,456,106],"656":[419,13,419,71],"657":[4,486,4,505],"658":[480,13,480,61],"664":[422,13,422,35],"665":[5,20,5,34],"666":[493,13,493,61],"672":[425,13,425,44],"673":[5,20,5,34],"674":[504,13,504,61],"680":[428,13,428,35],"681":[5,20,5,34],"682":[533,17,533,26],"688":[452,17,452,39],"689":[6,18,6,30],"690":[533,30,533,78],"696":[430,16,430,46],"697":[6,18,6,30],"698":[536,17,536,68],"704":[461,13,461,34],"705":[6,18,6,30],"706":[536,72,536,119],"712":[477,13,477,34],"713":[7,17,7,28],"714":[536,123,536,139],"720":[480,13,480,61],"721":[7,17,7,28],"722":[540,17,540,68],"728":[484,13,484,28],"729":[7,17,7,28],"730":[540,72,540,140],"736":[490,13,490,34],"737":[8,17,8,28],"738":[540,144,540,154],"744":[493,13,493,61],"745":[8,17,8,28],"746":[544,17,544,44],"752":[501,13,501,34],"753":[8,17,8,28],"754":[552,13,552,42],"760":[504,13,504,61],"761":[10,5,10,6],"762":[555,25,555,53],"768":[512,13,512,34],"769":[10,5,10,11],"770":[555,55,555,58],"776":[525,17,525,38],"777":[11,5,11,6],"784":[533,17,533,78],"785":[11,5,11,15],"786":[555,55,555,58],"792":[533,17,533,78],"793":[12,5,12,6],"794":[557,29,557,38],"800":[536,17,536,119],"801":[12,5,12,13],"802":[558,25,558,35],"808":[536,17,536,139],"809":[13,5,13,6],"810":[574,21,574,36],"816":[536,17,536,139],"817":[13,5,13,11],"818":[574,38,574,41],"824":[540,17,540,140],"825":[14,5,14,6],"832":[540,17,540,154],"833":[14,5,14,12],"834":[574,38,574,41],"840":[540,17,540,154],"841":[15,5,15,6],"842":[578,9,578,15],"848":[544,17,544,44],"849":[15,5,15,13],"850":[583,29,583,42],"856":[549,13,549,33],"857":[16,5,16,6],"858":[589,21,589,49],"864":[552,13,552,42],"865":[16,5,16,13],"866":[589,51,589,54],"872":[558,25,558,35],"873":[17,5,17,6],"880":[555,25,555,53],"881":[17,5,17,16],"882":[589,51,589,54],"888":[575,13,575,35],"889":[18,5,18,6],"890":[590,13,590,42],"896":[574,21,574,36],"897":[18,5,18,13],"898":[597,9,597,39],"904":[578,9,578,15],"905":[19,5,19,6],"906":[601,9,601,23],"912":[590,13,590,42],"913":[19,5,19,13],"914":[601,9,601,37],"920":[589,21,589,49],"921":[9,17,20,2],"922":[612,9,612,23],"928":[596,15,596,28],"929":[9,17,20,2],"936":[597,9,597,39],"937":[9,17,20,2],"944":[601,9,601,37],"945":[21,20,21,24],"952":[606,15,606,28],"953":[21,20,21,24],"960":[612,9,612,23],"961":[21,20,21,24],"969":[22,16,22,17],"977":[22,16,22,17],"985":[22,16,22,17],"993":[24,16,24,18],"1001":[24,16,24,18],"1009":[24,16,24,18],"1017":[25,22,25,29],"1025":[26,9,26,13],"1033":[26,14,26,18],"1041":[26,22,26,29],"1049":[26,30,26,34],"1057":[26,22,26,35],"1065":[26,9,26,35],"1073":[26,9,26,36],"1081":[25,22,25,29],"1089":[25,5,27,6],"1097":[25,5,27,6],"1105":[28,12,28,16],"1113":[28,12,28,16],"1121":[28,5,28,17],"1129":[23,20,29,2],"1137":[23,20,29,2],"1145":[23,20,29,2],"1153":[23,20,29,2],"1161":[23,20,29,2],"1169":[23,20,29,2],"1177":[23,20,29,2],"1185":[23,20,29,2],"1193":[31,5,31,9],"1201":[32,27,32,29],"1209":[33,30,33,32],"1217":[34,35,34,59],"1225":[35,28,35,34],"1233":[35,28,35,44],"1241":[36,27,36,43],"1249":[37,16,37,17],"1257":[31,14,38,6],"1265":[31,5,38,6],"1273":[31,5,38,7],"1281":[30,13,39,2],"1289":[30,13,39,2],"1297":[30,13,39,2],"1305":[30,13,39,2],"1313":[30,13,39,2],"1321":[30,13,39,2],"1329":[30,13,39,2],"1337":[40,1,40,6],"1345":[40,1,40,16],"1353":[41,5,41,9],"1361":[41,5,41,11],"1369":[41,34,41,38],"1377":[41,34,41,40],"1385":[41,34,41,60],"1393":[42,17,42,18],"1401":[42,26,42,32],"1409":[42,17,42,33],"1411":[42,17,42,25],"1417":[42,16,42,33],"1425":[42,9,42,34],"1433":[41,68,43,6],"1441":[41,68,43,6],"1449":[41,68,43,6],"1457":[41,68,43,6],"1465":[41,34,43,7],"1467":[41,34,41,67],"1473":[41,5,43,7],"1481":[41,5,43,8],"1489":[44,17,44,22],"1497":[44,17,44,22],"1505":[44,17,44,22],"1513":[45,5,45,9],"1521":[45,5,45,11],"1529":[45,5,45,28],"1537":[46,13,46,14],"1545":[46,22,46,28],"1553":[46,13,46,29],"1555":[46,13,46,21],"1561":[47,21,47,25],"1569":[47,21,47,25],"1577":[47,13,47,26],"1585":[45,37,48,6],"1593":[45,37,48,6],"1601":[45,37,48,6],"1609":[45,37,48,6],"1617":[45,5,48,7],"1619":[45,5,45,36],"1625":[45,5,48,8],"1633":[49,10,49,15],"1641":[50,9,50,13],"1649":[50,9,50,15],"1657":[50,9,50,32],"1665":[50,38,50,44],"1673":[50,9,50,45],"1675":[50,9,50,37],"1681":[50,9,50,46],"1689":[51,9,51,13],"1697":[51,9,51,15],"1705":[51,9,51,33],"1713":[51,36,51,42],"1721":[51,36,51,44],"1729":[51,36,51,62],"1737":[52,9,52,13],"1745":[52,9,52,15],"1753":[52,36,52,42],"1761":[52,36,52,44],"1769":[52,36,52,62],"1777":[52,9,52,62],"1785":[52,9,52,63],"1793":[40,29,54,2],"1801":[40,29,54,2],"1809":[40,29,54,2],"1817":[40,29,54,2],"1825":[40,29,54,2],"1833":[40,1,54,2],"1841":[40,1,54,3],"1849":[55,1,55,6],"1857":[55,1,55,16],"1865":[56,5,56,9],"1873":[56,5,56,11],"1881":[56,31,56,35],"1889":[56,31,56,37],"1897":[56,31,56,54],"1905":[57,17,57,18],"1913":[57,26,57,32],"1921":[57,17,57,33],"1923":[57,17,57,25],"1929":[57,16,57,33],"1937":[57,9,57,34],"1945":[56,62,58,6],"1953":[56,62,58,6],"1961":[56,62,58,6],"1969":[56,62,58,6],"1977":[56,31,58,7],"1979":[56,31,56,61],"1985":[56,5,58,7],"1993":[56,5,58,8],"2001":[59,17,59,22],"2009":[59,17,59,22],"2017":[59,17,59,22],"2025":[60,5,60,9],"2033":[60,5,60,11],"2041":[60,5,60,31],"2049":[61,13,61,14],"2057":[61,22,61,28],"2065":[61,13,61,29],"2067":[61,13,61,21],"2073":[62,21,62,25],"2081":[62,21,62,25],"2089":[62,13,62,26],"2097":[60,40,63,6],"2105":[60,40,63,6],"2113":[60,40,63,6],"2121":[60,40,63,6],"2129":[60,5,63,7],"2131":[60,5,60,39],"2137":[60,5,63,8],"2145":[64,10,64,15],"2153":[65,9,65,13],"2161":[65,9,65,15],"2169":[65,9,65,35],"2177":[65,41,65,47],"2185":[65,9,65,48],"2187":[65,9,65,40],"2193":[65,9,65,49],"2201":[55,32,66,2],"2209":[55,32,66,2],"2217":[55,32,66,2],"2225":[55,32,66,2],"2233":[55,32,66,2],"2241":[55,1,66,2],"2249":[55,1,66,3],"2257":[67,1,67,6],"2265":[67,1,67,16],"2273":[68,12,68,16],"2281":[68,12,68,18],"2289":[68,12,68,38],"2297":[68,45,68,46],"2305":[68,12,68,47],"2307":[68,12,68,44],"2313":[68,12,68,47],"2321":[68,5,68,48],"2329":[67,39,69,2],"2337":[67,39,69,2],"2345":[67,39,69,2],"2353":[67,1,69,2],"2361":[67,1,69,3],"2369":[70,1,70,6],"2377":[70,1,70,16],"2385":[71,12,71,16],"2393":[71,12,71,18],"2401":[71,12,71,35],"2409":[71,42,71,43],"2417":[71,12,71,44],"2419":[71,12,71,41],"2425":[71,12,71,44],"2433":[71,5,71,45],"2441":[70,36,72,2],"2449":[70,36,72,2],"2457":[70,36,72,2],"2465":[70,1,72,2],"2473":[70,1,72,3],"2481":[73,1,73,6],"2489":[73,1,73,16],"2497":[74,12,74,16],"2505":[74,12,74,18],"2513":[74,12,74,35],"2521":[74,42,74,43],"2529":[74,12,74,44],"2531":[74,12,74,41],"2537":[74,52,74,56],"2545":[74,52,74,58],"2553":[74,52,74,78],"2561":[74,12,74,79],"2563":[74,12,74,51],"2569":[74,12,74,79],"2577":[74,5,74,80],"2585":[73,26,75,2],"2593":[73,26,75,2],"2601":[73,26,75,2],"2609":[73,1,75,2],"2617":[73,1,75,3],"2625":[76,1,76,6],"2633":[76,1,76,16],"2641":[77,23,77,25],"2649":[77,23,77,25],"2657":[77,23,77,25],"2665":[78,5,78,9],"2673":[78,5,78,11],"2681":[78,5,78,28],"2689":[79,23,79,34],"2697":[79,42,79,43],"2705":[79,42,79,57],"2707":[79,42,79,55],"2713":[79,23,79,58],"2715":[79,23,79,41],"2721":[79,23,79,58],"2729":[79,9,79,59],"2737":[78,37,80,6],"2745":[78,37,80,6],"2753":[78,37,80,6],"2761":[78,37,80,6],"2769":[78,5,80,7],"2771":[78,5,78,36],"2777":[78,5,80,8],"2785":[81,12,81,23],"2793":[81,12,81,23],"2801":[81,5,81,24],"2809":[76,37,82,2],"2817":[76,37,82,2],"2825":[76,37,82,2],"2833":[76,37,82,2],"2841":[76,1,82,2],"2849":[76,1,82,3],"2857":[83,1,83,6],"2865":[83,1,83,16],"2873":[84,12,84,16],"2881":[84,12,84,18],"2889":[84,12,84,35],"2897":[84,12,84,42],"2905":[84,45,84,46],"2913":[85,22,85,26],"2921":[85,22,85,28],"2929":[85,22,85,45],"2937":[85,22,85,53],"2939":[85,22,85,51],"2945":[85,22,85,53],"2953":[85,22,85,53],"2961":[87,13,87,20],"2969":[88,13,88,20],"2977":[89,13,89,22],"2985":[90,13,90,22],"2993":[86,9,91,10],"3001":[92,13,92,19],"3009":[92,39,92,40],"3017":[92,13,92,41],"3019":[92,13,92,38],"3025":[92,13,92,42],"3033":[91,19,93,10],"3041":[91,19,93,10],"3049":[91,19,93,10],"3057":[91,19,93,10],"3065":[86,9,93,11],"3067":[86,9,91,18],"3073":[86,9,93,12],"3081":[94,9,94,15],"3089":[94,9,94,25],"3091":[94,9,94,23],"3097":[94,9,94,26],"3105":[95,9,95,13],"3113":[95,9,95,15],"3121":[95,9,95,35],"3129":[95,41,95,47],"3137":[95,9,95,48],"3139":[95,9,95,40],"3145":[95,9,95,49],"3153":[83,27,97,2],"3161":[83,27,97,2],"3169":[83,27,97,2],"3177":[83,27,97,2],"3185":[83,1,97,2],"3193":[83,1,97,3],"3201":[98,1,98,6],"3209":[98,1,98,16],"3217":[99,12,99,16],"3225":[99,12,99,18],"3233":[99,12,99,35],"3241":[99,12,99,42],"3249":[99,45,99,46],"3257":[99,12,99,46],"3265":[99,5,99,47],"3273":[98,31,100,2],"3281":[98,31,100,2],"3289":[98,31,100,2],"3297":[98,1,100,2],"3305":[98,1,100,3],"3313":[101,1,101,6],"3321":[101,1,101,16],"3329":[102,16,102,20],"3337":[102,16,102,20],"3345":[102,16,102,20],"3353":[103,22,103,36],"3361":[103,40,103,54],"3369":[103,40,103,62],"3377":[103,22,103,62],"3385":[103,5,103,63],"3393":[104,19,104,23],"3401":[104,19,104,25],"3409":[104,19,104,42],"3417":[105,13,105,19],"3425":[105,13,105,21],"3433":[105,13,105,39],"3441":[105,43,105,47],"3449":[105,43,105,49],"3457":[105,43,105,67],"3465":[105,70,105,74],"3473":[105,70,105,76],"3481":[105,70,105,93],"3489":[105,97,105,103],"3497":[105,97,105,117],"3499":[105,97,105,115],"3505":[106,20,106,24],"3513":[106,20,106,24],"3521":[106,13,106,25],"3529":[104,50,108,6],"3537":[104,50,108,6],"3545":[104,50,108,6],"3553":[104,50,108,6],"3561":[104,19,108,7],"3563":[104,19,104,49],"3569":[104,19,108,7],"3577":[104,19,108,7],"3585":[109,9,109,13],"3593":[109,9,109,15],"3601":[109,9,109,40],"3609":[109,44,109,48],"3617":[109,52,109,56],"3625":[109,52,109,58],"3633":[109,52,109,83],"3641":[109,84,109,98],"3649":[109,52,109,99],"3657":[109,103,109,107],"3665":[110,16,110,20],"3673":[110,16,110,22],"3681":[110,16,110,47],"3689":[110,48,110,62],"3697":[110,16,110,63],"3705":[110,75,110,82],"3713":[110,84,110,98],"3721":[110,16,110,99],"3723":[110,16,110,74],"3729":[110,16,110,99],"3737":[110,9,110,100],"3745":[112,9,112,16],"3753":[112,9,112,23],"3761":[112,27,112,28],"3769":[113,19,113,29],"3777":[113,30,113,57],"3785":[113,15,113,58],"3793":[113,15,113,58],"3801":[113,9,113,59],"3809":[114,5,114,9],"3817":[114,5,114,11],"3825":[114,21,114,25],"3833":[114,21,114,27],"3841":[114,21,114,33],"3849":[114,36,114,37],"3857":[114,41,114,48],"3865":[114,41,114,55],"3873":[114,5,114,55],"3881":[114,5,114,56],"3889":[115,12,115,19],"3897":[115,20,115,24],"3905":[115,20,115,26],"3913":[115,20,115,32],"3921":[115,12,115,33],"3929":[115,12,115,33],"3937":[115,5,115,34],"3945":[101,30,116,2],"3953":[101,30,116,2],"3961":[101,30,116,2],"3969":[101,30,116,2],"3977":[101,30,116,2],"3985":[101,30,116,2],"3993":[101,1,116,2],"4001":[101,1,116,3],"4009":[118,16,118,20],"4017":[118,16,118,20],"4025":[118,16,118,20],"4033":[119,15,119,22],"4041":[119,26,119,28],"4049":[119,15,119,28],"4057":[119,5,119,29],"4065":[120,5,120,17],"4073":[120,23,120,27],"4081":[120,5,120,28],"4083":[120,5,120,22],"4089":[120,5,120,29],"4097":[121,10,121,15],"4105":[121,24,121,32],"4113":[121,10,121,33],"4115":[121,10,121,23],"4121":[122,19,122,29],"4129":[122,30,122,57],"4137":[122,15,122,58],"4145":[122,15,122,58],"4153":[122,9,122,59],"4161":[123,9,123,17],"4169":[123,9,123,24],"4177":[123,28,123,29],"4185":[124,19,124,29],"4193":[124,30,124,72],"4201":[124,15,124,73],"4209":[124,15,124,73],"4217":[124,9,124,74],"4225":[125,5,125,13],"4233":[126,20,126,21],"4241":[126,20,126,26],"4249":[126,30,126,38],"4257":[126,49,126,50],"4265":[126,49,126,55],"4273":[126,59,126,67],"4281":[127,23,127,33],"4289":[127,34,127,79],"4297":[127,19,127,80],"4305":[127,19,127,80],"4313":[127,13,127,81],"4321":[125,22,128,6],"4329":[125,22,128,6],"4337":[125,22,128,6],"4345":[125,22,128,6],"4353":[125,5,128,7],"4355":[125,5,125,21],"4361":[125,5,128,8],"4369":[129,20,129,32],"4377":[129,36,129,40],"4385":[129,47,129,51],"4393":[129,52,129,61],"4401":[129,43,129,62],"4409":[129,65,129,77],"4417":[129,20,129,77],"4425":[129,5,129,78],"4433":[130,16,130,23],"4441":[130,16,130,28],"4449":[130,31,130,38],"4457":[130,31,130,43],"4465":[130,46,130,58],"4473":[130,16,130,58],"4481":[130,16,130,58],"4489":[131,5,131,12],"4497":[131,20,131,24],"4505":[131,5,131,24],"4513":[131,5,131,25],"4521":[132,5,132,9],"4529":[133,19,133,27],"4537":[134,18,134,25],"4545":[135,17,135,23],"4553":[135,24,135,32],"4561":[135,34,135,41],"4569":[135,17,135,42],"4577":[136,25,136,32],"4585":[136,25,136,47],"4593":[136,51,136,53],"4601":[137,21,137,28],"4609":[137,21,137,39],"4617":[137,43,137,47],"4625":[138,27,138,34],"4633":[138,27,138,51],"4641":[138,55,138,57],"4649":[139,20,139,25],"4657":[140,17,140,24],"4665":[140,17,140,38],"4673":[140,42,140,53],"4681":[141,22,141,24],"4689":[142,23,142,35],"4697":[143,15,143,19],"4705":[144,16,144,18],"4713":[145,16,145,28],"4721":[146,27,146,34],"4729":[146,27,146,44],"4737":[146,48,146,57],"4745":[146,60,146,67],"4753":[146,60,146,77],"4761":[146,80,146,85],"4769":[147,35,147,37],"4777":[148,24,148,26],"4793":[149,13,149,21],"4801":[149,13,149,23],"4817":[150,25,150,30],"4825":[151,32,151,34],"4833":[152,22,152,29],"4841":[152,22,152,44],"4849":[152,48,152,50],"4857":[153,28,153,35],"4865":[153,28,153,53],"4873":[132,14,154,6],"4881":[132,5,154,6],"4889":[132,5,154,7],"4897":[155,5,155,12],"4905":[155,33,155,40],"4913":[155,33,155,58],"4921":[155,62,155,66],"4929":[155,5,155,66],"4937":[155,5,155,67],"4945":[156,5,156,9],"4953":[156,5,156,11],"4961":[156,30,156,35],"4969":[156,36,156,40],"4977":[156,36,156,42],"4985":[156,36,156,67],"4993":[156,69,156,73],"5001":[156,69,156,75],"5009":[156,69,156,92],"5017":[156,26,156,93],"5025":[156,5,156,93],"5033":[156,5,156,94],"5041":[157,5,157,11],"5049":[157,27,157,31],"5057":[157,33,157,39],"5065":[158,21,158,25],"5073":[160,27,160,31],"5081":[160,27,160,33],"5089":[160,27,160,45],"5097":[160,27,160,54],"5099":[160,27,160,52],"5105":[160,27,160,54],"5113":[160,27,160,54],"5121":[161,20,161,27],"5129":[161,20,161,34],"5137":[161,37,161,38],"5145":[161,41,161,48],"5153":[161,49,161,50],"5161":[161,41,161,51],"5169":[161,41,161,56],"5177":[161,59,161,63],"5185":[161,20,161,63],"5193":[161,13,161,64],"5201":[159,14,162,10],"5209":[159,14,162,10],"5217":[159,14,162,10],"5225":[159,14,162,10],"5233":[157,41,163,6],"5241":[157,5,163,7],"5243":[157,5,157,26],"5249":[157,5,163,8],"5257":[164,5,164,11],"5265":[164,27,164,31],"5273":[164,33,164,37],"5281":[165,21,165,25],"5289":[167,20,167,24],"5297":[167,20,167,26],"5305":[167,20,167,29],"5313":[167,20,167,29],"5321":[167,13,167,30],"5329":[166,14,168,10],"5337":[166,14,168,10],"5345":[166,14,168,10],"5353":[164,39,169,6],"5361":[164,5,169,7],"5363":[164,5,164,26],"5369":[164,5,169,8],"5377":[170,5,170,11],"5385":[170,27,170,31],"5393":[170,33,170,39],"5401":[171,21,171,25],"5409":[173,20,173,28],"5417":[173,20,173,28],"5425":[173,13,173,29],"5433":[172,14,174,10],"5441":[172,14,174,10],"5449":[172,14,174,10],"5457":[170,41,175,6],"5465":[170,5,175,7],"5467":[170,5,170,26],"5473":[170,5,175,8],"5481":[176,5,176,11],"5489":[176,27,176,31],"5497":[176,33,176,45],"5505":[177,21,177,25],"5513":[179,20,179,24],"5521":[179,20,179,26],"5529":[179,20,179,37],"5537":[179,20,179,37],"5545":[179,13,179,38],"5553":[178,14,180,10],"5561":[178,14,180,10],"5569":[178,14,180,10],"5577":[176,47,181,6],"5585":[176,5,181,7],"5587":[176,5,176,26],"5593":[176,5,181,8],"5601":[182,5,182,11],"5609":[182,27,182,31],"5617":[182,33,182,40],"5625":[183,21,183,25],"5633":[185,20,185,24],"5641":[185,20,185,26],"5649":[185,20,185,38],"5657":[185,20,185,38],"5665":[185,13,185,39],"5673":[184,14,186,10],"5681":[184,14,186,10],"5689":[184,14,186,10],"5697":[182,42,187,6],"5705":[182,5,187,7],"5707":[182,5,182,26],"5713":[182,5,187,8],"5721":[117,14,188,2],"5729":[117,14,188,2],"5737":[117,14,188,2],"5745":[117,14,188,2],"5753":[117,14,188,2],"5761":[117,14,188,2],"5769":[117,14,188,2],"5777":[117,14,188,2],"5785":[117,14,188,2],"5793":[189,1,189,9],"5801":[189,10,189,16],"5809":[189,18,189,30],"5817":[189,1,189,31],"5825":[189,1,189,32],"5833":[190,1,190,7],"5841":[190,1,190,17],"5849":[191,9,191,13],"5857":[191,9,191,15],"5865":[191,9,191,20],"5873":[191,9,191,30],"5881":[191,9,191,41],"5883":[191,9,191,39],"5889":[191,50,191,65],"5897":[191,9,191,66],"5899":[191,9,191,49],"5905":[191,71,191,72],"5913":[192,16,192,21],"5921":[192,16,192,21],"5929":[192,9,192,22],"5937":[193,12,193,16],"5945":[193,12,193,16],"5953":[193,5,193,17],"5961":[190,31,194,2],"5969":[190,31,194,2],"5977":[190,31,194,2],"5985":[190,1,194,2],"5993":[190,1,194,3],"6001":[195,1,195,7],"6009":[195,1,195,17],"6017":[196,17,196,21],"6025":[196,17,196,21],"6033":[196,17,196,21],"6041":[197,9,197,13],"6049":[197,17,197,22],"6057":[198,17,198,24],"6065":[198,25,198,31],"6073":[198,17,198,32],"6081":[198,17,198,41],"6083":[198,17,198,39],"6089":[198,17,198,46],"6097":[198,17,198,46],"6105":[198,9,198,47],"6113":[199,16,199,20],"6121":[199,24,199,28],"6129":[200,17,200,24],"6137":[200,25,200,31],"6145":[200,17,200,32],"6153":[200,17,200,39],"6155":[200,17,200,37],"6161":[200,17,200,44],"6169":[200,17,200,44],"6177":[200,9,200,45],"6185":[202,19,202,29],"6193":[202,30,202,31],"6201":[202,32,202,56],"6209":[202,58,202,62],"6217":[202,30,202,63],"6225":[202,15,202,64],"6233":[202,15,202,64],"6241":[202,9,202,65],"6249":[204,5,204,9],"6257":[204,5,204,11],"6265":[204,5,204,19],"6273":[204,31,204,36],"6281":[204,37,204,46],"6289":[204,27,204,47],"6297":[204,5,204,47],"6305":[204,5,204,48],"6313":[195,38,205,2],"6321":[195,38,205,2],"6329":[195,38,205,2],"6337":[195,38,205,2],"6345":[195,38,205,2],"6353":[195,1,205,2],"6361":[195,1,205,3],"6369":[206,1,206,7],"6377":[206,1,206,17],"6385":[207,28,207,32],"6393":[207,28,207,34],"6401":[207,28,207,46],"6409":[207,28,207,65],"6411":[207,28,207,63],"6417":[207,28,207,65],"6425":[207,28,207,65],"6433":[208,9,208,25],"6441":[208,9,208,32],"6449":[208,35,208,36],"6457":[209,16,209,32],"6465":[209,33,209,34],"6473":[209,16,209,35],"6481":[209,16,209,50],"6483":[209,16,209,48],"6489":[209,16,209,50],"6497":[209,9,209,51],"6505":[210,12,210,16],"6513":[210,12,210,16],"6521":[210,5,210,17],"6529":[206,33,211,2],"6537":[206,33,211,2],"6545":[206,33,211,2],"6553":[206,33,211,2],"6561":[206,1,211,2],"6569":[206,1,211,3],"6577":[212,1,212,7],"6585":[212,1,212,17],"6593":[213,16,213,20],"6601":[213,16,213,20],"6609":[213,16,213,20],"6617":[214,5,214,15],"6625":[214,16,214,30],"6633":[214,31,214,35],"6641":[214,37,214,41],"6649":[214,37,214,43],"6657":[214,16,214,44],"6665":[214,46,214,50],"6673":[214,46,214,52],"6681":[214,46,214,63],"6689":[214,5,214,64],"6697":[214,5,214,65],"6705":[215,9,215,17],"6713":[216,26,216,34],"6721":[217,13,217,17],"6729":[217,13,217,19],"6737":[217,13,217,27],"6745":[217,28,217,32],"6753":[217,36,217,44],"6761":[217,45,217,49],"6769":[217,36,217,50],"6777":[217,13,217,50],"6785":[217,13,217,51],"6793":[216,26,216,34],"6801":[216,9,217,51],"6809":[216,9,217,51],"6817":[218,5,218,9],"6825":[218,5,218,11],"6833":[218,5,218,20],"6841":[219,20,219,32],"6849":[219,33,219,37],"6857":[219,33,219,39],"6865":[219,33,219,47],"6873":[219,20,219,48],"6881":[219,20,219,48],"6889":[219,20,219,48],"6897":[220,9,220,13],"6905":[220,21,220,22],"6913":[220,21,220,27],"6921":[220,9,220,27],"6929":[220,9,220,28],"6937":[221,9,221,13],"6945":[221,21,221,22],"6953":[221,21,221,27],"6961":[221,9,221,27],"6969":[221,9,221,28],"6977":[222,9,222,13],"6985":[222,26,222,31],"6993":[222,9,222,31],"7001":[222,9,222,32],"7009":[223,9,223,13],"7017":[223,41,223,45],"7025":[223,41,223,47],"7033":[223,41,223,72],"7041":[223,9,223,72],"7049":[223,9,223,73],"7057":[224,9,224,13],"7065":[224,30,224,34],"7073":[224,30,224,36],"7081":[224,30,224,50],"7089":[224,9,224,50],"7097":[224,9,224,51],"7105":[225,9,225,13],"7113":[225,26,225,30],"7121":[225,9,225,30],"7129":[225,9,225,31],"7137":[226,9,226,13],"7145":[226,9,226,15],"7153":[226,9,226,27],"7161":[226,45,226,51],"7169":[226,52,226,56],"7177":[226,41,226,57],"7185":[226,9,226,58],"7187":[226,9,226,40],"7193":[226,9,226,59],"7201":[218,29,227,6],"7209":[218,29,227,6],"7217":[218,29,227,6],"7225":[218,29,227,6],"7233":[218,29,227,6],"7241":[218,5,227,7],"7243":[218,5,218,28],"7249":[218,5,227,8],"7257":[228,19,228,23],"7265":[228,19,228,25],"7273":[228,19,228,37],"7281":[228,19,228,59],"7283":[228,19,228,57],"7289":[228,19,228,59],"7297":[228,19,228,59],"7305":[229,12,229,19],"7313":[229,12,229,26],"7321":[229,29,229,30],"7329":[230,22,230,29],"7337":[230,22,230,37],"7339":[230,22,230,35],"7345":[230,22,230,37],"7353":[230,22,230,37],"7361":[232,13,232,20],"7369":[233,13,233,20],"7377":[234,13,234,22],"7385":[235,13,235,22],"7393":[236,13,236,22],"7401":[237,13,237,25],"7409":[231,9,238,10],"7417":[239,13,239,19],"7425":[239,39,239,40],"7433":[239,13,239,41],"7435":[239,13,239,38],"7441":[239,13,239,42],"7449":[238,19,240,10],"7457":[238,19,240,10],"7465":[238,19,240,10],"7473":[238,19,240,10],"7481":[231,9,240,11],"7483":[231,9,238,18],"7489":[231,9,240,12],"7497":[241,9,241,15],"7505":[241,21,241,28],"7513":[241,30,241,46],"7521":[241,47,241,51],"7529":[241,53,241,57],"7537":[241,53,241,59],"7545":[241,61,241,67],"7553":[241,30,241,68],"7561":[241,9,241,69],"7563":[241,9,241,20],"7569":[241,9,241,70],"7577":[242,9,242,15],"7585":[242,21,242,28],"7593":[242,30,242,46],"7601":[242,47,242,51],"7609":[242,53,242,57],"7617":[242,53,242,59],"7625":[242,61,242,67],"7633":[242,30,242,68],"7641":[242,9,242,69],"7643":[242,9,242,20],"7649":[242,9,242,70],"7657":[243,9,243,15],"7665":[243,21,243,30],"7673":[243,32,243,48],"7681":[243,49,243,53],"7689":[243,55,243,59],"7697":[243,55,243,61],"7705":[243,63,243,69],"7713":[243,32,243,70],"7721":[243,9,243,71],"7723":[243,9,243,20],"7729":[243,9,243,72],"7737":[244,9,244,15],"7745":[244,21,244,33],"7753":[244,35,244,51],"7761":[244,52,244,56],"7769":[244,58,244,62],"7777":[244,58,244,64],"7785":[244,66,244,72],"7793":[244,35,244,73],"7801":[244,9,244,74],"7803":[244,9,244,20],"7809":[244,9,244,75],"7817":[245,9,245,15],"7825":[245,21,245,30],"7833":[245,32,245,46],"7841":[245,47,245,51],"7849":[245,53,245,57],"7857":[245,53,245,59],"7865":[245,61,245,70],"7873":[245,32,245,71],"7881":[245,9,245,72],"7883":[245,9,245,20],"7889":[245,9,245,73],"7897":[246,13,246,17],"7905":[246,13,246,19],"7913":[246,13,246,26],"7921":[246,13,246,35],"7923":[246,13,246,33],"7929":[247,13,247,17],"7937":[247,13,247,19],"7945":[247,13,247,26],"7953":[247,32,247,33],"7961":[247,34,247,59],"7969":[247,61,247,67],"7977":[247,61,247,72],"7985":[247,32,247,73],"7993":[247,13,247,74],"7995":[247,13,247,31],"8001":[247,13,247,75],"8009":[248,9,248,15],"8017":[248,9,248,25],"8019":[248,9,248,23],"8025":[248,9,248,26],"8033":[212,28,250,2],"8041":[212,28,250,2],"8049":[212,28,250,2],"8057":[212,28,250,2],"8065":[212,28,250,2],"8073":[212,28,250,2],"8081":[212,28,250,2],"8089":[212,28,250,2],"8097":[212,1,250,2],"8105":[212,1,250,3],"8113":[251,1,251,7],"8121":[251,1,251,17],"8129":[252,5,252,9],"8137":[252,5,252,11],"8145":[252,20,252,29],"8153":[252,5,252,29],"8161":[252,5,252,30],"8169":[253,9,253,18],"8177":[253,22,253,26],"8185":[253,37,253,44],"8193":[253,22,253,45],"8195":[253,22,253,36],"8201":[253,22,253,52],"8209":[253,55,253,56],"8217":[254,9,254,13],"8225":[254,19,254,26],"8233":[254,28,254,32],"8241":[254,9,254,33],"8243":[254,9,254,18],"8249":[254,9,254,34],"8257":[255,5,255,9],"8265":[255,5,255,11],"8273":[255,5,255,23],"8281":[255,5,255,33],"8283":[255,5,255,31],"8289":[255,5,255,34],"8297":[251,28,256,2],"8305":[251,28,256,2],"8313":[251,28,256,2],"8321":[251,28,256,2],"8329":[251,1,256,2],"8337":[251,1,256,3],"8345":[257,1,257,7],"8353":[257,1,257,17],"8361":[258,12,258,16],"8369":[258,12,258,18],"8377":[258,12,258,30],"8385":[258,12,258,44],"8387":[258,12,258,42],"8393":[258,12,258,44],"8401":[258,5,258,45],"8409":[257,32,259,2],"8417":[257,32,259,2],"8425":[257,32,259,2],"8433":[257,1,259,2],"8441":[257,1,259,3],"8449":[260,1,260,7],"8457":[260,1,260,17],"8465":[261,12,261,16],"8473":[261,12,261,18],"8481":[261,12,261,24],"8489":[261,28,261,37],"8497":[261,12,261,37],"8505":[261,5,261,38],"8513":[260,32,262,2],"8521":[260,32,262,2],"8529":[260,32,262,2],"8537":[260,1,262,2],"8545":[260,1,262,3],"8553":[263,1,263,7],"8561":[263,1,263,17],"8569":[264,16,264,23],"8577":[264,27,264,37],"8585":[265,20,265,27],"8593":[265,20,265,27],"8601":[265,39,265,41],"8609":[265,39,265,41],"8617":[265,9,265,27],"8625":[265,9,265,42],"8633":[266,9,266,13],"8641":[266,9,266,15],"8649":[266,9,266,21],"8657":[266,25,266,34],"8665":[267,16,267,24],"8673":[267,29,267,39],"8681":[267,40,267,41],"8689":[267,42,267,66],"8697":[267,40,267,67],"8705":[267,25,267,68],"8713":[267,16,267,69],"8721":[267,16,267,69],"8729":[267,9,267,70],"8737":[268,10,268,14],"8745":[268,10,268,28],"8747":[268,10,268,26],"8753":[268,32,268,36],"8761":[268,32,268,38],"8769":[268,32,268,56],"8777":[268,60,268,64],"8785":[269,20,269,39],"8793":[269,40,269,48],"8801":[269,20,269,49],"8809":[269,20,269,49],"8817":[269,9,269,50],"8825":[270,16,270,20],"8833":[270,16,270,22],"8841":[270,16,270,40],"8849":[270,45,270,53],"8857":[270,55,270,57],"8865":[270,59,270,62],"8873":[270,64,270,71],"8881":[270,73,270,81],"8889":[270,16,270,82],"8891":[270,16,270,44],"8897":[270,16,270,82],"8905":[270,9,270,83],"8913":[272,5,272,26],"8921":[272,27,272,31],"8929":[272,27,272,33],"8937":[272,35,272,43],"8945":[272,45,272,47],"8953":[272,49,272,52],"8961":[272,54,272,61],"8969":[272,63,272,71],"8977":[272,5,272,72],"8985":[272,5,272,73],"8993":[263,27,273,2],"9001":[263,27,273,2],"9009":[263,27,273,2],"9017":[263,27,273,2],"9025":[263,27,273,2],"9033":[263,27,273,2],"9041":[263,27,273,2],"9049":[263,1,273,2],"9057":[263,1,273,3],"9065":[274,1,274,7],"9073":[274,1,274,17],"9081":[275,16,275,23],"9089":[275,27,275,37],"9097":[276,20,276,27],"9105":[276,20,276,27],"9113":[276,39,276,41],"9121":[276,39,276,41],"9129":[276,9,276,27],"9137":[276,9,276,42],"9145":[277,9,277,13],"9153":[277,9,277,15],"9161":[277,9,277,21],"9169":[277,25,277,34],"9177":[278,16,278,24],"9185":[278,29,278,39],"9193":[278,40,278,41],"9201":[278,42,278,66],"9209":[278,40,278,67],"9217":[278,25,278,68],"9225":[278,16,278,69],"9233":[278,16,278,69],"9241":[278,9,278,70],"9249":[279,10,279,14],"9257":[279,10,279,28],"9259":[279,10,279,26],"9265":[279,32,279,36],"9273":[279,32,279,38],"9281":[279,32,279,56],"9289":[279,60,279,64],"9297":[280,20,280,39],"9305":[280,40,280,48],"9313":[280,20,280,49],"9321":[280,20,280,49],"9329":[280,9,280,50],"9337":[281,16,281,20],"9345":[281,16,281,22],"9353":[281,16,281,40],"9361":[281,45,281,53],"9369":[281,55,281,57],"9377":[281,59,281,62],"9385":[281,64,281,71],"9393":[281,73,281,81],"9401":[281,16,281,82],"9403":[281,16,281,44],"9409":[281,16,281,82],"9417":[281,9,281,83],"9425":[283,5,283,26],"9433":[283,27,283,31],"9441":[283,27,283,33],"9449":[283,35,283,43],"9457":[283,45,283,47],"9465":[283,49,283,52],"9473":[283,54,283,61],"9481":[283,63,283,71],"9489":[283,5,283,72],"9497":[283,5,283,73],"9505":[274,27,284,2],"9513":[274,27,284,2],"9521":[274,27,284,2],"9529":[274,27,284,2],"9537":[274,27,284,2],"9545":[274,27,284,2],"9553":[274,27,284,2],"9561":[274,1,284,2],"9569":[274,1,284,3],"9577":[285,1,285,7],"9585":[285,1,285,17],"9593":[286,16,286,23],"9601":[286,27,286,37],"9609":[287,20,287,27],"9617":[287,20,287,27],"9625":[287,39,287,41],"9633":[287,39,287,41],"9641":[287,9,287,27],"9649":[287,9,287,42],"9657":[288,9,288,13],"9665":[288,9,288,15],"9673":[288,9,288,21],"9681":[288,25,288,34],"9689":[289,16,289,24],"9697":[289,29,289,39],"9705":[289,40,289,41],"9713":[289,42,289,66],"9721":[289,40,289,67],"9729":[289,25,289,68],"9737":[289,16,289,69],"9745":[289,16,289,69],"9753":[289,9,289,70],"9761":[290,10,290,14],"9769":[290,10,290,28],"9771":[290,10,290,26],"9777":[290,32,290,36],"9785":[290,32,290,38],"9793":[290,32,290,56],"9801":[290,60,290,64],"9809":[291,20,291,39],"9817":[291,40,291,48],"9825":[291,20,291,49],"9833":[291,20,291,49],"9841":[291,9,291,50],"9849":[292,16,292,20],"9857":[292,16,292,22],"9865":[292,16,292,40],"9873":[292,45,292,53],"9881":[292,55,292,57],"9889":[292,59,292,62],"9897":[292,64,292,71],"9905":[292,73,292,81],"9913":[292,16,292,82],"9915":[292,16,292,44],"9921":[292,16,292,82],"9929":[292,9,292,83],"9937":[294,5,294,26],"9945":[294,27,294,31],"9953":[294,27,294,33],"9961":[294,35,294,43],"9969":[294,45,294,47],"9977":[294,49,294,52],"9985":[294,54,294,61],"9993":[294,63,294,71],"10001":[294,5,294,72],"10009":[294,5,294,73],"10017":[285,27,295,2],"10025":[285,27,295,2],"10033":[285,27,295,2],"10041":[285,27,295,2],"10049":[285,27,295,2],"10057":[285,27,295,2],"10065":[285,27,295,2],"10073":[285,1,295,2],"10081":[285,1,295,3],"10089":[296,1,296,7],"10097":[296,1,296,17],"10105":[297,16,297,23],"10113":[297,27,297,37],"10121":[298,20,298,27],"10129":[298,20,298,27],"10137":[298,39,298,41],"10145":[298,39,298,41],"10153":[298,9,298,27],"10161":[298,9,298,42],"10169":[299,9,299,13],"10177":[299,9,299,15],"10185":[299,9,299,21],"10193":[299,25,299,34],"10201":[300,16,300,24],"10209":[300,29,300,39],"10217":[300,40,300,41],"10225":[300,42,300,66],"10233":[300,40,300,67],"10241":[300,25,300,68],"10249":[300,16,300,69],"10257":[300,16,300,69],"10265":[300,9,300,70],"10273":[301,16,301,20],"10281":[301,16,301,20],"10289":[301,16,301,20],"10297":[302,10,302,14],"10305":[302,10,302,28],"10307":[302,10,302,26],"10313":[302,32,302,36],"10321":[302,32,302,38],"10329":[302,32,302,56],"10337":[302,60,302,64],"10345":[303,20,303,39],"10353":[303,40,303,48],"10361":[303,20,303,49],"10369":[303,20,303,49],"10377":[303,9,303,50],"10385":[304,16,304,20],"10393":[304,16,304,22],"10401":[304,16,304,40],"10409":[304,45,304,54],"10417":[304,56,304,58],"10425":[304,60,304,63],"10433":[304,65,304,72],"10441":[304,74,304,82],"10449":[304,16,304,83],"10451":[304,16,304,44],"10457":[304,16,304,83],"10465":[304,9,304,84],"10473":[306,18,306,22],"10481":[306,18,306,22],"10489":[306,18,306,22],"10497":[307,15,307,22],"10505":[307,26,307,28],"10513":[307,15,307,28],"10521":[307,5,307,29],"10529":[308,9,308,16],"10537":[308,9,308,22],"10545":[309,23,309,27],"10553":[309,23,309,29],"10561":[309,23,309,41],"10569":[309,23,309,50],"10571":[309,23,309,48],"10577":[309,23,309,50],"10585":[309,23,309,50],"10593":[310,21,310,28],"10601":[310,21,310,35],"10609":[310,21,310,35],"10617":[310,21,310,35],"10625":[311,22,311,26],"10633":[311,22,311,26],"10641":[311,22,311,26],"10649":[312,22,312,23],"10657":[312,22,312,23],"10665":[312,22,312,23],"10673":[312,25,312,26],"10681":[312,29,312,36],"10689":[312,29,312,43],"10705":[312,45,312,46],"10713":[312,45,312,48],"10729":[313,13,313,20],"10737":[313,21,313,22],"10745":[313,13,313,23],"10753":[313,32,313,34],"10761":[313,36,313,39],"10769":[313,41,313,48],"10777":[314,25,314,30],"10785":[314,33,314,34],"10793":[314,25,314,34],"10801":[314,17,314,35],"10809":[315,21,315,26],"10817":[315,30,315,31],"10825":[316,25,316,28],"10833":[316,25,316,35],"10841":[317,25,317,41],"10849":[317,42,317,47],"10857":[317,49,317,51],"10865":[317,25,317,52],"10873":[317,25,317,53],"10881":[318,21,318,29],"10889":[318,30,318,33],"10897":[318,35,318,36],"10905":[318,21,318,37],"10913":[318,21,318,38],"10921":[313,50,320,14],"10929":[313,50,320,14],"10937":[313,50,320,14],"10945":[313,50,320,14],"10953":[313,50,320,14],"10961":[313,13,320,15],"10963":[313,13,313,31],"10969":[313,13,320,16],"10977":[322,9,322,16],"10985":[322,9,322,16],"10993":[325,18,325,22],"11001":[325,18,325,24],"11009":[325,18,325,36],"11017":[325,48,325,55],"11025":[325,48,325,68],"11033":[325,71,325,85],"11041":[325,71,325,93],"11049":[325,96,325,103],"11057":[325,96,325,118],"11065":[325,18,325,119],"11067":[325,18,325,47],"11073":[325,18,325,119],"11081":[325,9,325,120],"11089":[327,16,327,24],"11097":[327,25,327,28],"11105":[327,16,327,29],"11113":[327,16,327,29],"11121":[327,9,327,30],"11129":[326,7,328,6],"11137":[329,9,329,15],"11145":[329,19,329,23],"11153":[330,16,330,24],"11161":[330,29,330,39],"11169":[330,40,330,57],"11177":[330,25,330,58],"11185":[330,16,330,59],"11193":[330,16,330,59],"11201":[330,9,330,60],"11209":[331,5,331,11],"11217":[331,20,331,22],"11225":[331,24,331,27],"11233":[331,29,331,36],"11241":[332,13,332,16],"11249":[332,13,332,23],"11257":[333,13,333,29],"11265":[333,30,333,34],"11273":[333,30,333,36],"11281":[333,38,333,40],"11289":[333,13,333,41],"11297":[333,13,333,42],"11305":[334,9,334,17],"11313":[334,18,334,21],"11321":[334,23,334,24],"11329":[334,9,334,25],"11337":[334,9,334,26],"11345":[331,38,335,6],"11353":[331,38,335,6],"11361":[331,38,335,6],"11369":[331,38,335,6],"11377":[331,38,335,6],"11385":[331,5,335,7],"11387":[331,5,331,19],"11393":[331,5,335,8],"11401":[296,28,336,2],"11409":[296,28,336,2],"11417":[296,28,336,2],"11425":[296,28,336,2],"11433":[296,28,336,2],"11441":[296,28,336,2],"11449":[296,28,336,2],"11457":[296,28,336,2],"11465":[296,28,336,2],"11473":[296,28,336,2],"11481":[296,28,336,2],"11489":[296,28,336,2],"11497":[296,28,336,2],"11505":[296,1,336,2],"11513":[296,1,336,3],"11521":[337,1,337,7],"11529":[337,1,337,17],"11537":[338,21,338,34],"11545":[338,38,338,40],"11553":[338,21,338,40],"11561":[338,5,338,41],"11569":[339,23,339,36],"11577":[339,23,339,50],"11585":[339,54,339,58],"11593":[339,54,339,60],"11601":[339,54,339,67],"11609":[339,23,339,67],"11617":[339,23,339,67],"11625":[340,16,340,27],"11633":[340,28,340,32],"11641":[340,28,340,34],"11649":[340,28,340,39],"11657":[340,41,340,43],"11665":[340,45,340,48],"11673":[340,50,340,63],"11681":[340,65,340,69],"11689":[340,71,340,75],"11697":[340,71,340,77],"11705":[340,71,340,85],"11713":[340,12,340,86],"11721":[340,12,340,86],"11729":[340,5,340,87],"11737":[337,27,341,2],"11745":[337,27,341,2],"11753":[337,27,341,2],"11761":[337,27,341,2],"11769":[337,27,341,2],"11777":[337,27,341,2],"11785":[337,27,341,2],"11793":[337,1,341,2],"11801":[337,1,341,3],"11809":[342,1,342,7],"11817":[342,1,342,17],"11825":[343,19,343,24],"11833":[343,19,343,34],"11841":[343,19,343,40],"11849":[343,46,343,55],"11857":[343,57,343,58],"11865":[343,19,343,59],"11867":[343,19,343,45],"11873":[343,66,343,67],"11881":[343,19,343,68],"11883":[343,19,343,65],"11889":[343,19,343,68],"11897":[343,19,343,68],"11905":[344,16,344,20],"11913":[344,16,344,20],"11921":[344,16,344,20],"11929":[345,16,345,21],"11937":[345,16,345,31],"11945":[345,16,345,37],"11953":[345,43,345,52],"11961":[345,54,345,55],"11969":[345,16,345,56],"11971":[345,16,345,42],"11977":[345,16,345,56],"11985":[345,16,345,56],"11993":[346,20,346,24],"12001":[346,20,346,30],"12003":[346,20,346,28],"12009":[346,20,346,30],"12017":[346,20,346,30],"12025":[347,9,347,13],"12033":[347,9,347,15],"12041":[347,9,347,29],"12049":[347,30,347,39],"12057":[347,9,347,40],"12065":[347,44,347,48],"12073":[347,52,347,61],"12081":[347,65,347,74],"12089":[348,19,348,29],"12097":[348,30,348,31],"12105":[348,32,348,65],"12113":[348,67,348,76],"12121":[348,30,348,77],"12129":[348,15,348,78],"12137":[348,15,348,78],"12145":[348,9,348,79],"12153":[349,19,349,23],"12161":[349,19,349,25],"12169":[349,19,349,37],"12177":[349,19,349,56],"12179":[349,19,349,54],"12185":[349,63,349,64],"12193":[349,19,349,65],"12195":[349,19,349,62],"12201":[349,19,349,65],"12209":[349,19,349,65],"12217":[350,17,350,24],"12225":[350,17,350,31],"12233":[350,17,350,31],"12241":[350,17,350,31],"12249":[351,25,351,29],"12257":[351,25,351,29],"12265":[351,25,351,29],"12273":[352,19,352,23],"12281":[352,19,352,23],"12289":[352,19,352,23],"12297":[353,5,353,9],"12305":[353,5,353,11],"12313":[353,29,353,33],"12321":[353,5,353,33],"12329":[353,5,353,34],"12337":[354,12,354,19],"12345":[354,12,354,26],"12353":[354,29,354,30],"12361":[355,22,355,29],"12369":[355,22,355,37],"12371":[355,22,355,35],"12377":[355,22,355,37],"12385":[355,22,355,37],"12393":[357,13,357,22],"12401":[358,13,358,15],"12409":[356,35,359,10],"12417":[359,18,359,22],"12425":[359,29,359,30],"12433":[359,18,359,31],"12435":[359,18,359,28],"12441":[356,35,359,32],"12443":[356,35,359,17],"12449":[356,35,359,32],"12457":[356,35,359,32],"12465":[360,30,360,49],"12473":[361,25,361,30],"12481":[361,33,361,34],"12489":[361,25,361,34],"12497":[361,17,361,35],"12505":[362,21,362,24],"12513":[363,31,363,34],"12521":[363,31,363,34],"12529":[363,21,363,35],"12537":[364,22,364,23],"12545":[365,37,365,42],"12553":[365,37,365,42],"12561":[365,21,365,43],"12569":[366,21,366,26],"12577":[366,30,366,31],"12585":[367,25,367,29],"12593":[367,25,367,31],"12601":[367,25,367,53],"12609":[367,25,367,60],"12617":[367,63,367,64],"12625":[368,25,368,29],"12633":[368,25,368,31],"12641":[368,56,368,58],"12649":[368,25,368,58],"12657":[368,25,368,59],"12665":[369,32,369,36],"12673":[369,32,369,41],"12681":[369,48,369,52],"12689":[370,29,370,38],"12697":[371,29,371,31],"12705":[369,54,372,26],"12713":[372,34,372,38],"12721":[369,54,372,39],"12723":[369,54,372,33],"12729":[372,48,372,56],"12737":[372,47,372,57],"12745":[369,54,372,58],"12747":[369,54,372,46],"12753":[369,32,372,59],"12755":[369,32,369,47],"12761":[369,32,372,59],"12769":[369,25,372,60],"12777":[374,21,374,25],"12785":[374,21,374,27],"12793":[374,45,374,50],"12801":[374,21,374,50],"12809":[374,21,374,51],"12817":[375,25,375,32],"12825":[375,36,375,40],"12833":[376,25,376,39],"12841":[376,40,376,44],"12849":[376,40,376,46],"12857":[376,48,376,50],"12865":[376,52,376,71],"12873":[376,25,376,72],"12881":[376,25,376,73],"12889":[377,25,377,32],"12897":[378,32,378,40],"12905":[378,41,378,48],"12913":[378,50,378,55],"12921":[378,32,378,56],"12929":[378,32,378,56],"12937":[378,25,378,57],"12945":[379,21,379,29],"12953":[379,30,379,34],"12961":[379,40,379,47],"12969":[379,48,379,50],"12977":[379,52,379,56],"12985":[379,36,379,57],"12993":[379,21,379,58],"13001":[379,21,379,59],"13009":[360,58,381,14],"13017":[360,58,381,14],"13025":[360,58,381,14],"13033":[360,58,381,14],"13041":[360,58,381,14],"13049":[360,57,381,15],"13057":[360,30,381,16],"13059":[360,30,360,56],"13065":[360,30,381,16],"13073":[360,30,381,16],"13081":[382,9,382,15],"13089":[382,9,382,20],"13097":[382,27,382,33],"13105":[382,35,382,49],"13113":[382,9,382,50],"13115":[382,9,382,26],"13121":[382,9,382,51],"13129":[342,25,384,2],"13137":[342,25,384,2],"13145":[342,25,384,2],"13153":[342,25,384,2],"13161":[342,25,384,2],"13169":[342,25,384,2],"13177":[342,25,384,2],"13185":[342,25,384,2],"13193":[342,25,384,2],"13201":[342,25,384,2],"13209":[342,25,384,2],"13217":[342,25,384,2],"13225":[342,25,384,2],"13233":[342,25,384,2],"13241":[342,25,384,2],"13249":[342,25,384,2],"13257":[342,1,384,2],"13265":[342,1,384,3],"13273":[385,1,385,7],"13281":[385,1,385,17],"13289":[386,9,386,13],"13297":[386,9,386,15],"13305":[386,9,386,40],"13313":[386,44,386,48],"13321":[387,9,387,13],"13329":[387,9,387,15],"13337":[387,43,387,45],"13345":[387,9,387,45],"13353":[387,9,387,46],"13361":[388,5,388,9],"13369":[388,5,388,11],"13377":[388,5,388,36],"13385":[388,37,388,41],"13393":[388,45,388,53],"13401":[388,5,388,53],"13409":[388,5,388,54],"13417":[385,46,389,2],"13425":[385,46,389,2],"13433":[385,46,389,2],"13441":[385,46,389,2],"13449":[385,46,389,2],"13457":[385,1,389,2],"13465":[385,1,389,3],"13473":[390,1,390,7],"13481":[390,1,390,17],"13489":[391,5,391,9],"13497":[391,5,391,11],"13505":[391,5,391,25],"13513":[391,26,391,30],"13521":[391,34,391,42],"13529":[391,5,391,42],"13537":[391,5,391,43],"13545":[390,36,392,2],"13553":[390,36,392,2],"13561":[390,36,392,2],"13569":[390,36,392,2],"13577":[390,36,392,2],"13585":[390,1,392,2],"13593":[390,1,392,3],"13601":[393,1,393,7],"13609":[393,1,393,17],"13617":[394,15,394,22],"13625":[394,26,394,28],"13633":[394,15,394,28],"13641":[394,5,394,29],"13649":[395,18,395,22],"13657":[395,18,395,24],"13665":[395,18,395,36],"13673":[395,48,395,55],"13681":[395,48,395,70],"13689":[395,18,395,71],"13691":[395,18,395,47],"13697":[395,18,395,71],"13705":[395,18,395,71],"13713":[396,9,396,15],"13721":[396,19,396,23],"13729":[397,16,397,20],"13737":[397,16,397,20],"13745":[397,9,397,21],"13753":[398,12,398,18],"13761":[398,12,398,34],"13763":[398,12,398,32],"13769":[398,12,398,34],"13777":[398,5,398,35],"13785":[393,34,399,2],"13793":[393,34,399,2],"13801":[393,34,399,2],"13809":[393,34,399,2],"13817":[393,34,399,2],"13825":[393,1,399,2],"13833":[393,1,399,3],"13841":[400,1,400,7],"13849":[400,1,400,17],"13857":[401,15,401,22],"13865":[401,26,401,28],"13873":[401,15,401,28],"13881":[401,5,401,29],"13889":[402,12,402,16],"13897":[402,12,402,18],"13905":[402,12,402,30],"13913":[402,42,402,49],"13921":[402,42,402,64],"13929":[402,12,402,65],"13931":[402,12,402,41],"13937":[402,12,402,65],"13945":[402,5,402,66],"13953":[400,30,403,2],"13961":[400,30,403,2],"13969":[400,30,403,2],"13977":[400,30,403,2],"13985":[400,1,403,2],"13993":[400,1,403,3],"14001":[404,1,404,7],"14009":[404,1,404,17],"14017":[405,12,405,16],"14025":[405,12,405,18],"14033":[405,12,405,30],"14041":[405,12,405,50],"14043":[405,12,405,48],"14049":[405,12,405,50],"14057":[405,5,405,51],"14065":[404,32,406,2],"14073":[404,32,406,2],"14081":[404,32,406,2],"14089":[404,1,406,2],"14097":[404,1,406,3],"14105":[409,13,409,18],"14113":[409,13,409,24],"14121":[409,28,409,37],"14129":[410,13,410,20],"14137":[410,13,410,20],"14145":[411,13,411,18],"14153":[411,13,411,24],"14161":[411,28,411,37],"14169":[412,13,412,18],"14177":[412,33,412,38],"14185":[412,33,412,53],"14193":[412,13,412,53],"14201":[412,13,412,54],"14209":[413,13,413,18],"14217":[413,13,413,24],"14225":[413,28,413,40],"14233":[413,44,413,49],"14241":[413,44,413,61],"14249":[413,65,413,66],"14257":[414,13,414,17],"14265":[414,13,414,27],"14267":[414,13,414,25],"14273":[414,13,414,28],"14281":[415,20,415,24],"14289":[415,30,415,37],"14297":[415,43,415,53],"14305":[415,54,415,55],"14313":[415,56,415,86],"14321":[415,88,415,93],"14329":[415,88,415,108],"14337":[415,54,415,109],"14345":[415,39,415,110],"14353":[415,20,415,111],"14355":[415,20,415,29],"14361":[415,20,415,111],"14369":[415,13,415,112],"14377":[416,20,416,25],"14385":[416,29,416,41],"14393":[417,13,417,18],"14401":[417,33,417,38],"14409":[417,33,417,50],"14417":[417,53,417,54],"14425":[417,13,417,54],"14433":[417,13,417,55],"14441":[419,13,419,18],"14449":[419,13,419,30],"14457":[419,13,419,44],"14459":[419,13,419,42],"14465":[419,48,419,53],"14473":[419,48,419,71],"14481":[420,13,420,18],"14489":[420,13,420,36],"14497":[420,13,420,46],"14499":[420,13,420,44],"14505":[420,13,420,47],"14513":[422,13,422,18],"14521":[422,13,422,25],"14529":[422,13,422,35],"14531":[422,13,422,33],"14537":[423,13,423,18],"14545":[423,13,423,25],"14553":[423,32,423,33],"14561":[423,34,423,62],"14569":[423,32,423,63],"14577":[423,13,423,64],"14579":[423,13,423,31],"14585":[423,13,423,65],"14593":[424,35,424,40],"14601":[424,35,424,52],"14609":[424,35,424,74],"14611":[424,35,424,72],"14617":[424,35,424,74],"14625":[424,35,424,74],"14633":[425,13,425,32],"14641":[425,13,425,39],"14649":[425,43,425,44],"14657":[426,20,426,30],"14665":[426,31,426,45],"14673":[426,46,426,50],"14681":[426,52,426,57],"14689":[426,31,426,58],"14697":[426,60,426,65],"14705":[426,60,426,76],"14713":[426,20,426,77],"14721":[426,20,426,77],"14729":[426,13,426,78],"14737":[427,31,427,50],"14745":[427,31,427,57],"14753":[427,31,427,57],"14761":[427,31,427,57],"14769":[428,13,428,18],"14777":[428,13,428,25],"14785":[428,13,428,35],"14787":[428,13,428,33],"14793":[429,13,429,18],"14801":[429,13,429,25],"14809":[429,32,429,33],"14817":[429,34,429,84],"14825":[429,86,429,101],"14833":[429,32,429,102],"14841":[429,13,429,103],"14843":[429,13,429,31],"14849":[429,13,429,104],"14857":[430,16,430,35],"14865":[430,16,430,42],"14873":[430,45,430,46],"14881":[432,17,432,27],"14889":[434,25,434,32],"14897":[435,25,435,32],"14905":[436,25,436,34],"14913":[437,25,437,34],"14921":[438,25,438,34],"14929":[439,25,439,37],"14937":[433,34,440,22],"14945":[433,34,440,22],"14953":[433,34,440,22],"14961":[441,21,441,27],"14969":[442,25,442,32],"14977":[442,52,442,53],"14985":[442,25,442,54],"14987":[442,25,442,51],"14993":[442,25,442,55],"15001":[441,36,443,22],"15009":[441,36,443,22],"15017":[441,36,443,22],"15025":[441,36,443,22],"15033":[441,21,443,23],"15035":[441,21,441,35],"15041":[441,21,443,24],"15049":[444,21,444,28],"15057":[444,34,444,41],"15065":[444,43,444,59],"15073":[444,60,444,64],"15081":[444,66,444,71],"15089":[444,73,444,79],"15097":[444,43,444,80],"15105":[444,21,444,81],"15107":[444,21,444,33],"15113":[444,21,444,82],"15121":[445,21,445,28],"15129":[445,34,445,41],"15137":[445,43,445,59],"15145":[445,60,445,64],"15153":[445,66,445,71],"15161":[445,73,445,79],"15169":[445,43,445,80],"15177":[445,21,445,81],"15179":[445,21,445,33],"15185":[445,21,445,82],"15193":[446,21,446,28],"15201":[446,34,446,43],"15209":[446,45,446,61],"15217":[446,62,446,66],"15225":[446,68,446,73],"15233":[446,75,446,81],"15241":[446,45,446,82],"15249":[446,21,446,83],"15251":[446,21,446,33],"15257":[446,21,446,84],"15265":[447,21,447,28],"15273":[447,34,447,43],"15281":[447,45,447,59],"15289":[447,60,447,64],"15297":[447,66,447,71],"15305":[447,73,447,77],"15313":[447,45,447,78],"15321":[447,21,447,79],"15323":[447,21,447,33],"15329":[447,21,447,80],"15337":[448,21,448,28],"15345":[448,21,448,38],"15347":[448,21,448,36],"15353":[448,21,448,39],"15361":[432,28,449,18],"15369":[432,28,449,18],"15377":[432,28,449,18],"15385":[432,28,449,18],"15393":[449,20,449,21],"15401":[432,17,449,22],"15409":[432,17,449,23],"15417":[431,34,450,14],"15425":[431,34,450,14],"15433":[431,34,450,14],"15441":[431,34,450,14],"15449":[431,34,450,14],"15457":[431,34,450,14],"15465":[451,26,451,45],"15473":[451,26,451,53],"15475":[451,26,451,51],"15481":[451,26,451,53],"15489":[451,26,451,53],"15497":[452,17,452,22],"15505":[452,17,452,29],"15513":[452,17,452,39],"15515":[452,17,452,37],"15521":[453,17,453,22],"15529":[453,17,453,29],"15537":[453,36,453,37],"15545":[453,38,453,74],"15553":[453,76,453,82],"15561":[453,76,453,87],"15569":[453,36,453,88],"15577":[453,17,453,89],"15579":[453,17,453,35],"15585":[453,17,453,90],"15593":[454,13,454,27],"15601":[454,28,454,34],"15609":[454,13,454,35],"15617":[454,13,454,36],"15625":[456,16,456,26],"15633":[456,27,456,41],"15641":[456,42,456,46],"15649":[456,48,456,53],"15657":[456,27,456,54],"15665":[456,56,456,61],"15673":[456,56,456,69],"15681":[456,56,456,87],"15689":[456,90,456,95],"15697":[456,90,456,106],"15705":[456,16,456,107],"15713":[456,16,456,107],"15721":[456,9,456,108],"15729":[408,12,457,6],"15737":[408,12,457,6],"15745":[408,12,457,6],"15753":[408,12,457,6],"15761":[408,12,457,6],"15769":[408,12,457,6],"15777":[408,12,457,6],"15785":[408,12,457,6],"15793":[408,5,457,7],"15801":[407,22,458,2],"15809":[407,22,458,2],"15817":[407,22,458,2],"15825":[407,22,458,2],"15833":[407,22,458,2],"15841":[407,22,458,2],"15849":[407,22,458,2],"15857":[461,13,461,18],"15865":[461,13,461,25],"15873":[461,13,461,34],"15875":[461,13,461,32],"15881":[462,13,462,18],"15889":[462,13,462,25],"15897":[462,31,462,32],"15905":[462,33,462,71],"15913":[462,73,462,79],"15921":[462,73,462,84],"15929":[462,86,462,90],"15937":[462,101,462,104],"15945":[462,86,462,105],"15947":[462,86,462,100],"15953":[462,31,462,106],"15961":[462,13,462,107],"15963":[462,13,462,30],"15969":[462,13,462,108],"15977":[463,9,463,14],"15985":[463,9,463,26],"15993":[463,40,463,46],"16001":[463,9,463,47],"16003":[463,9,463,39],"16009":[463,9,463,48],"16017":[465,13,465,20],"16025":[466,13,466,20],"16033":[467,13,467,22],"16041":[468,13,468,22],"16049":[464,22,469,10],"16057":[464,22,469,10],"16065":[464,22,469,10],"16073":[470,9,470,15],"16081":[471,13,471,19],"16089":[471,39,471,40],"16097":[471,13,471,41],"16099":[471,13,471,38],"16105":[471,13,471,42],"16113":[470,24,472,10],"16121":[470,24,472,10],"16129":[470,24,472,10],"16137":[470,24,472,10],"16145":[470,9,472,11],"16147":[470,9,470,23],"16153":[470,9,472,12],"16161":[460,12,473,6],"16169":[460,12,473,6],"16177":[460,12,473,6],"16185":[460,12,473,6],"16193":[460,12,473,6],"16201":[460,12,473,6],"16209":[460,12,473,6],"16217":[460,5,473,7],"16225":[459,24,474,2],"16233":[459,24,474,2],"16241":[459,24,474,2],"16249":[459,24,474,2],"16257":[459,24,474,2],"16265":[459,24,474,2],"16273":[459,24,474,2],"16281":[459,24,474,2],"16289":[477,13,477,18],"16297":[477,13,477,25],"16305":[477,13,477,34],"16307":[477,13,477,32],"16313":[478,13,478,18],"16321":[478,13,478,25],"16329":[478,31,478,32],"16337":[478,33,478,64],"16345":[478,66,478,72],"16353":[478,66,478,77],"16361":[478,79,478,83],"16369":[478,94,478,97],"16377":[478,79,478,98],"16379":[478,79,478,93],"16385":[478,31,478,99],"16393":[478,13,478,100],"16395":[478,13,478,30],"16401":[478,13,478,101],"16409":[479,9,479,14],"16417":[479,9,479,26],"16425":[479,40,479,46],"16433":[479,9,479,47],"16435":[479,9,479,39],"16441":[479,9,479,48],"16449":[480,13,480,18],"16457":[480,13,480,30],"16465":[480,13,480,49],"16467":[480,13,480,47],"16473":[480,13,480,56],"16481":[480,60,480,61],"16489":[481,13,481,18],"16497":[481,27,481,39],"16505":[481,13,481,39],"16513":[481,13,481,40],"16521":[483,9,483,13],"16529":[483,19,483,25],"16537":[483,27,483,35],"16545":[483,37,483,43],"16553":[483,9,483,44],"16555":[483,9,483,18],"16561":[483,9,483,45],"16569":[484,13,484,18],"16577":[484,13,484,28],"16585":[485,13,485,17],"16593":[485,23,485,30],"16601":[485,32,485,35],"16609":[485,37,485,43],"16617":[485,13,485,44],"16619":[485,13,485,22],"16625":[485,13,485,45],"16633":[476,12,486,6],"16641":[476,12,486,6],"16649":[476,12,486,6],"16657":[476,12,486,6],"16665":[476,12,486,6],"16673":[476,12,486,6],"16681":[476,5,486,7],"16689":[475,20,487,2],"16697":[475,20,487,2],"16705":[475,20,487,2],"16713":[475,20,487,2],"16721":[475,20,487,2],"16729":[475,20,487,2],"16737":[475,20,487,2],"16745":[490,13,490,18],"16753":[490,13,490,25],"16761":[490,13,490,34],"16763":[490,13,490,32],"16769":[491,13,491,18],"16777":[491,13,491,25],"16785":[491,31,491,32],"16793":[491,33,491,54],"16801":[491,56,491,62],"16809":[491,56,491,67],"16817":[491,31,491,68],"16825":[491,13,491,69],"16827":[491,13,491,30],"16833":[491,13,491,70],"16841":[492,9,492,14],"16849":[492,9,492,26],"16857":[492,40,492,46],"16865":[492,9,492,47],"16867":[492,9,492,39],"16873":[492,9,492,48],"16881":[493,13,493,18],"16889":[493,13,493,30],"16897":[493,13,493,49],"16899":[493,13,493,47],"16905":[493,13,493,56],"16913":[493,60,493,61],"16921":[494,13,494,18],"16929":[494,27,494,39],"16937":[494,13,494,39],"16945":[494,13,494,40],"16953":[496,9,496,13],"16961":[496,19,496,25],"16969":[496,27,496,35],"16977":[496,37,496,43],"16985":[496,9,496,44],"16987":[496,9,496,18],"16993":[496,9,496,45],"17001":[489,12,497,6],"17009":[489,12,497,6],"17017":[489,12,497,6],"17025":[489,12,497,6],"17033":[489,12,497,6],"17041":[489,12,497,6],"17049":[489,5,497,7],"17057":[488,22,498,2],"17065":[488,22,498,2],"17073":[488,22,498,2],"17081":[488,22,498,2],"17089":[488,22,498,2],"17097":[488,22,498,2],"17105":[488,22,498,2],"17113":[501,13,501,18],"17121":[501,13,501,25],"17129":[501,13,501,34],"17131":[501,13,501,32],"17137":[502,13,502,18],"17145":[502,13,502,25],"17153":[502,31,502,32],"17161":[502,33,502,51],"17169":[502,53,502,59],"17177":[502,53,502,64],"17185":[502,31,502,65],"17193":[502,13,502,66],"17195":[502,13,502,30],"17201":[502,13,502,67],"17209":[503,9,503,14],"17217":[503,9,503,26],"17225":[503,40,503,46],"17233":[503,9,503,47],"17235":[503,9,503,39],"17241":[503,9,503,48],"17249":[504,13,504,18],"17257":[504,13,504,30],"17265":[504,13,504,49],"17267":[504,13,504,47],"17273":[504,13,504,56],"17281":[504,60,504,61],"17289":[505,13,505,18],"17297":[505,27,505,39],"17305":[505,13,505,39],"17313":[505,13,505,40],"17321":[507,9,507,13],"17329":[507,19,507,25],"17337":[507,27,507,35],"17345":[507,37,507,43],"17353":[507,9,507,44],"17355":[507,9,507,18],"17361":[507,9,507,45],"17369":[500,12,508,6],"17377":[500,12,508,6],"17385":[500,12,508,6],"17393":[500,12,508,6],"17401":[500,12,508,6],"17409":[500,12,508,6],"17417":[500,5,508,7],"17425":[499,20,509,2],"17433":[499,20,509,2],"17441":[499,20,509,2],"17449":[499,20,509,2],"17457":[499,20,509,2],"17465":[499,20,509,2],"17473":[499,20,509,2],"17481":[512,13,512,18],"17489":[512,13,512,25],"17497":[512,13,512,34],"17499":[512,13,512,32],"17505":[513,13,513,18],"17513":[513,13,513,25],"17521":[513,31,513,32],"17529":[513,33,513,50],"17537":[513,52,513,58],"17545":[513,52,513,63],"17553":[513,31,513,64],"17561":[513,13,513,65],"17563":[513,13,513,30],"17569":[513,13,513,66],"17577":[515,13,515,20],"17585":[516,13,516,20],"17593":[517,13,517,22],"17601":[518,13,518,22],"17609":[519,13,519,22],"17617":[520,13,520,25],"17625":[514,9,521,10],"17633":[522,13,522,19],"17641":[522,39,522,40],"17649":[522,13,522,41],"17651":[522,13,522,38],"17657":[522,13,522,42],"17665":[521,19,523,10],"17673":[521,19,523,10],"17681":[521,19,523,10],"17689":[521,19,523,10],"17697":[514,9,523,11],"17699":[514,9,521,18],"17705":[514,9,523,12],"17713":[525,17,525,24],"17721":[525,17,525,38],"17723":[525,17,525,36],"17729":[526,17,526,24],"17737":[526,30,526,37],"17745":[526,39,526,51],"17753":[526,52,526,56],"17761":[526,58,526,63],"17769":[526,39,526,64],"17777":[526,17,526,65],"17779":[526,17,526,29],"17785":[526,17,526,66],"17793":[527,17,527,24],"17801":[527,30,527,37],"17809":[527,39,527,51],"17817":[527,52,527,56],"17825":[527,58,527,63],"17833":[527,39,527,64],"17841":[527,17,527,65],"17843":[527,17,527,29],"17849":[527,17,527,66],"17857":[528,17,528,24],"17865":[528,30,528,39],"17873":[528,41,528,55],"17881":[528,56,528,60],"17889":[528,62,528,67],"17897":[528,41,528,68],"17905":[528,17,528,69],"17907":[528,17,528,29],"17913":[528,17,528,70],"17921":[529,17,529,24],"17929":[529,30,529,42],"17937":[529,44,529,58],"17945":[529,59,529,63],"17953":[529,65,529,70],"17961":[529,44,529,71],"17969":[529,17,529,72],"17971":[529,17,529,29],"17977":[529,17,529,73],"17985":[531,13,531,17],"17993":[531,23,531,31],"18001":[531,33,531,41],"18009":[531,43,531,50],"18017":[531,13,531,51],"18019":[531,13,531,22],"18025":[531,13,531,52],"18033":[532,13,532,18],"18041":[532,13,532,30],"18049":[532,41,532,48],"18057":[532,13,532,49],"18059":[532,13,532,40],"18065":[532,13,532,50],"18073":[533,17,533,21],"18081":[533,25,533,26],"18089":[533,30,533,35],"18097":[533,30,533,47],"18105":[533,30,533,66],"18107":[533,30,533,64],"18113":[533,30,533,73],"18121":[533,77,533,78],"18129":[534,17,534,21],"18137":[534,27,534,38],"18145":[534,40,534,47],"18153":[534,17,534,48],"18155":[534,17,534,26],"18161":[534,17,534,49],"18169":[536,17,536,22],"18177":[536,17,536,34],"18185":[536,17,536,56],"18187":[536,17,536,54],"18193":[536,17,536,63],"18201":[536,67,536,68],"18209":[536,72,536,77],"18217":[536,72,536,89],"18225":[536,72,536,108],"18227":[536,72,536,106],"18233":[536,72,536,115],"18241":[536,118,536,119],"18249":[536,124,536,129],"18257":[536,124,536,139],"18265":[537,17,537,22],"18273":[537,35,537,39],"18281":[537,17,537,39],"18289":[537,17,537,40],"18297":[538,17,538,21],"18305":[538,27,538,38],"18313":[538,17,538,39],"18315":[538,17,538,26],"18321":[538,17,538,40],"18329":[540,17,540,22],"18337":[540,17,540,34],"18345":[540,17,540,56],"18347":[540,17,540,54],"18353":[540,17,540,63],"18361":[540,67,540,68],"18369":[540,72,540,77],"18377":[540,72,540,89],"18385":[540,72,540,108],"18387":[540,72,540,106],"18393":[540,72,540,115],"18401":[540,119,540,124],"18409":[540,119,540,133],"18417":[540,119,540,140],"18425":[540,145,540,150],"18433":[540,145,540,154],"18441":[541,17,541,22],"18449":[541,29,541,33],"18457":[541,17,541,33],"18465":[541,17,541,34],"18473":[542,17,542,21],"18481":[542,27,542,32],"18489":[542,17,542,33],"18491":[542,17,542,26],"18497":[542,17,542,34],"18505":[544,17,544,22],"18513":[544,17,544,28],"18521":[544,32,544,44],"18529":[545,17,545,22],"18537":[545,31,545,40],"18545":[545,17,545,40],"18553":[545,17,545,41],"18561":[546,17,546,21],"18569":[546,27,546,36],"18577":[546,38,546,42],"18585":[546,17,546,43],"18587":[546,17,546,26],"18593":[546,17,546,44],"18601":[524,32,548,10],"18609":[524,32,548,10],"18617":[524,32,548,10],"18625":[524,32,548,10],"18633":[524,32,548,10],"18641":[524,32,548,10],"18649":[549,13,549,18],"18657":[549,13,549,33],"18665":[550,13,550,18],"18673":[550,13,550,40],"18681":[550,46,550,52],"18689":[550,13,550,53],"18691":[550,13,550,45],"18697":[550,13,550,54],"18705":[552,13,552,18],"18713":[552,13,552,30],"18721":[552,13,552,37],"18729":[552,41,552,42],"18737":[553,20,553,36],"18745":[553,37,553,43],"18753":[553,20,553,44],"18761":[553,20,553,44],"18769":[553,13,553,45],"18777":[554,21,554,26],"18785":[554,21,554,38],"18793":[554,21,554,45],"18801":[554,21,554,45],"18809":[554,21,554,45],"18817":[555,22,555,23],"18825":[555,22,555,23],"18833":[555,22,555,23],"18841":[555,25,555,26],"18849":[555,29,555,34],"18857":[555,29,555,46],"18865":[555,29,555,53],"18881":[555,55,555,56],"18889":[555,55,555,58],"18905":[556,13,556,19],"18913":[556,13,556,24],"18921":[556,31,556,37],"18929":[556,39,556,44],"18937":[556,39,556,56],"18945":[556,57,556,58],"18953":[556,39,556,59],"18961":[557,29,557,34],"18969":[557,37,557,38],"18977":[557,29,557,38],"18985":[557,21,557,39],"18993":[558,25,558,30],"19001":[558,34,558,35],"19009":[559,25,559,41],"19017":[559,42,559,48],"19025":[559,25,559,49],"19033":[559,25,559,50],"19041":[556,68,560,18],"19049":[556,68,560,18],"19057":[556,68,560,18],"19065":[556,68,560,18],"19073":[556,68,560,18],"19081":[556,67,560,19],"19089":[556,39,560,20],"19091":[556,39,556,66],"19097":[556,13,560,21],"19099":[556,13,556,30],"19105":[556,13,560,22],"19113":[511,12,562,6],"19121":[511,12,562,6],"19129":[511,12,562,6],"19137":[511,12,562,6],"19145":[511,12,562,6],"19153":[511,12,562,6],"19161":[511,12,562,6],"19169":[511,12,562,6],"19177":[511,5,562,7],"19185":[510,22,563,2],"19193":[510,22,563,2],"19201":[510,22,563,2],"19209":[510,22,563,2],"19217":[510,22,563,2],"19225":[510,22,563,2],"19233":[510,22,563,2],"19241":[510,22,563,2],"19249":[565,17,565,22],"19257":[565,17,565,22],"19265":[565,17,565,22],"19273":[567,9,567,16],"19281":[568,9,568,16],"19289":[569,9,569,18],"19297":[570,9,570,18],"19305":[566,5,571,6],"19313":[572,9,572,15],"19321":[572,35,572,36],"19329":[572,9,572,37],"19331":[572,9,572,34],"19337":[572,9,572,38],"19345":[571,15,573,6],"19353":[571,15,573,6],"19361":[571,15,573,6],"19369":[571,15,573,6],"19377":[566,5,573,7],"19379":[566,5,571,14],"19385":[566,5,573,8],"19393":[574,18,574,19],"19401":[574,18,574,19],"19409":[574,18,574,19],"19417":[574,21,574,22],"19425":[574,25,574,29],"19433":[574,25,574,36],"19449":[574,38,574,39],"19457":[574,38,574,41],"19473":[575,13,575,17],"19481":[575,18,575,19],"19489":[575,13,575,20],"19497":[575,28,575,34],"19505":[575,13,575,35],"19507":[575,13,575,27],"19513":[576,21,576,25],"19521":[576,21,576,25],"19529":[576,13,576,26],"19537":[578,10,578,15],"19545":[579,9,579,13],"19553":[579,19,579,25],"19561":[579,9,579,26],"19563":[579,9,579,18],"19569":[579,9,579,27],"19577":[564,27,581,2],"19585":[564,27,581,2],"19593":[564,27,581,2],"19601":[564,27,581,2],"19609":[564,27,581,2],"19617":[564,27,581,2],"19625":[564,27,581,2],"19633":[564,27,581,2],"19641":[564,27,581,2],"19649":[583,5,583,21],"19657":[583,22,583,27],"19665":[583,29,583,31],"19673":[583,34,583,42],"19681":[583,5,583,43],"19689":[583,5,583,44],"19697":[584,5,584,10],"19705":[584,5,584,22],"19713":[584,28,584,47],"19721":[584,5,584,48],"19723":[584,5,584,27],"19729":[584,5,584,49],"19737":[582,22,585,2],"19745":[582,22,585,2],"19753":[582,22,585,2],"19761":[582,22,585,2],"19769":[582,22,585,2],"19777":[582,22,585,2],"19785":[582,22,585,2],"19793":[582,22,585,2],"19801":[587,14,587,16],"19809":[587,23,587,26],"19817":[587,14,587,27],"19819":[587,14,587,22],"19825":[587,28,587,29],"19833":[587,14,587,30],"19841":[587,14,587,30],"19849":[587,14,587,30],"19857":[588,31,588,33],"19865":[588,31,588,33],"19873":[588,31,588,33],"19881":[589,18,589,19],"19889":[589,18,589,19],"19897":[589,18,589,19],"19905":[589,21,589,22],"19913":[589,25,589,30],"19921":[589,25,589,42],"19929":[589,25,589,49],"19945":[589,51,589,52],"19953":[589,51,589,54],"19969":[590,13,590,18],"19977":[590,13,590,30],"19985":[590,31,590,32],"19993":[590,13,590,33],"20001":[590,34,590,35],"20009":[590,13,590,36],"20017":[590,40,590,42],"20025":[591,13,591,32],"20033":[591,38,591,43],"20041":[591,38,591,55],"20049":[591,56,591,57],"20057":[591,38,591,58],"20065":[591,13,591,59],"20067":[591,13,591,37],"20073":[591,13,591,60],"20081":[593,5,593,10],"20089":[593,25,593,44],"20097":[593,5,593,44],"20105":[593,5,593,45],"20113":[586,24,594,2],"20121":[586,24,594,2],"20129":[586,24,594,2],"20137":[586,24,594,2],"20145":[586,24,594,2],"20153":[586,24,594,2],"20161":[586,24,594,2],"20169":[586,24,594,2],"20177":[586,24,594,2],"20185":[586,24,594,2],"20193":[596,15,596,22],"20201":[596,26,596,28],"20209":[596,15,596,28],"20217":[596,5,596,29],"20225":[597,9,597,16],"20233":[597,9,597,31],"20241":[597,35,597,39],"20249":[598,16,598,19],"20257":[598,16,598,19],"20265":[598,9,598,20],"20273":[595,29,599,2],"20281":[595,29,599,2],"20289":[595,29,599,2],"20297":[595,29,599,2],"20305":[595,29,599,2],"20313":[595,29,599,2],"20321":[595,29,599,2],"20329":[601,16,601,23],"20337":[601,27,601,37],"20345":[602,20,602,27],"20353":[602,20,602,27],"20361":[602,9,602,28],"20369":[603,19,603,21],"20377":[603,19,603,21],"20385":[603,9,603,22],"20393":[605,18,605,22],"20401":[605,18,605,22],"20409":[605,18,605,22],"20417":[606,15,606,22],"20425":[606,26,606,28],"20433":[606,15,606,28],"20441":[606,5,606,29],"20449":[608,18,608,23],"20457":[608,18,608,35],"20465":[608,18,608,48],"20467":[608,18,608,46],"20473":[608,18,608,48],"20481":[608,9,608,49],"20489":[610,16,610,24],"20497":[610,25,610,28],"20505":[610,16,610,29],"20513":[610,16,610,29],"20521":[610,9,610,30],"20529":[609,7,611,6],"20537":[612,9,612,15],"20545":[612,19,612,23],"20553":[613,16,613,24],"20561":[613,29,613,39],"20569":[613,40,613,57],"20577":[613,25,613,58],"20585":[613,16,613,59],"20593":[613,16,613,59],"20601":[613,9,613,60],"20609":[614,5,614,11],"20617":[614,12,614,14],"20625":[614,16,614,18],"20633":[614,20,614,23],"20641":[614,25,614,32],"20649":[614,34,614,42],"20657":[614,5,614,43],"20659":[614,5,614,15],"20665":[614,5,614,44],"20673":[600,29,615,2],"20681":[600,29,615,2],"20689":[600,29,615,2],"20697":[600,29,615,2],"20705":[600,29,615,2],"20713":[600,29,615,2],"20721":[600,29,615,2],"20729":[600,29,615,2],"20737":[600,29,615,2],"20745":[600,29,615,2],"20753":[600,29,615,2],"20761":[600,29,615,2],"20769":[616,1,616,7],"20777":[616,18,616,24],"20785":[616,1,616,24],"20793":[616,1,616,25],"20801":[1,1,616,25],"20809":[1,1,616,25],"20817":[1,1,616,25],"20825":[1,1,616,25],"20833":[1,1,616,25],"20841":[1,1,616,25],"20849":[1,1,616,25],"20857":[1,1,616,25],"20865":[1,1,616,25],"20873":[1,1,616,25],"20881":[1,1,616,25],"20889":[1,1,616,25],"20897":[1,1,616,25],"20905":[1,1,616,25],"20913":[1,1,616,25],"20921":[1,1,616,25],"20929":[1,1,616,25],"20937":[1,1,616,25],"20945":[1,1,616,25],"20953":[1,1,616,25],"20961":[1,1,616,25],"20969":[1,1,616,25],"20977":[1,1,616,25],"20985":[1,1,616,25],"20993":[1,1,616,25],"21001":[1,1,616,25],"21009":[1,1,616,25],"21017":[1,1,616,25],"21025":[1,1,616,25],"21033":[1,1,616,25],"21041":[1,1,616,25],"21049":[1,1,616,25],"21057":[1,1,616,25],"21065":[1,1,616,25],"21073":[1,1,616,25],"21081":[1,1,616,25],"21089":[23,20,29,2],"21097":[23,20,29,2],"21105":[30,13,39,2],"21113":[30,13,39,2],"21121":[41,68,43,6],"21129":[41,68,43,6],"21137":[46,9,47,26],"21145":[45,37,48,6],"21153":[45,37,48,6],"21161":[49,5,50,46],"21169":[51,5,53,6],"21177":[40,29,54,2],"21185":[40,29,54,2],"21193":[56,62,58,6],"21201":[56,62,58,6],"21209":[61,9,62,26],"21217":[60,40,63,6],"21225":[60,40,63,6],"21233":[64,5,65,49],"21241":[55,32,66,2],"21249":[55,32,66,2],"21257":[67,39,69,2],"21265":[67,39,69,2],"21273":[70,36,72,2],"21281":[70,36,72,2],"21289":[73,26,75,2],"21297":[73,26,75,2],"21305":[78,37,80,6],"21313":[78,37,80,6],"21321":[76,37,82,2],"21329":[76,37,82,2],"21337":[91,19,93,10],"21345":[91,19,93,10],"21353":[84,5,96,6],"21361":[83,27,97,2],"21369":[83,27,97,2],"21377":[98,31,100,2],"21385":[98,31,100,2],"21393":[105,9,107,10],"21401":[104,50,108,6],"21409":[104,50,108,6],"21417":[109,5,111,6],"21425":[112,5,113,59],"21433":[101,30,116,2],"21441":[101,30,116,2],"21449":[121,5,122,59],"21457":[123,5,124,74],"21465":[126,9,127,81],"21473":[125,22,128,6],"21481":[125,22,128,6],"21489":[129,20,129,77],"21497":[130,16,130,58],"21505":[146,20,146,85],"21513":[161,20,161,63],"21521":[159,14,162,10],"21529":[159,14,162,10],"21537":[166,14,168,10],"21545":[166,14,168,10],"21553":[172,14,174,10],"21561":[172,14,174,10],"21569":[178,14,180,10],"21577":[178,14,180,10],"21585":[184,14,186,10],"21593":[184,14,186,10],"21601":[117,14,188,2],"21609":[117,14,188,2],"21617":[191,5,192,22],"21625":[190,31,194,2],"21633":[190,31,194,2],"21641":[199,12,203,6],"21649":[197,5,203,6],"21657":[195,38,205,2],"21665":[195,38,205,2],"21673":[208,5,209,51],"21681":[206,33,211,2],"21689":[206,33,211,2],"21697":[215,5,217,51],"21705":[218,29,227,6],"21713":[218,29,227,6],"21721":[238,19,240,10],"21729":[238,19,240,10],"21737":[246,9,247,75],"21745":[229,5,249,6],"21753":[212,28,250,2],"21761":[212,28,250,2],"21769":[253,5,254,34],"21777":[251,28,256,2],"21785":[251,28,256,2],"21793":[257,32,259,2],"21801":[257,32,259,2],"21809":[260,32,262,2],"21817":[260,32,262,2],"21825":[264,5,265,42],"21833":[266,5,267,70],"21841":[268,5,271,6],"21849":[263,27,273,2],"21857":[263,27,273,2],"21865":[275,5,276,42],"21873":[277,5,278,70],"21881":[279,5,282,6],"21889":[274,27,284,2],"21897":[274,27,284,2],"21905":[286,5,287,42],"21913":[288,5,289,70],"21921":[290,5,293,6],"21929":[285,27,295,2],"21937":[285,27,295,2],"21945":[297,5,298,42],"21953":[299,5,300,70],"21961":[302,5,305,6],"21969":[316,21,317,53],"21977":[315,17,319,18],"21985":[313,50,320,14],"21993":[313,50,320,14],"22001":[312,9,321,10],"22009":[312,9,321,10],"22017":[308,5,323,6],"22025":[325,48,325,118],"22033":[329,5,330,60],"22041":[332,9,333,42],"22049":[331,38,335,6],"22057":[331,38,335,6],"22065":[296,28,336,2],"22073":[296,28,336,2],"22081":[337,27,341,2],"22089":[337,27,341,2],"22097":[347,5,348,79],"22105":[362,17,363,35],"22113":[364,17,365,43],"22121":[367,21,373,22],"22129":[375,21,376,73],"22137":[377,21,378,57],"22145":[366,17,380,18],"22153":[360,58,381,14],"22161":[360,58,381,14],"22169":[354,5,383,6],"22177":[342,25,384,2],"22185":[342,25,384,2],"22193":[386,5,387,46],"22201":[385,46,389,2],"22209":[385,46,389,2],"22217":[390,36,392,2],"22225":[390,36,392,2],"22233":[396,5,397,21],"22241":[393,34,399,2],"22249":[393,34,399,2],"22257":[400,30,403,2],"22265":[400,30,403,2],"22273":[404,32,406,2],"22281":[404,32,406,2],"22289":[409,9,410,20],"22297":[411,9,412,54],"22305":[416,16,418,10],"22313":[413,9,418,10],"22321":[419,9,421,10],"22329":[422,9,423,65],"22337":[425,9,426,78],"22345":[428,9,429,104],"22353":[441,36,443,22],"22361":[441,36,443,22],"22369":[432,28,449,18],"22377":[432,28,449,18],"22385":[431,34,450,14],"22393":[431,34,450,14],"22401":[452,13,453,90],"22409":[430,9,455,10],"22417":[408,12,457,6],"22425":[408,12,457,6],"22433":[407,22,458,2],"22441":[407,22,458,2],"22449":[461,9,462,108],"22457":[470,24,472,10],"22465":[470,24,472,10],"22473":[460,12,473,6],"22481":[460,12,473,6],"22489":[459,24,474,2],"22497":[459,24,474,2],"22505":[477,9,478,101],"22513":[480,9,482,10],"22521":[484,9,485,45],"22529":[476,12,486,6],"22537":[476,12,486,6],"22545":[475,20,487,2],"22553":[475,20,487,2],"22561":[490,9,491,70],"22569":[493,9,495,10],"22577":[489,12,497,6],"22585":[489,12,497,6],"22593":[488,22,498,2],"22601":[488,22,498,2],"22609":[501,9,502,67],"22617":[504,9,506,10],"22625":[500,12,508,6],"22633":[500,12,508,6],"22641":[499,20,509,2],"22649":[499,20,509,2],"22657":[512,9,513,66],"22665":[521,19,523,10],"22673":[521,19,523,10],"22681":[525,13,530,14],"22689":[533,13,535,14],"22697":[536,13,539,14],"22705":[540,13,543,14],"22713":[544,13,547,14],"22721":[524,32,548,10],"22729":[524,32,548,10],"22737":[549,9,551,10],"22745":[552,9,553,45],"22753":[558,21,559,50],"22761":[556,68,560,18],"22769":[556,68,560,18],"22777":[555,9,561,10],"22785":[555,9,561,10],"22793":[511,12,562,6],"22801":[511,12,562,6],"22809":[510,22,563,2],"22817":[510,22,563,2],"22825":[571,15,573,6],"22833":[571,15,573,6],"22841":[575,9,576,26],"22849":[574,5,577,6],"22857":[574,5,577,6],"22865":[578,5,580,6],"22873":[564,27,581,2],"22881":[564,27,581,2],"22889":[582,22,585,2],"22897":[582,22,585,2],"22905":[590,9,591,60],"22913":[589,5,592,6],"22921":[589,5,592,6],"22929":[586,24,594,2],"22937":[586,24,594,2],"22945":[597,5,598,20],"22953":[595,29,599,2],"22961":[595,29,599,2],"22969":[601,5,604,6],"22977":[612,5,613,60],"22985":[600,29,615,2],"22993":[600,29,615,2],"23001":[1,1,616,25],"23009":[1,1,616,25],"nBranches":240,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/mongos.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/mongos_jalangi_.js","code":"\"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , b = require('bson')\n  , bindToCurrentDomain = require('../connection/utils').bindToCurrentDomain\n  , EventEmitter = require('events').EventEmitter\n  , BasicCursor = require('../cursor')\n  , BSON = require('bson').native().BSON\n  , BasicCursor = require('../cursor')\n  , Server = require('./server')\n  , Logger = require('../connection/logger')\n  , ReadPreference = require('./read_preference')\n  , Session = require('./session')\n  , MongoError = require('../error');\n\n/**\n * @fileOverview The **Mongos** class is a class that represents a Mongos Proxy topology and is\n * used to construct connections.\n *\n * @example\n * var Mongos = require('mongodb-core').Mongos\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Mongos([{host: 'localhost', port: 30000}]);\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   server.destroy();\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYED = 'destroyed';\n\n// All bson types\nvar bsonTypes = [b.Long, b.ObjectID, b.Binary, b.Code, b.DBRef, b.Symbol, b.Double, b.Timestamp, b.MaxKey, b.MinKey];\n// BSON parser\nvar bsonInstance = null;\n\n// Instance id\nvar mongosId = 0;\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for(var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n}\n\nvar State = function(readPreferenceStrategies, localThresholdMS) {\n  // Internal state\n  this.s = {\n      connectedServers: []\n    , disconnectedServers: []\n    , readPreferenceStrategies: readPreferenceStrategies\n    , lowerBoundLatency: Number.MAX_VALUE\n    , localThresholdMS: localThresholdMS\n    , index: 0\n  }\n}\n\n//\n// A Mongos connected\nState.prototype.connected = function(server) {\n  // Locate in disconnected servers and remove\n  this.s.disconnectedServers = this.s.disconnectedServers.filter(function(s) {\n    return !s.equals(server);\n  });\n\n  var found = false;\n  // Check if the server exists\n  this.s.connectedServers.forEach(function(s) {\n    if(s.equals(server)) found = true;\n  });\n\n  // Add to disconnected list if it does not already exist\n  if(!found) this.s.connectedServers.push(server);\n\n  // Adjust lower bound\n  if(this.s.lowerBoundLatency > server.s.isMasterLatencyMS) {\n    this.s.lowerBoundLatency = server.s.isMasterLatencyMS;\n  }\n}\n\n//\n// A Mongos disconnected\nState.prototype.disconnected = function(server) {\n  // Locate in disconnected servers and remove\n  this.s.connectedServers = this.s.connectedServers.filter(function(s) {\n    return !s.equals(server);\n  });\n\n  var found = false;\n  // Check if the server exists\n  this.s.disconnectedServers.forEach(function(s) {\n    if(s.equals(server)) found = true;\n  });\n\n  // Add to disconnected list if it does not already exist\n  if(!found) this.s.disconnectedServers.push(server);\n}\n\n//\n// Return the list of disconnected servers\nState.prototype.disconnectedServers = function() {\n  return this.s.disconnectedServers.slice(0);\n}\n\n//\n// Get connectedServers\nState.prototype.connectedServers = function() {\n  return this.s.connectedServers.slice(0)\n}\n\n//\n// Get all servers\nState.prototype.getAll = function() {\n  return this.s.connectedServers.slice(0).concat(this.s.disconnectedServers);\n}\n\n//\n// Get all connections\nState.prototype.getAllConnections = function() {\n  var connections = [];\n  this.s.connectedServers.forEach(function(e) {\n    connections = connections.concat(e.connections());\n  });\n  return connections;\n}\n\n//\n// Destroy the state\nState.prototype.destroy = function() {\n  // Destroy any connected servers\n  while(this.s.connectedServers.length > 0) {\n    var server = this.s.connectedServers.shift();\n\n    // Remove any non used handlers\n    ['error', 'close', 'timeout', 'connect'].forEach(function(e) {\n      server.removeAllListeners(e);\n    })\n\n    // Server destroy\n    server.destroy();\n    // Add to list of disconnected servers\n    this.s.disconnectedServers.push(server);\n  }\n}\n\n//\n// Are we connected\nState.prototype.isConnected = function() {\n  return this.s.connectedServers.length > 0;\n}\n\n//\n// Pick a server\nState.prototype.pickServer = function(readPreference) {\n  var self = this;\n  readPreference = readPreference || ReadPreference.primary;\n\n  // Filter out the possible servers\n  var servers = this.s.connectedServers.filter(function(server) {\n    if((server.s.isMasterLatencyMS <= (self.s.lowerBoundLatency + self.s.localThresholdMS))\n      && server.isConnected()) {\n      return true;\n    }\n  });\n\n  // Do we have a custom readPreference strategy, use it\n  if(this.s.readPreferenceStrategies != null && this.s.readPreferenceStrategies[readPreference] != null) {\n    return this.s.readPreferenceStrategies[readPreference].pickServer(servers, readPreference);\n  }\n\n  // No valid connections\n  if(servers.length == 0) throw new MongoError(\"no mongos proxy available\");\n\n  // Update index\n  this.s.index = (this.s.index + 1) % servers.length;\n\n  // Pick first one\n  return servers[this.s.index];\n}\n\n/**\n * Creates a new Mongos instance\n * @class\n * @param {array} seedlist A list of seeds for the replicaset\n * @param {number} [options.reconnectTries=30] Reconnect retries for HA if no servers available\n * @param {number} [options.haInterval=5000] The High availability period for replicaset inquiry\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {number} [options.localThresholdMS=15] Cutoff latency point in MS for MongoS proxy selection\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=1000] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.singleBufferSerializtion=true] Serialize into single buffer, trade of peak memory for serialization speed\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @return {Mongos} A cursor instance\n * @fires Mongos#connect\n * @fires Mongos#joined\n * @fires Mongos#left\n */\nvar Mongos = function(seedlist, options) {\n  var self = this;\n  options = options || {};\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // Validate seedlist\n  if(!Array.isArray(seedlist)) throw new MongoError(\"seedlist must be an array\");\n  // Validate list\n  if(seedlist.length == 0) throw new MongoError(\"seedlist must contain at least one entry\");\n  // Validate entries\n  seedlist.forEach(function(e) {\n    if(typeof e.host != 'string' || typeof e.port != 'number')\n      throw new MongoError(\"seedlist entry must contain a host and port\");\n  });\n\n  // BSON Parser, ensure we have a single instance\n  bsonInstance = bsonInstance == null ? new BSON(bsonTypes) : bsonInstance;\n  // Pick the right bson parser\n  var bson = options.bson ? options.bson : bsonInstance;\n  // Add bson parser to options\n  options.bson = bson;\n\n  // The Mongos state\n  this.s = {\n    // Seed list for sharding passed in\n      seedlist: seedlist\n    // Passed in options\n    , options: options\n    // Logger\n    , logger: Logger('Mongos', options)\n    // Reconnect tries\n    , reconnectTries: options.reconnectTries || 30\n    // Ha interval\n    , haInterval: options.haInterval || 5000\n    // localThresholdMS\n    , localThresholdMS: options.localThresholdMS || 15\n    // Have omitted fullsetup\n    , fullsetup: false\n    // Cursor factory\n    , Cursor: options.cursorFactory || BasicCursor\n    // Current credentials used for auth\n    , credentials: []\n    // BSON Parser\n    , bsonInstance: bsonInstance\n    , bson: bson\n    // Pings\n    , pings: {}\n    // Default state\n    , state: DISCONNECTED\n    // Swallow or emit errors\n    , emitError: typeof options.emitError == 'boolean' ? options.emitError : false\n    // Contains any alternate strategies for picking\n    , readPreferenceStrategies: {}\n    // Auth providers\n    , authProviders: {}\n    // Unique instance id\n    , id: mongosId++\n    // Authentication in progress\n    , authInProgress: false\n    // Servers added while auth in progress\n    , authInProgressServers: []\n    // Current retries left\n    , retriesLeft: options.reconnectTries || 30\n    // Do we have a not connected handler\n    , disconnectHandler: options.disconnectHandler\n  }\n\n  // Set up the connection timeout for the options\n  options.connectionTimeout = options.connectionTimeout || 1000;\n\n  // Create a new state for the mongos\n  this.s.mongosState = new State(this.s.readPreferenceStrategies, this.s.localThresholdMS);\n\n  // BSON property (find a server and pass it along)\n  Object.defineProperty(this, 'bson', {\n    enumerable: true, get: function() {\n      var servers = self.s.mongosState.getAll();\n      return servers.length > 0 ? servers[0].bson : null;\n    }\n  });\n\n  Object.defineProperty(this, 'id', {\n    enumerable:true, get: function() { return self.s.id; }\n  });\n\n  Object.defineProperty(this, 'type', {\n    enumerable:true, get: function() { return 'mongos'; }\n  });\n\n  Object.defineProperty(this, 'haInterval', {\n    enumerable:true, get: function() { return self.s.haInterval; }\n  });\n\n  Object.defineProperty(this, 'state', {\n    enumerable:true, get: function() { return self.s.mongosState; }\n  });\n}\n\ninherits(Mongos, EventEmitter);\n\n/**\n * Name of BSON parser currently used\n * @method\n * @return {string}\n */\nMongos.prototype.parserType = function() {\n  if(this.s.bson.serialize.toString().indexOf('[native code]') != -1)\n    return 'c++';\n  return 'js';\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} type Type of BSON parser to use (c++ or js)\n */\nMongos.prototype.setBSONParserType = function(type) {\n  var nBSON = null;\n\n  if(type == 'c++') {\n    nBSON = require('bson').native().BSON;\n  } else if(type == 'js') {\n    nBSON = require('bson').pure().BSON;\n  } else {\n    throw new MongoError(f(\"% parser not supported\", type));\n  }\n\n  this.s.options.bson = new nBSON(bsonTypes);\n}\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nMongos.prototype.lastIsMaster = function() {\n  var connectedServers = this.s.mongosState.connectedServers();\n  if(connectedServers.length > 0) return connectedServers[0].lastIsMaster();\n  return null;\n}\n\n/**\n * Initiate server connect\n * @method\n */\nMongos.prototype.connect = function(_options) {\n  var self = this;\n  // Start replicaset inquiry process\n  setTimeout(mongosInquirer(self, self.s), self.s.haInterval);\n  // Additional options\n  if(_options) for(var name in _options) self.s.options[name] = _options[name];\n  // For all entries in the seedlist build a server instance\n  self.s.seedlist.forEach(function(e) {\n    // Clone options\n    var opts = cloneOptions(self.s.options);\n    // Add host and port\n    opts.host = e.host;\n    opts.port = e.port;\n    opts.reconnect = false;\n    opts.readPreferenceStrategies = self.s.readPreferenceStrategies;\n    // Share the auth store\n    opts.authProviders = self.s.authProviders;\n    // Don't emit errors\n    opts.emitError = true;\n    // Create a new Server\n    self.s.mongosState.disconnected(new Server(opts));\n  });\n\n  // Get the disconnected servers\n  var servers = self.s.mongosState.disconnectedServers();\n\n  // Attempt to connect to all the servers\n  while(servers.length > 0) {\n    // Get the server\n    var server = servers.shift();\n\n    // Remove any non used handlers\n    ['error', 'close', 'timeout', 'connect', 'message', 'parseError'].forEach(function(e) {\n      server.removeAllListeners(e);\n    });\n\n    // Set up the event handlers\n    server.once('error', errorHandlerTemp(self, self.s, server));\n    server.once('close', errorHandlerTemp(self, self.s, server));\n    server.once('timeout', errorHandlerTemp(self, self.s, server));\n    server.once('parseError', errorHandlerTemp(self, self.s, server));\n    server.once('connect', connectHandler(self, self.s, 'connect'));\n\n    if(self.s.logger.isInfo()) self.s.logger.info(f('connecting to server %s', server.name));\n    // Attempt to connect\n    server.connect();\n  }\n}\n\n/**\n * Destroy the server connection\n * @method\n */\nMongos.prototype.destroy = function(emitClose) {\n  this.s.state = DESTROYED;\n  // Emit close\n  if(emitClose && self.listeners('close').length > 0) self.emit('close', self);\n  // Destroy the state\n  this.s.mongosState.destroy();\n}\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nMongos.prototype.isConnected = function() {\n  return this.s.mongosState.isConnected();\n}\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nMongos.prototype.isDestroyed = function() {\n  return this.s.state  == DESTROYED;\n}\n\n//\n// Operations\n//\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.insert = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!this.isConnected() && this.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return this.s.disconnectHandler.add('insert', ns, ops, options, callback);\n  }\n\n  executeWriteOperation(this.s, 'insert', ns, ops, options, callback);\n}\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.update = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!this.isConnected() && this.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return this.s.disconnectHandler.add('update', ns, ops, options, callback);\n  }\n\n  executeWriteOperation(this.s, 'update', ns, ops, options, callback);\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.remove = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!this.isConnected() && this.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return this.s.disconnectHandler.add('remove', ns, ops, options, callback);\n  }\n\n  executeWriteOperation(this.s, 'remove', ns, ops, options, callback);\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.command = function(ns, cmd, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  var self = this;\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  var server = null;\n  // Ensure we have no options\n  options = options || {};\n\n  // We need to execute the command on all servers\n  if(options.onAll) {\n    var servers = self.s.mongosState.getAll();\n    var count = servers.length;\n    var cmdErr = null;\n\n    for(var i = 0; i < servers.length; i++) {\n      servers[i].command(ns, cmd, options, function(err, r) {\n        count = count - 1;\n        // Finished executing command\n        if(count == 0) {\n          // Was it a logout command clear any credentials\n          if(cmd.logout) clearCredentials(state, ns);\n          // Return the error\n          callback(err, r);\n        }\n      });\n    }\n\n    return;\n  }\n\n\n  try {\n    // Get a primary\n    server = self.s.mongosState.pickServer(options.writeConcern ? ReadPreference.primary : options.readPreference);\n  } catch(err) {\n    return callback(err);\n  }\n\n  // No server returned we had an error\n  if(server == null) return callback(new MongoError(\"no mongos found\"));\n  server.command(ns, cmd, options, function(err, r) {\n    // Was it a logout command clear any credentials\n    if(cmd.logout) clearCredentials(self.s, ns);\n    callback(err, r);\n  });\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nMongos.prototype.cursor = function(ns, cmd, cursorOptions) {\n  cursorOptions = cursorOptions || {};\n  var FinalCursor = cursorOptions.cursorFactory || this.s.Cursor;\n  return new FinalCursor(this.s.bson, ns, cmd, cursorOptions, this, this.s.options);\n}\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nMongos.prototype.auth = function(mechanism, db) {\n  var allArgs = Array.prototype.slice.call(arguments, 0).slice(0);\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if(this.s.authProviders[mechanism] == null && mechanism != 'default')\n    throw new MongoError(f(\"auth provider %s does not exist\", mechanism));\n\n  // Authenticate against all the servers\n  var servers = this.s.mongosState.connectedServers().slice(0);\n  var count = servers.length;\n  // Correct authentication\n  var authenticated = true;\n  var authErr = null;\n  // Set auth in progress\n  this.s.authInProgress = true;\n\n  // Authenticate against all servers\n  while(servers.length > 0) {\n    var server = servers.shift();\n    // Arguments without a callback\n    var argsWithoutCallback = [mechanism, db].concat(args.slice(0));\n    // Create arguments\n    var finalArguments = argsWithoutCallback.concat([function(err, r) {\n      count = count - 1;\n      if(err) authErr = err;\n      if(!r) authenticated = false;\n\n      // We are done\n      if(count == 0) {\n        // We have more servers that are not authenticated, let's authenticate\n        if(self.s.authInProgressServers.length > 0) {\n          self.s.authInProgressServers = [];\n          return self.auth.apply(self, [mechanism, db].concat(args).concat([callback]));\n        }\n\n        // Auth is done\n        self.s.authInProgress = false;\n        // Add successful credentials\n        if(authErr == null) addCredentials(self.s, db, argsWithoutCallback);\n        // Return the auth error\n        if(authErr) return callback(authErr, false);\n        // Successfully authenticated session\n        callback(null, new Session({}, self));\n      }\n    }]);\n\n    // Execute the auth\n    server.auth.apply(server, finalArguments);\n  }\n}\n\n//\n// Plugin methods\n//\n\n/**\n * Add custom read preference strategy\n * @method\n * @param {string} name Name of the read preference strategy\n * @param {object} strategy Strategy object instance\n */\nMongos.prototype.addReadPreferenceStrategy = function(name, strategy) {\n  if(this.s.readPreferenceStrategies == null) this.s.readPreferenceStrategies = {};\n  this.s.readPreferenceStrategies[name] = strategy;\n}\n\n/**\n * Add custom authentication mechanism\n * @method\n * @param {string} name Name of the authentication mechanism\n * @param {object} provider Authentication object instance\n */\nMongos.prototype.addAuthProvider = function(name, provider) {\n  this.s.authProviders[name] = provider;\n}\n\n/**\n * Get connection\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Connection}\n */\nMongos.prototype.getConnection = function(options) {\n  // Ensure we have no options\n  options = options || {};\n  // Pick the right server based on readPreference\n  var server = this.s.mongosState.pickServer(options.readPreference);\n  if(server == null) return null;\n  // Return connection\n  return server.getConnection();\n}\n\n/**\n * Get server\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Server}\n */\nMongos.prototype.getServer = function(options) {\n  // Ensure we have no options\n  options = options || {};\n  // Pick the right server based on readPreference\n  return this.s.mongosState.pickServer(options.readPreference);\n}\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nMongos.prototype.connections = function() {\n  return this.s.mongosState.getAllConnections();\n}\n\n//\n// Inquires about state changes\n//\nvar mongosInquirer = function(self, state) {\n  return function() {\n    if(state.state == DESTROYED) return\n    if(state.state == CONNECTED) state.retriesLeft = state.reconnectTries;\n\n    // If we have a disconnected site\n    if(state.state == DISCONNECTED && state.retriesLeft == 0) {\n      self.destroy();\n      return self.emit('error', new MongoError(f('failed to reconnect after %s', state.reconnectTries)));\n    } else if(state == DISCONNECTED) {\n      state.retriesLeft = state.retriesLeft - 1;\n    }\n\n    // If we have a primary and a disconnect handler, execute\n    // buffered operations\n    if(state.mongosState.isConnected() && state.disconnectHandler) {\n      state.disconnectHandler.execute();\n    }\n\n    // Log the information\n    if(state.logger.isDebug()) state.logger.debug(f('mongos ha proceess running'));\n\n    // Let's query any disconnected proxies\n    var disconnectedServers = state.mongosState.disconnectedServers();\n    if(disconnectedServers.length == 0) return setTimeout(mongosInquirer(self, state), state.haInterval);\n\n    // Count of connections waiting to be connected\n    var connectionCount = disconnectedServers.length;\n    if(state.logger.isDebug()) state.logger.debug(f('mongos ha proceess found %d disconnected proxies', connectionCount));\n\n    // Let's attempt to reconnect\n    while(disconnectedServers.length > 0) {\n      // Connect to proxy\n      var connectToProxy = function(_server) {\n        setTimeout(function() {\n          var events = ['error', 'close', 'timeout', 'connect', 'message', 'parseError'];\n          // Remove any listeners\n          events.forEach(function(e) {\n            _server.removeAllListeners(e);\n          });\n\n          // Set up the event handlers\n          _server.once('error', errorHandlerTemp(self, state, server));\n          _server.once('close', errorHandlerTemp(self, state, server));\n          _server.once('timeout', errorHandlerTemp(self, state, server));\n          _server.once('connect', connectHandler(self, state, 'ha'));\n          // Start connect\n          _server.connect();\n        }, 1);\n      }\n\n      var server = disconnectedServers.shift();\n      if(state.logger.isDebug()) state.logger.debug(f('attempting to connect to server %s', server.name));\n      connectToProxy(server);\n    }\n\n    // Let's keep monitoring but wait for possible timeout to happen\n    return setTimeout(mongosInquirer(self, state), state.options.connectionTimeout + state.haInterval);\n  }\n}\n\n//\n// Error handler for initial connect\nvar errorHandlerTemp = function(self, state, server) {\n  return function(err, server) {\n    // Log the information\n    if(state.logger.isInfo()) state.logger.info(f('server %s disconnected with error %s',  server.name, JSON.stringify(err)));\n\n    // Signal disconnect of server\n    state.mongosState.disconnected(server);\n\n    // Remove any non used handlers\n    var events = ['error', 'close', 'timeout', 'connect'];\n    events.forEach(function(e) {\n      server.removeAllListeners(e);\n    })\n  }\n}\n\n//\n// Handlers\nvar errorHandler = function(self, state) {\n  return function(err, server) {\n    if(state.logger.isInfo()) state.logger.info(f('server %s errored out with %s', server.name, JSON.stringify(err)));\n    state.mongosState.disconnected(server);\n    // No more servers left emit close\n    if(state.mongosState.connectedServers().length == 0) {\n      state.state = DISCONNECTED;\n    }\n\n    // Signal server left\n    self.emit('left', 'mongos', server);\n    if(state.emitError) self.emit('error', err, server);\n  }\n}\n\nvar timeoutHandler = function(self, state) {\n  return function(err, server) {\n    if(state.logger.isInfo()) state.logger.info(f('server %s timed out', server.name));\n    state.mongosState.disconnected(server);\n\n    // No more servers emit close event if no entries left\n    if(state.mongosState.connectedServers().length == 0) {\n      state.state = DISCONNECTED;\n    }\n\n    // Signal server left\n    self.emit('left', 'mongos', server);\n  }\n}\n\nvar closeHandler = function(self, state) {\n  return function(err, server) {\n    if(state.logger.isInfo()) state.logger.info(f('server %s closed', server.name));\n    state.mongosState.disconnected(server);\n\n    // No more servers left emit close\n    if(state.mongosState.connectedServers().length == 0) {\n      state.state = DISCONNECTED;\n    }\n\n    // Signal server left\n    self.emit('left', 'mongos', server);\n  }\n}\n\n// Connect handler\nvar connectHandler = function(self, state, e) {\n  return function(server) {\n    if(state.logger.isInfo()) state.logger.info(f('connected to %s', server.name));\n\n    // Remove any non used handlers\n    ['error', 'close', 'timeout', 'connect', 'message', 'parseError'].forEach(function(e) {\n      server.removeAllListeners(e);\n    });\n\n    // finish processing the server\n    var processNewServer = function(_server) {\n      // Add the server handling code\n      if(_server.isConnected()) {\n        _server.once('error', errorHandler(self, state));\n        _server.once('close', closeHandler(self, state));\n        _server.once('timeout', timeoutHandler(self, state));\n        _server.once('parseError', timeoutHandler(self, state));\n      }\n\n      // Emit joined event\n      self.emit('joined', 'mongos', _server);\n\n      // Add to list connected servers\n      state.mongosState.connected(_server);\n\n      // Do we have a reconnect event\n      if('ha' == e && state.mongosState.connectedServers().length == 1) {\n        self.emit('reconnect', _server);\n      }\n\n      // Full setup\n      if(state.mongosState.disconnectedServers().length == 0 &&\n        state.mongosState.connectedServers().length > 0 &&\n        !state.fullsetup) {\n        state.fullsetup = true;\n        self.emit('fullsetup');\n      }\n\n      // all connected\n      if(state.mongosState.disconnectedServers().length == 0 &&\n        state.mongosState.connectedServers().length == state.seedlist.length &&\n        !state.all) {\n        state.all = true;\n        self.emit('all');\n      }\n\n      // Set connected\n      if(state.state == DISCONNECTED) {\n        state.state = CONNECTED;\n        self.emit('connect', self);\n      }\n    }\n\n    // Is there an authentication process ongoing\n    if(state.authInProgress) {\n      state.authInProgressServers.push(server);\n    }\n\n    // No credentials just process server\n    if(state.credentials.length == 0) return processNewServer(server);\n\n    // Do we have credentials, let's apply them all\n    var count = state.credentials.length;\n    // Apply the credentials\n    for(var i = 0; i < state.credentials.length; i++) {\n      server.auth.apply(server, state.credentials[i].concat([function(err, r) {\n        count = count - 1;\n        if(count == 0) processNewServer(server);\n      }]));\n    }\n  }\n}\n\n//\n// Add server to the list if it does not exist\nvar addToListIfNotExist = function(list, server) {\n  var found = false;\n\n  // Remove any non used handlers\n  ['error', 'close', 'timeout', 'connect'].forEach(function(e) {\n    server.removeAllListeners(e);\n  })\n\n  // Check if the server already exists\n  for(var i = 0; i < list.length; i++) {\n    if(list[i].equals(server)) found = true;\n  }\n\n  if(!found) {\n    list.push(server);\n  }\n}\n\n// Add the new credential for a db, removing the old\n// credential from the cache\nvar addCredentials = function(state, db, argsWithoutCallback) {\n  // Remove any credentials for the db\n  clearCredentials(state, db + \".dummy\");\n  // Add new credentials to list\n  state.credentials.push(argsWithoutCallback);\n}\n\n// Clear out credentials for a namespace\nvar clearCredentials = function(state, ns) {\n  var db = ns.split('.')[0];\n  var filteredCredentials = [];\n\n  // Filter out all credentials for the db the user is logging out off\n  for(var i = 0; i < state.credentials.length; i++) {\n    if(state.credentials[i][1] != db) filteredCredentials.push(state.credentials[i]);\n  }\n\n  // Set new list of credentials\n  state.credentials = filteredCredentials;\n}\n\nvar processReadPreference = function(cmd, options) {\n  options = options || {}\n  // No read preference specified\n  if(options.readPreference == null) return cmd;\n}\n\n//\n// Execute write operation\nvar executeWriteOperation = function(state, op, ns, ops, options, callback) {\n  if(typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  var server = null;\n  // Ensure we have no options\n  options = options || {};\n  try {\n    // Get a primary\n    server = state.mongosState.pickServer();\n  } catch(err) {\n    return callback(err);\n  }\n\n  // No server returned we had an error\n  if(server == null) return callback(new MongoError(\"no mongos found\"));\n  // Execute the command\n  server[op](ns, ops, options, callback);\n}\n\n/**\n * A mongos connect event, used to verify that the connection is up and running\n *\n * @event Mongos#connect\n * @type {Mongos}\n */\n\n/**\n * A server member left the mongos list\n *\n * @event Mongos#left\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that left\n */\n\n/**\n * A server member joined the mongos list\n *\n * @event Mongos#joined\n * @type {Mongos}\n * @param {string} type The type of member that left (mongos)\n * @param {Server} server The server object that joined\n */\n\nmodule.exports = Mongos;\n"};
jalangiLabel3465:
    while (true) {
        try {
            J$.Se(20801, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/mongos_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/mongos.js');
            J$.N(20809, '__secret__S$', __secret__S$, 0);
            J$.N(20817, '__secret__traits__', __secret__traits__, 0);
            J$.N(20825, 'inherits', inherits, 0);
            J$.N(20833, 'f', f, 0);
            J$.N(20841, 'b', b, 0);
            J$.N(20849, 'bindToCurrentDomain', bindToCurrentDomain, 0);
            J$.N(20857, 'EventEmitter', EventEmitter, 0);
            J$.N(20865, 'BasicCursor', BasicCursor, 0);
            J$.N(20873, 'BSON', BSON, 0);
            J$.N(20881, 'Server', Server, 0);
            J$.N(20889, 'Logger', Logger, 0);
            J$.N(20897, 'ReadPreference', ReadPreference, 0);
            J$.N(20905, 'Session', Session, 0);
            J$.N(20913, 'MongoError', MongoError, 0);
            J$.N(20921, 'DISCONNECTED', DISCONNECTED, 0);
            J$.N(20929, 'CONNECTING', CONNECTING, 0);
            J$.N(20937, 'CONNECTED', CONNECTED, 0);
            J$.N(20945, 'DESTROYED', DESTROYED, 0);
            J$.N(20953, 'bsonTypes', bsonTypes, 0);
            J$.N(20961, 'bsonInstance', bsonInstance, 0);
            J$.N(20969, 'mongosId', mongosId, 0);
            J$.N(20977, 'cloneOptions', cloneOptions, 0);
            J$.N(20985, 'State', State, 0);
            J$.N(20993, 'Mongos', Mongos, 0);
            J$.N(21001, 'mongosInquirer', mongosInquirer, 0);
            J$.N(21009, 'errorHandlerTemp', errorHandlerTemp, 0);
            J$.N(21017, 'errorHandler', errorHandler, 0);
            J$.N(21025, 'timeoutHandler', timeoutHandler, 0);
            J$.N(21033, 'closeHandler', closeHandler, 0);
            J$.N(21041, 'connectHandler', connectHandler, 0);
            J$.N(21049, 'addToListIfNotExist', addToListIfNotExist, 0);
            J$.N(21057, 'addCredentials', addCredentials, 0);
            J$.N(21065, 'clearCredentials', clearCredentials, 0);
            J$.N(21073, 'processReadPreference', processReadPreference, 0);
            J$.N(21081, 'executeWriteOperation', executeWriteOperation, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(465, J$.W(457, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(481, J$.W(473, 'f', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'util', 21, false)), 'format', 0), f, 3)), b = J$.X1(497, J$.W(489, 'b', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, 'bson', 21, false)), b, 3)), bindToCurrentDomain = J$.X1(513, J$.W(505, 'bindToCurrentDomain', J$.G(209, J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../connection/utils', 21, false)), 'bindToCurrentDomain', 0), bindToCurrentDomain, 3)), EventEmitter = J$.X1(529, J$.W(521, 'EventEmitter', J$.G(241, J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), BasicCursor = J$.X1(545, J$.W(537, 'BasicCursor', J$.F(265, J$.R(249, 'require', require, 2), 0)(J$.T(257, '../cursor', 21, false)), BasicCursor, 3)), BSON = J$.X1(561, J$.W(553, 'BSON', J$.G(305, J$.M(297, J$.F(289, J$.R(273, 'require', require, 2), 0)(J$.T(281, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), BSON, 3)), BasicCursor = J$.X1(577, J$.W(569, 'BasicCursor', J$.F(329, J$.R(313, 'require', require, 2), 0)(J$.T(321, '../cursor', 21, false)), BasicCursor, 3)), Server = J$.X1(593, J$.W(585, 'Server', J$.F(353, J$.R(337, 'require', require, 2), 0)(J$.T(345, './server', 21, false)), Server, 3)), Logger = J$.X1(609, J$.W(601, 'Logger', J$.F(377, J$.R(361, 'require', require, 2), 0)(J$.T(369, '../connection/logger', 21, false)), Logger, 3)), ReadPreference = J$.X1(625, J$.W(617, 'ReadPreference', J$.F(401, J$.R(385, 'require', require, 2), 0)(J$.T(393, './read_preference', 21, false)), ReadPreference, 3)), Session = J$.X1(641, J$.W(633, 'Session', J$.F(425, J$.R(409, 'require', require, 2), 0)(J$.T(417, './session', 21, false)), Session, 3)), MongoError = J$.X1(657, J$.W(649, 'MongoError', J$.F(449, J$.R(433, 'require', require, 2), 0)(J$.T(441, '../error', 21, false)), MongoError, 3));
            var DISCONNECTED = J$.X1(681, J$.W(673, 'DISCONNECTED', J$.T(665, 'disconnected', 21, false), DISCONNECTED, 3));
            var CONNECTING = J$.X1(705, J$.W(697, 'CONNECTING', J$.T(689, 'connecting', 21, false), CONNECTING, 3));
            var CONNECTED = J$.X1(729, J$.W(721, 'CONNECTED', J$.T(713, 'connected', 21, false), CONNECTED, 3));
            var DESTROYED = J$.X1(753, J$.W(745, 'DESTROYED', J$.T(737, 'destroyed', 21, false), DESTROYED, 3));
            var bsonTypes = J$.X1(937, J$.W(929, 'bsonTypes', J$.T(921, [
                J$.G(769, J$.R(761, 'b', b, 1), 'Long', 0),
                J$.G(785, J$.R(777, 'b', b, 1), 'ObjectID', 0),
                J$.G(801, J$.R(793, 'b', b, 1), 'Binary', 0),
                J$.G(817, J$.R(809, 'b', b, 1), 'Code', 0),
                J$.G(833, J$.R(825, 'b', b, 1), 'DBRef', 0),
                J$.G(849, J$.R(841, 'b', b, 1), 'Symbol', 0),
                J$.G(865, J$.R(857, 'b', b, 1), 'Double', 0),
                J$.G(881, J$.R(873, 'b', b, 1), 'Timestamp', 0),
                J$.G(897, J$.R(889, 'b', b, 1), 'MaxKey', 0),
                J$.G(913, J$.R(905, 'b', b, 1), 'MinKey', 0)
            ], 10, false), bsonTypes, 3));
            var bsonInstance = J$.X1(961, J$.W(953, 'bsonInstance', J$.T(945, null, 25, false), bsonInstance, 3));
            var mongosId = J$.X1(985, J$.W(977, 'mongosId', J$.T(969, 0, 22, false), mongosId, 3));
            var cloneOptions = J$.X1(1185, J$.W(1177, 'cloneOptions', J$.T(1169, function (options) {
                jalangiLabel3392:
                    while (true) {
                        try {
                            J$.Fe(1129, arguments.callee, this, arguments);
                            arguments = J$.N(1137, 'arguments', arguments, 4);
                            options = J$.N(1145, 'options', options, 4);
                            J$.N(1153, 'opts', opts, 0);
                            J$.N(1161, 'name', name, 0);
                            var opts = J$.X1(1009, J$.W(1001, 'opts', J$.T(993, {}, 11, false), opts, 1));
                            for (J$._tm_p in J$.H(1081, J$.R(1017, 'options', options, 0))) {
                                var name = J$.X1(1097, J$.W(1089, 'name', J$._tm_p, name, 1));
                                {
                                    {
                                        J$.X1(1073, J$.P(1065, J$.R(1025, 'opts', opts, 0), J$.R(1033, 'name', name, 0), J$.G(1057, J$.R(1041, 'options', options, 0), J$.R(1049, 'name', name, 0), 4), 2));
                                    }
                                }
                            }
                            return J$.X1(1121, J$.Rt(1113, J$.R(1105, 'opts', opts, 0)));
                        } catch (J$e) {
                            J$.Ex(21089, J$e);
                        } finally {
                            if (J$.Fr(21097))
                                continue jalangiLabel3392;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1129), cloneOptions, 3));
            var State = J$.X1(1329, J$.W(1321, 'State', J$.T(1313, function (readPreferenceStrategies, localThresholdMS) {
                jalangiLabel3393:
                    while (true) {
                        try {
                            J$.Fe(1281, arguments.callee, this, arguments);
                            arguments = J$.N(1289, 'arguments', arguments, 4);
                            readPreferenceStrategies = J$.N(1297, 'readPreferenceStrategies', readPreferenceStrategies, 4);
                            localThresholdMS = J$.N(1305, 'localThresholdMS', localThresholdMS, 4);
                            J$.X1(1273, J$.P(1265, J$.R(1193, 'this', this, 0), 's', J$.T(1257, {
                                connectedServers: J$.T(1201, [], 10, false),
                                disconnectedServers: J$.T(1209, [], 10, false),
                                readPreferenceStrategies: J$.R(1217, 'readPreferenceStrategies', readPreferenceStrategies, 0),
                                lowerBoundLatency: J$.G(1233, J$.R(1225, 'Number', Number, 2), 'MAX_VALUE', 0),
                                localThresholdMS: J$.R(1241, 'localThresholdMS', localThresholdMS, 0),
                                index: J$.T(1249, 0, 22, false)
                            }, 11, false), 0));
                        } catch (J$e) {
                            J$.Ex(21105, J$e);
                        } finally {
                            if (J$.Fr(21113))
                                continue jalangiLabel3393;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1281), State, 3));
            J$.X1(1841, J$.P(1833, J$.G(1345, J$.R(1337, 'State', State, 1), 'prototype', 0), 'connected', J$.T(1825, function (server) {
                jalangiLabel3396:
                    while (true) {
                        try {
                            J$.Fe(1793, arguments.callee, this, arguments);
                            arguments = J$.N(1801, 'arguments', arguments, 4);
                            server = J$.N(1809, 'server', server, 4);
                            J$.N(1817, 'found', found, 0);
                            J$.X1(1481, J$.P(1473, J$.G(1361, J$.R(1353, 'this', this, 0), 's', 0), 'disconnectedServers', J$.M(1465, J$.G(1385, J$.G(1377, J$.R(1369, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'filter', 0)(J$.T(1457, function (s) {
                                jalangiLabel3394:
                                    while (true) {
                                        try {
                                            J$.Fe(1433, arguments.callee, this, arguments);
                                            arguments = J$.N(1441, 'arguments', arguments, 4);
                                            s = J$.N(1449, 's', s, 4);
                                            return J$.X1(1425, J$.Rt(1417, J$.U(10, '!', J$.M(1409, J$.R(1393, 's', s, 0), 'equals', 0)(J$.R(1401, 'server', server, 0)))));
                                        } catch (J$e) {
                                            J$.Ex(21121, J$e);
                                        } finally {
                                            if (J$.Fr(21129))
                                                continue jalangiLabel3394;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1433)), 0));
                            var found = J$.X1(1505, J$.W(1497, 'found', J$.T(1489, false, 23, false), found, 1));
                            J$.X1(1625, J$.M(1617, J$.G(1529, J$.G(1521, J$.R(1513, 'this', this, 0), 's', 0), 'connectedServers', 0), 'forEach', 0)(J$.T(1609, function (s) {
                                jalangiLabel3395:
                                    while (true) {
                                        try {
                                            J$.Fe(1585, arguments.callee, this, arguments);
                                            arguments = J$.N(1593, 'arguments', arguments, 4);
                                            s = J$.N(1601, 's', s, 4);
                                            if (J$.X1(21137, J$.C(8, J$.M(1553, J$.R(1537, 's', s, 0), 'equals', 0)(J$.R(1545, 'server', server, 0)))))
                                                J$.X1(1577, found = J$.W(1569, 'found', J$.T(1561, true, 23, false), found, 0));
                                        } catch (J$e) {
                                            J$.Ex(21145, J$e);
                                        } finally {
                                            if (J$.Fr(21153))
                                                continue jalangiLabel3395;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1585)));
                            if (J$.X1(21161, J$.C(16, J$.U(18, '!', J$.R(1633, 'found', found, 0)))))
                                J$.X1(1681, J$.M(1673, J$.G(1657, J$.G(1649, J$.R(1641, 'this', this, 0), 's', 0), 'connectedServers', 0), 'push', 0)(J$.R(1665, 'server', server, 0)));
                            if (J$.X1(21169, J$.C(24, J$.B(26, '>', J$.G(1705, J$.G(1697, J$.R(1689, 'this', this, 0), 's', 0), 'lowerBoundLatency', 0), J$.G(1729, J$.G(1721, J$.R(1713, 'server', server, 0), 's', 0), 'isMasterLatencyMS', 0), 0)))) {
                                J$.X1(1785, J$.P(1777, J$.G(1745, J$.R(1737, 'this', this, 0), 's', 0), 'lowerBoundLatency', J$.G(1769, J$.G(1761, J$.R(1753, 'server', server, 0), 's', 0), 'isMasterLatencyMS', 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(21177, J$e);
                        } finally {
                            if (J$.Fr(21185))
                                continue jalangiLabel3396;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1793), 0));
            J$.X1(2249, J$.P(2241, J$.G(1857, J$.R(1849, 'State', State, 1), 'prototype', 0), 'disconnected', J$.T(2233, function (server) {
                jalangiLabel3399:
                    while (true) {
                        try {
                            J$.Fe(2201, arguments.callee, this, arguments);
                            arguments = J$.N(2209, 'arguments', arguments, 4);
                            server = J$.N(2217, 'server', server, 4);
                            J$.N(2225, 'found', found, 0);
                            J$.X1(1993, J$.P(1985, J$.G(1873, J$.R(1865, 'this', this, 0), 's', 0), 'connectedServers', J$.M(1977, J$.G(1897, J$.G(1889, J$.R(1881, 'this', this, 0), 's', 0), 'connectedServers', 0), 'filter', 0)(J$.T(1969, function (s) {
                                jalangiLabel3397:
                                    while (true) {
                                        try {
                                            J$.Fe(1945, arguments.callee, this, arguments);
                                            arguments = J$.N(1953, 'arguments', arguments, 4);
                                            s = J$.N(1961, 's', s, 4);
                                            return J$.X1(1937, J$.Rt(1929, J$.U(34, '!', J$.M(1921, J$.R(1905, 's', s, 0), 'equals', 0)(J$.R(1913, 'server', server, 0)))));
                                        } catch (J$e) {
                                            J$.Ex(21193, J$e);
                                        } finally {
                                            if (J$.Fr(21201))
                                                continue jalangiLabel3397;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1945)), 0));
                            var found = J$.X1(2017, J$.W(2009, 'found', J$.T(2001, false, 23, false), found, 1));
                            J$.X1(2137, J$.M(2129, J$.G(2041, J$.G(2033, J$.R(2025, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'forEach', 0)(J$.T(2121, function (s) {
                                jalangiLabel3398:
                                    while (true) {
                                        try {
                                            J$.Fe(2097, arguments.callee, this, arguments);
                                            arguments = J$.N(2105, 'arguments', arguments, 4);
                                            s = J$.N(2113, 's', s, 4);
                                            if (J$.X1(21209, J$.C(32, J$.M(2065, J$.R(2049, 's', s, 0), 'equals', 0)(J$.R(2057, 'server', server, 0)))))
                                                J$.X1(2089, found = J$.W(2081, 'found', J$.T(2073, true, 23, false), found, 0));
                                        } catch (J$e) {
                                            J$.Ex(21217, J$e);
                                        } finally {
                                            if (J$.Fr(21225))
                                                continue jalangiLabel3398;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2097)));
                            if (J$.X1(21233, J$.C(40, J$.U(42, '!', J$.R(2145, 'found', found, 0)))))
                                J$.X1(2193, J$.M(2185, J$.G(2169, J$.G(2161, J$.R(2153, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'push', 0)(J$.R(2177, 'server', server, 0)));
                        } catch (J$e) {
                            J$.Ex(21241, J$e);
                        } finally {
                            if (J$.Fr(21249))
                                continue jalangiLabel3399;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2201), 0));
            J$.X1(2361, J$.P(2353, J$.G(2265, J$.R(2257, 'State', State, 1), 'prototype', 0), 'disconnectedServers', J$.T(2345, function () {
                jalangiLabel3400:
                    while (true) {
                        try {
                            J$.Fe(2329, arguments.callee, this, arguments);
                            arguments = J$.N(2337, 'arguments', arguments, 4);
                            return J$.X1(2321, J$.Rt(2313, J$.M(2305, J$.G(2289, J$.G(2281, J$.R(2273, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'slice', 0)(J$.T(2297, 0, 22, false))));
                        } catch (J$e) {
                            J$.Ex(21257, J$e);
                        } finally {
                            if (J$.Fr(21265))
                                continue jalangiLabel3400;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2329), 0));
            J$.X1(2473, J$.P(2465, J$.G(2377, J$.R(2369, 'State', State, 1), 'prototype', 0), 'connectedServers', J$.T(2457, function () {
                jalangiLabel3401:
                    while (true) {
                        try {
                            J$.Fe(2441, arguments.callee, this, arguments);
                            arguments = J$.N(2449, 'arguments', arguments, 4);
                            return J$.X1(2433, J$.Rt(2425, J$.M(2417, J$.G(2401, J$.G(2393, J$.R(2385, 'this', this, 0), 's', 0), 'connectedServers', 0), 'slice', 0)(J$.T(2409, 0, 22, false))));
                        } catch (J$e) {
                            J$.Ex(21273, J$e);
                        } finally {
                            if (J$.Fr(21281))
                                continue jalangiLabel3401;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2441), 0));
            J$.X1(2617, J$.P(2609, J$.G(2489, J$.R(2481, 'State', State, 1), 'prototype', 0), 'getAll', J$.T(2601, function () {
                jalangiLabel3402:
                    while (true) {
                        try {
                            J$.Fe(2585, arguments.callee, this, arguments);
                            arguments = J$.N(2593, 'arguments', arguments, 4);
                            return J$.X1(2577, J$.Rt(2569, J$.M(2561, J$.M(2529, J$.G(2513, J$.G(2505, J$.R(2497, 'this', this, 0), 's', 0), 'connectedServers', 0), 'slice', 0)(J$.T(2521, 0, 22, false)), 'concat', 0)(J$.G(2553, J$.G(2545, J$.R(2537, 'this', this, 0), 's', 0), 'disconnectedServers', 0))));
                        } catch (J$e) {
                            J$.Ex(21289, J$e);
                        } finally {
                            if (J$.Fr(21297))
                                continue jalangiLabel3402;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2585), 0));
            J$.X1(2849, J$.P(2841, J$.G(2633, J$.R(2625, 'State', State, 1), 'prototype', 0), 'getAllConnections', J$.T(2833, function () {
                jalangiLabel3404:
                    while (true) {
                        try {
                            J$.Fe(2809, arguments.callee, this, arguments);
                            arguments = J$.N(2817, 'arguments', arguments, 4);
                            J$.N(2825, 'connections', connections, 0);
                            var connections = J$.X1(2657, J$.W(2649, 'connections', J$.T(2641, [], 10, false), connections, 1));
                            J$.X1(2777, J$.M(2769, J$.G(2681, J$.G(2673, J$.R(2665, 'this', this, 0), 's', 0), 'connectedServers', 0), 'forEach', 0)(J$.T(2761, function (e) {
                                jalangiLabel3403:
                                    while (true) {
                                        try {
                                            J$.Fe(2737, arguments.callee, this, arguments);
                                            arguments = J$.N(2745, 'arguments', arguments, 4);
                                            e = J$.N(2753, 'e', e, 4);
                                            J$.X1(2729, connections = J$.W(2721, 'connections', J$.M(2713, J$.R(2689, 'connections', connections, 0), 'concat', 0)(J$.M(2705, J$.R(2697, 'e', e, 0), 'connections', 0)()), connections, 0));
                                        } catch (J$e) {
                                            J$.Ex(21305, J$e);
                                        } finally {
                                            if (J$.Fr(21313))
                                                continue jalangiLabel3403;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2737)));
                            return J$.X1(2801, J$.Rt(2793, J$.R(2785, 'connections', connections, 0)));
                        } catch (J$e) {
                            J$.Ex(21321, J$e);
                        } finally {
                            if (J$.Fr(21329))
                                continue jalangiLabel3404;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2809), 0));
            J$.X1(3193, J$.P(3185, J$.G(2865, J$.R(2857, 'State', State, 1), 'prototype', 0), 'destroy', J$.T(3177, function () {
                jalangiLabel3406:
                    while (true) {
                        try {
                            J$.Fe(3153, arguments.callee, this, arguments);
                            arguments = J$.N(3161, 'arguments', arguments, 4);
                            J$.N(3169, 'server', server, 0);
                            while (J$.X1(21353, J$.C(48, J$.B(50, '>', J$.G(2897, J$.G(2889, J$.G(2881, J$.R(2873, 'this', this, 0), 's', 0), 'connectedServers', 0), 'length', 0), J$.T(2905, 0, 22, false), 0)))) {
                                var server = J$.X1(2953, J$.W(2945, 'server', J$.M(2937, J$.G(2929, J$.G(2921, J$.R(2913, 'this', this, 0), 's', 0), 'connectedServers', 0), 'shift', 0)(), server, 1));
                                J$.X1(3073, J$.M(3065, J$.T(2993, [
                                    J$.T(2961, 'error', 21, false),
                                    J$.T(2969, 'close', 21, false),
                                    J$.T(2977, 'timeout', 21, false),
                                    J$.T(2985, 'connect', 21, false)
                                ], 10, false), 'forEach', 0)(J$.T(3057, function (e) {
                                    jalangiLabel3405:
                                        while (true) {
                                            try {
                                                J$.Fe(3033, arguments.callee, this, arguments);
                                                arguments = J$.N(3041, 'arguments', arguments, 4);
                                                e = J$.N(3049, 'e', e, 4);
                                                J$.X1(3025, J$.M(3017, J$.R(3001, 'server', server, 0), 'removeAllListeners', 0)(J$.R(3009, 'e', e, 0)));
                                            } catch (J$e) {
                                                J$.Ex(21337, J$e);
                                            } finally {
                                                if (J$.Fr(21345))
                                                    continue jalangiLabel3405;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 3033)));
                                J$.X1(3097, J$.M(3089, J$.R(3081, 'server', server, 0), 'destroy', 0)());
                                J$.X1(3145, J$.M(3137, J$.G(3121, J$.G(3113, J$.R(3105, 'this', this, 0), 's', 0), 'disconnectedServers', 0), 'push', 0)(J$.R(3129, 'server', server, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(21361, J$e);
                        } finally {
                            if (J$.Fr(21369))
                                continue jalangiLabel3406;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3153), 0));
            J$.X1(3305, J$.P(3297, J$.G(3209, J$.R(3201, 'State', State, 1), 'prototype', 0), 'isConnected', J$.T(3289, function () {
                jalangiLabel3407:
                    while (true) {
                        try {
                            J$.Fe(3273, arguments.callee, this, arguments);
                            arguments = J$.N(3281, 'arguments', arguments, 4);
                            return J$.X1(3265, J$.Rt(3257, J$.B(58, '>', J$.G(3241, J$.G(3233, J$.G(3225, J$.R(3217, 'this', this, 0), 's', 0), 'connectedServers', 0), 'length', 0), J$.T(3249, 0, 22, false), 0)));
                        } catch (J$e) {
                            J$.Ex(21377, J$e);
                        } finally {
                            if (J$.Fr(21385))
                                continue jalangiLabel3407;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3273), 0));
            J$.X1(4001, J$.P(3993, J$.G(3321, J$.R(3313, 'State', State, 1), 'prototype', 0), 'pickServer', J$.T(3985, function (readPreference) {
                jalangiLabel3409:
                    while (true) {
                        try {
                            J$.Fe(3945, arguments.callee, this, arguments);
                            arguments = J$.N(3953, 'arguments', arguments, 4);
                            readPreference = J$.N(3961, 'readPreference', readPreference, 4);
                            J$.N(3969, 'self', self, 0);
                            J$.N(3977, 'servers', servers, 0);
                            var self = J$.X1(3345, J$.W(3337, 'self', J$.R(3329, 'this', this, 0), self, 1));
                            J$.X1(3385, readPreference = J$.W(3377, 'readPreference', J$.C(56, J$.R(3353, 'readPreference', readPreference, 0)) ? J$._() : J$.G(3369, J$.R(3361, 'ReadPreference', ReadPreference, 1), 'primary', 0), readPreference, 0));
                            var servers = J$.X1(3577, J$.W(3569, 'servers', J$.M(3561, J$.G(3409, J$.G(3401, J$.R(3393, 'this', this, 0), 's', 0), 'connectedServers', 0), 'filter', 0)(J$.T(3553, function (server) {
                                jalangiLabel3408:
                                    while (true) {
                                        try {
                                            J$.Fe(3529, arguments.callee, this, arguments);
                                            arguments = J$.N(3537, 'arguments', arguments, 4);
                                            server = J$.N(3545, 'server', server, 4);
                                            if (J$.X1(21393, J$.C(72, J$.C(64, J$.B(74, '<=', J$.G(3433, J$.G(3425, J$.R(3417, 'server', server, 0), 's', 0), 'isMasterLatencyMS', 0), J$.B(66, '+', J$.G(3457, J$.G(3449, J$.R(3441, 'self', self, 0), 's', 0), 'lowerBoundLatency', 0), J$.G(3481, J$.G(3473, J$.R(3465, 'self', self, 0), 's', 0), 'localThresholdMS', 0), 0), 0)) ? J$.M(3497, J$.R(3489, 'server', server, 0), 'isConnected', 0)() : J$._()))) {
                                                return J$.X1(3521, J$.Rt(3513, J$.T(3505, true, 23, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21401, J$e);
                                        } finally {
                                            if (J$.Fr(21409))
                                                continue jalangiLabel3408;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3529)), servers, 1));
                            if (J$.X1(21417, J$.C(88, J$.C(80, J$.B(82, '!=', J$.G(3601, J$.G(3593, J$.R(3585, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(3609, null, 25, false), 0)) ? J$.B(90, '!=', J$.G(3649, J$.G(3633, J$.G(3625, J$.R(3617, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(3641, 'readPreference', readPreference, 0), 4), J$.T(3657, null, 25, false), 0) : J$._()))) {
                                return J$.X1(3737, J$.Rt(3729, J$.M(3721, J$.G(3697, J$.G(3681, J$.G(3673, J$.R(3665, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(3689, 'readPreference', readPreference, 0), 4), 'pickServer', 0)(J$.R(3705, 'servers', servers, 0), J$.R(3713, 'readPreference', readPreference, 0))));
                            }
                            if (J$.X1(21425, J$.C(96, J$.B(98, '==', J$.G(3753, J$.R(3745, 'servers', servers, 0), 'length', 0), J$.T(3761, 0, 22, false), 0))))
                                throw J$.X1(3801, J$.Th(3793, J$.F(3785, J$.R(3769, 'MongoError', MongoError, 1), 1)(J$.T(3777, 'no mongos proxy available', 21, false))));
                            J$.X1(3881, J$.P(3873, J$.G(3817, J$.R(3809, 'this', this, 0), 's', 0), 'index', J$.B(114, '%', J$.B(106, '+', J$.G(3841, J$.G(3833, J$.R(3825, 'this', this, 0), 's', 0), 'index', 0), J$.T(3849, 1, 22, false), 0), J$.G(3865, J$.R(3857, 'servers', servers, 0), 'length', 0), 0), 0));
                            return J$.X1(3937, J$.Rt(3929, J$.G(3921, J$.R(3889, 'servers', servers, 0), J$.G(3913, J$.G(3905, J$.R(3897, 'this', this, 0), 's', 0), 'index', 0), 4)));
                        } catch (J$e) {
                            J$.Ex(21433, J$e);
                        } finally {
                            if (J$.Fr(21441))
                                continue jalangiLabel3409;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3945), 0));
            var Mongos = J$.X1(5785, J$.W(5777, 'Mongos', J$.T(5769, function (seedlist, options) {
                jalangiLabel3416:
                    while (true) {
                        try {
                            J$.Fe(5721, arguments.callee, this, arguments);
                            arguments = J$.N(5729, 'arguments', arguments, 4);
                            seedlist = J$.N(5737, 'seedlist', seedlist, 4);
                            options = J$.N(5745, 'options', options, 4);
                            J$.N(5753, 'self', self, 0);
                            J$.N(5761, 'bson', bson, 0);
                            var self = J$.X1(4025, J$.W(4017, 'self', J$.R(4009, 'this', this, 0), self, 1));
                            J$.X1(4057, options = J$.W(4049, 'options', J$.C(104, J$.R(4033, 'options', options, 0)) ? J$._() : J$.T(4041, {}, 11, false), options, 0));
                            J$.X1(4089, J$.M(4081, J$.R(4065, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(4073, 'this', this, 0)));
                            if (J$.X1(21449, J$.C(112, J$.U(122, '!', J$.M(4113, J$.R(4097, 'Array', Array, 2), 'isArray', 0)(J$.R(4105, 'seedlist', seedlist, 0))))))
                                throw J$.X1(4153, J$.Th(4145, J$.F(4137, J$.R(4121, 'MongoError', MongoError, 1), 1)(J$.T(4129, 'seedlist must be an array', 21, false))));
                            if (J$.X1(21457, J$.C(120, J$.B(130, '==', J$.G(4169, J$.R(4161, 'seedlist', seedlist, 0), 'length', 0), J$.T(4177, 0, 22, false), 0))))
                                throw J$.X1(4217, J$.Th(4209, J$.F(4201, J$.R(4185, 'MongoError', MongoError, 1), 1)(J$.T(4193, 'seedlist must contain at least one entry', 21, false))));
                            J$.X1(4361, J$.M(4353, J$.R(4225, 'seedlist', seedlist, 0), 'forEach', 0)(J$.T(4345, function (e) {
                                jalangiLabel3410:
                                    while (true) {
                                        try {
                                            J$.Fe(4321, arguments.callee, this, arguments);
                                            arguments = J$.N(4329, 'arguments', arguments, 4);
                                            e = J$.N(4337, 'e', e, 4);
                                            if (J$.X1(21465, J$.C(136, J$.C(128, J$.B(146, '!=', J$.U(138, 'typeof', J$.G(4241, J$.R(4233, 'e', e, 0), 'host', 0)), J$.T(4249, 'string', 21, false), 0)) ? J$._() : J$.B(162, '!=', J$.U(154, 'typeof', J$.G(4265, J$.R(4257, 'e', e, 0), 'port', 0)), J$.T(4273, 'number', 21, false), 0))))
                                                throw J$.X1(4313, J$.Th(4305, J$.F(4297, J$.R(4281, 'MongoError', MongoError, 1), 1)(J$.T(4289, 'seedlist entry must contain a host and port', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(21473, J$e);
                                        } finally {
                                            if (J$.Fr(21481))
                                                continue jalangiLabel3410;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4321)));
                            J$.X1(4425, bsonInstance = J$.W(4417, 'bsonInstance', J$.X1(21489, J$.C(144, J$.B(170, '==', J$.R(4369, 'bsonInstance', bsonInstance, 1), J$.T(4377, null, 25, false), 0))) ? J$.F(4401, J$.R(4385, 'BSON', BSON, 1), 1)(J$.R(4393, 'bsonTypes', bsonTypes, 1)) : J$.R(4409, 'bsonInstance', bsonInstance, 1), bsonInstance, 2));
                            var bson = J$.X1(4481, J$.W(4473, 'bson', J$.X1(21497, J$.C(152, J$.G(4441, J$.R(4433, 'options', options, 0), 'bson', 0))) ? J$.G(4457, J$.R(4449, 'options', options, 0), 'bson', 0) : J$.R(4465, 'bsonInstance', bsonInstance, 1), bson, 1));
                            J$.X1(4513, J$.P(4505, J$.R(4489, 'options', options, 0), 'bson', J$.R(4497, 'bson', bson, 0), 0));
                            J$.X1(4889, J$.P(4881, J$.R(4521, 'this', this, 0), 's', J$.T(4873, {
                                seedlist: J$.R(4529, 'seedlist', seedlist, 0),
                                options: J$.R(4537, 'options', options, 0),
                                logger: J$.F(4569, J$.R(4545, 'Logger', Logger, 1), 0)(J$.T(4553, 'Mongos', 21, false), J$.R(4561, 'options', options, 0)),
                                reconnectTries: J$.C(160, J$.G(4585, J$.R(4577, 'options', options, 0), 'reconnectTries', 0)) ? J$._() : J$.T(4593, 30, 22, false),
                                haInterval: J$.C(168, J$.G(4609, J$.R(4601, 'options', options, 0), 'haInterval', 0)) ? J$._() : J$.T(4617, 5000, 22, false),
                                localThresholdMS: J$.C(176, J$.G(4633, J$.R(4625, 'options', options, 0), 'localThresholdMS', 0)) ? J$._() : J$.T(4641, 15, 22, false),
                                fullsetup: J$.T(4649, false, 23, false),
                                Cursor: J$.C(184, J$.G(4665, J$.R(4657, 'options', options, 0), 'cursorFactory', 0)) ? J$._() : J$.R(4673, 'BasicCursor', BasicCursor, 1),
                                credentials: J$.T(4681, [], 10, false),
                                bsonInstance: J$.R(4689, 'bsonInstance', bsonInstance, 1),
                                bson: J$.R(4697, 'bson', bson, 0),
                                pings: J$.T(4705, {}, 11, false),
                                state: J$.R(4713, 'DISCONNECTED', DISCONNECTED, 1),
                                emitError: J$.X1(21505, J$.C(192, J$.B(186, '==', J$.U(178, 'typeof', J$.G(4729, J$.R(4721, 'options', options, 0), 'emitError', 0)), J$.T(4737, 'boolean', 21, false), 0))) ? J$.G(4753, J$.R(4745, 'options', options, 0), 'emitError', 0) : J$.T(4761, false, 23, false),
                                readPreferenceStrategies: J$.T(4769, {}, 11, false),
                                authProviders: J$.T(4777, {}, 11, false),
                                id: J$.B(210, '-', mongosId = J$.W(4801, 'mongosId', J$.B(202, '+', J$.U(194, '+', J$.R(4793, 'mongosId', mongosId, 1)), J$.T(4785, 1, 22, false), 0), mongosId, 2), J$.T(4809, 1, 22, false), 0),
                                authInProgress: J$.T(4817, false, 23, false),
                                authInProgressServers: J$.T(4825, [], 10, false),
                                retriesLeft: J$.C(200, J$.G(4841, J$.R(4833, 'options', options, 0), 'reconnectTries', 0)) ? J$._() : J$.T(4849, 30, 22, false),
                                disconnectHandler: J$.G(4865, J$.R(4857, 'options', options, 0), 'disconnectHandler', 0)
                            }, 11, false), 0));
                            J$.X1(4937, J$.P(4929, J$.R(4897, 'options', options, 0), 'connectionTimeout', J$.C(208, J$.G(4913, J$.R(4905, 'options', options, 0), 'connectionTimeout', 0)) ? J$._() : J$.T(4921, 1000, 22, false), 0));
                            J$.X1(5033, J$.P(5025, J$.G(4953, J$.R(4945, 'this', this, 0), 's', 0), 'mongosState', J$.F(5017, J$.R(4961, 'State', State, 1), 1)(J$.G(4985, J$.G(4977, J$.R(4969, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.G(5009, J$.G(5001, J$.R(4993, 'this', this, 0), 's', 0), 'localThresholdMS', 0)), 0));
                            J$.X1(5249, J$.M(5241, J$.R(5041, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5049, 'this', this, 0), J$.T(5057, 'bson', 21, false), J$.T(5233, {
                                enumerable: J$.T(5065, true, 23, false),
                                get: J$.T(5225, function () {
                                    jalangiLabel3411:
                                        while (true) {
                                            try {
                                                J$.Fe(5201, arguments.callee, this, arguments);
                                                arguments = J$.N(5209, 'arguments', arguments, 4);
                                                J$.N(5217, 'servers', servers, 0);
                                                var servers = J$.X1(5113, J$.W(5105, 'servers', J$.M(5097, J$.G(5089, J$.G(5081, J$.R(5073, 'self', self, 0), 's', 0), 'mongosState', 0), 'getAll', 0)(), servers, 1));
                                                return J$.X1(5193, J$.Rt(5185, J$.X1(21513, J$.C(216, J$.B(218, '>', J$.G(5129, J$.R(5121, 'servers', servers, 0), 'length', 0), J$.T(5137, 0, 22, false), 0))) ? J$.G(5169, J$.G(5161, J$.R(5145, 'servers', servers, 0), J$.T(5153, 0, 22, false), 4), 'bson', 0) : J$.T(5177, null, 25, false)));
                                            } catch (J$e) {
                                                J$.Ex(21521, J$e);
                                            } finally {
                                                if (J$.Fr(21529))
                                                    continue jalangiLabel3411;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5201)
                            }, 11, false)));
                            J$.X1(5369, J$.M(5361, J$.R(5257, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5265, 'this', this, 0), J$.T(5273, 'id', 21, false), J$.T(5353, {
                                enumerable: J$.T(5281, true, 23, false),
                                get: J$.T(5345, function () {
                                    jalangiLabel3412:
                                        while (true) {
                                            try {
                                                J$.Fe(5329, arguments.callee, this, arguments);
                                                arguments = J$.N(5337, 'arguments', arguments, 4);
                                                return J$.X1(5321, J$.Rt(5313, J$.G(5305, J$.G(5297, J$.R(5289, 'self', self, 0), 's', 0), 'id', 0)));
                                            } catch (J$e) {
                                                J$.Ex(21537, J$e);
                                            } finally {
                                                if (J$.Fr(21545))
                                                    continue jalangiLabel3412;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5329)
                            }, 11, false)));
                            J$.X1(5473, J$.M(5465, J$.R(5377, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5385, 'this', this, 0), J$.T(5393, 'type', 21, false), J$.T(5457, {
                                enumerable: J$.T(5401, true, 23, false),
                                get: J$.T(5449, function () {
                                    jalangiLabel3413:
                                        while (true) {
                                            try {
                                                J$.Fe(5433, arguments.callee, this, arguments);
                                                arguments = J$.N(5441, 'arguments', arguments, 4);
                                                return J$.X1(5425, J$.Rt(5417, J$.T(5409, 'mongos', 21, false)));
                                            } catch (J$e) {
                                                J$.Ex(21553, J$e);
                                            } finally {
                                                if (J$.Fr(21561))
                                                    continue jalangiLabel3413;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5433)
                            }, 11, false)));
                            J$.X1(5593, J$.M(5585, J$.R(5481, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5489, 'this', this, 0), J$.T(5497, 'haInterval', 21, false), J$.T(5577, {
                                enumerable: J$.T(5505, true, 23, false),
                                get: J$.T(5569, function () {
                                    jalangiLabel3414:
                                        while (true) {
                                            try {
                                                J$.Fe(5553, arguments.callee, this, arguments);
                                                arguments = J$.N(5561, 'arguments', arguments, 4);
                                                return J$.X1(5545, J$.Rt(5537, J$.G(5529, J$.G(5521, J$.R(5513, 'self', self, 0), 's', 0), 'haInterval', 0)));
                                            } catch (J$e) {
                                                J$.Ex(21569, J$e);
                                            } finally {
                                                if (J$.Fr(21577))
                                                    continue jalangiLabel3414;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5553)
                            }, 11, false)));
                            J$.X1(5713, J$.M(5705, J$.R(5601, 'Object', Object, 2), 'defineProperty', 0)(J$.R(5609, 'this', this, 0), J$.T(5617, 'state', 21, false), J$.T(5697, {
                                enumerable: J$.T(5625, true, 23, false),
                                get: J$.T(5689, function () {
                                    jalangiLabel3415:
                                        while (true) {
                                            try {
                                                J$.Fe(5673, arguments.callee, this, arguments);
                                                arguments = J$.N(5681, 'arguments', arguments, 4);
                                                return J$.X1(5665, J$.Rt(5657, J$.G(5649, J$.G(5641, J$.R(5633, 'self', self, 0), 's', 0), 'mongosState', 0)));
                                            } catch (J$e) {
                                                J$.Ex(21585, J$e);
                                            } finally {
                                                if (J$.Fr(21593))
                                                    continue jalangiLabel3415;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 5673)
                            }, 11, false)));
                        } catch (J$e) {
                            J$.Ex(21601, J$e);
                        } finally {
                            if (J$.Fr(21609))
                                continue jalangiLabel3416;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5721), Mongos, 3));
            J$.X1(5825, J$.F(5817, J$.R(5793, 'inherits', inherits, 1), 0)(J$.R(5801, 'Mongos', Mongos, 1), J$.R(5809, 'EventEmitter', EventEmitter, 1)));
            J$.X1(5993, J$.P(5985, J$.G(5841, J$.R(5833, 'Mongos', Mongos, 1), 'prototype', 0), 'parserType', J$.T(5977, function () {
                jalangiLabel3417:
                    while (true) {
                        try {
                            J$.Fe(5961, arguments.callee, this, arguments);
                            arguments = J$.N(5969, 'arguments', arguments, 4);
                            if (J$.X1(21617, J$.C(224, J$.B(234, '!=', J$.M(5897, J$.M(5881, J$.G(5873, J$.G(5865, J$.G(5857, J$.R(5849, 'this', this, 0), 's', 0), 'bson', 0), 'serialize', 0), 'toString', 0)(), 'indexOf', 0)(J$.T(5889, '[native code]', 21, false)), J$.U(226, '-', J$.T(5905, 1, 22, false)), 0))))
                                return J$.X1(5929, J$.Rt(5921, J$.T(5913, 'c++', 21, false)));
                            return J$.X1(5953, J$.Rt(5945, J$.T(5937, 'js', 21, false)));
                        } catch (J$e) {
                            J$.Ex(21625, J$e);
                        } finally {
                            if (J$.Fr(21633))
                                continue jalangiLabel3417;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5961), 0));
            J$.X1(6361, J$.P(6353, J$.G(6009, J$.R(6001, 'Mongos', Mongos, 1), 'prototype', 0), 'setBSONParserType', J$.T(6345, function (type) {
                jalangiLabel3418:
                    while (true) {
                        try {
                            J$.Fe(6313, arguments.callee, this, arguments);
                            arguments = J$.N(6321, 'arguments', arguments, 4);
                            type = J$.N(6329, 'type', type, 4);
                            J$.N(6337, 'nBSON', nBSON, 0);
                            var nBSON = J$.X1(6033, J$.W(6025, 'nBSON', J$.T(6017, null, 25, false), nBSON, 1));
                            if (J$.X1(21649, J$.C(240, J$.B(242, '==', J$.R(6041, 'type', type, 0), J$.T(6049, 'c++', 21, false), 0)))) {
                                J$.X1(6105, nBSON = J$.W(6097, 'nBSON', J$.G(6089, J$.M(6081, J$.F(6073, J$.R(6057, 'require', require, 2), 0)(J$.T(6065, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), nBSON, 0));
                            } else if (J$.X1(21641, J$.C(232, J$.B(250, '==', J$.R(6113, 'type', type, 0), J$.T(6121, 'js', 21, false), 0)))) {
                                J$.X1(6177, nBSON = J$.W(6169, 'nBSON', J$.G(6161, J$.M(6153, J$.F(6145, J$.R(6129, 'require', require, 2), 0)(J$.T(6137, 'bson', 21, false)), 'pure', 0)(), 'BSON', 0), nBSON, 0));
                            } else {
                                throw J$.X1(6241, J$.Th(6233, J$.F(6225, J$.R(6185, 'MongoError', MongoError, 1), 1)(J$.F(6217, J$.R(6193, 'f', f, 1), 0)(J$.T(6201, '% parser not supported', 21, false), J$.R(6209, 'type', type, 0)))));
                            }
                            J$.X1(6305, J$.P(6297, J$.G(6265, J$.G(6257, J$.R(6249, 'this', this, 0), 's', 0), 'options', 0), 'bson', J$.F(6289, J$.R(6273, 'nBSON', nBSON, 0), 1)(J$.R(6281, 'bsonTypes', bsonTypes, 1)), 0));
                        } catch (J$e) {
                            J$.Ex(21657, J$e);
                        } finally {
                            if (J$.Fr(21665))
                                continue jalangiLabel3418;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6313), 0));
            J$.X1(6569, J$.P(6561, J$.G(6377, J$.R(6369, 'Mongos', Mongos, 1), 'prototype', 0), 'lastIsMaster', J$.T(6553, function () {
                jalangiLabel3419:
                    while (true) {
                        try {
                            J$.Fe(6529, arguments.callee, this, arguments);
                            arguments = J$.N(6537, 'arguments', arguments, 4);
                            J$.N(6545, 'connectedServers', connectedServers, 0);
                            var connectedServers = J$.X1(6425, J$.W(6417, 'connectedServers', J$.M(6409, J$.G(6401, J$.G(6393, J$.R(6385, 'this', this, 0), 's', 0), 'mongosState', 0), 'connectedServers', 0)(), connectedServers, 1));
                            if (J$.X1(21673, J$.C(248, J$.B(258, '>', J$.G(6441, J$.R(6433, 'connectedServers', connectedServers, 0), 'length', 0), J$.T(6449, 0, 22, false), 0))))
                                return J$.X1(6497, J$.Rt(6489, J$.M(6481, J$.G(6473, J$.R(6457, 'connectedServers', connectedServers, 0), J$.T(6465, 0, 22, false), 4), 'lastIsMaster', 0)()));
                            return J$.X1(6521, J$.Rt(6513, J$.T(6505, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(21681, J$e);
                        } finally {
                            if (J$.Fr(21689))
                                continue jalangiLabel3419;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6529), 0));
            J$.X1(8105, J$.P(8097, J$.G(6585, J$.R(6577, 'Mongos', Mongos, 1), 'prototype', 0), 'connect', J$.T(8089, function (_options) {
                jalangiLabel3422:
                    while (true) {
                        try {
                            J$.Fe(8033, arguments.callee, this, arguments);
                            arguments = J$.N(8041, 'arguments', arguments, 4);
                            _options = J$.N(8049, '_options', _options, 4);
                            J$.N(8057, 'self', self, 0);
                            J$.N(8065, 'name', name, 0);
                            J$.N(8073, 'servers', servers, 0);
                            J$.N(8081, 'server', server, 0);
                            var self = J$.X1(6609, J$.W(6601, 'self', J$.R(6593, 'this', this, 0), self, 1));
                            J$.X1(6697, J$.F(6689, J$.R(6617, 'setTimeout', setTimeout, 2), 0)(J$.F(6657, J$.R(6625, 'mongosInquirer', mongosInquirer, 1), 0)(J$.R(6633, 'self', self, 0), J$.G(6649, J$.R(6641, 'self', self, 0), 's', 0)), J$.G(6681, J$.G(6673, J$.R(6665, 'self', self, 0), 's', 0), 'haInterval', 0)));
                            if (J$.X1(21697, J$.C(256, J$.R(6705, '_options', _options, 0))))
                                for (J$._tm_p in J$.H(6793, J$.R(6713, '_options', _options, 0))) {
                                var name = J$.X1(6809, J$.W(6801, 'name', J$._tm_p, name, 1));
                                {
                                    J$.X1(6785, J$.P(6777, J$.G(6737, J$.G(6729, J$.R(6721, 'self', self, 0), 's', 0), 'options', 0), J$.R(6745, 'name', name, 0), J$.G(6769, J$.R(6753, '_options', _options, 0), J$.R(6761, 'name', name, 0), 4), 2));
                                }
                            }
                            J$.X1(7249, J$.M(7241, J$.G(6833, J$.G(6825, J$.R(6817, 'self', self, 0), 's', 0), 'seedlist', 0), 'forEach', 0)(J$.T(7233, function (e) {
                                jalangiLabel3420:
                                    while (true) {
                                        try {
                                            J$.Fe(7201, arguments.callee, this, arguments);
                                            arguments = J$.N(7209, 'arguments', arguments, 4);
                                            e = J$.N(7217, 'e', e, 4);
                                            J$.N(7225, 'opts', opts, 0);
                                            var opts = J$.X1(6889, J$.W(6881, 'opts', J$.F(6873, J$.R(6841, 'cloneOptions', cloneOptions, 1), 0)(J$.G(6865, J$.G(6857, J$.R(6849, 'self', self, 0), 's', 0), 'options', 0)), opts, 1));
                                            J$.X1(6929, J$.P(6921, J$.R(6897, 'opts', opts, 0), 'host', J$.G(6913, J$.R(6905, 'e', e, 0), 'host', 0), 0));
                                            J$.X1(6969, J$.P(6961, J$.R(6937, 'opts', opts, 0), 'port', J$.G(6953, J$.R(6945, 'e', e, 0), 'port', 0), 0));
                                            J$.X1(7001, J$.P(6993, J$.R(6977, 'opts', opts, 0), 'reconnect', J$.T(6985, false, 23, false), 0));
                                            J$.X1(7049, J$.P(7041, J$.R(7009, 'opts', opts, 0), 'readPreferenceStrategies', J$.G(7033, J$.G(7025, J$.R(7017, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), 0));
                                            J$.X1(7097, J$.P(7089, J$.R(7057, 'opts', opts, 0), 'authProviders', J$.G(7081, J$.G(7073, J$.R(7065, 'self', self, 0), 's', 0), 'authProviders', 0), 0));
                                            J$.X1(7129, J$.P(7121, J$.R(7105, 'opts', opts, 0), 'emitError', J$.T(7113, true, 23, false), 0));
                                            J$.X1(7193, J$.M(7185, J$.G(7153, J$.G(7145, J$.R(7137, 'self', self, 0), 's', 0), 'mongosState', 0), 'disconnected', 0)(J$.F(7177, J$.R(7161, 'Server', Server, 1), 1)(J$.R(7169, 'opts', opts, 0))));
                                        } catch (J$e) {
                                            J$.Ex(21705, J$e);
                                        } finally {
                                            if (J$.Fr(21713))
                                                continue jalangiLabel3420;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7201)));
                            var servers = J$.X1(7297, J$.W(7289, 'servers', J$.M(7281, J$.G(7273, J$.G(7265, J$.R(7257, 'self', self, 0), 's', 0), 'mongosState', 0), 'disconnectedServers', 0)(), servers, 1));
                            while (J$.X1(21745, J$.C(272, J$.B(266, '>', J$.G(7313, J$.R(7305, 'servers', servers, 0), 'length', 0), J$.T(7321, 0, 22, false), 0)))) {
                                var server = J$.X1(7353, J$.W(7345, 'server', J$.M(7337, J$.R(7329, 'servers', servers, 0), 'shift', 0)(), server, 1));
                                J$.X1(7489, J$.M(7481, J$.T(7409, [
                                    J$.T(7361, 'error', 21, false),
                                    J$.T(7369, 'close', 21, false),
                                    J$.T(7377, 'timeout', 21, false),
                                    J$.T(7385, 'connect', 21, false),
                                    J$.T(7393, 'message', 21, false),
                                    J$.T(7401, 'parseError', 21, false)
                                ], 10, false), 'forEach', 0)(J$.T(7473, function (e) {
                                    jalangiLabel3421:
                                        while (true) {
                                            try {
                                                J$.Fe(7449, arguments.callee, this, arguments);
                                                arguments = J$.N(7457, 'arguments', arguments, 4);
                                                e = J$.N(7465, 'e', e, 4);
                                                J$.X1(7441, J$.M(7433, J$.R(7417, 'server', server, 0), 'removeAllListeners', 0)(J$.R(7425, 'e', e, 0)));
                                            } catch (J$e) {
                                                J$.Ex(21721, J$e);
                                            } finally {
                                                if (J$.Fr(21729))
                                                    continue jalangiLabel3421;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 7449)));
                                J$.X1(7569, J$.M(7561, J$.R(7497, 'server', server, 0), 'once', 0)(J$.T(7505, 'error', 21, false), J$.F(7553, J$.R(7513, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7521, 'self', self, 0), J$.G(7537, J$.R(7529, 'self', self, 0), 's', 0), J$.R(7545, 'server', server, 0))));
                                J$.X1(7649, J$.M(7641, J$.R(7577, 'server', server, 0), 'once', 0)(J$.T(7585, 'close', 21, false), J$.F(7633, J$.R(7593, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7601, 'self', self, 0), J$.G(7617, J$.R(7609, 'self', self, 0), 's', 0), J$.R(7625, 'server', server, 0))));
                                J$.X1(7729, J$.M(7721, J$.R(7657, 'server', server, 0), 'once', 0)(J$.T(7665, 'timeout', 21, false), J$.F(7713, J$.R(7673, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7681, 'self', self, 0), J$.G(7697, J$.R(7689, 'self', self, 0), 's', 0), J$.R(7705, 'server', server, 0))));
                                J$.X1(7809, J$.M(7801, J$.R(7737, 'server', server, 0), 'once', 0)(J$.T(7745, 'parseError', 21, false), J$.F(7793, J$.R(7753, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(7761, 'self', self, 0), J$.G(7777, J$.R(7769, 'self', self, 0), 's', 0), J$.R(7785, 'server', server, 0))));
                                J$.X1(7889, J$.M(7881, J$.R(7817, 'server', server, 0), 'once', 0)(J$.T(7825, 'connect', 21, false), J$.F(7873, J$.R(7833, 'connectHandler', connectHandler, 1), 0)(J$.R(7841, 'self', self, 0), J$.G(7857, J$.R(7849, 'self', self, 0), 's', 0), J$.T(7865, 'connect', 21, false))));
                                if (J$.X1(21737, J$.C(264, J$.M(7921, J$.G(7913, J$.G(7905, J$.R(7897, 'self', self, 0), 's', 0), 'logger', 0), 'isInfo', 0)())))
                                    J$.X1(8001, J$.M(7993, J$.G(7945, J$.G(7937, J$.R(7929, 'self', self, 0), 's', 0), 'logger', 0), 'info', 0)(J$.F(7985, J$.R(7953, 'f', f, 1), 0)(J$.T(7961, 'connecting to server %s', 21, false), J$.G(7977, J$.R(7969, 'server', server, 0), 'name', 0))));
                                J$.X1(8025, J$.M(8017, J$.R(8009, 'server', server, 0), 'connect', 0)());
                            }
                        } catch (J$e) {
                            J$.Ex(21753, J$e);
                        } finally {
                            if (J$.Fr(21761))
                                continue jalangiLabel3422;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8033), 0));
            J$.X1(8337, J$.P(8329, J$.G(8121, J$.R(8113, 'Mongos', Mongos, 1), 'prototype', 0), 'destroy', J$.T(8321, function (emitClose) {
                jalangiLabel3423:
                    while (true) {
                        try {
                            J$.Fe(8297, arguments.callee, this, arguments);
                            arguments = J$.N(8305, 'arguments', arguments, 4);
                            emitClose = J$.N(8313, 'emitClose', emitClose, 4);
                            J$.X1(8161, J$.P(8153, J$.G(8137, J$.R(8129, 'this', this, 0), 's', 0), 'state', J$.R(8145, 'DESTROYED', DESTROYED, 1), 0));
                            if (J$.X1(21769, J$.C(288, J$.C(280, J$.R(8169, 'emitClose', emitClose, 0)) ? J$.B(274, '>', J$.G(8201, J$.M(8193, J$.R(8177, 'self', self, 2), 'listeners', 0)(J$.T(8185, 'close', 21, false)), 'length', 0), J$.T(8209, 0, 22, false), 0) : J$._())))
                                J$.X1(8249, J$.M(8241, J$.R(8217, 'self', self, 2), 'emit', 0)(J$.T(8225, 'close', 21, false), J$.R(8233, 'self', self, 2)));
                            J$.X1(8289, J$.M(8281, J$.G(8273, J$.G(8265, J$.R(8257, 'this', this, 0), 's', 0), 'mongosState', 0), 'destroy', 0)());
                        } catch (J$e) {
                            J$.Ex(21777, J$e);
                        } finally {
                            if (J$.Fr(21785))
                                continue jalangiLabel3423;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8297), 0));
            J$.X1(8441, J$.P(8433, J$.G(8353, J$.R(8345, 'Mongos', Mongos, 1), 'prototype', 0), 'isConnected', J$.T(8425, function () {
                jalangiLabel3424:
                    while (true) {
                        try {
                            J$.Fe(8409, arguments.callee, this, arguments);
                            arguments = J$.N(8417, 'arguments', arguments, 4);
                            return J$.X1(8401, J$.Rt(8393, J$.M(8385, J$.G(8377, J$.G(8369, J$.R(8361, 'this', this, 0), 's', 0), 'mongosState', 0), 'isConnected', 0)()));
                        } catch (J$e) {
                            J$.Ex(21793, J$e);
                        } finally {
                            if (J$.Fr(21801))
                                continue jalangiLabel3424;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8409), 0));
            J$.X1(8545, J$.P(8537, J$.G(8457, J$.R(8449, 'Mongos', Mongos, 1), 'prototype', 0), 'isDestroyed', J$.T(8529, function () {
                jalangiLabel3425:
                    while (true) {
                        try {
                            J$.Fe(8513, arguments.callee, this, arguments);
                            arguments = J$.N(8521, 'arguments', arguments, 4);
                            return J$.X1(8505, J$.Rt(8497, J$.B(282, '==', J$.G(8481, J$.G(8473, J$.R(8465, 'this', this, 0), 's', 0), 'state', 0), J$.R(8489, 'DESTROYED', DESTROYED, 1), 0)));
                        } catch (J$e) {
                            J$.Ex(21809, J$e);
                        } finally {
                            if (J$.Fr(21817))
                                continue jalangiLabel3425;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8513), 0));
            J$.X1(9057, J$.P(9049, J$.G(8561, J$.R(8553, 'Mongos', Mongos, 1), 'prototype', 0), 'insert', J$.T(9041, function (ns, ops, options, callback) {
                jalangiLabel3426:
                    while (true) {
                        try {
                            J$.Fe(8993, arguments.callee, this, arguments);
                            arguments = J$.N(9001, 'arguments', arguments, 4);
                            ns = J$.N(9009, 'ns', ns, 4);
                            ops = J$.N(9017, 'ops', ops, 4);
                            options = J$.N(9025, 'options', options, 4);
                            callback = J$.N(9033, 'callback', callback, 4);
                            if (J$.X1(21825, J$.C(296, J$.B(298, '==', J$.U(290, 'typeof', J$.R(8569, 'options', options, 0)), J$.T(8577, 'function', 21, false), 0))))
                                J$.X1(8625, (J$.X1(8617, callback = J$.W(8593, 'callback', J$.R(8585, 'options', options, 0), callback, 0)), options = J$.W(8609, 'options', J$.T(8601, {}, 11, false), options, 0)));
                            if (J$.X1(21833, J$.C(304, J$.B(306, '==', J$.G(8649, J$.G(8641, J$.R(8633, 'this', this, 0), 's', 0), 'state', 0), J$.R(8657, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(8729, J$.Rt(8721, J$.F(8713, J$.R(8665, 'callback', callback, 0), 0)(J$.F(8705, J$.R(8673, 'MongoError', MongoError, 1), 1)(J$.F(8697, J$.R(8681, 'f', f, 1), 0)(J$.T(8689, 'topology was destroyed', 21, false))))));
                            if (J$.X1(21841, J$.C(320, J$.C(312, J$.U(314, '!', J$.M(8745, J$.R(8737, 'this', this, 0), 'isConnected', 0)())) ? J$.B(322, '!=', J$.G(8769, J$.G(8761, J$.R(8753, 'this', this, 0), 's', 0), 'disconnectHandler', 0), J$.T(8777, null, 25, false), 0) : J$._()))) {
                                J$.X1(8817, callback = J$.W(8809, 'callback', J$.F(8801, J$.R(8785, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(8793, 'callback', callback, 0)), callback, 0));
                                return J$.X1(8905, J$.Rt(8897, J$.M(8889, J$.G(8841, J$.G(8833, J$.R(8825, 'this', this, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(8849, 'insert', 21, false), J$.R(8857, 'ns', ns, 0), J$.R(8865, 'ops', ops, 0), J$.R(8873, 'options', options, 0), J$.R(8881, 'callback', callback, 0))));
                            }
                            J$.X1(8985, J$.F(8977, J$.R(8913, 'executeWriteOperation', executeWriteOperation, 1), 0)(J$.G(8929, J$.R(8921, 'this', this, 0), 's', 0), J$.T(8937, 'insert', 21, false), J$.R(8945, 'ns', ns, 0), J$.R(8953, 'ops', ops, 0), J$.R(8961, 'options', options, 0), J$.R(8969, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(21849, J$e);
                        } finally {
                            if (J$.Fr(21857))
                                continue jalangiLabel3426;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8993), 0));
            J$.X1(9569, J$.P(9561, J$.G(9073, J$.R(9065, 'Mongos', Mongos, 1), 'prototype', 0), 'update', J$.T(9553, function (ns, ops, options, callback) {
                jalangiLabel3427:
                    while (true) {
                        try {
                            J$.Fe(9505, arguments.callee, this, arguments);
                            arguments = J$.N(9513, 'arguments', arguments, 4);
                            ns = J$.N(9521, 'ns', ns, 4);
                            ops = J$.N(9529, 'ops', ops, 4);
                            options = J$.N(9537, 'options', options, 4);
                            callback = J$.N(9545, 'callback', callback, 4);
                            if (J$.X1(21865, J$.C(328, J$.B(338, '==', J$.U(330, 'typeof', J$.R(9081, 'options', options, 0)), J$.T(9089, 'function', 21, false), 0))))
                                J$.X1(9137, (J$.X1(9129, callback = J$.W(9105, 'callback', J$.R(9097, 'options', options, 0), callback, 0)), options = J$.W(9121, 'options', J$.T(9113, {}, 11, false), options, 0)));
                            if (J$.X1(21873, J$.C(336, J$.B(346, '==', J$.G(9161, J$.G(9153, J$.R(9145, 'this', this, 0), 's', 0), 'state', 0), J$.R(9169, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(9241, J$.Rt(9233, J$.F(9225, J$.R(9177, 'callback', callback, 0), 0)(J$.F(9217, J$.R(9185, 'MongoError', MongoError, 1), 1)(J$.F(9209, J$.R(9193, 'f', f, 1), 0)(J$.T(9201, 'topology was destroyed', 21, false))))));
                            if (J$.X1(21881, J$.C(352, J$.C(344, J$.U(354, '!', J$.M(9257, J$.R(9249, 'this', this, 0), 'isConnected', 0)())) ? J$.B(362, '!=', J$.G(9281, J$.G(9273, J$.R(9265, 'this', this, 0), 's', 0), 'disconnectHandler', 0), J$.T(9289, null, 25, false), 0) : J$._()))) {
                                J$.X1(9329, callback = J$.W(9321, 'callback', J$.F(9313, J$.R(9297, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(9305, 'callback', callback, 0)), callback, 0));
                                return J$.X1(9417, J$.Rt(9409, J$.M(9401, J$.G(9353, J$.G(9345, J$.R(9337, 'this', this, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(9361, 'update', 21, false), J$.R(9369, 'ns', ns, 0), J$.R(9377, 'ops', ops, 0), J$.R(9385, 'options', options, 0), J$.R(9393, 'callback', callback, 0))));
                            }
                            J$.X1(9497, J$.F(9489, J$.R(9425, 'executeWriteOperation', executeWriteOperation, 1), 0)(J$.G(9441, J$.R(9433, 'this', this, 0), 's', 0), J$.T(9449, 'update', 21, false), J$.R(9457, 'ns', ns, 0), J$.R(9465, 'ops', ops, 0), J$.R(9473, 'options', options, 0), J$.R(9481, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(21889, J$e);
                        } finally {
                            if (J$.Fr(21897))
                                continue jalangiLabel3427;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9505), 0));
            J$.X1(10081, J$.P(10073, J$.G(9585, J$.R(9577, 'Mongos', Mongos, 1), 'prototype', 0), 'remove', J$.T(10065, function (ns, ops, options, callback) {
                jalangiLabel3428:
                    while (true) {
                        try {
                            J$.Fe(10017, arguments.callee, this, arguments);
                            arguments = J$.N(10025, 'arguments', arguments, 4);
                            ns = J$.N(10033, 'ns', ns, 4);
                            ops = J$.N(10041, 'ops', ops, 4);
                            options = J$.N(10049, 'options', options, 4);
                            callback = J$.N(10057, 'callback', callback, 4);
                            if (J$.X1(21905, J$.C(360, J$.B(378, '==', J$.U(370, 'typeof', J$.R(9593, 'options', options, 0)), J$.T(9601, 'function', 21, false), 0))))
                                J$.X1(9649, (J$.X1(9641, callback = J$.W(9617, 'callback', J$.R(9609, 'options', options, 0), callback, 0)), options = J$.W(9633, 'options', J$.T(9625, {}, 11, false), options, 0)));
                            if (J$.X1(21913, J$.C(368, J$.B(386, '==', J$.G(9673, J$.G(9665, J$.R(9657, 'this', this, 0), 's', 0), 'state', 0), J$.R(9681, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(9753, J$.Rt(9745, J$.F(9737, J$.R(9689, 'callback', callback, 0), 0)(J$.F(9729, J$.R(9697, 'MongoError', MongoError, 1), 1)(J$.F(9721, J$.R(9705, 'f', f, 1), 0)(J$.T(9713, 'topology was destroyed', 21, false))))));
                            if (J$.X1(21921, J$.C(384, J$.C(376, J$.U(394, '!', J$.M(9769, J$.R(9761, 'this', this, 0), 'isConnected', 0)())) ? J$.B(402, '!=', J$.G(9793, J$.G(9785, J$.R(9777, 'this', this, 0), 's', 0), 'disconnectHandler', 0), J$.T(9801, null, 25, false), 0) : J$._()))) {
                                J$.X1(9841, callback = J$.W(9833, 'callback', J$.F(9825, J$.R(9809, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(9817, 'callback', callback, 0)), callback, 0));
                                return J$.X1(9929, J$.Rt(9921, J$.M(9913, J$.G(9865, J$.G(9857, J$.R(9849, 'this', this, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(9873, 'remove', 21, false), J$.R(9881, 'ns', ns, 0), J$.R(9889, 'ops', ops, 0), J$.R(9897, 'options', options, 0), J$.R(9905, 'callback', callback, 0))));
                            }
                            J$.X1(10009, J$.F(10001, J$.R(9937, 'executeWriteOperation', executeWriteOperation, 1), 0)(J$.G(9953, J$.R(9945, 'this', this, 0), 's', 0), J$.T(9961, 'remove', 21, false), J$.R(9969, 'ns', ns, 0), J$.R(9977, 'ops', ops, 0), J$.R(9985, 'options', options, 0), J$.R(9993, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(21929, J$e);
                        } finally {
                            if (J$.Fr(21937))
                                continue jalangiLabel3428;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10017), 0));
            J$.X1(11513, J$.P(11505, J$.G(10097, J$.R(10089, 'Mongos', Mongos, 1), 'prototype', 0), 'command', J$.T(11497, function (ns, cmd, options, callback) {
                jalangiLabel3431:
                    while (true) {
                        try {
                            J$.Fe(11401, arguments.callee, this, arguments);
                            arguments = J$.N(11409, 'arguments', arguments, 4);
                            ns = J$.N(11417, 'ns', ns, 4);
                            cmd = J$.N(11425, 'cmd', cmd, 4);
                            options = J$.N(11433, 'options', options, 4);
                            callback = J$.N(11441, 'callback', callback, 4);
                            J$.N(11449, 'self', self, 0);
                            J$.N(11457, 'server', server, 0);
                            J$.N(11465, 'servers', servers, 0);
                            J$.N(11473, 'count', count, 0);
                            J$.N(11481, 'cmdErr', cmdErr, 0);
                            J$.N(11489, 'i', i, 0);
                            if (J$.X1(21945, J$.C(392, J$.B(418, '==', J$.U(410, 'typeof', J$.R(10105, 'options', options, 0)), J$.T(10113, 'function', 21, false), 0))))
                                J$.X1(10161, (J$.X1(10153, callback = J$.W(10129, 'callback', J$.R(10121, 'options', options, 0), callback, 0)), options = J$.W(10145, 'options', J$.T(10137, {}, 11, false), options, 0)));
                            if (J$.X1(21953, J$.C(400, J$.B(426, '==', J$.G(10185, J$.G(10177, J$.R(10169, 'this', this, 0), 's', 0), 'state', 0), J$.R(10193, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(10265, J$.Rt(10257, J$.F(10249, J$.R(10201, 'callback', callback, 0), 0)(J$.F(10241, J$.R(10209, 'MongoError', MongoError, 1), 1)(J$.F(10233, J$.R(10217, 'f', f, 1), 0)(J$.T(10225, 'topology was destroyed', 21, false))))));
                            var self = J$.X1(10289, J$.W(10281, 'self', J$.R(10273, 'this', this, 0), self, 1));
                            if (J$.X1(21961, J$.C(416, J$.C(408, J$.U(434, '!', J$.M(10305, J$.R(10297, 'self', self, 0), 'isConnected', 0)())) ? J$.B(442, '!=', J$.G(10329, J$.G(10321, J$.R(10313, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(10337, null, 25, false), 0) : J$._()))) {
                                J$.X1(10377, callback = J$.W(10369, 'callback', J$.F(10361, J$.R(10345, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(10353, 'callback', callback, 0)), callback, 0));
                                return J$.X1(10465, J$.Rt(10457, J$.M(10449, J$.G(10401, J$.G(10393, J$.R(10385, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(10409, 'command', 21, false), J$.R(10417, 'ns', ns, 0), J$.R(10425, 'cmd', cmd, 0), J$.R(10433, 'options', options, 0), J$.R(10441, 'callback', callback, 0))));
                            }
                            var server = J$.X1(10489, J$.W(10481, 'server', J$.T(10473, null, 25, false), server, 1));
                            J$.X1(10521, options = J$.W(10513, 'options', J$.C(424, J$.R(10497, 'options', options, 0)) ? J$._() : J$.T(10505, {}, 11, false), options, 0));
                            if (J$.X1(22017, J$.C(456, J$.G(10537, J$.R(10529, 'options', options, 0), 'onAll', 0)))) {
                                var servers = J$.X1(10585, J$.W(10577, 'servers', J$.M(10569, J$.G(10561, J$.G(10553, J$.R(10545, 'self', self, 0), 's', 0), 'mongosState', 0), 'getAll', 0)(), servers, 1));
                                var count = J$.X1(10617, J$.W(10609, 'count', J$.G(10601, J$.R(10593, 'servers', servers, 0), 'length', 0), count, 1));
                                var cmdErr = J$.X1(10641, J$.W(10633, 'cmdErr', J$.T(10625, null, 25, false), cmdErr, 1));
                                for (var i = J$.X1(10665, J$.W(10657, 'i', J$.T(10649, 0, 22, false), i, 1)); J$.X1(22001, J$.C(448, J$.B(450, '<', J$.R(10673, 'i', i, 0), J$.G(10689, J$.R(10681, 'servers', servers, 0), 'length', 0), 0))); J$.X1(22009, J$.B(474, '-', i = J$.W(10713, 'i', J$.B(466, '+', J$.U(458, '+', J$.R(10705, 'i', i, 0)), J$.T(10697, 1, 22, false), 0), i, 0), J$.T(10721, 1, 22, false), 0))) {
                                    J$.X1(10969, J$.M(10961, J$.G(10745, J$.R(10729, 'servers', servers, 0), J$.R(10737, 'i', i, 0), 4), 'command', 0)(J$.R(10753, 'ns', ns, 0), J$.R(10761, 'cmd', cmd, 0), J$.R(10769, 'options', options, 0), J$.T(10953, function (err, r) {
                                        jalangiLabel3429:
                                            while (true) {
                                                try {
                                                    J$.Fe(10921, arguments.callee, this, arguments);
                                                    arguments = J$.N(10929, 'arguments', arguments, 4);
                                                    err = J$.N(10937, 'err', err, 4);
                                                    r = J$.N(10945, 'r', r, 4);
                                                    J$.X1(10801, count = J$.W(10793, 'count', J$.B(482, '-', J$.R(10777, 'count', count, 0), J$.T(10785, 1, 22, false), 0), count, 0));
                                                    if (J$.X1(21977, J$.C(440, J$.B(490, '==', J$.R(10809, 'count', count, 0), J$.T(10817, 0, 22, false), 0)))) {
                                                        if (J$.X1(21969, J$.C(432, J$.G(10833, J$.R(10825, 'cmd', cmd, 0), 'logout', 0))))
                                                            J$.X1(10873, J$.F(10865, J$.R(10841, 'clearCredentials', clearCredentials, 1), 0)(J$.R(10849, 'state', state, 2), J$.R(10857, 'ns', ns, 0)));
                                                        J$.X1(10913, J$.F(10905, J$.R(10881, 'callback', callback, 0), 0)(J$.R(10889, 'err', err, 0), J$.R(10897, 'r', r, 0)));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(21985, J$e);
                                                } finally {
                                                    if (J$.Fr(21993))
                                                        continue jalangiLabel3429;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 10921)));
                                }
                                return J$.X1(10985, J$.Rt(10977, undefined));
                            }
                            try {
                                J$.X1(11081, server = J$.W(11073, 'server', J$.M(11065, J$.G(11009, J$.G(11001, J$.R(10993, 'self', self, 0), 's', 0), 'mongosState', 0), 'pickServer', 0)(J$.X1(22025, J$.C(464, J$.G(11025, J$.R(11017, 'options', options, 0), 'writeConcern', 0))) ? J$.G(11041, J$.R(11033, 'ReadPreference', ReadPreference, 1), 'primary', 0) : J$.G(11057, J$.R(11049, 'options', options, 0), 'readPreference', 0)), server, 0));
                            } catch (err) {
                                err = J$.N(11129, 'err', err, 1);
                                return J$.X1(11121, J$.Rt(11113, J$.F(11105, J$.R(11089, 'callback', callback, 0), 0)(J$.R(11097, 'err', err, 0))));
                            }
                            if (J$.X1(22033, J$.C(472, J$.B(498, '==', J$.R(11137, 'server', server, 0), J$.T(11145, null, 25, false), 0))))
                                return J$.X1(11201, J$.Rt(11193, J$.F(11185, J$.R(11153, 'callback', callback, 0), 0)(J$.F(11177, J$.R(11161, 'MongoError', MongoError, 1), 1)(J$.T(11169, 'no mongos found', 21, false)))));
                            J$.X1(11393, J$.M(11385, J$.R(11209, 'server', server, 0), 'command', 0)(J$.R(11217, 'ns', ns, 0), J$.R(11225, 'cmd', cmd, 0), J$.R(11233, 'options', options, 0), J$.T(11377, function (err, r) {
                                jalangiLabel3430:
                                    while (true) {
                                        try {
                                            J$.Fe(11345, arguments.callee, this, arguments);
                                            arguments = J$.N(11353, 'arguments', arguments, 4);
                                            err = J$.N(11361, 'err', err, 4);
                                            r = J$.N(11369, 'r', r, 4);
                                            if (J$.X1(22041, J$.C(480, J$.G(11249, J$.R(11241, 'cmd', cmd, 0), 'logout', 0))))
                                                J$.X1(11297, J$.F(11289, J$.R(11257, 'clearCredentials', clearCredentials, 1), 0)(J$.G(11273, J$.R(11265, 'self', self, 0), 's', 0), J$.R(11281, 'ns', ns, 0)));
                                            J$.X1(11337, J$.F(11329, J$.R(11305, 'callback', callback, 0), 0)(J$.R(11313, 'err', err, 0), J$.R(11321, 'r', r, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22049, J$e);
                                        } finally {
                                            if (J$.Fr(22057))
                                                continue jalangiLabel3430;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11345)));
                        } catch (J$e) {
                            J$.Ex(22065, J$e);
                        } finally {
                            if (J$.Fr(22073))
                                continue jalangiLabel3431;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11401), 0));
            J$.X1(11801, J$.P(11793, J$.G(11529, J$.R(11521, 'Mongos', Mongos, 1), 'prototype', 0), 'cursor', J$.T(11785, function (ns, cmd, cursorOptions) {
                jalangiLabel3432:
                    while (true) {
                        try {
                            J$.Fe(11737, arguments.callee, this, arguments);
                            arguments = J$.N(11745, 'arguments', arguments, 4);
                            ns = J$.N(11753, 'ns', ns, 4);
                            cmd = J$.N(11761, 'cmd', cmd, 4);
                            cursorOptions = J$.N(11769, 'cursorOptions', cursorOptions, 4);
                            J$.N(11777, 'FinalCursor', FinalCursor, 0);
                            J$.X1(11561, cursorOptions = J$.W(11553, 'cursorOptions', J$.C(488, J$.R(11537, 'cursorOptions', cursorOptions, 0)) ? J$._() : J$.T(11545, {}, 11, false), cursorOptions, 0));
                            var FinalCursor = J$.X1(11617, J$.W(11609, 'FinalCursor', J$.C(496, J$.G(11577, J$.R(11569, 'cursorOptions', cursorOptions, 0), 'cursorFactory', 0)) ? J$._() : J$.G(11601, J$.G(11593, J$.R(11585, 'this', this, 0), 's', 0), 'Cursor', 0), FinalCursor, 1));
                            return J$.X1(11729, J$.Rt(11721, J$.F(11713, J$.R(11625, 'FinalCursor', FinalCursor, 0), 1)(J$.G(11649, J$.G(11641, J$.R(11633, 'this', this, 0), 's', 0), 'bson', 0), J$.R(11657, 'ns', ns, 0), J$.R(11665, 'cmd', cmd, 0), J$.R(11673, 'cursorOptions', cursorOptions, 0), J$.R(11681, 'this', this, 0), J$.G(11705, J$.G(11697, J$.R(11689, 'this', this, 0), 's', 0), 'options', 0))));
                        } catch (J$e) {
                            J$.Ex(22081, J$e);
                        } finally {
                            if (J$.Fr(22089))
                                continue jalangiLabel3432;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11737), 0));
            J$.X1(13265, J$.P(13257, J$.G(11817, J$.R(11809, 'Mongos', Mongos, 1), 'prototype', 0), 'auth', J$.T(13249, function (mechanism, db) {
                jalangiLabel3434:
                    while (true) {
                        try {
                            J$.Fe(13129, arguments.callee, this, arguments);
                            arguments = J$.N(13137, 'arguments', arguments, 4);
                            mechanism = J$.N(13145, 'mechanism', mechanism, 4);
                            db = J$.N(13153, 'db', db, 4);
                            J$.N(13161, 'allArgs', allArgs, 0);
                            J$.N(13169, 'self', self, 0);
                            J$.N(13177, 'args', args, 0);
                            J$.N(13185, 'callback', callback, 0);
                            J$.N(13193, 'servers', servers, 0);
                            J$.N(13201, 'count', count, 0);
                            J$.N(13209, 'authenticated', authenticated, 0);
                            J$.N(13217, 'authErr', authErr, 0);
                            J$.N(13225, 'server', server, 0);
                            J$.N(13233, 'argsWithoutCallback', argsWithoutCallback, 0);
                            J$.N(13241, 'finalArguments', finalArguments, 0);
                            var allArgs = J$.X1(11897, J$.W(11889, 'allArgs', J$.M(11881, J$.M(11865, J$.G(11841, J$.G(11833, J$.R(11825, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(11849, 'arguments', arguments, 2), J$.T(11857, 0, 22, false)), 'slice', 0)(J$.T(11873, 0, 22, false)), allArgs, 1));
                            var self = J$.X1(11921, J$.W(11913, 'self', J$.R(11905, 'this', this, 0), self, 1));
                            var args = J$.X1(11985, J$.W(11977, 'args', J$.M(11969, J$.G(11945, J$.G(11937, J$.R(11929, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(11953, 'arguments', arguments, 2), J$.T(11961, 2, 22, false)), args, 1));
                            var callback = J$.X1(12017, J$.W(12009, 'callback', J$.M(12001, J$.R(11993, 'args', args, 0), 'pop', 0)(), callback, 1));
                            if (J$.X1(22097, J$.C(512, J$.C(504, J$.B(506, '==', J$.G(12057, J$.G(12041, J$.G(12033, J$.R(12025, 'this', this, 0), 's', 0), 'authProviders', 0), J$.R(12049, 'mechanism', mechanism, 0), 4), J$.T(12065, null, 25, false), 0)) ? J$.B(514, '!=', J$.R(12073, 'mechanism', mechanism, 0), J$.T(12081, 'default', 21, false), 0) : J$._())))
                                throw J$.X1(12145, J$.Th(12137, J$.F(12129, J$.R(12089, 'MongoError', MongoError, 1), 1)(J$.F(12121, J$.R(12097, 'f', f, 1), 0)(J$.T(12105, 'auth provider %s does not exist', 21, false), J$.R(12113, 'mechanism', mechanism, 0)))));
                            var servers = J$.X1(12209, J$.W(12201, 'servers', J$.M(12193, J$.M(12177, J$.G(12169, J$.G(12161, J$.R(12153, 'this', this, 0), 's', 0), 'mongosState', 0), 'connectedServers', 0)(), 'slice', 0)(J$.T(12185, 0, 22, false)), servers, 1));
                            var count = J$.X1(12241, J$.W(12233, 'count', J$.G(12225, J$.R(12217, 'servers', servers, 0), 'length', 0), count, 1));
                            var authenticated = J$.X1(12265, J$.W(12257, 'authenticated', J$.T(12249, true, 23, false), authenticated, 1));
                            var authErr = J$.X1(12289, J$.W(12281, 'authErr', J$.T(12273, null, 25, false), authErr, 1));
                            J$.X1(12329, J$.P(12321, J$.G(12305, J$.R(12297, 'this', this, 0), 's', 0), 'authInProgress', J$.T(12313, true, 23, false), 0));
                            while (J$.X1(22169, J$.C(568, J$.B(522, '>', J$.G(12345, J$.R(12337, 'servers', servers, 0), 'length', 0), J$.T(12353, 0, 22, false), 0)))) {
                                var server = J$.X1(12385, J$.W(12377, 'server', J$.M(12369, J$.R(12361, 'servers', servers, 0), 'shift', 0)(), server, 1));
                                var argsWithoutCallback = J$.X1(12457, J$.W(12449, 'argsWithoutCallback', J$.M(12441, J$.T(12409, [
                                    J$.R(12393, 'mechanism', mechanism, 0),
                                    J$.R(12401, 'db', db, 0)
                                ], 10, false), 'concat', 0)(J$.M(12433, J$.R(12417, 'args', args, 0), 'slice', 0)(J$.T(12425, 0, 22, false))), argsWithoutCallback, 1));
                                var finalArguments = J$.X1(13073, J$.W(13065, 'finalArguments', J$.M(13057, J$.R(12465, 'argsWithoutCallback', argsWithoutCallback, 0), 'concat', 0)(J$.T(13049, [J$.T(13041, function (err, r) {
                                        jalangiLabel3433:
                                            while (true) {
                                                try {
                                                    J$.Fe(13009, arguments.callee, this, arguments);
                                                    arguments = J$.N(13017, 'arguments', arguments, 4);
                                                    err = J$.N(13025, 'err', err, 4);
                                                    r = J$.N(13033, 'r', r, 4);
                                                    J$.X1(12497, count = J$.W(12489, 'count', J$.B(530, '-', J$.R(12473, 'count', count, 0), J$.T(12481, 1, 22, false), 0), count, 0));
                                                    if (J$.X1(22105, J$.C(520, J$.R(12505, 'err', err, 0))))
                                                        J$.X1(12529, authErr = J$.W(12521, 'authErr', J$.R(12513, 'err', err, 0), authErr, 0));
                                                    if (J$.X1(22113, J$.C(528, J$.U(538, '!', J$.R(12537, 'r', r, 0)))))
                                                        J$.X1(12561, authenticated = J$.W(12553, 'authenticated', J$.T(12545, false, 23, false), authenticated, 0));
                                                    if (J$.X1(22145, J$.C(560, J$.B(546, '==', J$.R(12569, 'count', count, 0), J$.T(12577, 0, 22, false), 0)))) {
                                                        if (J$.X1(22121, J$.C(536, J$.B(554, '>', J$.G(12609, J$.G(12601, J$.G(12593, J$.R(12585, 'self', self, 0), 's', 0), 'authInProgressServers', 0), 'length', 0), J$.T(12617, 0, 22, false), 0)))) {
                                                            J$.X1(12657, J$.P(12649, J$.G(12633, J$.R(12625, 'self', self, 0), 's', 0), 'authInProgressServers', J$.T(12641, [], 10, false), 0));
                                                            return J$.X1(12769, J$.Rt(12761, J$.M(12753, J$.G(12673, J$.R(12665, 'self', self, 0), 'auth', 0), 'apply', 0)(J$.R(12681, 'self', self, 0), J$.M(12745, J$.M(12721, J$.T(12705, [
                                                                J$.R(12689, 'mechanism', mechanism, 0),
                                                                J$.R(12697, 'db', db, 0)
                                                            ], 10, false), 'concat', 0)(J$.R(12713, 'args', args, 0)), 'concat', 0)(J$.T(12737, [J$.R(12729, 'callback', callback, 0)], 10, false)))));
                                                        }
                                                        J$.X1(12809, J$.P(12801, J$.G(12785, J$.R(12777, 'self', self, 0), 's', 0), 'authInProgress', J$.T(12793, false, 23, false), 0));
                                                        if (J$.X1(22129, J$.C(544, J$.B(562, '==', J$.R(12817, 'authErr', authErr, 0), J$.T(12825, null, 25, false), 0))))
                                                            J$.X1(12881, J$.F(12873, J$.R(12833, 'addCredentials', addCredentials, 1), 0)(J$.G(12849, J$.R(12841, 'self', self, 0), 's', 0), J$.R(12857, 'db', db, 0), J$.R(12865, 'argsWithoutCallback', argsWithoutCallback, 0)));
                                                        if (J$.X1(22137, J$.C(552, J$.R(12889, 'authErr', authErr, 0))))
                                                            return J$.X1(12937, J$.Rt(12929, J$.F(12921, J$.R(12897, 'callback', callback, 0), 0)(J$.R(12905, 'authErr', authErr, 0), J$.T(12913, false, 23, false))));
                                                        J$.X1(13001, J$.F(12993, J$.R(12945, 'callback', callback, 0), 0)(J$.T(12953, null, 25, false), J$.F(12985, J$.R(12961, 'Session', Session, 1), 1)(J$.T(12969, {}, 11, false), J$.R(12977, 'self', self, 0))));
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(22153, J$e);
                                                } finally {
                                                    if (J$.Fr(22161))
                                                        continue jalangiLabel3433;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 13009)], 10, false)), finalArguments, 1));
                                J$.X1(13121, J$.M(13113, J$.G(13089, J$.R(13081, 'server', server, 0), 'auth', 0), 'apply', 0)(J$.R(13097, 'server', server, 0), J$.R(13105, 'finalArguments', finalArguments, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(22177, J$e);
                        } finally {
                            if (J$.Fr(22185))
                                continue jalangiLabel3434;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13129), 0));
            J$.X1(13465, J$.P(13457, J$.G(13281, J$.R(13273, 'Mongos', Mongos, 1), 'prototype', 0), 'addReadPreferenceStrategy', J$.T(13449, function (name, strategy) {
                jalangiLabel3435:
                    while (true) {
                        try {
                            J$.Fe(13417, arguments.callee, this, arguments);
                            arguments = J$.N(13425, 'arguments', arguments, 4);
                            name = J$.N(13433, 'name', name, 4);
                            strategy = J$.N(13441, 'strategy', strategy, 4);
                            if (J$.X1(22193, J$.C(576, J$.B(570, '==', J$.G(13305, J$.G(13297, J$.R(13289, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(13313, null, 25, false), 0))))
                                J$.X1(13353, J$.P(13345, J$.G(13329, J$.R(13321, 'this', this, 0), 's', 0), 'readPreferenceStrategies', J$.T(13337, {}, 11, false), 0));
                            J$.X1(13409, J$.P(13401, J$.G(13377, J$.G(13369, J$.R(13361, 'this', this, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(13385, 'name', name, 0), J$.R(13393, 'strategy', strategy, 0), 2));
                        } catch (J$e) {
                            J$.Ex(22201, J$e);
                        } finally {
                            if (J$.Fr(22209))
                                continue jalangiLabel3435;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13417), 0));
            J$.X1(13593, J$.P(13585, J$.G(13481, J$.R(13473, 'Mongos', Mongos, 1), 'prototype', 0), 'addAuthProvider', J$.T(13577, function (name, provider) {
                jalangiLabel3436:
                    while (true) {
                        try {
                            J$.Fe(13545, arguments.callee, this, arguments);
                            arguments = J$.N(13553, 'arguments', arguments, 4);
                            name = J$.N(13561, 'name', name, 4);
                            provider = J$.N(13569, 'provider', provider, 4);
                            J$.X1(13537, J$.P(13529, J$.G(13505, J$.G(13497, J$.R(13489, 'this', this, 0), 's', 0), 'authProviders', 0), J$.R(13513, 'name', name, 0), J$.R(13521, 'provider', provider, 0), 2));
                        } catch (J$e) {
                            J$.Ex(22217, J$e);
                        } finally {
                            if (J$.Fr(22225))
                                continue jalangiLabel3436;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13545), 0));
            J$.X1(13833, J$.P(13825, J$.G(13609, J$.R(13601, 'Mongos', Mongos, 1), 'prototype', 0), 'getConnection', J$.T(13817, function (options) {
                jalangiLabel3437:
                    while (true) {
                        try {
                            J$.Fe(13785, arguments.callee, this, arguments);
                            arguments = J$.N(13793, 'arguments', arguments, 4);
                            options = J$.N(13801, 'options', options, 4);
                            J$.N(13809, 'server', server, 0);
                            J$.X1(13641, options = J$.W(13633, 'options', J$.C(584, J$.R(13617, 'options', options, 0)) ? J$._() : J$.T(13625, {}, 11, false), options, 0));
                            var server = J$.X1(13705, J$.W(13697, 'server', J$.M(13689, J$.G(13665, J$.G(13657, J$.R(13649, 'this', this, 0), 's', 0), 'mongosState', 0), 'pickServer', 0)(J$.G(13681, J$.R(13673, 'options', options, 0), 'readPreference', 0)), server, 1));
                            if (J$.X1(22233, J$.C(592, J$.B(578, '==', J$.R(13713, 'server', server, 0), J$.T(13721, null, 25, false), 0))))
                                return J$.X1(13745, J$.Rt(13737, J$.T(13729, null, 25, false)));
                            return J$.X1(13777, J$.Rt(13769, J$.M(13761, J$.R(13753, 'server', server, 0), 'getConnection', 0)()));
                        } catch (J$e) {
                            J$.Ex(22241, J$e);
                        } finally {
                            if (J$.Fr(22249))
                                continue jalangiLabel3437;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13785), 0));
            J$.X1(13993, J$.P(13985, J$.G(13849, J$.R(13841, 'Mongos', Mongos, 1), 'prototype', 0), 'getServer', J$.T(13977, function (options) {
                jalangiLabel3438:
                    while (true) {
                        try {
                            J$.Fe(13953, arguments.callee, this, arguments);
                            arguments = J$.N(13961, 'arguments', arguments, 4);
                            options = J$.N(13969, 'options', options, 4);
                            J$.X1(13881, options = J$.W(13873, 'options', J$.C(600, J$.R(13857, 'options', options, 0)) ? J$._() : J$.T(13865, {}, 11, false), options, 0));
                            return J$.X1(13945, J$.Rt(13937, J$.M(13929, J$.G(13905, J$.G(13897, J$.R(13889, 'this', this, 0), 's', 0), 'mongosState', 0), 'pickServer', 0)(J$.G(13921, J$.R(13913, 'options', options, 0), 'readPreference', 0))));
                        } catch (J$e) {
                            J$.Ex(22257, J$e);
                        } finally {
                            if (J$.Fr(22265))
                                continue jalangiLabel3438;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13953), 0));
            J$.X1(14097, J$.P(14089, J$.G(14009, J$.R(14001, 'Mongos', Mongos, 1), 'prototype', 0), 'connections', J$.T(14081, function () {
                jalangiLabel3439:
                    while (true) {
                        try {
                            J$.Fe(14065, arguments.callee, this, arguments);
                            arguments = J$.N(14073, 'arguments', arguments, 4);
                            return J$.X1(14057, J$.Rt(14049, J$.M(14041, J$.G(14033, J$.G(14025, J$.R(14017, 'this', this, 0), 's', 0), 'mongosState', 0), 'getAllConnections', 0)()));
                        } catch (J$e) {
                            J$.Ex(22273, J$e);
                        } finally {
                            if (J$.Fr(22281))
                                continue jalangiLabel3439;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14065), 0));
            var mongosInquirer = J$.X1(15849, J$.W(15841, 'mongosInquirer', J$.T(15833, function (self, state) {
                jalangiLabel3444:
                    while (true) {
                        try {
                            J$.Fe(15801, arguments.callee, this, arguments);
                            arguments = J$.N(15809, 'arguments', arguments, 4);
                            self = J$.N(15817, 'self', self, 4);
                            state = J$.N(15825, 'state', state, 4);
                            return J$.X1(15793, J$.Rt(15785, J$.T(15777, function () {
                                jalangiLabel3443:
                                    while (true) {
                                        try {
                                            J$.Fe(15729, arguments.callee, this, arguments);
                                            arguments = J$.N(15737, 'arguments', arguments, 4);
                                            J$.N(15745, 'disconnectedServers', disconnectedServers, 0);
                                            J$.N(15753, 'connectionCount', connectionCount, 0);
                                            J$.N(15761, 'connectToProxy', connectToProxy, 0);
                                            J$.N(15769, 'server', server, 0);
                                            if (J$.X1(22289, J$.C(608, J$.B(586, '==', J$.G(14113, J$.R(14105, 'state', state, 0), 'state', 0), J$.R(14121, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(14137, J$.Rt(14129, undefined));
                                            if (J$.X1(22297, J$.C(616, J$.B(594, '==', J$.G(14153, J$.R(14145, 'state', state, 0), 'state', 0), J$.R(14161, 'CONNECTED', CONNECTED, 1), 0))))
                                                J$.X1(14201, J$.P(14193, J$.R(14169, 'state', state, 0), 'retriesLeft', J$.G(14185, J$.R(14177, 'state', state, 0), 'reconnectTries', 0), 0));
                                            if (J$.X1(22313, J$.C(640, J$.C(624, J$.B(602, '==', J$.G(14217, J$.R(14209, 'state', state, 0), 'state', 0), J$.R(14225, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$.B(610, '==', J$.G(14241, J$.R(14233, 'state', state, 0), 'retriesLeft', 0), J$.T(14249, 0, 22, false), 0) : J$._()))) {
                                                J$.X1(14273, J$.M(14265, J$.R(14257, 'self', self, 0), 'destroy', 0)());
                                                return J$.X1(14369, J$.Rt(14361, J$.M(14353, J$.R(14281, 'self', self, 0), 'emit', 0)(J$.T(14289, 'error', 21, false), J$.F(14345, J$.R(14297, 'MongoError', MongoError, 1), 1)(J$.F(14337, J$.R(14305, 'f', f, 1), 0)(J$.T(14313, 'failed to reconnect after %s', 21, false), J$.G(14329, J$.R(14321, 'state', state, 0), 'reconnectTries', 0))))));
                                            } else if (J$.X1(22305, J$.C(632, J$.B(618, '==', J$.R(14377, 'state', state, 0), J$.R(14385, 'DISCONNECTED', DISCONNECTED, 1), 0)))) {
                                                J$.X1(14433, J$.P(14425, J$.R(14393, 'state', state, 0), 'retriesLeft', J$.B(626, '-', J$.G(14409, J$.R(14401, 'state', state, 0), 'retriesLeft', 0), J$.T(14417, 1, 22, false), 0), 0));
                                            }
                                            if (J$.X1(22321, J$.C(656, J$.C(648, J$.M(14457, J$.G(14449, J$.R(14441, 'state', state, 0), 'mongosState', 0), 'isConnected', 0)()) ? J$.G(14473, J$.R(14465, 'state', state, 0), 'disconnectHandler', 0) : J$._()))) {
                                                J$.X1(14505, J$.M(14497, J$.G(14489, J$.R(14481, 'state', state, 0), 'disconnectHandler', 0), 'execute', 0)());
                                            }
                                            if (J$.X1(22329, J$.C(664, J$.M(14529, J$.G(14521, J$.R(14513, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                J$.X1(14585, J$.M(14577, J$.G(14545, J$.R(14537, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(14569, J$.R(14553, 'f', f, 1), 0)(J$.T(14561, 'mongos ha proceess running', 21, false))));
                                            var disconnectedServers = J$.X1(14625, J$.W(14617, 'disconnectedServers', J$.M(14609, J$.G(14601, J$.R(14593, 'state', state, 0), 'mongosState', 0), 'disconnectedServers', 0)(), disconnectedServers, 1));
                                            if (J$.X1(22337, J$.C(672, J$.B(634, '==', J$.G(14641, J$.R(14633, 'disconnectedServers', disconnectedServers, 0), 'length', 0), J$.T(14649, 0, 22, false), 0))))
                                                return J$.X1(14729, J$.Rt(14721, J$.F(14713, J$.R(14657, 'setTimeout', setTimeout, 2), 0)(J$.F(14689, J$.R(14665, 'mongosInquirer', mongosInquirer, 1), 0)(J$.R(14673, 'self', self, 0), J$.R(14681, 'state', state, 0)), J$.G(14705, J$.R(14697, 'state', state, 0), 'haInterval', 0))));
                                            var connectionCount = J$.X1(14761, J$.W(14753, 'connectionCount', J$.G(14745, J$.R(14737, 'disconnectedServers', disconnectedServers, 0), 'length', 0), connectionCount, 1));
                                            if (J$.X1(22345, J$.C(680, J$.M(14785, J$.G(14777, J$.R(14769, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                J$.X1(14849, J$.M(14841, J$.G(14801, J$.R(14793, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(14833, J$.R(14809, 'f', f, 1), 0)(J$.T(14817, 'mongos ha proceess found %d disconnected proxies', 21, false), J$.R(14825, 'connectionCount', connectionCount, 0))));
                                            while (J$.X1(22409, J$.C(696, J$.B(642, '>', J$.G(14865, J$.R(14857, 'disconnectedServers', disconnectedServers, 0), 'length', 0), J$.T(14873, 0, 22, false), 0)))) {
                                                var connectToProxy = J$.X1(15457, J$.W(15449, 'connectToProxy', J$.T(15441, function (_server) {
                                                    jalangiLabel3442:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(15417, arguments.callee, this, arguments);
                                                                arguments = J$.N(15425, 'arguments', arguments, 4);
                                                                _server = J$.N(15433, '_server', _server, 4);
                                                                J$.X1(15409, J$.F(15401, J$.R(14881, 'setTimeout', setTimeout, 2), 0)(J$.T(15385, function () {
                                                                    jalangiLabel3441:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(15361, arguments.callee, this, arguments);
                                                                                arguments = J$.N(15369, 'arguments', arguments, 4);
                                                                                J$.N(15377, 'events', events, 0);
                                                                                var events = J$.X1(14953, J$.W(14945, 'events', J$.T(14937, [
                                                                                    J$.T(14889, 'error', 21, false),
                                                                                    J$.T(14897, 'close', 21, false),
                                                                                    J$.T(14905, 'timeout', 21, false),
                                                                                    J$.T(14913, 'connect', 21, false),
                                                                                    J$.T(14921, 'message', 21, false),
                                                                                    J$.T(14929, 'parseError', 21, false)
                                                                                ], 10, false), events, 1));
                                                                                J$.X1(15041, J$.M(15033, J$.R(14961, 'events', events, 0), 'forEach', 0)(J$.T(15025, function (e) {
                                                                                    jalangiLabel3440:
                                                                                        while (true) {
                                                                                            try {
                                                                                                J$.Fe(15001, arguments.callee, this, arguments);
                                                                                                arguments = J$.N(15009, 'arguments', arguments, 4);
                                                                                                e = J$.N(15017, 'e', e, 4);
                                                                                                J$.X1(14993, J$.M(14985, J$.R(14969, '_server', _server, 0), 'removeAllListeners', 0)(J$.R(14977, 'e', e, 0)));
                                                                                            } catch (J$e) {
                                                                                                J$.Ex(22353, J$e);
                                                                                            } finally {
                                                                                                if (J$.Fr(22361))
                                                                                                    continue jalangiLabel3440;
                                                                                                else
                                                                                                    return J$.Ra();
                                                                                            }
                                                                                        }
                                                                                }, 12, false, 15001)));
                                                                                J$.X1(15113, J$.M(15105, J$.R(15049, '_server', _server, 0), 'once', 0)(J$.T(15057, 'error', 21, false), J$.F(15097, J$.R(15065, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(15073, 'self', self, 0), J$.R(15081, 'state', state, 0), J$.R(15089, 'server', server, 0))));
                                                                                J$.X1(15185, J$.M(15177, J$.R(15121, '_server', _server, 0), 'once', 0)(J$.T(15129, 'close', 21, false), J$.F(15169, J$.R(15137, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(15145, 'self', self, 0), J$.R(15153, 'state', state, 0), J$.R(15161, 'server', server, 0))));
                                                                                J$.X1(15257, J$.M(15249, J$.R(15193, '_server', _server, 0), 'once', 0)(J$.T(15201, 'timeout', 21, false), J$.F(15241, J$.R(15209, 'errorHandlerTemp', errorHandlerTemp, 1), 0)(J$.R(15217, 'self', self, 0), J$.R(15225, 'state', state, 0), J$.R(15233, 'server', server, 0))));
                                                                                J$.X1(15329, J$.M(15321, J$.R(15265, '_server', _server, 0), 'once', 0)(J$.T(15273, 'connect', 21, false), J$.F(15313, J$.R(15281, 'connectHandler', connectHandler, 1), 0)(J$.R(15289, 'self', self, 0), J$.R(15297, 'state', state, 0), J$.T(15305, 'ha', 21, false))));
                                                                                J$.X1(15353, J$.M(15345, J$.R(15337, '_server', _server, 0), 'connect', 0)());
                                                                            } catch (J$e) {
                                                                                J$.Ex(22369, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(22377))
                                                                                    continue jalangiLabel3441;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 15361), J$.T(15393, 1, 22, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(22385, J$e);
                                                            } finally {
                                                                if (J$.Fr(22393))
                                                                    continue jalangiLabel3442;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 15417), connectToProxy, 1));
                                                var server = J$.X1(15489, J$.W(15481, 'server', J$.M(15473, J$.R(15465, 'disconnectedServers', disconnectedServers, 0), 'shift', 0)(), server, 1));
                                                if (J$.X1(22401, J$.C(688, J$.M(15513, J$.G(15505, J$.R(15497, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                    J$.X1(15585, J$.M(15577, J$.G(15529, J$.R(15521, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(15569, J$.R(15537, 'f', f, 1), 0)(J$.T(15545, 'attempting to connect to server %s', 21, false), J$.G(15561, J$.R(15553, 'server', server, 0), 'name', 0))));
                                                J$.X1(15617, J$.F(15609, J$.R(15593, 'connectToProxy', connectToProxy, 0), 0)(J$.R(15601, 'server', server, 0)));
                                            }
                                            return J$.X1(15721, J$.Rt(15713, J$.F(15705, J$.R(15625, 'setTimeout', setTimeout, 2), 0)(J$.F(15657, J$.R(15633, 'mongosInquirer', mongosInquirer, 1), 0)(J$.R(15641, 'self', self, 0), J$.R(15649, 'state', state, 0)), J$.B(650, '+', J$.G(15681, J$.G(15673, J$.R(15665, 'state', state, 0), 'options', 0), 'connectionTimeout', 0), J$.G(15697, J$.R(15689, 'state', state, 0), 'haInterval', 0), 0))));
                                        } catch (J$e) {
                                            J$.Ex(22417, J$e);
                                        } finally {
                                            if (J$.Fr(22425))
                                                continue jalangiLabel3443;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 15729)));
                        } catch (J$e) {
                            J$.Ex(22433, J$e);
                        } finally {
                            if (J$.Fr(22441))
                                continue jalangiLabel3444;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15801), mongosInquirer, 3));
            var errorHandlerTemp = J$.X1(16281, J$.W(16273, 'errorHandlerTemp', J$.T(16265, function (self, state, server) {
                jalangiLabel3447:
                    while (true) {
                        try {
                            J$.Fe(16225, arguments.callee, this, arguments);
                            arguments = J$.N(16233, 'arguments', arguments, 4);
                            self = J$.N(16241, 'self', self, 4);
                            state = J$.N(16249, 'state', state, 4);
                            server = J$.N(16257, 'server', server, 4);
                            return J$.X1(16217, J$.Rt(16209, J$.T(16201, function (err, server) {
                                jalangiLabel3446:
                                    while (true) {
                                        try {
                                            J$.Fe(16161, arguments.callee, this, arguments);
                                            arguments = J$.N(16169, 'arguments', arguments, 4);
                                            err = J$.N(16177, 'err', err, 4);
                                            server = J$.N(16185, 'server', server, 4);
                                            J$.N(16193, 'events', events, 0);
                                            if (J$.X1(22449, J$.C(704, J$.M(15873, J$.G(15865, J$.R(15857, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(15969, J$.M(15961, J$.G(15889, J$.R(15881, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(15953, J$.R(15897, 'f', f, 1), 0)(J$.T(15905, 'server %s disconnected with error %s', 21, false), J$.G(15921, J$.R(15913, 'server', server, 0), 'name', 0), J$.M(15945, J$.R(15929, 'JSON', JSON, 2), 'stringify', 0)(J$.R(15937, 'err', err, 0)))));
                                            J$.X1(16009, J$.M(16001, J$.G(15985, J$.R(15977, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(15993, 'server', server, 0)));
                                            var events = J$.X1(16065, J$.W(16057, 'events', J$.T(16049, [
                                                J$.T(16017, 'error', 21, false),
                                                J$.T(16025, 'close', 21, false),
                                                J$.T(16033, 'timeout', 21, false),
                                                J$.T(16041, 'connect', 21, false)
                                            ], 10, false), events, 1));
                                            J$.X1(16153, J$.M(16145, J$.R(16073, 'events', events, 0), 'forEach', 0)(J$.T(16137, function (e) {
                                                jalangiLabel3445:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(16113, arguments.callee, this, arguments);
                                                            arguments = J$.N(16121, 'arguments', arguments, 4);
                                                            e = J$.N(16129, 'e', e, 4);
                                                            J$.X1(16105, J$.M(16097, J$.R(16081, 'server', server, 0), 'removeAllListeners', 0)(J$.R(16089, 'e', e, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(22457, J$e);
                                                        } finally {
                                                            if (J$.Fr(22465))
                                                                continue jalangiLabel3445;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 16113)));
                                        } catch (J$e) {
                                            J$.Ex(22473, J$e);
                                        } finally {
                                            if (J$.Fr(22481))
                                                continue jalangiLabel3446;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 16161)));
                        } catch (J$e) {
                            J$.Ex(22489, J$e);
                        } finally {
                            if (J$.Fr(22497))
                                continue jalangiLabel3447;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16225), errorHandlerTemp, 3));
            var errorHandler = J$.X1(16737, J$.W(16729, 'errorHandler', J$.T(16721, function (self, state) {
                jalangiLabel3449:
                    while (true) {
                        try {
                            J$.Fe(16689, arguments.callee, this, arguments);
                            arguments = J$.N(16697, 'arguments', arguments, 4);
                            self = J$.N(16705, 'self', self, 4);
                            state = J$.N(16713, 'state', state, 4);
                            return J$.X1(16681, J$.Rt(16673, J$.T(16665, function (err, server) {
                                jalangiLabel3448:
                                    while (true) {
                                        try {
                                            J$.Fe(16633, arguments.callee, this, arguments);
                                            arguments = J$.N(16641, 'arguments', arguments, 4);
                                            err = J$.N(16649, 'err', err, 4);
                                            server = J$.N(16657, 'server', server, 4);
                                            if (J$.X1(22505, J$.C(712, J$.M(16305, J$.G(16297, J$.R(16289, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(16401, J$.M(16393, J$.G(16321, J$.R(16313, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(16385, J$.R(16329, 'f', f, 1), 0)(J$.T(16337, 'server %s errored out with %s', 21, false), J$.G(16353, J$.R(16345, 'server', server, 0), 'name', 0), J$.M(16377, J$.R(16361, 'JSON', JSON, 2), 'stringify', 0)(J$.R(16369, 'err', err, 0)))));
                                            J$.X1(16441, J$.M(16433, J$.G(16417, J$.R(16409, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(16425, 'server', server, 0)));
                                            if (J$.X1(22513, J$.C(720, J$.B(658, '==', J$.G(16473, J$.M(16465, J$.G(16457, J$.R(16449, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(16481, 0, 22, false), 0)))) {
                                                J$.X1(16513, J$.P(16505, J$.R(16489, 'state', state, 0), 'state', J$.R(16497, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            }
                                            J$.X1(16561, J$.M(16553, J$.R(16521, 'self', self, 0), 'emit', 0)(J$.T(16529, 'left', 21, false), J$.T(16537, 'mongos', 21, false), J$.R(16545, 'server', server, 0)));
                                            if (J$.X1(22521, J$.C(728, J$.G(16577, J$.R(16569, 'state', state, 0), 'emitError', 0))))
                                                J$.X1(16625, J$.M(16617, J$.R(16585, 'self', self, 0), 'emit', 0)(J$.T(16593, 'error', 21, false), J$.R(16601, 'err', err, 0), J$.R(16609, 'server', server, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22529, J$e);
                                        } finally {
                                            if (J$.Fr(22537))
                                                continue jalangiLabel3448;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 16633)));
                        } catch (J$e) {
                            J$.Ex(22545, J$e);
                        } finally {
                            if (J$.Fr(22553))
                                continue jalangiLabel3449;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16689), errorHandler, 3));
            var timeoutHandler = J$.X1(17105, J$.W(17097, 'timeoutHandler', J$.T(17089, function (self, state) {
                jalangiLabel3451:
                    while (true) {
                        try {
                            J$.Fe(17057, arguments.callee, this, arguments);
                            arguments = J$.N(17065, 'arguments', arguments, 4);
                            self = J$.N(17073, 'self', self, 4);
                            state = J$.N(17081, 'state', state, 4);
                            return J$.X1(17049, J$.Rt(17041, J$.T(17033, function (err, server) {
                                jalangiLabel3450:
                                    while (true) {
                                        try {
                                            J$.Fe(17001, arguments.callee, this, arguments);
                                            arguments = J$.N(17009, 'arguments', arguments, 4);
                                            err = J$.N(17017, 'err', err, 4);
                                            server = J$.N(17025, 'server', server, 4);
                                            if (J$.X1(22561, J$.C(736, J$.M(16761, J$.G(16753, J$.R(16745, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(16833, J$.M(16825, J$.G(16777, J$.R(16769, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(16817, J$.R(16785, 'f', f, 1), 0)(J$.T(16793, 'server %s timed out', 21, false), J$.G(16809, J$.R(16801, 'server', server, 0), 'name', 0))));
                                            J$.X1(16873, J$.M(16865, J$.G(16849, J$.R(16841, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(16857, 'server', server, 0)));
                                            if (J$.X1(22569, J$.C(744, J$.B(666, '==', J$.G(16905, J$.M(16897, J$.G(16889, J$.R(16881, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(16913, 0, 22, false), 0)))) {
                                                J$.X1(16945, J$.P(16937, J$.R(16921, 'state', state, 0), 'state', J$.R(16929, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            }
                                            J$.X1(16993, J$.M(16985, J$.R(16953, 'self', self, 0), 'emit', 0)(J$.T(16961, 'left', 21, false), J$.T(16969, 'mongos', 21, false), J$.R(16977, 'server', server, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22577, J$e);
                                        } finally {
                                            if (J$.Fr(22585))
                                                continue jalangiLabel3450;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17001)));
                        } catch (J$e) {
                            J$.Ex(22593, J$e);
                        } finally {
                            if (J$.Fr(22601))
                                continue jalangiLabel3451;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17057), timeoutHandler, 3));
            var closeHandler = J$.X1(17473, J$.W(17465, 'closeHandler', J$.T(17457, function (self, state) {
                jalangiLabel3453:
                    while (true) {
                        try {
                            J$.Fe(17425, arguments.callee, this, arguments);
                            arguments = J$.N(17433, 'arguments', arguments, 4);
                            self = J$.N(17441, 'self', self, 4);
                            state = J$.N(17449, 'state', state, 4);
                            return J$.X1(17417, J$.Rt(17409, J$.T(17401, function (err, server) {
                                jalangiLabel3452:
                                    while (true) {
                                        try {
                                            J$.Fe(17369, arguments.callee, this, arguments);
                                            arguments = J$.N(17377, 'arguments', arguments, 4);
                                            err = J$.N(17385, 'err', err, 4);
                                            server = J$.N(17393, 'server', server, 4);
                                            if (J$.X1(22609, J$.C(752, J$.M(17129, J$.G(17121, J$.R(17113, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(17201, J$.M(17193, J$.G(17145, J$.R(17137, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(17185, J$.R(17153, 'f', f, 1), 0)(J$.T(17161, 'server %s closed', 21, false), J$.G(17177, J$.R(17169, 'server', server, 0), 'name', 0))));
                                            J$.X1(17241, J$.M(17233, J$.G(17217, J$.R(17209, 'state', state, 0), 'mongosState', 0), 'disconnected', 0)(J$.R(17225, 'server', server, 0)));
                                            if (J$.X1(22617, J$.C(760, J$.B(674, '==', J$.G(17273, J$.M(17265, J$.G(17257, J$.R(17249, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(17281, 0, 22, false), 0)))) {
                                                J$.X1(17313, J$.P(17305, J$.R(17289, 'state', state, 0), 'state', J$.R(17297, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            }
                                            J$.X1(17361, J$.M(17353, J$.R(17321, 'self', self, 0), 'emit', 0)(J$.T(17329, 'left', 21, false), J$.T(17337, 'mongos', 21, false), J$.R(17345, 'server', server, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22625, J$e);
                                        } finally {
                                            if (J$.Fr(22633))
                                                continue jalangiLabel3452;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17369)));
                        } catch (J$e) {
                            J$.Ex(22641, J$e);
                        } finally {
                            if (J$.Fr(22649))
                                continue jalangiLabel3453;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17425), closeHandler, 3));
            var connectHandler = J$.X1(19241, J$.W(19233, 'connectHandler', J$.T(19225, function (self, state, e) {
                jalangiLabel3458:
                    while (true) {
                        try {
                            J$.Fe(19185, arguments.callee, this, arguments);
                            arguments = J$.N(19193, 'arguments', arguments, 4);
                            self = J$.N(19201, 'self', self, 4);
                            state = J$.N(19209, 'state', state, 4);
                            e = J$.N(19217, 'e', e, 4);
                            return J$.X1(19177, J$.Rt(19169, J$.T(19161, function (server) {
                                jalangiLabel3457:
                                    while (true) {
                                        try {
                                            J$.Fe(19113, arguments.callee, this, arguments);
                                            arguments = J$.N(19121, 'arguments', arguments, 4);
                                            server = J$.N(19129, 'server', server, 4);
                                            J$.N(19137, 'processNewServer', processNewServer, 0);
                                            J$.N(19145, 'count', count, 0);
                                            J$.N(19153, 'i', i, 0);
                                            if (J$.X1(22657, J$.C(768, J$.M(17497, J$.G(17489, J$.R(17481, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(17569, J$.M(17561, J$.G(17513, J$.R(17505, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(17553, J$.R(17521, 'f', f, 1), 0)(J$.T(17529, 'connected to %s', 21, false), J$.G(17545, J$.R(17537, 'server', server, 0), 'name', 0))));
                                            J$.X1(17705, J$.M(17697, J$.T(17625, [
                                                J$.T(17577, 'error', 21, false),
                                                J$.T(17585, 'close', 21, false),
                                                J$.T(17593, 'timeout', 21, false),
                                                J$.T(17601, 'connect', 21, false),
                                                J$.T(17609, 'message', 21, false),
                                                J$.T(17617, 'parseError', 21, false)
                                            ], 10, false), 'forEach', 0)(J$.T(17689, function (e) {
                                                jalangiLabel3454:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(17665, arguments.callee, this, arguments);
                                                            arguments = J$.N(17673, 'arguments', arguments, 4);
                                                            e = J$.N(17681, 'e', e, 4);
                                                            J$.X1(17657, J$.M(17649, J$.R(17633, 'server', server, 0), 'removeAllListeners', 0)(J$.R(17641, 'e', e, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(22665, J$e);
                                                        } finally {
                                                            if (J$.Fr(22673))
                                                                continue jalangiLabel3454;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 17665)));
                                            var processNewServer = J$.X1(18641, J$.W(18633, 'processNewServer', J$.T(18625, function (_server) {
                                                jalangiLabel3455:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(18601, arguments.callee, this, arguments);
                                                            arguments = J$.N(18609, 'arguments', arguments, 4);
                                                            _server = J$.N(18617, '_server', _server, 4);
                                                            if (J$.X1(22681, J$.C(776, J$.M(17721, J$.R(17713, '_server', _server, 0), 'isConnected', 0)()))) {
                                                                J$.X1(17785, J$.M(17777, J$.R(17729, '_server', _server, 0), 'once', 0)(J$.T(17737, 'error', 21, false), J$.F(17769, J$.R(17745, 'errorHandler', errorHandler, 1), 0)(J$.R(17753, 'self', self, 0), J$.R(17761, 'state', state, 0))));
                                                                J$.X1(17849, J$.M(17841, J$.R(17793, '_server', _server, 0), 'once', 0)(J$.T(17801, 'close', 21, false), J$.F(17833, J$.R(17809, 'closeHandler', closeHandler, 1), 0)(J$.R(17817, 'self', self, 0), J$.R(17825, 'state', state, 0))));
                                                                J$.X1(17913, J$.M(17905, J$.R(17857, '_server', _server, 0), 'once', 0)(J$.T(17865, 'timeout', 21, false), J$.F(17897, J$.R(17873, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(17881, 'self', self, 0), J$.R(17889, 'state', state, 0))));
                                                                J$.X1(17977, J$.M(17969, J$.R(17921, '_server', _server, 0), 'once', 0)(J$.T(17929, 'parseError', 21, false), J$.F(17961, J$.R(17937, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(17945, 'self', self, 0), J$.R(17953, 'state', state, 0))));
                                                            }
                                                            J$.X1(18025, J$.M(18017, J$.R(17985, 'self', self, 0), 'emit', 0)(J$.T(17993, 'joined', 21, false), J$.T(18001, 'mongos', 21, false), J$.R(18009, '_server', _server, 0)));
                                                            J$.X1(18065, J$.M(18057, J$.G(18041, J$.R(18033, 'state', state, 0), 'mongosState', 0), 'connected', 0)(J$.R(18049, '_server', _server, 0)));
                                                            if (J$.X1(22689, J$.C(792, J$.C(784, J$.B(682, '==', J$.T(18073, 'ha', 21, false), J$.R(18081, 'e', e, 0), 0)) ? J$.B(690, '==', J$.G(18113, J$.M(18105, J$.G(18097, J$.R(18089, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(18121, 1, 22, false), 0) : J$._()))) {
                                                                J$.X1(18161, J$.M(18153, J$.R(18129, 'self', self, 0), 'emit', 0)(J$.T(18137, 'reconnect', 21, false), J$.R(18145, '_server', _server, 0)));
                                                            }
                                                            if (J$.X1(22697, J$.C(816, J$.C(808, J$.C(800, J$.B(698, '==', J$.G(18193, J$.M(18185, J$.G(18177, J$.R(18169, 'state', state, 0), 'mongosState', 0), 'disconnectedServers', 0)(), 'length', 0), J$.T(18201, 0, 22, false), 0)) ? J$.B(706, '>', J$.G(18233, J$.M(18225, J$.G(18217, J$.R(18209, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.T(18241, 0, 22, false), 0) : J$._()) ? J$.U(714, '!', J$.G(18257, J$.R(18249, 'state', state, 0), 'fullsetup', 0)) : J$._()))) {
                                                                J$.X1(18289, J$.P(18281, J$.R(18265, 'state', state, 0), 'fullsetup', J$.T(18273, true, 23, false), 0));
                                                                J$.X1(18321, J$.M(18313, J$.R(18297, 'self', self, 0), 'emit', 0)(J$.T(18305, 'fullsetup', 21, false)));
                                                            }
                                                            if (J$.X1(22705, J$.C(840, J$.C(832, J$.C(824, J$.B(722, '==', J$.G(18353, J$.M(18345, J$.G(18337, J$.R(18329, 'state', state, 0), 'mongosState', 0), 'disconnectedServers', 0)(), 'length', 0), J$.T(18361, 0, 22, false), 0)) ? J$.B(730, '==', J$.G(18393, J$.M(18385, J$.G(18377, J$.R(18369, 'state', state, 0), 'mongosState', 0), 'connectedServers', 0)(), 'length', 0), J$.G(18417, J$.G(18409, J$.R(18401, 'state', state, 0), 'seedlist', 0), 'length', 0), 0) : J$._()) ? J$.U(738, '!', J$.G(18433, J$.R(18425, 'state', state, 0), 'all', 0)) : J$._()))) {
                                                                J$.X1(18465, J$.P(18457, J$.R(18441, 'state', state, 0), 'all', J$.T(18449, true, 23, false), 0));
                                                                J$.X1(18497, J$.M(18489, J$.R(18473, 'self', self, 0), 'emit', 0)(J$.T(18481, 'all', 21, false)));
                                                            }
                                                            if (J$.X1(22713, J$.C(848, J$.B(746, '==', J$.G(18513, J$.R(18505, 'state', state, 0), 'state', 0), J$.R(18521, 'DISCONNECTED', DISCONNECTED, 1), 0)))) {
                                                                J$.X1(18553, J$.P(18545, J$.R(18529, 'state', state, 0), 'state', J$.R(18537, 'CONNECTED', CONNECTED, 1), 0));
                                                                J$.X1(18593, J$.M(18585, J$.R(18561, 'self', self, 0), 'emit', 0)(J$.T(18569, 'connect', 21, false), J$.R(18577, 'self', self, 0)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(22721, J$e);
                                                        } finally {
                                                            if (J$.Fr(22729))
                                                                continue jalangiLabel3455;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 18601), processNewServer, 1));
                                            if (J$.X1(22737, J$.C(856, J$.G(18657, J$.R(18649, 'state', state, 0), 'authInProgress', 0)))) {
                                                J$.X1(18697, J$.M(18689, J$.G(18673, J$.R(18665, 'state', state, 0), 'authInProgressServers', 0), 'push', 0)(J$.R(18681, 'server', server, 0)));
                                            }
                                            if (J$.X1(22745, J$.C(864, J$.B(754, '==', J$.G(18721, J$.G(18713, J$.R(18705, 'state', state, 0), 'credentials', 0), 'length', 0), J$.T(18729, 0, 22, false), 0))))
                                                return J$.X1(18769, J$.Rt(18761, J$.F(18753, J$.R(18737, 'processNewServer', processNewServer, 0), 0)(J$.R(18745, 'server', server, 0))));
                                            var count = J$.X1(18809, J$.W(18801, 'count', J$.G(18793, J$.G(18785, J$.R(18777, 'state', state, 0), 'credentials', 0), 'length', 0), count, 1));
                                            for (var i = J$.X1(18833, J$.W(18825, 'i', J$.T(18817, 0, 22, false), i, 1)); J$.X1(22777, J$.C(880, J$.B(762, '<', J$.R(18841, 'i', i, 0), J$.G(18865, J$.G(18857, J$.R(18849, 'state', state, 0), 'credentials', 0), 'length', 0), 0))); J$.X1(22785, J$.B(786, '-', i = J$.W(18889, 'i', J$.B(778, '+', J$.U(770, '+', J$.R(18881, 'i', i, 0)), J$.T(18873, 1, 22, false), 0), i, 0), J$.T(18897, 1, 22, false), 0))) {
                                                J$.X1(19105, J$.M(19097, J$.G(18913, J$.R(18905, 'server', server, 0), 'auth', 0), 'apply', 0)(J$.R(18921, 'server', server, 0), J$.M(19089, J$.G(18953, J$.G(18937, J$.R(18929, 'state', state, 0), 'credentials', 0), J$.R(18945, 'i', i, 0), 4), 'concat', 0)(J$.T(19081, [J$.T(19073, function (err, r) {
                                                        jalangiLabel3456:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(19041, arguments.callee, this, arguments);
                                                                    arguments = J$.N(19049, 'arguments', arguments, 4);
                                                                    err = J$.N(19057, 'err', err, 4);
                                                                    r = J$.N(19065, 'r', r, 4);
                                                                    J$.X1(18985, count = J$.W(18977, 'count', J$.B(794, '-', J$.R(18961, 'count', count, 0), J$.T(18969, 1, 22, false), 0), count, 0));
                                                                    if (J$.X1(22753, J$.C(872, J$.B(802, '==', J$.R(18993, 'count', count, 0), J$.T(19001, 0, 22, false), 0))))
                                                                        J$.X1(19033, J$.F(19025, J$.R(19009, 'processNewServer', processNewServer, 0), 0)(J$.R(19017, 'server', server, 0)));
                                                                } catch (J$e) {
                                                                    J$.Ex(22761, J$e);
                                                                } finally {
                                                                    if (J$.Fr(22769))
                                                                        continue jalangiLabel3456;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 19041)], 10, false))));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(22793, J$e);
                                        } finally {
                                            if (J$.Fr(22801))
                                                continue jalangiLabel3457;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19113)));
                        } catch (J$e) {
                            J$.Ex(22809, J$e);
                        } finally {
                            if (J$.Fr(22817))
                                continue jalangiLabel3458;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19185), connectHandler, 3));
            var addToListIfNotExist = J$.X1(19641, J$.W(19633, 'addToListIfNotExist', J$.T(19625, function (list, server) {
                jalangiLabel3460:
                    while (true) {
                        try {
                            J$.Fe(19577, arguments.callee, this, arguments);
                            arguments = J$.N(19585, 'arguments', arguments, 4);
                            list = J$.N(19593, 'list', list, 4);
                            server = J$.N(19601, 'server', server, 4);
                            J$.N(19609, 'found', found, 0);
                            J$.N(19617, 'i', i, 0);
                            var found = J$.X1(19265, J$.W(19257, 'found', J$.T(19249, false, 23, false), found, 1));
                            J$.X1(19385, J$.M(19377, J$.T(19305, [
                                J$.T(19273, 'error', 21, false),
                                J$.T(19281, 'close', 21, false),
                                J$.T(19289, 'timeout', 21, false),
                                J$.T(19297, 'connect', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(19369, function (e) {
                                jalangiLabel3459:
                                    while (true) {
                                        try {
                                            J$.Fe(19345, arguments.callee, this, arguments);
                                            arguments = J$.N(19353, 'arguments', arguments, 4);
                                            e = J$.N(19361, 'e', e, 4);
                                            J$.X1(19337, J$.M(19329, J$.R(19313, 'server', server, 0), 'removeAllListeners', 0)(J$.R(19321, 'e', e, 0)));
                                        } catch (J$e) {
                                            J$.Ex(22825, J$e);
                                        } finally {
                                            if (J$.Fr(22833))
                                                continue jalangiLabel3459;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19345)));
                            for (var i = J$.X1(19409, J$.W(19401, 'i', J$.T(19393, 0, 22, false), i, 1)); J$.X1(22849, J$.C(896, J$.B(810, '<', J$.R(19417, 'i', i, 0), J$.G(19433, J$.R(19425, 'list', list, 0), 'length', 0), 0))); J$.X1(22857, J$.B(834, '-', i = J$.W(19457, 'i', J$.B(826, '+', J$.U(818, '+', J$.R(19449, 'i', i, 0)), J$.T(19441, 1, 22, false), 0), i, 0), J$.T(19465, 1, 22, false), 0))) {
                                if (J$.X1(22841, J$.C(888, J$.M(19505, J$.G(19489, J$.R(19473, 'list', list, 0), J$.R(19481, 'i', i, 0), 4), 'equals', 0)(J$.R(19497, 'server', server, 0)))))
                                    J$.X1(19529, found = J$.W(19521, 'found', J$.T(19513, true, 23, false), found, 0));
                            }
                            if (J$.X1(22865, J$.C(904, J$.U(842, '!', J$.R(19537, 'found', found, 0))))) {
                                J$.X1(19569, J$.M(19561, J$.R(19545, 'list', list, 0), 'push', 0)(J$.R(19553, 'server', server, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(22873, J$e);
                        } finally {
                            if (J$.Fr(22881))
                                continue jalangiLabel3460;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19577), addToListIfNotExist, 3));
            var addCredentials = J$.X1(19793, J$.W(19785, 'addCredentials', J$.T(19777, function (state, db, argsWithoutCallback) {
                jalangiLabel3461:
                    while (true) {
                        try {
                            J$.Fe(19737, arguments.callee, this, arguments);
                            arguments = J$.N(19745, 'arguments', arguments, 4);
                            state = J$.N(19753, 'state', state, 4);
                            db = J$.N(19761, 'db', db, 4);
                            argsWithoutCallback = J$.N(19769, 'argsWithoutCallback', argsWithoutCallback, 4);
                            J$.X1(19689, J$.F(19681, J$.R(19649, 'clearCredentials', clearCredentials, 1), 0)(J$.R(19657, 'state', state, 0), J$.B(850, '+', J$.R(19665, 'db', db, 0), J$.T(19673, '.dummy', 21, false), 0)));
                            J$.X1(19729, J$.M(19721, J$.G(19705, J$.R(19697, 'state', state, 0), 'credentials', 0), 'push', 0)(J$.R(19713, 'argsWithoutCallback', argsWithoutCallback, 0)));
                        } catch (J$e) {
                            J$.Ex(22889, J$e);
                        } finally {
                            if (J$.Fr(22897))
                                continue jalangiLabel3461;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19737), addCredentials, 3));
            var clearCredentials = J$.X1(20185, J$.W(20177, 'clearCredentials', J$.T(20169, function (state, ns) {
                jalangiLabel3462:
                    while (true) {
                        try {
                            J$.Fe(20113, arguments.callee, this, arguments);
                            arguments = J$.N(20121, 'arguments', arguments, 4);
                            state = J$.N(20129, 'state', state, 4);
                            ns = J$.N(20137, 'ns', ns, 4);
                            J$.N(20145, 'db', db, 0);
                            J$.N(20153, 'filteredCredentials', filteredCredentials, 0);
                            J$.N(20161, 'i', i, 0);
                            var db = J$.X1(19849, J$.W(19841, 'db', J$.G(19833, J$.M(19817, J$.R(19801, 'ns', ns, 0), 'split', 0)(J$.T(19809, '.', 21, false)), J$.T(19825, 0, 22, false), 4), db, 1));
                            var filteredCredentials = J$.X1(19873, J$.W(19865, 'filteredCredentials', J$.T(19857, [], 10, false), filteredCredentials, 1));
                            for (var i = J$.X1(19897, J$.W(19889, 'i', J$.T(19881, 0, 22, false), i, 1)); J$.X1(22913, J$.C(920, J$.B(858, '<', J$.R(19905, 'i', i, 0), J$.G(19929, J$.G(19921, J$.R(19913, 'state', state, 0), 'credentials', 0), 'length', 0), 0))); J$.X1(22921, J$.B(882, '-', i = J$.W(19953, 'i', J$.B(874, '+', J$.U(866, '+', J$.R(19945, 'i', i, 0)), J$.T(19937, 1, 22, false), 0), i, 0), J$.T(19961, 1, 22, false), 0))) {
                                if (J$.X1(22905, J$.C(912, J$.B(890, '!=', J$.G(20009, J$.G(19993, J$.G(19977, J$.R(19969, 'state', state, 0), 'credentials', 0), J$.R(19985, 'i', i, 0), 4), J$.T(20001, 1, 22, false), 4), J$.R(20017, 'db', db, 0), 0))))
                                    J$.X1(20073, J$.M(20065, J$.R(20025, 'filteredCredentials', filteredCredentials, 0), 'push', 0)(J$.G(20057, J$.G(20041, J$.R(20033, 'state', state, 0), 'credentials', 0), J$.R(20049, 'i', i, 0), 4)));
                            }
                            J$.X1(20105, J$.P(20097, J$.R(20081, 'state', state, 0), 'credentials', J$.R(20089, 'filteredCredentials', filteredCredentials, 0), 0));
                        } catch (J$e) {
                            J$.Ex(22929, J$e);
                        } finally {
                            if (J$.Fr(22937))
                                continue jalangiLabel3462;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20113), clearCredentials, 3));
            var processReadPreference = J$.X1(20321, J$.W(20313, 'processReadPreference', J$.T(20305, function (cmd, options) {
                jalangiLabel3463:
                    while (true) {
                        try {
                            J$.Fe(20273, arguments.callee, this, arguments);
                            arguments = J$.N(20281, 'arguments', arguments, 4);
                            cmd = J$.N(20289, 'cmd', cmd, 4);
                            options = J$.N(20297, 'options', options, 4);
                            J$.X1(20217, options = J$.W(20209, 'options', J$.C(928, J$.R(20193, 'options', options, 0)) ? J$._() : J$.T(20201, {}, 11, false), options, 0));
                            if (J$.X1(22945, J$.C(936, J$.B(898, '==', J$.G(20233, J$.R(20225, 'options', options, 0), 'readPreference', 0), J$.T(20241, null, 25, false), 0))))
                                return J$.X1(20265, J$.Rt(20257, J$.R(20249, 'cmd', cmd, 0)));
                        } catch (J$e) {
                            J$.Ex(22953, J$e);
                        } finally {
                            if (J$.Fr(22961))
                                continue jalangiLabel3463;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20273), processReadPreference, 3));
            var executeWriteOperation = J$.X1(20761, J$.W(20753, 'executeWriteOperation', J$.T(20745, function (state, op, ns, ops, options, callback) {
                jalangiLabel3464:
                    while (true) {
                        try {
                            J$.Fe(20673, arguments.callee, this, arguments);
                            arguments = J$.N(20681, 'arguments', arguments, 4);
                            state = J$.N(20689, 'state', state, 4);
                            op = J$.N(20697, 'op', op, 4);
                            ns = J$.N(20705, 'ns', ns, 4);
                            ops = J$.N(20713, 'ops', ops, 4);
                            options = J$.N(20721, 'options', options, 4);
                            callback = J$.N(20729, 'callback', callback, 4);
                            J$.N(20737, 'server', server, 0);
                            if (J$.X1(22969, J$.C(944, J$.B(914, '==', J$.U(906, 'typeof', J$.R(20329, 'options', options, 0)), J$.T(20337, 'function', 21, false), 0)))) {
                                J$.X1(20361, callback = J$.W(20353, 'callback', J$.R(20345, 'options', options, 0), callback, 0));
                                J$.X1(20385, options = J$.W(20377, 'options', J$.T(20369, {}, 11, false), options, 0));
                            }
                            var server = J$.X1(20409, J$.W(20401, 'server', J$.T(20393, null, 25, false), server, 1));
                            J$.X1(20441, options = J$.W(20433, 'options', J$.C(952, J$.R(20417, 'options', options, 0)) ? J$._() : J$.T(20425, {}, 11, false), options, 0));
                            try {
                                J$.X1(20481, server = J$.W(20473, 'server', J$.M(20465, J$.G(20457, J$.R(20449, 'state', state, 0), 'mongosState', 0), 'pickServer', 0)(), server, 0));
                            } catch (err) {
                                err = J$.N(20529, 'err', err, 1);
                                return J$.X1(20521, J$.Rt(20513, J$.F(20505, J$.R(20489, 'callback', callback, 0), 0)(J$.R(20497, 'err', err, 0))));
                            }
                            if (J$.X1(22977, J$.C(960, J$.B(922, '==', J$.R(20537, 'server', server, 0), J$.T(20545, null, 25, false), 0))))
                                return J$.X1(20601, J$.Rt(20593, J$.F(20585, J$.R(20553, 'callback', callback, 0), 0)(J$.F(20577, J$.R(20561, 'MongoError', MongoError, 1), 1)(J$.T(20569, 'no mongos found', 21, false)))));
                            J$.X1(20665, J$.M(20657, J$.R(20609, 'server', server, 0), J$.R(20617, 'op', op, 0), 1)(J$.R(20625, 'ns', ns, 0), J$.R(20633, 'ops', ops, 0), J$.R(20641, 'options', options, 0), J$.R(20649, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(22985, J$e);
                        } finally {
                            if (J$.Fr(22993))
                                continue jalangiLabel3464;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20673), executeWriteOperation, 3));
            J$.X1(20793, J$.P(20785, J$.R(20769, 'module', module, 2), 'exports', J$.R(20777, 'Mongos', Mongos, 1), 0));
        } catch (J$e) {
            J$.Ex(23001, J$e);
        } finally {
            if (J$.Sr(23009)) {
                J$.L();
                continue jalangiLabel3465;
            } else {
                J$.L();
                break jalangiLabel3465;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
