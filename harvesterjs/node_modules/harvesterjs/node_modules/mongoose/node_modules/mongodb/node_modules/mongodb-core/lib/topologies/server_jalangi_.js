J$.iids = {"8":[35,13,35,37],"9":[1,20,1,27],"10":[23,15,23,27],"16":[48,9,48,35],"17":[1,28,1,32],"24":[50,12,50,42],"25":[1,20,1,33],"26":[23,15,23,27],"32":[53,9,53,35],"33":[1,20,1,33],"34":[35,13,35,37],"40":[55,12,55,69],"41":[1,20,1,33],"42":[37,13,37,38],"48":[65,9,65,43],"49":[2,26,2,38],"50":[44,5,44,30],"56":[65,9,65,43],"57":[2,26,2,45],"58":[48,9,48,35],"64":[74,12,74,72],"65":[2,26,2,45],"66":[50,12,50,42],"72":[77,9,77,45],"73":[2,26,2,45],"74":[53,9,53,35],"80":[77,9,77,45],"81":[3,1,3,13],"82":[55,12,55,57],"88":[80,9,80,45],"89":[3,1,3,14],"90":[55,12,55,69],"96":[80,9,80,45],"97":[4,16,4,23],"98":[58,5,58,30],"104":[86,9,86,22],"105":[4,24,4,30],"106":[65,9,65,23],"112":[86,9,86,41],"113":[4,16,4,31],"114":[65,27,65,43],"120":[86,9,86,41],"121":[4,16,4,40],"122":[74,27,74,60],"128":[89,9,89,41],"129":[4,46,4,53],"130":[74,27,74,72],"136":[99,13,99,45],"137":[4,54,4,60],"138":[77,19,77,45],"144":[125,13,125,29],"145":[4,46,4,61],"146":[80,19,80,45],"152":[131,21,131,31],"153":[4,46,4,68],"154":[89,9,89,41],"160":[128,25,128,40],"161":[4,92,4,99],"162":[92,35,92,66],"168":[150,17,150,39],"169":[4,100,4,121],"170":[98,39,98,70],"176":[161,13,161,68],"177":[4,92,4,122],"178":[99,13,99,45],"184":[161,13,161,68],"185":[4,92,4,142],"186":[125,13,125,29],"192":[164,13,164,51],"193":[4,159,4,166],"194":[128,25,128,40],"200":[166,13,166,34],"201":[4,167,4,175],"202":[128,42,128,45],"208":[168,13,168,28],"209":[4,159,4,176],"216":[171,13,171,66],"217":[4,159,4,189],"218":[128,42,128,45],"224":[171,13,171,66],"225":[4,198,4,205],"226":[130,25,130,34],"232":[173,13,173,28],"233":[4,206,4,226],"234":[131,21,131,31],"240":[181,13,181,68],"241":[4,198,4,227],"242":[161,13,161,40],"248":[181,13,181,68],"249":[4,233,4,240],"250":[161,44,161,68],"256":[184,13,184,51],"257":[4,241,4,247],"258":[164,13,164,51],"264":[186,13,186,34],"265":[4,233,4,248],"266":[171,32,171,66],"272":[188,13,188,28],"273":[4,258,4,265],"274":[181,13,181,40],"280":[190,13,190,47],"281":[4,266,4,290],"282":[181,44,181,68],"288":[192,13,192,28],"289":[4,258,4,291],"290":[184,13,184,51],"296":[201,13,201,68],"297":[4,258,4,297],"298":[190,13,190,47],"304":[201,13,201,68],"305":[4,312,4,319],"306":[201,13,201,40],"312":[204,13,204,51],"313":[4,320,4,330],"314":[201,44,201,68],"320":[206,13,206,34],"321":[4,312,4,331],"322":[204,13,204,51],"328":[208,13,208,28],"329":[4,350,4,357],"330":[220,13,220,40],"336":[211,13,211,28],"337":[4,358,4,377],"338":[220,44,220,68],"344":[220,13,220,68],"345":[4,350,4,378],"346":[223,13,223,51],"352":[220,13,220,68],"353":[4,394,4,401],"354":[240,13,240,29],"360":[223,13,223,51],"361":[4,402,4,413],"362":[243,25,243,40],"368":[225,13,225,34],"369":[4,394,4,414],"370":[243,42,243,45],"376":[227,13,227,28],"377":[4,432,4,439],"384":[230,13,230,28],"385":[4,440,4,458],"386":[243,42,243,45],"392":[240,13,240,29],"393":[4,432,4,459],"394":[245,25,245,34],"400":[246,21,246,31],"401":[4,481,4,488],"402":[246,21,246,31],"408":[243,25,243,40],"409":[4,489,4,510],"410":[260,43,260,71],"416":[256,21,256,24],"417":[4,481,4,511],"418":[261,21,261,25],"424":[261,21,261,25],"425":[4,481,4,529],"426":[269,21,269,43],"432":[267,21,267,42],"433":[4,545,4,552],"434":[269,47,269,80],"440":[269,21,269,80],"441":[4,553,4,574],"442":[275,21,275,59],"448":[269,21,269,80],"449":[4,545,4,575],"450":[293,9,293,24],"456":[273,21,273,56],"457":[4,545,4,587],"458":[293,9,293,38],"464":[273,21,273,56],"465":[4,604,4,611],"466":[303,9,303,26],"472":[275,21,275,59],"473":[4,612,4,633],"474":[310,32,310,48],"480":[288,9,288,10],"481":[4,604,4,634],"482":[311,21,311,38],"488":[295,17,295,57],"489":[4,604,4,647],"490":[344,9,344,29],"496":[293,9,293,38],"497":[4,656,4,663],"498":[353,20,353,44],"504":[303,9,303,26],"505":[4,664,4,670],"506":[353,20,353,57],"512":[311,21,311,38],"513":[4,656,4,671],"514":[356,20,356,44],"520":[306,13,306,53],"521":[4,656,4,680],"522":[356,20,356,57],"523":[4,656,4,678],"528":[344,9,344,29],"529":[4,656,4,685],"530":[361,13,361,23],"536":[347,26,347,54],"537":[4,718,4,725],"544":[353,20,353,57],"545":[4,726,4,755],"546":[361,13,361,23],"552":[355,28,355,61],"553":[4,718,4,756],"554":[392,9,392,22],"560":[356,20,356,57],"561":[4,786,4,793],"562":[394,16,394,28],"568":[360,24,360,51],"569":[4,794,4,823],"570":[410,9,410,37],"576":[364,30,364,95],"577":[4,786,4,824],"578":[410,9,410,50],"584":[365,17,365,53],"585":[4,856,4,863],"586":[418,9,418,21],"592":[367,15,367,27],"593":[4,864,4,893],"594":[433,22,433,56],"600":[373,19,373,31],"601":[4,856,4,894],"602":[449,12,449,37],"608":[394,16,394,28],"609":[4,906,4,913],"610":[454,9,454,48],"616":[392,9,392,22],"617":[4,914,4,925],"618":[461,9,461,50],"624":[409,16,409,30],"625":[4,906,4,926],"626":[472,25,472,47],"632":[410,9,410,50],"633":[4,937,4,944],"634":[472,49,472,52],"640":[413,9,413,20],"641":[4,945,4,967],"648":[418,9,418,21],"649":[4,937,4,968],"650":[472,49,472,52],"656":[431,9,431,32],"657":[4,980,4,987],"658":[477,25,477,34],"664":[433,9,433,56],"665":[4,988,4,1005],"666":[478,21,478,31],"672":[433,9,433,56],"673":[4,980,4,1006],"674":[484,25,484,34],"680":[435,9,435,20],"681":[4,1015,4,1022],"682":[485,21,485,31],"688":[439,9,439,25],"689":[4,1023,4,1037],"690":[532,9,532,23],"696":[444,9,444,20],"697":[4,1015,4,1038],"698":[532,9,532,37],"704":[454,9,454,48],"705":[4,1048,4,1055],"706":[535,9,535,34],"712":[460,22,460,61],"713":[4,1056,4,1071],"714":[538,37,538,85],"720":[461,11,461,49],"721":[4,1048,4,1072],"722":[538,35,538,86],"728":[461,9,461,50],"729":[4,1083,4,1090],"730":[547,9,547,28],"736":[464,9,464,32],"737":[4,1091,4,1107],"738":[547,32,547,64],"744":[478,21,478,31],"745":[4,1083,4,1108],"746":[551,9,551,35],"752":[482,21,482,24],"753":[4,1117,4,1124],"754":[553,17,553,37],"760":[492,25,492,30],"761":[4,1125,4,1139],"762":[553,17,553,50],"768":[485,21,485,31],"769":[4,1117,4,1140],"770":[554,21,554,45],"776":[472,25,472,47],"777":[4,1154,4,1161],"778":[554,21,554,58],"784":[468,9,468,14],"785":[4,1162,4,1177],"786":[555,30,555,63],"792":[518,13,518,16],"793":[4,1154,4,1178],"794":[555,30,555,76],"800":[520,13,520,73],"801":[4,16,4,40],"802":[556,27,556,57],"808":[520,13,520,103],"809":[4,16,4,40],"810":[556,27,556,70],"816":[520,13,520,134],"817":[4,46,4,68],"818":[559,25,559,27],"824":[520,13,520,134],"825":[4,46,4,68],"826":[566,9,566,28],"832":[532,9,532,37],"833":[4,92,4,142],"834":[570,21,570,35],"840":[535,9,535,34],"841":[4,92,4,142],"842":[570,37,570,40],"848":[537,15,537,28],"849":[4,159,4,189],"856":[538,9,538,86],"857":[4,159,4,189],"858":[570,37,570,40],"864":[538,9,538,86],"865":[4,198,4,227],"866":[574,9,574,48],"872":[541,9,541,32],"873":[4,198,4,227],"874":[581,9,581,34],"880":[547,9,547,64],"881":[4,233,4,248],"882":[591,21,591,39],"888":[547,9,547,64],"889":[4,233,4,248],"890":[591,41,591,44],"896":[551,9,551,35],"897":[4,258,4,297],"904":[553,17,553,50],"905":[4,258,4,297],"906":[591,41,591,44],"912":[554,21,554,58],"913":[4,312,4,331],"914":[601,30,601,48],"920":[555,30,555,76],"921":[4,312,4,331],"922":[611,17,611,36],"928":[556,27,556,70],"929":[4,350,4,378],"930":[619,33,619,51],"936":[562,9,562,27],"937":[4,350,4,378],"938":[619,53,619,56],"944":[564,9,564,24],"945":[4,394,4,414],"952":[566,9,566,28],"953":[4,394,4,414],"954":[619,53,619,56],"960":[570,21,570,35],"961":[4,432,4,459],"962":[634,9,634,23],"968":[574,9,574,48],"969":[4,432,4,459],"970":[634,9,634,37],"976":[580,22,580,61],"977":[4,481,4,529],"978":[637,9,637,34],"984":[581,9,581,34],"985":[4,481,4,529],"986":[639,9,639,28],"992":[584,9,584,32],"993":[4,545,4,587],"994":[639,32,639,64],"1000":[599,17,599,25],"1001":[4,545,4,587],"1002":[647,9,647,23],"1008":[602,17,602,20],"1009":[4,604,4,647],"1010":[647,9,647,37],"1016":[606,17,606,77],"1017":[4,604,4,647],"1018":[650,9,650,34],"1024":[606,17,606,107],"1025":[4,656,4,685],"1026":[652,9,652,28],"1032":[606,17,606,138],"1033":[4,656,4,685],"1034":[652,32,652,64],"1040":[606,17,606,138],"1041":[4,718,4,756],"1042":[660,9,660,23],"1048":[619,33,619,51],"1049":[4,718,4,756],"1050":[660,9,660,37],"1056":[611,17,611,36],"1057":[4,786,4,824],"1058":[663,9,663,34],"1064":[591,21,591,39],"1065":[4,786,4,824],"1066":[665,9,665,28],"1072":[634,9,634,37],"1073":[4,856,4,894],"1074":[665,32,665,64],"1080":[637,9,637,34],"1081":[4,856,4,894],"1082":[676,9,676,48],"1088":[639,9,639,64],"1089":[4,906,4,926],"1090":[676,52,676,74],"1096":[639,9,639,64],"1097":[4,906,4,926],"1098":[678,9,678,31],"1104":[643,11,643,29],"1105":[4,937,4,968],"1106":[678,54,678,89],"1112":[647,9,647,37],"1113":[4,937,4,968],"1114":[680,16,680,38],"1120":[650,9,650,34],"1121":[4,980,4,1006],"1122":[690,17,690,19],"1128":[652,9,652,64],"1129":[4,980,4,1006],"1130":[698,9,698,48],"1136":[652,9,652,64],"1137":[4,1015,4,1038],"1138":[707,9,707,22],"1144":[656,11,656,29],"1145":[4,1015,4,1038],"1146":[707,9,707,34],"1152":[660,9,660,37],"1153":[4,1048,4,1072],"1154":[708,16,708,35],"1160":[663,9,663,34],"1161":[4,1048,4,1072],"1162":[710,16,710,40],"1168":[665,9,665,64],"1169":[4,1083,4,1108],"1170":[728,73,728,75],"1176":[665,9,665,64],"1177":[4,1083,4,1108],"1178":[728,9,728,75],"1184":[669,11,669,29],"1185":[4,1117,4,1140],"1192":[676,9,676,74],"1193":[4,1117,4,1140],"1200":[676,9,676,74],"1201":[4,1154,4,1178],"1208":[678,9,678,50],"1209":[4,1154,4,1178],"1216":[678,9,678,89],"1217":[6,5,6,6],"1224":[680,16,680,38],"1225":[6,5,6,11],"1232":[678,9,678,89],"1233":[7,5,7,6],"1240":[688,17,688,20],"1241":[7,5,7,15],"1248":[690,17,690,19],"1249":[8,5,8,6],"1256":[698,9,698,48],"1257":[8,5,8,13],"1264":[707,9,707,34],"1265":[9,5,9,6],"1272":[709,9,709,30],"1273":[9,5,9,11],"1280":[709,9,709,30],"1281":[10,5,10,6],"1288":[728,9,728,75],"1289":[10,5,10,12],"1296":[734,21,734,40],"1297":[11,5,11,6],"1304":[735,23,735,62],"1305":[11,5,11,13],"1313":[12,5,12,6],"1321":[12,5,12,13],"1329":[13,5,13,6],"1337":[13,5,13,16],"1345":[14,5,14,6],"1353":[14,5,14,13],"1361":[15,5,15,6],"1369":[15,5,15,13],"1377":[5,17,16,2],"1385":[5,17,16,2],"1393":[5,17,16,2],"1401":[17,20,17,24],"1409":[17,20,17,24],"1417":[17,20,17,24],"1425":[18,16,18,17],"1433":[18,16,18,17],"1441":[18,16,18,17],"1449":[19,18,19,19],"1457":[19,18,19,19],"1465":[19,18,19,19],"1473":[21,16,21,20],"1481":[21,16,21,20],"1489":[21,16,21,20],"1497":[22,5,22,9],"1505":[22,22,22,24],"1513":[22,5,22,24],"1521":[22,5,22,25],"1529":[23,5,23,9],"1545":[23,15,23,25],"1553":[23,15,23,27],"1569":[23,5,23,27],"1577":[23,5,23,28],"1585":[24,5,24,9],"1593":[24,17,24,25],"1601":[24,5,24,25],"1609":[24,5,24,26],"1617":[20,17,25,2],"1625":[20,17,25,2],"1633":[20,17,25,2],"1641":[20,17,25,2],"1649":[20,17,25,2],"1657":[20,17,25,2],"1665":[27,16,27,18],"1673":[27,16,27,18],"1681":[27,16,27,18],"1689":[28,22,28,29],"1697":[29,9,29,13],"1705":[29,14,29,18],"1713":[29,22,29,29],"1721":[29,30,29,34],"1729":[29,22,29,35],"1737":[29,9,29,35],"1745":[29,9,29,36],"1753":[28,22,28,29],"1761":[28,5,30,6],"1769":[28,5,30,6],"1777":[31,12,31,16],"1785":[31,12,31,16],"1793":[31,5,31,17],"1801":[26,20,32,2],"1809":[26,20,32,2],"1817":[26,20,32,2],"1825":[26,20,32,2],"1833":[26,20,32,2],"1841":[26,20,32,2],"1849":[26,20,32,2],"1857":[26,20,32,2],"1865":[33,1,33,10],"1873":[33,1,33,20],"1881":[34,20,34,24],"1889":[34,20,34,34],"1897":[35,14,35,19],"1905":[35,20,35,28],"1913":[35,29,35,31],"1921":[35,33,35,35],"1929":[35,20,35,36],"1937":[35,14,35,37],"1945":[36,28,36,32],"1953":[36,28,36,42],"1961":[36,43,36,45],"1969":[36,28,36,46],"1977":[36,28,36,46],"1985":[36,28,36,46],"1993":[37,20,37,24],"2001":[37,20,37,34],"2009":[37,35,37,37],"2017":[37,13,37,39],"2025":[38,13,38,21],"2033":[38,22,38,25],"2041":[38,27,38,31],"2049":[38,13,38,32],"2057":[38,13,38,33],"2065":[34,20,34,34],"2073":[34,5,40,6],"2081":[34,5,40,6],"2089":[33,29,41,2],"2097":[33,29,41,2],"2105":[33,29,41,2],"2113":[33,29,41,2],"2121":[33,29,41,2],"2129":[33,29,41,2],"2137":[33,1,41,2],"2145":[33,1,41,3],"2153":[42,1,42,10],"2161":[42,1,42,20],"2169":[43,20,43,24],"2177":[43,20,43,34],"2185":[43,35,43,37],"2193":[43,20,43,38],"2201":[43,20,43,38],"2209":[43,20,43,38],"2217":[44,12,44,16],"2225":[44,12,44,26],"2233":[44,27,44,29],"2241":[44,5,44,31],"2249":[45,5,45,13],"2257":[45,14,45,17],"2265":[45,19,45,24],"2273":[45,5,45,25],"2281":[45,5,45,26],"2289":[42,28,46,2],"2297":[42,28,46,2],"2305":[42,28,46,2],"2313":[42,28,46,2],"2321":[42,28,46,2],"2329":[42,28,46,2],"2337":[42,28,46,2],"2345":[42,1,46,2],"2353":[42,1,46,3],"2361":[47,1,47,10],"2369":[47,1,47,20],"2377":[48,9,48,13],"2385":[48,9,48,23],"2393":[48,24,48,26],"2401":[48,9,48,27],"2409":[48,31,48,35],"2417":[49,16,49,21],"2425":[49,16,49,21],"2433":[49,9,49,22],"2441":[50,12,50,16],"2449":[50,12,50,26],"2457":[50,27,50,29],"2465":[50,12,50,30],"2473":[50,12,50,34],"2481":[50,38,50,42],"2489":[50,45,50,49],"2497":[50,52,50,57],"2505":[50,12,50,57],"2513":[50,5,50,58],"2521":[47,27,51,2],"2529":[47,27,51,2],"2537":[47,27,51,2],"2545":[47,27,51,2],"2553":[47,1,51,2],"2561":[47,1,51,3],"2569":[52,1,52,10],"2577":[52,1,52,20],"2585":[53,9,53,13],"2593":[53,9,53,23],"2601":[53,24,53,26],"2609":[53,9,53,27],"2617":[53,31,53,35],"2625":[54,16,54,21],"2633":[54,16,54,21],"2641":[54,9,54,22],"2649":[55,19,55,23],"2657":[55,19,55,33],"2665":[55,34,55,36],"2673":[55,19,55,37],"2681":[55,19,55,57],"2689":[55,61,55,69],"2697":[55,72,55,76],"2705":[55,72,55,86],"2713":[55,87,55,89],"2721":[55,72,55,90],"2729":[55,72,55,110],"2737":[55,113,55,117],"2745":[55,12,55,117],"2753":[55,5,55,118],"2761":[52,43,56,2],"2769":[52,43,56,2],"2777":[52,43,56,2],"2785":[52,43,56,2],"2793":[52,1,56,2],"2801":[52,1,56,3],"2809":[57,1,57,10],"2817":[57,1,57,20],"2825":[58,12,58,16],"2833":[58,12,58,26],"2841":[58,27,58,29],"2849":[58,5,58,31],"2857":[57,34,59,2],"2865":[57,34,59,2],"2873":[57,34,59,2],"2881":[57,34,59,2],"2889":[57,1,59,2],"2897":[57,1,59,3],"2905":[60,1,60,10],"2913":[60,1,60,20],"2921":[61,5,61,9],"2929":[61,5,61,19],"2937":[61,20,61,22],"2945":[61,26,61,45],"2953":[61,46,61,54],"2961":[61,26,61,55],"2969":[61,5,61,55],"2977":[61,5,61,56],"2985":[60,32,62,2],"2993":[60,32,62,2],"3001":[60,32,62,2],"3009":[60,32,62,2],"3017":[60,32,62,2],"3025":[60,1,62,2],"3033":[60,1,62,3],"3041":[64,18,64,25],"3049":[64,18,64,32],"3057":[64,18,64,32],"3065":[64,18,64,32],"3073":[65,9,65,15],"3081":[65,19,65,23],"3089":[65,27,65,35],"3097":[65,39,65,43],"3105":[66,16,66,24],"3113":[66,16,66,24],"3121":[66,9,66,25],"3129":[67,12,67,18],"3137":[67,24,67,32],"3145":[67,12,67,33],"3147":[67,12,67,23],"3153":[67,12,67,33],"3161":[67,5,67,34],"3169":[63,27,68,2],"3177":[63,27,68,2],"3185":[63,27,68,2],"3193":[63,27,68,2],"3201":[63,27,68,2],"3209":[63,27,68,2],"3217":[63,27,68,2],"3225":[69,20,69,34],"3233":[69,20,69,34],"3241":[69,20,69,34],"3249":[70,18,70,30],"3257":[70,18,70,30],"3265":[70,18,70,30],"3273":[71,17,71,28],"3281":[71,17,71,28],"3289":[71,17,71,28],"3297":[72,17,72,28],"3305":[72,17,72,28],"3313":[72,17,72,28],"3321":[74,12,74,14],"3329":[74,12,74,23],"3337":[74,34,74,36],"3345":[74,34,74,45],"3353":[74,34,74,60],"3361":[74,64,74,72],"3369":[74,12,74,72],"3377":[74,5,74,73],"3385":[73,22,75,2],"3393":[73,22,75,2],"3401":[73,22,75,2],"3409":[73,22,75,2],"3417":[73,22,75,2],"3425":[73,22,75,2],"3433":[77,9,77,15],"3441":[77,19,77,25],"3449":[77,19,77,40],"3457":[77,44,77,45],"3465":[78,20,78,47],"3473":[78,52,78,77],"3481":[78,48,78,79],"3489":[78,16,78,80],"3497":[78,16,78,80],"3505":[78,9,78,81],"3513":[80,9,80,15],"3521":[80,19,80,25],"3529":[80,19,80,40],"3537":[80,44,80,45],"3545":[81,20,81,45],"3553":[81,16,81,47],"3561":[81,16,81,47],"3569":[81,9,81,48],"3577":[83,16,83,44],"3585":[83,12,83,46],"3593":[83,12,83,46],"3601":[83,5,83,47],"3609":[76,33,84,2],"3617":[76,33,84,2],"3625":[76,33,84,2],"3633":[76,33,84,2],"3641":[76,33,84,2],"3649":[76,33,84,2],"3657":[86,9,86,13],"3665":[86,17,86,22],"3673":[86,26,86,31],"3681":[86,26,86,41],"3689":[87,9,87,14],"3697":[87,9,87,24],"3705":[87,35,87,45],"3713":[87,46,87,47],"3721":[87,48,87,95],"3729":[87,97,87,101],"3737":[87,97,87,106],"3745":[87,46,87,107],"3753":[87,31,87,108],"3761":[87,9,87,109],"3763":[87,9,87,30],"3769":[87,9,87,110],"3777":[89,9,89,14],"3785":[89,9,89,36],"3793":[89,40,89,41],"3801":[90,16,90,20],"3809":[90,29,90,33],"3817":[90,35,90,39],"3825":[90,16,90,40],"3827":[90,16,90,28],"3833":[90,16,90,40],"3841":[90,9,90,41],"3849":[92,5,92,10],"3857":[92,35,92,40],"3865":[92,35,92,62],"3873":[92,65,92,66],"3881":[92,5,92,66],"3889":[92,5,92,67],"3897":[93,5,93,10],"3905":[93,19,93,29],"3913":[93,5,93,29],"3921":[93,5,93,30],"3929":[94,5,94,10],"3937":[94,22,94,26],"3945":[94,27,94,32],"3953":[94,27,94,40],"3961":[94,18,94,41],"3969":[94,5,94,41],"3977":[94,5,94,42],"3985":[96,9,96,14],"3993":[96,23,96,35],"4001":[96,9,96,35],"4009":[96,9,96,36],"4017":[97,9,97,14],"4025":[97,9,97,19],"4033":[97,9,97,29],"4035":[97,9,97,27],"4041":[97,9,97,30],"4049":[98,9,98,14],"4057":[98,39,98,44],"4065":[98,39,98,66],"4073":[98,69,98,70],"4081":[98,9,98,70],"4089":[98,9,98,71],"4097":[99,13,99,18],"4105":[99,13,99,40],"4113":[99,44,99,45],"4121":[100,13,100,17],"4129":[100,26,100,35],"4137":[100,13,100,35],"4145":[100,13,100,36],"4153":[101,13,101,17],"4161":[101,23,101,30],"4169":[101,32,101,33],"4177":[101,34,101,79],"4185":[101,81,101,86],"4193":[101,81,101,94],"4201":[101,81,101,99],"4209":[101,101,101,106],"4217":[101,101,101,114],"4225":[101,101,101,119],"4233":[101,121,101,126],"4241":[101,121,101,141],"4249":[101,32,101,142],"4257":[101,13,101,143],"4259":[101,13,101,22],"4265":[101,13,101,144],"4273":[103,13,103,23],"4281":[104,17,104,32],"4289":[104,33,104,37],"4297":[104,39,104,44],"4305":[104,17,104,45],"4313":[104,17,104,46],"4321":[103,24,105,14],"4329":[103,24,105,14],"4337":[103,24,105,14],"4345":[105,16,105,21],"4353":[105,16,105,39],"4361":[103,13,105,40],"4369":[103,13,105,41],"4377":[95,33,107,6],"4385":[95,33,107,6],"4393":[95,33,107,6],"4401":[95,33,107,6],"4409":[95,33,107,6],"4417":[95,33,107,6],"4425":[108,5,108,10],"4433":[108,5,108,15],"4441":[108,21,108,30],"4449":[109,9,109,14],"4457":[109,39,109,44],"4465":[109,39,109,59],"4473":[109,9,109,59],"4481":[109,9,109,60],"4489":[111,13,111,20],"4497":[112,13,112,20],"4505":[113,13,113,22],"4513":[114,13,114,25],"4521":[110,22,115,10],"4529":[110,22,115,10],"4537":[110,22,115,10],"4545":[116,9,116,15],"4553":[117,13,117,18],"4561":[117,13,117,23],"4569":[117,43,117,44],"4577":[117,13,117,45],"4579":[117,13,117,42],"4585":[117,13,117,46],"4593":[116,24,118,10],"4601":[116,24,118,10],"4609":[116,24,118,10],"4617":[116,24,118,10],"4625":[116,9,118,11],"4627":[116,9,116,23],"4633":[116,9,118,12],"4641":[119,9,119,14],"4649":[119,23,119,32],"4657":[119,9,119,32],"4665":[119,9,119,33],"4673":[120,9,120,14],"4681":[120,9,120,19],"4689":[120,25,120,32],"4697":[120,34,120,55],"4705":[120,9,120,56],"4707":[120,9,120,24],"4713":[120,9,120,57],"4721":[121,9,121,14],"4729":[121,9,121,19],"4737":[121,25,121,32],"4745":[121,34,121,46],"4753":[121,47,121,51],"4761":[121,53,121,58],"4769":[121,34,121,59],"4777":[121,9,121,60],"4779":[121,9,121,24],"4785":[121,9,121,61],"4793":[122,9,122,14],"4801":[122,9,122,19],"4809":[122,25,122,34],"4817":[122,36,122,50],"4825":[122,51,122,55],"4833":[122,57,122,62],"4841":[122,36,122,63],"4849":[122,9,122,64],"4851":[122,9,122,24],"4857":[122,9,122,65],"4865":[123,9,123,14],"4873":[123,9,123,19],"4881":[123,25,123,37],"4889":[123,39,123,56],"4897":[123,57,123,61],"4905":[123,63,123,68],"4913":[123,39,123,69],"4921":[123,9,123,70],"4923":[123,9,123,24],"4929":[123,9,123,71],"4937":[124,20,124,26],"4945":[124,32,124,37],"4953":[124,32,124,51],"4961":[124,20,124,52],"4963":[124,20,124,31],"4969":[124,20,124,52],"4977":[124,20,124,52],"4985":[125,13,125,17],"4993":[125,13,125,24],"5001":[125,28,125,29],"5009":[126,20,126,24],"5017":[126,30,126,41],"5025":[126,43,126,47],"5033":[126,20,126,48],"5035":[126,20,126,29],"5041":[126,20,126,48],"5049":[126,13,126,49],"5057":[127,21,127,25],"5065":[127,21,127,32],"5073":[127,21,127,32],"5081":[127,21,127,32],"5089":[128,22,128,23],"5097":[128,22,128,23],"5105":[128,22,128,23],"5113":[128,25,128,26],"5121":[128,29,128,33],"5129":[128,29,128,40],"5145":[128,42,128,43],"5153":[128,42,128,45],"5169":[129,13,129,18],"5177":[129,13,129,32],"5185":[129,33,129,37],"5193":[129,38,129,39],"5201":[129,33,129,40],"5209":[129,13,129,41],"5217":[129,57,129,61],"5225":[129,63,129,68],"5233":[129,63,129,73],"5241":[130,25,130,30],"5249":[130,33,130,34],"5257":[130,25,130,34],"5265":[130,17,130,35],"5273":[131,21,131,26],"5281":[131,30,131,31],"5289":[132,28,132,32],"5297":[132,38,132,49],"5305":[132,51,132,55],"5313":[132,28,132,56],"5315":[132,28,132,37],"5321":[132,28,132,56],"5329":[132,21,132,57],"5337":[129,75,134,14],"5345":[129,75,134,14],"5353":[129,75,134,14],"5361":[129,75,134,14],"5369":[129,75,134,14],"5377":[129,13,134,15],"5379":[129,13,129,56],"5385":[129,13,134,16],"5393":[108,32,136,6],"5401":[108,32,136,6],"5409":[108,32,136,6],"5417":[108,32,136,6],"5425":[108,32,136,6],"5433":[108,32,136,6],"5441":[108,32,136,6],"5449":[108,5,136,7],"5451":[108,5,108,20],"5457":[108,5,136,8],"5465":[137,5,137,10],"5473":[137,5,137,15],"5481":[137,21,137,28],"5489":[137,30,137,42],"5497":[137,43,137,47],"5505":[137,49,137,54],"5513":[137,30,137,55],"5521":[137,5,137,56],"5523":[137,5,137,20],"5529":[137,5,137,57],"5537":[138,5,138,10],"5545":[138,5,138,15],"5553":[138,21,138,28],"5561":[138,30,138,42],"5569":[138,43,138,47],"5577":[138,49,138,54],"5585":[138,30,138,55],"5593":[138,5,138,56],"5595":[138,5,138,20],"5601":[138,5,138,57],"5609":[139,5,139,10],"5617":[139,5,139,15],"5625":[139,21,139,30],"5633":[139,32,139,44],"5641":[139,45,139,49],"5649":[139,51,139,56],"5657":[139,32,139,57],"5665":[139,5,139,58],"5667":[139,5,139,20],"5673":[139,5,139,59],"5681":[140,5,140,10],"5689":[140,5,140,15],"5697":[140,21,140,33],"5705":[140,35,140,47],"5713":[140,48,140,52],"5721":[140,54,140,59],"5729":[140,35,140,60],"5737":[140,5,140,61],"5739":[140,5,140,20],"5745":[140,5,140,62],"5753":[141,5,141,10],"5761":[141,5,141,15],"5769":[141,5,141,25],"5771":[141,5,141,23],"5777":[141,5,141,26],"5785":[85,23,142,2],"5793":[85,23,142,2],"5801":[85,23,142,2],"5809":[85,23,142,2],"5817":[85,23,142,2],"5825":[85,23,142,2],"5833":[85,23,142,2],"5841":[85,23,142,2],"5849":[146,13,146,21],"5857":[147,22,147,27],"5865":[147,22,147,37],"5873":[147,42,147,50],"5881":[147,42,147,61],"5889":[147,22,147,62],"5891":[147,22,147,41],"5897":[148,38,148,43],"5905":[148,38,148,53],"5913":[148,74,148,82],"5921":[148,74,148,93],"5929":[148,38,148,94],"5931":[148,38,148,73],"5937":[146,28,149,14],"5945":[146,13,149,15],"5947":[146,13,146,27],"5953":[146,13,149,16],"5961":[150,17,150,22],"5969":[150,17,150,29],"5977":[150,17,150,39],"5979":[150,17,150,37],"5985":[151,17,151,22],"5993":[151,17,151,29],"6001":[151,36,151,37],"6009":[151,38,151,69],"6017":[151,71,151,79],"6025":[151,71,151,83],"6033":[151,93,151,98],"6041":[151,71,151,99],"6043":[151,71,151,92],"6049":[151,101,151,105],"6057":[151,101,151,110],"6065":[151,36,151,111],"6073":[151,17,151,112],"6075":[151,17,151,35],"6081":[151,17,151,113],"6089":[152,13,152,18],"6097":[152,13,152,28],"6105":[152,34,152,42],"6113":[152,34,152,53],"6121":[152,55,152,59],"6129":[152,61,152,69],"6137":[152,13,152,70],"6139":[152,13,152,33],"6145":[152,13,152,71],"6153":[154,13,154,18],"6161":[154,13,154,28],"6169":[154,39,154,49],"6177":[154,50,154,53],"6185":[154,35,154,54],"6193":[154,13,154,55],"6195":[154,13,154,34],"6201":[154,13,154,56],"6209":[155,13,155,17],"6217":[155,13,155,27],"6219":[155,13,155,25],"6225":[155,13,155,28],"6233":[153,11,156,10],"6241":[144,12,157,6],"6249":[144,12,157,6],"6257":[144,12,157,6],"6265":[144,12,157,6],"6273":[144,12,157,6],"6281":[144,12,157,6],"6289":[144,5,157,7],"6297":[143,22,158,2],"6305":[143,22,158,2],"6313":[143,22,158,2],"6321":[143,22,158,2],"6329":[143,22,158,2],"6337":[143,22,158,2],"6345":[143,22,158,2],"6353":[161,13,161,18],"6361":[161,13,161,24],"6369":[161,28,161,40],"6377":[161,44,161,49],"6385":[161,44,161,55],"6393":[161,59,161,68],"6401":[162,13,162,20],"6409":[162,13,162,20],"6417":[163,9,163,14],"6425":[163,23,163,35],"6433":[163,9,163,35],"6441":[163,9,163,36],"6449":[164,13,164,18],"6457":[164,13,164,43],"6465":[164,47,164,51],"6473":[165,13,165,29],"6481":[165,30,165,34],"6489":[165,36,165,40],"6497":[165,36,165,42],"6505":[165,44,165,51],"6513":[165,54,165,58],"6521":[165,53,165,59],"6529":[165,13,165,60],"6537":[165,13,165,61],"6545":[166,13,166,18],"6553":[166,13,166,25],"6561":[166,13,166,34],"6563":[166,13,166,32],"6569":[167,13,167,18],"6577":[167,13,167,25],"6585":[167,31,167,32],"6593":[167,33,167,64],"6601":[167,66,167,70],"6609":[167,66,167,75],"6617":[167,77,167,81],"6625":[167,92,167,95],"6633":[167,77,167,96],"6635":[167,77,167,91],"6641":[167,31,167,97],"6649":[167,13,167,98],"6651":[167,13,167,30],"6657":[167,13,167,99],"6665":[168,13,168,18],"6673":[168,13,168,28],"6681":[169,13,169,18],"6689":[169,13,169,28],"6697":[169,39,169,49],"6705":[169,50,169,51],"6713":[169,52,169,84],"6721":[169,86,169,90],"6729":[169,86,169,95],"6737":[169,97,169,101],"6745":[169,112,169,115],"6753":[169,97,169,116],"6755":[169,97,169,111],"6761":[169,50,169,117],"6769":[169,35,169,118],"6777":[169,13,169,119],"6779":[169,13,169,34],"6785":[169,13,169,120],"6793":[170,9,170,13],"6801":[170,9,170,23],"6803":[170,9,170,21],"6809":[170,9,170,24],"6817":[171,13,171,18],"6825":[171,13,171,28],"6833":[171,32,171,36],"6841":[171,47,171,54],"6849":[171,32,171,55],"6851":[171,32,171,46],"6857":[171,32,171,62],"6865":[171,65,171,66],"6873":[172,13,172,17],"6881":[172,23,172,30],"6889":[172,32,172,35],"6897":[172,37,172,41],"6905":[172,13,172,42],"6907":[172,13,172,22],"6913":[172,13,172,43],"6921":[173,13,173,18],"6929":[173,13,173,28],"6937":[174,13,174,23],"6945":[175,17,175,32],"6953":[175,33,175,37],"6961":[175,39,175,44],"6969":[175,17,175,45],"6977":[175,17,175,46],"6985":[174,24,176,14],"6993":[174,24,176,14],"7001":[174,24,176,14],"7009":[176,16,176,21],"7017":[176,16,176,39],"7025":[174,13,176,40],"7033":[174,13,176,41],"7041":[160,12,177,6],"7049":[160,12,177,6],"7057":[160,12,177,6],"7065":[160,12,177,6],"7073":[160,12,177,6],"7081":[160,12,177,6],"7089":[160,5,177,7],"7097":[159,20,178,2],"7105":[159,20,178,2],"7113":[159,20,178,2],"7121":[159,20,178,2],"7129":[159,20,178,2],"7137":[159,20,178,2],"7145":[159,20,178,2],"7153":[181,13,181,18],"7161":[181,13,181,24],"7169":[181,28,181,40],"7177":[181,44,181,49],"7185":[181,44,181,55],"7193":[181,59,181,68],"7201":[182,13,182,20],"7209":[182,13,182,20],"7217":[183,9,183,14],"7225":[183,23,183,35],"7233":[183,9,183,35],"7241":[183,9,183,36],"7249":[184,13,184,18],"7257":[184,13,184,43],"7265":[184,47,184,51],"7273":[185,13,185,29],"7281":[185,30,185,34],"7289":[185,36,185,40],"7297":[185,36,185,42],"7305":[185,44,185,51],"7313":[185,54,185,58],"7321":[185,53,185,59],"7329":[185,13,185,60],"7337":[185,13,185,61],"7345":[186,13,186,18],"7353":[186,13,186,25],"7361":[186,13,186,34],"7363":[186,13,186,32],"7369":[187,13,187,18],"7377":[187,13,187,25],"7385":[187,31,187,32],"7393":[187,33,187,64],"7401":[187,66,187,70],"7409":[187,66,187,75],"7417":[187,77,187,81],"7425":[187,92,187,95],"7433":[187,77,187,96],"7435":[187,77,187,91],"7441":[187,31,187,97],"7449":[187,13,187,98],"7451":[187,13,187,30],"7457":[187,13,187,99],"7465":[188,13,188,18],"7473":[188,13,188,28],"7481":[189,13,189,18],"7489":[189,13,189,28],"7497":[189,39,189,49],"7505":[189,50,189,51],"7513":[189,52,189,84],"7521":[189,86,189,90],"7529":[189,86,189,95],"7537":[189,97,189,101],"7545":[189,112,189,115],"7553":[189,97,189,116],"7555":[189,97,189,111],"7561":[189,50,189,117],"7569":[189,35,189,118],"7577":[189,13,189,119],"7579":[189,13,189,34],"7585":[189,13,189,120],"7593":[190,13,190,17],"7601":[190,28,190,35],"7609":[190,13,190,36],"7611":[190,13,190,27],"7617":[190,13,190,43],"7625":[190,46,190,47],"7633":[191,13,191,17],"7641":[191,23,191,30],"7649":[191,32,191,35],"7657":[191,37,191,41],"7665":[191,13,191,42],"7667":[191,13,191,22],"7673":[191,13,191,43],"7681":[192,13,192,18],"7689":[192,13,192,28],"7697":[193,13,193,23],"7705":[194,17,194,32],"7713":[194,33,194,37],"7721":[194,39,194,44],"7729":[194,17,194,45],"7737":[194,17,194,46],"7745":[193,24,195,14],"7753":[193,24,195,14],"7761":[193,24,195,14],"7769":[195,16,195,21],"7777":[195,16,195,39],"7785":[193,13,195,40],"7793":[193,13,195,41],"7801":[196,9,196,13],"7809":[196,9,196,23],"7811":[196,9,196,21],"7817":[196,9,196,24],"7825":[180,12,197,6],"7833":[180,12,197,6],"7841":[180,12,197,6],"7849":[180,12,197,6],"7857":[180,12,197,6],"7865":[180,12,197,6],"7873":[180,5,197,7],"7881":[179,25,198,2],"7889":[179,25,198,2],"7897":[179,25,198,2],"7905":[179,25,198,2],"7913":[179,25,198,2],"7921":[179,25,198,2],"7929":[179,25,198,2],"7937":[201,13,201,18],"7945":[201,13,201,24],"7953":[201,28,201,40],"7961":[201,44,201,49],"7969":[201,44,201,55],"7977":[201,59,201,68],"7985":[202,13,202,20],"7993":[202,13,202,20],"8001":[203,9,203,14],"8009":[203,23,203,35],"8017":[203,9,203,35],"8025":[203,9,203,36],"8033":[204,13,204,18],"8041":[204,13,204,43],"8049":[204,47,204,51],"8057":[205,13,205,29],"8065":[205,30,205,34],"8073":[205,36,205,40],"8081":[205,36,205,42],"8089":[205,44,205,53],"8097":[205,56,205,60],"8105":[205,55,205,61],"8113":[205,13,205,62],"8121":[205,13,205,63],"8129":[206,13,206,18],"8137":[206,13,206,25],"8145":[206,13,206,34],"8147":[206,13,206,32],"8153":[207,13,207,18],"8161":[207,13,207,25],"8169":[207,31,207,32],"8177":[207,33,207,54],"8185":[207,56,207,60],"8193":[207,56,207,65],"8201":[207,31,207,66],"8209":[207,13,207,67],"8211":[207,13,207,30],"8217":[207,13,207,68],"8225":[208,13,208,18],"8233":[208,13,208,28],"8241":[209,13,209,18],"8249":[209,13,209,28],"8257":[209,39,209,49],"8265":[209,50,209,51],"8273":[209,52,209,73],"8281":[209,75,209,79],"8289":[209,75,209,84],"8297":[209,50,209,85],"8305":[209,35,209,86],"8313":[209,13,209,87],"8315":[209,13,209,34],"8321":[209,13,209,88],"8329":[210,9,210,13],"8337":[210,19,210,28],"8345":[210,30,210,33],"8353":[210,35,210,39],"8361":[210,9,210,40],"8363":[210,9,210,18],"8369":[210,9,210,41],"8377":[211,13,211,18],"8385":[211,13,211,28],"8393":[212,13,212,23],"8401":[213,17,213,32],"8409":[213,33,213,37],"8417":[213,39,213,44],"8425":[213,17,213,45],"8433":[213,17,213,46],"8441":[212,24,214,14],"8449":[212,24,214,14],"8457":[212,24,214,14],"8465":[214,16,214,21],"8473":[214,16,214,39],"8481":[212,13,214,40],"8489":[212,13,214,41],"8497":[215,9,215,13],"8505":[215,9,215,23],"8507":[215,9,215,21],"8513":[215,9,215,24],"8521":[200,12,216,6],"8529":[200,12,216,6],"8537":[200,12,216,6],"8545":[200,12,216,6],"8553":[200,12,216,6],"8561":[200,12,216,6],"8569":[200,5,216,7],"8577":[199,22,217,2],"8585":[199,22,217,2],"8593":[199,22,217,2],"8601":[199,22,217,2],"8609":[199,22,217,2],"8617":[199,22,217,2],"8625":[199,22,217,2],"8633":[220,13,220,18],"8641":[220,13,220,24],"8649":[220,28,220,40],"8657":[220,44,220,49],"8665":[220,44,220,55],"8673":[220,59,220,68],"8681":[221,13,221,20],"8689":[221,13,221,20],"8697":[222,9,222,14],"8705":[222,23,222,35],"8713":[222,9,222,35],"8721":[222,9,222,36],"8729":[223,13,223,18],"8737":[223,13,223,43],"8745":[223,47,223,51],"8753":[224,13,224,29],"8761":[224,30,224,34],"8769":[224,36,224,40],"8777":[224,36,224,42],"8785":[224,44,224,51],"8793":[224,54,224,58],"8801":[224,53,224,59],"8809":[224,13,224,60],"8817":[224,13,224,61],"8825":[225,13,225,18],"8833":[225,13,225,25],"8841":[225,13,225,34],"8843":[225,13,225,32],"8849":[226,13,226,18],"8857":[226,13,226,25],"8865":[226,31,226,32],"8873":[226,33,226,51],"8881":[226,53,226,57],"8889":[226,53,226,62],"8897":[226,31,226,63],"8905":[226,13,226,64],"8907":[226,13,226,30],"8913":[226,13,226,65],"8921":[227,13,227,18],"8929":[227,13,227,28],"8937":[228,13,228,18],"8945":[228,13,228,28],"8953":[228,39,228,49],"8961":[228,50,228,51],"8969":[228,52,228,78],"8977":[228,80,228,84],"8985":[228,80,228,89],"8993":[228,50,228,90],"9001":[228,35,228,91],"9009":[228,13,228,92],"9011":[228,13,228,34],"9017":[228,13,228,93],"9025":[229,9,229,13],"9033":[229,19,229,26],"9041":[229,28,229,31],"9049":[229,33,229,37],"9057":[229,9,229,38],"9059":[229,9,229,18],"9065":[229,9,229,39],"9073":[230,13,230,18],"9081":[230,13,230,28],"9089":[231,13,231,23],"9097":[232,17,232,32],"9105":[232,33,232,37],"9113":[232,39,232,44],"9121":[232,17,232,45],"9129":[232,17,232,46],"9137":[231,24,233,14],"9145":[231,24,233,14],"9153":[231,24,233,14],"9161":[233,16,233,21],"9169":[233,16,233,39],"9177":[231,13,233,40],"9185":[231,13,233,41],"9193":[234,9,234,13],"9201":[234,9,234,23],"9203":[234,9,234,21],"9209":[234,9,234,24],"9217":[219,12,235,6],"9225":[219,12,235,6],"9233":[219,12,235,6],"9241":[219,12,235,6],"9249":[219,12,235,6],"9257":[219,12,235,6],"9265":[219,5,235,7],"9273":[218,20,236,2],"9281":[218,20,236,2],"9289":[218,20,236,2],"9297":[218,20,236,2],"9305":[218,20,236,2],"9313":[218,20,236,2],"9321":[218,20,236,2],"9329":[239,20,239,26],"9337":[239,32,239,37],"9345":[239,32,239,51],"9353":[239,20,239,52],"9355":[239,20,239,31],"9361":[239,20,239,52],"9369":[239,20,239,52],"9377":[240,13,240,17],"9385":[240,13,240,24],"9393":[240,28,240,29],"9401":[241,20,241,28],"9409":[241,29,241,33],"9417":[241,35,241,39],"9425":[241,20,241,40],"9433":[241,20,241,40],"9441":[241,13,241,41],"9449":[242,21,242,25],"9457":[242,21,242,32],"9465":[242,21,242,32],"9473":[242,21,242,32],"9481":[243,22,243,23],"9489":[243,22,243,23],"9497":[243,22,243,23],"9505":[243,25,243,26],"9513":[243,29,243,33],"9521":[243,29,243,40],"9537":[243,42,243,43],"9545":[243,42,243,45],"9561":[244,13,244,18],"9569":[244,13,244,32],"9577":[244,33,244,37],"9585":[244,38,244,39],"9593":[244,33,244,40],"9601":[244,13,244,41],"9609":[244,57,244,61],"9617":[244,63,244,68],"9625":[244,63,244,73],"9633":[245,25,245,30],"9641":[245,33,245,34],"9649":[245,25,245,34],"9657":[245,17,245,35],"9665":[246,21,246,26],"9673":[246,30,246,31],"9681":[247,28,247,36],"9689":[247,37,247,41],"9697":[247,43,247,47],"9705":[247,28,247,48],"9713":[247,28,247,48],"9721":[247,21,247,49],"9729":[244,75,249,14],"9737":[244,75,249,14],"9745":[244,75,249,14],"9753":[244,75,249,14],"9761":[244,75,249,14],"9769":[244,13,249,15],"9771":[244,13,244,56],"9777":[244,13,249,16],"9785":[238,32,251,6],"9793":[238,32,251,6],"9801":[238,32,251,6],"9809":[238,32,251,6],"9817":[238,32,251,6],"9825":[238,32,251,6],"9833":[238,32,251,6],"9841":[238,32,251,6],"9849":[238,32,251,6],"9857":[253,9,253,29],"9865":[254,29,254,33],"9873":[254,25,254,35],"9881":[254,25,254,45],"9883":[254,25,254,43],"9889":[254,25,254,45],"9897":[254,25,254,45],"9905":[255,13,255,17],"9913":[255,26,255,38],"9921":[255,52,255,56],"9929":[255,40,255,58],"9937":[256,21,256,24],"9945":[257,21,257,26],"9953":[257,35,257,47],"9961":[257,21,257,47],"9969":[257,21,257,48],"9977":[258,28,258,32],"9985":[258,38,258,45],"9993":[258,47,258,50],"10001":[258,52,258,56],"10009":[258,28,258,57],"10011":[258,28,258,37],"10017":[258,28,258,57],"10025":[258,21,258,58],"10033":[260,17,260,22],"10041":[260,47,260,51],"10049":[260,43,260,53],"10057":[260,43,260,63],"10059":[260,43,260,61],"10065":[260,66,260,71],"10073":[260,17,260,71],"10081":[260,17,260,72],"10089":[261,22,261,25],"10097":[262,21,262,26],"10105":[262,38,262,39],"10113":[262,38,262,46],"10121":[262,21,262,46],"10129":[262,21,262,47],"10137":[264,17,264,21],"10145":[264,27,264,37],"10153":[264,39,264,40],"10161":[264,39,264,47],"10169":[264,49,264,53],"10177":[264,17,264,54],"10179":[264,17,264,26],"10185":[264,17,264,55],"10193":[265,17,265,22],"10201":[265,45,265,70],"10209":[265,71,265,76],"10217":[265,71,265,85],"10225":[265,45,265,86],"10233":[265,17,265,86],"10241":[265,17,265,87],"10249":[266,17,266,22],"10257":[266,17,266,30],"10265":[266,53,266,58],"10273":[266,53,266,78],"10281":[266,17,266,78],"10289":[266,17,266,79],"10297":[267,21,267,26],"10305":[267,21,267,33],"10313":[267,21,267,42],"10315":[267,21,267,40],"10321":[268,21,268,26],"10329":[268,21,268,33],"10337":[268,39,268,40],"10345":[268,41,268,81],"10353":[268,83,268,87],"10361":[268,83,268,92],"10369":[268,94,268,98],"10377":[268,109,268,110],"10385":[268,109,268,117],"10393":[268,94,268,118],"10395":[268,94,268,108],"10401":[268,39,268,119],"10409":[268,21,268,120],"10411":[268,21,268,38],"10417":[268,21,268,121],"10425":[269,22,269,36],"10433":[269,37,269,42],"10441":[269,22,269,43],"10449":[269,47,269,52],"10457":[269,47,269,72],"10465":[269,76,269,80],"10473":[270,21,270,26],"10481":[270,35,270,47],"10489":[270,21,270,47],"10497":[270,21,270,48],"10505":[271,28,271,32],"10513":[271,38,271,45],"10521":[271,51,271,61],"10529":[271,62,271,92],"10537":[271,47,271,93],"10545":[271,95,271,99],"10553":[271,28,271,100],"10555":[271,28,271,37],"10561":[271,28,271,100],"10569":[271,21,271,101],"10577":[273,21,273,26],"10585":[273,21,273,35],"10593":[273,39,273,44],"10601":[273,39,273,53],"10609":[273,39,273,56],"10617":[274,21,274,26],"10625":[274,21,274,40],"10633":[274,48,274,53],"10641":[274,48,274,62],"10649":[274,48,274,65],"10657":[274,21,274,65],"10665":[274,21,274,66],"10673":[275,21,275,26],"10681":[275,21,275,51],"10689":[275,55,275,59],"10697":[276,21,276,26],"10705":[276,35,276,44],"10713":[276,21,276,44],"10721":[276,21,276,45],"10729":[277,28,277,32],"10737":[277,38,277,47],"10745":[277,49,277,53],"10753":[277,28,277,54],"10755":[277,28,277,37],"10761":[277,28,277,54],"10769":[277,21,277,55],"10777":[279,17,279,33],"10785":[279,34,279,38],"10793":[279,40,279,44],"10801":[279,40,279,46],"10809":[279,48,279,57],"10817":[279,60,279,64],"10825":[279,59,279,65],"10833":[280,21,280,26],"10841":[280,35,280,44],"10849":[280,21,280,44],"10857":[280,21,280,45],"10865":[281,28,281,32],"10873":[281,38,281,47],"10881":[281,49,281,53],"10889":[281,28,281,54],"10891":[281,28,281,37],"10897":[281,28,281,54],"10905":[281,21,281,55],"10913":[279,67,282,18],"10921":[279,67,282,18],"10929":[279,67,282,18],"10937":[279,67,282,18],"10945":[279,67,282,18],"10953":[279,17,282,19],"10961":[279,17,282,20],"10969":[255,60,283,14],"10977":[255,60,283,14],"10985":[255,60,283,14],"10993":[255,60,283,14],"11001":[255,60,283,14],"11009":[255,13,283,15],"11011":[255,13,255,25],"11017":[255,13,283,16],"11025":[253,30,284,10],"11033":[253,30,284,10],"11041":[253,30,284,10],"11049":[253,30,284,10],"11057":[253,9,284,11],"11065":[253,9,284,12],"11073":[252,12,285,6],"11081":[252,12,285,6],"11089":[252,12,285,6],"11097":[252,12,285,6],"11105":[252,12,285,6],"11113":[252,5,285,7],"11121":[237,22,286,2],"11129":[237,22,286,2],"11137":[237,22,286,2],"11145":[237,22,286,2],"11153":[237,22,286,2],"11161":[237,22,286,2],"11169":[237,22,286,2],"11177":[237,22,286,2],"11185":[288,9,288,10],"11193":[289,16,289,17],"11201":[289,16,289,27],"11203":[289,16,289,25],"11209":[289,16,289,27],"11217":[289,9,289,28],"11225":[290,12,290,17],"11233":[290,12,290,17],"11241":[290,5,290,18],"11249":[287,15,291,2],"11257":[287,15,291,2],"11265":[287,15,291,2],"11273":[287,15,291,2],"11281":[287,15,291,2],"11289":[287,15,291,2],"11297":[293,16,293,24],"11305":[293,28,293,38],"11313":[294,26,294,31],"11321":[294,26,294,56],"11329":[295,17,295,22],"11337":[295,17,295,47],"11345":[295,48,295,52],"11353":[295,17,295,53],"11361":[295,54,295,56],"11369":[295,17,295,57],"11377":[296,29,296,34],"11385":[296,29,296,59],"11393":[296,60,296,64],"11401":[296,29,296,65],"11409":[296,29,296,65],"11417":[296,29,296,65],"11425":[297,17,297,22],"11433":[297,23,297,25],"11441":[297,17,297,26],"11449":[297,33,297,38],"11457":[297,40,297,46],"11465":[297,17,297,47],"11467":[297,17,297,32],"11473":[297,17,297,48],"11481":[294,26,294,56],"11489":[294,9,299,10],"11497":[294,9,299,10],"11505":[300,9,300,16],"11513":[300,9,300,16],"11521":[302,24,302,30],"11529":[302,36,302,41],"11537":[302,36,302,66],"11545":[302,24,302,67],"11547":[302,24,302,35],"11553":[302,24,302,74],"11561":[302,24,302,74],"11569":[302,24,302,74],"11577":[303,9,303,21],"11585":[303,25,303,26],"11593":[304,16,304,24],"11601":[304,25,304,29],"11609":[304,31,304,35],"11617":[304,16,304,36],"11625":[304,16,304,36],"11633":[304,9,304,37],"11641":[305,22,305,27],"11649":[305,22,305,52],"11657":[306,13,306,18],"11665":[306,13,306,43],"11673":[306,44,306,48],"11681":[306,13,306,49],"11689":[306,50,306,52],"11697":[306,13,306,53],"11705":[307,25,307,30],"11713":[307,25,307,55],"11721":[307,56,307,60],"11729":[307,25,307,61],"11737":[307,25,307,61],"11745":[307,25,307,61],"11753":[308,27,308,33],"11761":[308,40,308,41],"11769":[308,27,308,42],"11771":[308,27,308,39],"11777":[308,27,308,42],"11785":[308,27,308,42],"11793":[309,13,309,20],"11801":[310,32,310,44],"11809":[310,47,310,48],"11817":[310,32,310,48],"11825":[310,17,310,49],"11833":[311,21,311,33],"11841":[311,37,311,38],"11849":[312,21,312,29],"11857":[312,30,312,34],"11865":[312,36,312,40],"11873":[312,21,312,41],"11881":[312,21,312,42],"11889":[309,26,314,14],"11897":[309,26,314,14],"11905":[309,26,314,14],"11913":[309,26,314,14],"11921":[309,26,314,14],"11929":[309,13,314,15],"11931":[309,13,309,25],"11937":[309,13,314,16],"11945":[315,13,315,18],"11953":[315,19,315,21],"11961":[315,13,315,22],"11969":[315,29,315,34],"11977":[315,36,315,43],"11985":[315,13,315,44],"11987":[315,13,315,28],"11993":[315,13,315,45],"12001":[305,22,305,52],"12009":[305,5,317,6],"12017":[305,5,317,6],"12025":[292,24,318,2],"12033":[292,24,318,2],"12041":[292,24,318,2],"12049":[292,24,318,2],"12057":[292,24,318,2],"12065":[292,24,318,2],"12073":[292,24,318,2],"12081":[292,24,318,2],"12089":[292,24,318,2],"12097":[292,24,318,2],"12105":[292,24,318,2],"12113":[292,24,318,2],"12121":[292,24,318,2],"12129":[292,24,318,2],"12137":[320,5,320,16],"12145":[321,5,321,21],"12153":[322,5,322,24],"12161":[323,5,323,16],"12169":[324,5,324,20],"12177":[325,5,325,11],"12185":[326,5,326,11],"12193":[327,5,327,11],"12201":[328,5,328,16],"12209":[329,5,329,28],"12217":[330,5,330,14],"12225":[331,5,331,24],"12233":[332,5,332,20],"12241":[333,5,333,31],"12249":[334,5,334,10],"12257":[335,5,335,9],"12265":[336,5,336,11],"12273":[337,5,337,10],"12281":[338,5,338,25],"12289":[339,5,339,19],"12297":[319,19,340,2],"12305":[319,19,340,2],"12313":[319,19,340,2],"12321":[342,16,342,20],"12329":[342,16,342,20],"12337":[342,16,342,20],"12345":[343,5,343,17],"12353":[343,23,343,27],"12361":[343,5,343,28],"12363":[343,5,343,22],"12369":[343,5,343,29],"12377":[344,9,344,21],"12385":[344,25,344,29],"12393":[345,28,345,32],"12401":[345,33,345,42],"12409":[345,24,345,43],"12417":[345,24,345,43],"12425":[345,9,345,44],"12433":[347,26,347,33],"12441":[347,26,347,48],"12449":[347,52,347,54],"12457":[347,26,347,54],"12465":[347,26,347,54],"12473":[348,5,348,9],"12481":[349,18,349,25],"12489":[350,24,350,33],"12497":[350,20,350,35],"12505":[351,17,351,23],"12513":[351,24,351,32],"12521":[351,34,351,41],"12529":[351,17,351,42],"12537":[352,16,352,28],"12545":[353,27,353,34],"12553":[353,27,353,44],"12561":[353,48,353,57],"12569":[353,60,353,67],"12577":[353,60,353,77],"12585":[353,80,353,84],"12593":[354,25,354,39],"12601":[355,28,355,35],"12609":[355,28,355,53],"12617":[355,57,355,61],"12625":[356,27,356,34],"12633":[356,27,356,44],"12641":[356,48,356,57],"12649":[356,60,356,67],"12657":[356,60,356,77],"12665":[356,80,356,85],"12673":[357,32,357,46],"12681":[358,19,358,23],"12689":[359,35,359,42],"12697":[359,35,359,67],"12705":[360,24,360,31],"12713":[360,24,360,45],"12721":[360,49,360,51],"12737":[361,13,361,21],"12745":[361,13,361,23],"12761":[362,14,362,21],"12769":[362,14,362,25],"12777":[363,28,363,35],"12785":[363,28,363,53],"12793":[364,30,364,37],"12801":[364,30,364,57],"12809":[364,65,364,93],"12817":[364,61,364,95],"12825":[365,17,365,24],"12833":[365,17,365,38],"12841":[365,42,365,53],"12849":[366,23,366,35],"12857":[367,15,367,22],"12865":[367,15,367,27],"12873":[367,30,367,37],"12881":[367,30,367,42],"12889":[367,45,367,57],"12897":[368,15,368,19],"12905":[369,28,369,29],"12913":[371,19,371,26],"12921":[371,19,371,31],"12929":[372,19,372,26],"12937":[372,19,372,31],"12945":[373,19,373,26],"12953":[373,19,373,31],"12961":[373,34,373,35],"12969":[373,36,373,43],"12977":[373,45,373,52],"12985":[373,45,373,57],"12993":[373,59,373,66],"13001":[373,59,373,71],"13009":[373,34,373,72],"13017":[373,75,373,82],"13025":[373,75,373,87],"13033":[370,24,374,10],"13041":[348,14,375,6],"13049":[348,5,375,6],"13057":[348,5,375,7],"13065":[376,13,376,17],"13073":[376,13,376,19],"13081":[376,13,376,19],"13089":[376,13,376,19],"13097":[377,5,377,12],"13105":[377,20,377,21],"13113":[377,20,377,26],"13121":[377,5,377,26],"13129":[377,5,377,27],"13137":[378,5,378,16],"13145":[378,17,378,21],"13153":[378,23,378,29],"13161":[378,31,378,37],"13169":[378,39,378,40],"13177":[378,39,378,54],"13185":[378,56,378,58],"13193":[378,5,378,59],"13201":[378,5,378,60],"13209":[379,5,379,16],"13217":[379,17,379,21],"13225":[379,23,379,29],"13233":[379,31,379,37],"13241":[379,39,379,40],"13249":[379,39,379,48],"13257":[379,50,379,52],"13265":[379,5,379,53],"13273":[379,5,379,54],"13281":[380,5,380,16],"13289":[380,17,380,21],"13297":[380,23,380,44],"13305":[380,46,380,67],"13313":[380,69,380,70],"13321":[380,69,380,78],"13329":[380,80,380,82],"13337":[380,5,380,83],"13345":[380,5,380,84],"13353":[381,5,381,22],"13361":[381,23,381,27],"13369":[381,29,381,33],"13377":[381,35,381,36],"13385":[381,35,381,39],"13393":[381,5,381,40],"13401":[381,5,381,41],"13409":[382,5,382,9],"13417":[382,26,382,35],"13425":[382,41,382,48],"13433":[382,37,382,50],"13441":[382,5,382,51],"13443":[382,5,382,25],"13449":[382,5,382,52],"13457":[383,5,383,9],"13465":[383,26,383,32],"13473":[383,38,383,42],"13481":[383,34,383,44],"13489":[383,5,383,45],"13491":[383,5,383,25],"13497":[383,5,383,46],"13505":[384,5,384,9],"13513":[384,26,384,33],"13521":[384,39,384,44],"13529":[384,35,384,46],"13537":[384,5,384,47],"13539":[384,5,384,25],"13545":[384,5,384,48],"13553":[385,5,385,9],"13561":[385,26,385,34],"13569":[385,40,385,46],"13577":[385,36,385,48],"13585":[385,5,385,49],"13587":[385,5,385,25],"13593":[385,5,385,50],"13601":[386,5,386,9],"13609":[386,26,386,32],"13617":[386,38,386,42],"13625":[386,34,386,44],"13633":[386,5,386,45],"13635":[386,5,386,25],"13641":[386,5,386,46],"13649":[387,5,387,9],"13657":[387,26,387,39],"13665":[387,45,387,54],"13673":[387,41,387,56],"13681":[387,5,387,57],"13683":[387,5,387,25],"13689":[387,5,387,58],"13697":[341,14,388,2],"13705":[341,14,388,2],"13713":[341,14,388,2],"13721":[341,14,388,2],"13729":[341,14,388,2],"13737":[341,14,388,2],"13745":[341,14,388,2],"13753":[341,14,388,2],"13761":[341,14,388,2],"13769":[389,1,389,9],"13777":[389,10,389,16],"13785":[389,18,389,30],"13793":[389,1,389,31],"13801":[389,1,389,32],"13809":[390,1,390,7],"13817":[390,1,390,17],"13825":[391,17,391,21],"13833":[391,17,391,21],"13841":[391,17,391,21],"13849":[392,9,392,13],"13857":[392,17,392,22],"13865":[393,17,393,24],"13873":[393,25,393,31],"13881":[393,17,393,32],"13889":[393,17,393,41],"13891":[393,17,393,39],"13897":[393,17,393,46],"13905":[393,17,393,46],"13913":[393,9,393,47],"13921":[394,16,394,20],"13929":[394,24,394,28],"13937":[395,17,395,24],"13945":[395,25,395,31],"13953":[395,17,395,32],"13961":[395,17,395,39],"13963":[395,17,395,37],"13969":[395,17,395,44],"13977":[395,17,395,44],"13985":[395,9,395,45],"13993":[397,19,397,29],"14001":[397,30,397,31],"14009":[397,32,397,56],"14017":[397,58,397,62],"14025":[397,30,397,63],"14033":[397,15,397,64],"14041":[397,15,397,64],"14049":[397,9,397,65],"14057":[399,5,399,9],"14065":[399,5,399,11],"14073":[399,5,399,19],"14081":[399,31,399,36],"14089":[399,37,399,46],"14097":[399,27,399,47],"14105":[399,5,399,47],"14113":[399,5,399,48],"14121":[390,38,400,2],"14129":[390,38,400,2],"14137":[390,38,400,2],"14145":[390,38,400,2],"14153":[390,38,400,2],"14161":[390,1,400,2],"14169":[390,1,400,3],"14177":[401,1,401,7],"14185":[401,1,401,17],"14193":[402,5,402,9],"14201":[402,5,402,11],"14209":[402,5,402,16],"14217":[402,32,402,46],"14225":[402,5,402,47],"14227":[402,5,402,31],"14233":[402,5,402,48],"14241":[401,35,403,2],"14249":[401,35,403,2],"14257":[401,35,403,2],"14265":[401,35,403,2],"14273":[401,1,403,2],"14281":[401,1,403,3],"14289":[404,1,404,7],"14297":[404,1,404,17],"14305":[405,12,405,16],"14313":[405,12,405,18],"14321":[405,12,405,27],"14329":[405,12,405,27],"14337":[405,5,405,28],"14345":[404,33,406,2],"14353":[404,33,406,2],"14361":[404,33,406,2],"14369":[404,1,406,2],"14377":[404,1,406,3],"14385":[407,1,407,7],"14393":[407,1,407,17],"14401":[408,16,408,20],"14409":[408,16,408,20],"14417":[408,16,408,20],"14425":[409,16,409,24],"14433":[409,28,409,30],"14441":[409,16,409,30],"14449":[409,5,409,31],"14457":[410,16,410,24],"14465":[410,16,410,37],"14473":[410,41,410,50],"14481":[411,9,411,13],"14489":[411,9,411,15],"14497":[411,9,411,23],"14505":[411,39,411,47],"14513":[411,39,411,60],"14521":[411,9,411,60],"14529":[411,9,411,61],"14537":[413,9,413,13],"14545":[413,9,413,15],"14553":[413,9,413,20],"14561":[414,9,414,13],"14569":[414,9,414,15],"14577":[414,9,414,20],"14585":[414,9,414,30],"14587":[414,9,414,28],"14593":[414,9,414,31],"14601":[415,9,415,13],"14609":[415,9,415,15],"14617":[415,23,415,27],"14625":[415,9,415,27],"14633":[415,9,415,28],"14641":[417,5,417,9],"14649":[417,5,417,11],"14657":[417,20,417,30],"14665":[417,5,417,30],"14673":[417,5,417,31],"14681":[418,10,418,14],"14689":[418,10,418,16],"14697":[418,10,418,21],"14705":[419,9,419,13],"14713":[419,9,419,15],"14721":[419,9,419,23],"14729":[419,41,419,55],"14737":[419,56,419,60],"14745":[419,62,419,66],"14753":[419,62,419,68],"14761":[419,41,419,69],"14769":[419,9,419,69],"14777":[419,9,419,70],"14785":[420,9,420,13],"14793":[420,9,420,15],"14801":[420,27,420,31],"14809":[420,32,420,36],"14817":[420,32,420,38],"14825":[420,32,420,46],"14833":[420,23,420,47],"14841":[420,9,420,47],"14849":[420,9,420,48],"14857":[422,5,422,9],"14865":[422,5,422,11],"14873":[422,5,422,16],"14881":[422,22,422,31],"14889":[422,33,422,47],"14897":[422,48,422,52],"14905":[422,54,422,58],"14913":[422,54,422,60],"14921":[422,33,422,61],"14929":[422,5,422,62],"14931":[422,5,422,21],"14937":[422,5,422,63],"14945":[423,5,423,9],"14953":[423,5,423,11],"14961":[423,5,423,16],"14969":[423,22,423,29],"14977":[423,31,423,43],"14985":[423,44,423,48],"14993":[423,50,423,54],"15001":[423,50,423,56],"15009":[423,31,423,57],"15017":[423,5,423,58],"15019":[423,5,423,21],"15025":[423,5,423,59],"15033":[424,5,424,9],"15041":[424,5,424,11],"15049":[424,5,424,16],"15057":[424,22,424,29],"15065":[424,31,424,43],"15073":[424,44,424,48],"15081":[424,50,424,54],"15089":[424,50,424,56],"15097":[424,31,424,57],"15105":[424,5,424,58],"15107":[424,5,424,21],"15113":[424,5,424,59],"15121":[425,5,425,9],"15129":[425,5,425,11],"15137":[425,5,425,16],"15145":[425,22,425,31],"15153":[425,33,425,47],"15161":[425,48,425,52],"15169":[425,54,425,58],"15177":[425,54,425,60],"15185":[425,33,425,61],"15193":[425,5,425,62],"15195":[425,5,425,21],"15201":[425,5,425,63],"15209":[426,5,426,9],"15217":[426,5,426,11],"15225":[426,5,426,16],"15233":[426,22,426,34],"15241":[426,36,426,53],"15249":[426,54,426,58],"15257":[426,60,426,64],"15265":[426,60,426,66],"15273":[426,36,426,67],"15281":[426,5,426,68],"15283":[426,5,426,21],"15289":[426,5,426,69],"15297":[427,5,427,9],"15305":[427,5,427,11],"15313":[427,5,427,16],"15321":[427,5,427,26],"15323":[427,5,427,24],"15329":[427,5,427,27],"15337":[407,28,428,2],"15345":[407,28,428,2],"15353":[407,28,428,2],"15361":[407,28,428,2],"15369":[407,28,428,2],"15377":[407,1,428,2],"15385":[407,1,428,3],"15393":[429,1,429,7],"15401":[429,1,429,17],"15409":[430,16,430,20],"15417":[430,16,430,20],"15425":[430,16,430,20],"15433":[431,9,431,13],"15441":[431,9,431,15],"15449":[431,9,431,22],"15457":[431,9,431,32],"15459":[431,9,431,30],"15465":[432,9,432,13],"15473":[432,9,432,15],"15481":[432,9,432,22],"15489":[432,29,432,30],"15497":[432,31,432,60],"15505":[432,62,432,66],"15513":[432,62,432,71],"15521":[432,29,432,72],"15529":[432,9,432,73],"15531":[432,9,432,28],"15537":[432,9,432,74],"15545":[433,9,433,18],"15553":[433,22,433,26],"15561":[433,37,433,44],"15569":[433,22,433,45],"15571":[433,22,433,36],"15577":[433,22,433,52],"15585":[433,55,433,56],"15593":[434,9,434,13],"15601":[434,19,434,26],"15609":[434,28,434,32],"15617":[434,9,434,33],"15619":[434,9,434,18],"15625":[434,9,434,34],"15633":[435,9,435,20],"15641":[436,9,436,13],"15649":[436,19,436,28],"15657":[436,30,436,34],"15665":[436,9,436,35],"15667":[436,9,436,18],"15673":[436,9,436,36],"15681":[437,5,437,9],"15689":[437,5,437,11],"15697":[437,20,437,29],"15705":[437,5,437,29],"15713":[437,5,437,30],"15721":[438,5,438,9],"15729":[438,5,438,11],"15737":[438,5,438,16],"15745":[438,5,438,26],"15747":[438,5,438,24],"15753":[438,5,438,27],"15761":[439,9,439,13],"15769":[439,9,439,15],"15777":[439,9,439,25],"15785":[440,9,440,13],"15793":[440,9,440,15],"15801":[440,9,440,25],"15809":[440,36,440,46],"15817":[440,47,440,48],"15825":[440,49,440,75],"15833":[440,77,440,81],"15841":[440,77,440,86],"15849":[440,47,440,87],"15857":[440,32,440,88],"15865":[440,9,440,89],"15867":[440,9,440,31],"15873":[440,9,440,90],"15881":[429,28,441,2],"15889":[429,28,441,2],"15897":[429,28,441,2],"15905":[429,28,441,2],"15913":[429,28,441,2],"15921":[429,28,441,2],"15929":[429,1,441,2],"15937":[429,1,441,3],"15945":[442,1,442,7],"15953":[442,1,442,17],"15961":[443,16,443,20],"15969":[443,16,443,20],"15977":[443,16,443,20],"15985":[444,9,444,13],"15993":[444,9,444,15],"16001":[444,9,444,20],"16009":[445,16,445,20],"16017":[445,16,445,22],"16025":[445,16,445,27],"16033":[445,16,445,41],"16035":[445,16,445,39],"16041":[445,16,445,41],"16049":[445,9,445,42],"16057":[446,12,446,17],"16065":[446,12,446,17],"16073":[446,5,446,18],"16081":[442,32,447,2],"16089":[442,32,447,2],"16097":[442,32,447,2],"16105":[442,32,447,2],"16113":[442,1,447,2],"16121":[442,1,447,3],"16129":[448,1,448,7],"16137":[448,1,448,17],"16145":[449,12,449,16],"16153":[449,12,449,18],"16161":[449,12,449,24],"16169":[449,28,449,37],"16177":[449,12,449,37],"16185":[449,5,449,38],"16193":[448,32,450,2],"16201":[448,32,450,2],"16209":[448,32,450,2],"16217":[448,1,450,2],"16225":[448,1,450,3],"16233":[452,21,452,26],"16241":[452,27,452,31],"16249":[452,27,452,33],"16257":[452,27,452,38],"16265":[452,40,452,42],"16273":[452,44,452,47],"16281":[452,49,452,61],"16289":[452,17,452,62],"16297":[452,17,452,62],"16305":[452,17,452,62],"16313":[453,5,453,10],"16321":[453,21,453,28],"16329":[453,29,453,36],"16337":[453,29,453,51],"16345":[453,21,453,52],"16353":[453,5,453,52],"16361":[453,5,453,53],"16369":[454,9,454,13],"16377":[454,9,454,15],"16385":[454,9,454,40],"16393":[454,44,454,48],"16401":[455,9,455,25],"16409":[455,26,455,30],"16417":[455,32,455,36],"16425":[455,32,455,38],"16433":[455,40,455,56],"16441":[456,13,456,17],"16449":[457,13,457,18],"16457":[458,17,458,21],"16465":[458,13,458,23],"16473":[455,58,459,10],"16481":[455,9,459,11],"16489":[455,9,459,12],"16497":[460,22,460,29],"16505":[460,22,460,40],"16513":[460,44,460,48],"16521":[460,44,460,50],"16529":[460,44,460,55],"16537":[460,44,460,61],"16539":[460,44,460,59],"16545":[460,22,460,61],"16553":[460,22,460,61],"16561":[461,11,461,21],"16569":[461,25,461,35],"16577":[461,25,461,49],"16579":[461,25,461,47],"16585":[462,16,462,24],"16593":[462,29,462,39],"16601":[462,40,462,41],"16609":[462,42,462,80],"16617":[462,82,462,86],"16625":[462,82,462,91],"16633":[462,40,462,92],"16641":[462,25,462,93],"16649":[462,16,462,94],"16657":[462,16,462,94],"16665":[462,9,462,95],"16673":[464,9,464,13],"16681":[464,9,464,15],"16689":[464,9,464,22],"16697":[464,9,464,32],"16699":[464,9,464,30],"16705":[465,20,465,30],"16713":[465,20,465,39],"16715":[465,20,465,37],"16721":[465,20,465,39],"16729":[465,20,465,39],"16737":[466,9,466,13],"16745":[466,9,466,15],"16753":[466,9,466,22],"16761":[466,29,466,30],"16769":[466,31,466,96],"16777":[466,98,466,102],"16785":[466,113,466,116],"16793":[466,98,466,117],"16795":[466,98,466,112],"16801":[466,119,466,123],"16809":[466,119,466,126],"16817":[466,128,466,132],"16825":[466,128,466,137],"16833":[466,139,466,143],"16841":[466,139,466,148],"16849":[466,29,466,149],"16857":[466,9,466,150],"16859":[466,9,466,28],"16865":[466,9,466,151],"16873":[468,9,468,14],"16881":[469,27,469,31],"16889":[469,27,469,33],"16897":[469,27,469,38],"16905":[469,27,469,47],"16907":[469,27,469,45],"16913":[469,27,469,47],"16921":[469,27,469,47],"16929":[470,21,470,32],"16937":[470,21,470,39],"16945":[470,21,470,39],"16953":[470,21,470,39],"16961":[471,21,471,25],"16969":[471,21,471,25],"16977":[471,21,471,25],"16985":[472,22,472,23],"16993":[472,22,472,23],"17001":[472,22,472,23],"17009":[472,25,472,26],"17017":[472,29,472,40],"17025":[472,29,472,47],"17041":[472,49,472,50],"17049":[472,49,472,52],"17065":[474,17,474,22],"17073":[474,17,474,37],"17075":[474,17,474,35],"17081":[474,17,474,38],"17089":[475,17,475,28],"17097":[475,29,475,30],"17105":[475,17,475,31],"17113":[475,38,475,43],"17121":[475,38,475,51],"17123":[475,38,475,49],"17129":[475,17,475,52],"17131":[475,17,475,37],"17137":[475,17,475,53],"17145":[477,25,477,30],"17153":[477,33,477,34],"17161":[477,25,477,34],"17169":[477,17,477,35],"17177":[478,21,478,26],"17185":[478,30,478,31],"17193":[479,28,479,36],"17201":[479,37,479,47],"17209":[479,55,479,58],"17217":[479,37,479,59],"17219":[479,37,479,54],"17225":[479,28,479,60],"17233":[479,28,479,60],"17241":[479,21,479,61],"17249":[476,15,480,14],"17257":[481,13,481,17],"17265":[481,13,481,19],"17273":[481,13,481,29],"17281":[481,39,481,44],"17289":[481,39,481,54],"17297":[482,21,482,24],"17305":[483,29,483,32],"17313":[483,29,483,32],"17321":[483,21,483,33],"17329":[484,25,484,30],"17337":[484,33,484,34],"17345":[484,25,484,34],"17353":[484,17,484,35],"17361":[485,21,485,26],"17369":[485,30,485,31],"17377":[486,21,486,37],"17385":[486,38,486,42],"17393":[486,44,486,48],"17401":[486,44,486,50],"17409":[486,52,486,66],"17417":[487,25,487,29],"17425":[488,25,488,30],"17433":[489,25,489,31],"17441":[490,29,490,33],"17449":[490,25,490,35],"17457":[486,68,491,22],"17465":[486,21,491,23],"17473":[486,21,491,24],"17481":[492,25,492,30],"17489":[493,32,493,40],"17497":[493,41,493,51],"17505":[493,59,493,64],"17513":[493,41,493,65],"17515":[493,41,493,58],"17521":[493,32,493,66],"17529":[493,32,493,66],"17537":[493,25,493,67],"17545":[495,25,495,33],"17553":[495,34,495,38],"17561":[495,44,495,57],"17569":[495,58,495,64],"17577":[495,58,495,74],"17585":[495,75,495,76],"17593":[495,58,495,77],"17601":[495,79,495,90],"17609":[495,40,495,91],"17617":[495,25,495,92],"17625":[495,25,495,93],"17633":[497,25,497,32],"17641":[498,35,498,38],"17649":[498,35,498,38],"17657":[498,29,498,39],"17665":[497,42,499,26],"17673":[497,42,499,26],"17681":[497,42,499,26],"17689":[497,25,499,27],"17691":[497,25,497,41],"17697":[497,25,499,28],"17705":[496,23,500,22],"17713":[481,56,502,14],"17721":[481,56,502,14],"17729":[481,56,502,14],"17737":[481,56,502,14],"17745":[481,56,502,14],"17753":[481,13,502,15],"17755":[481,13,481,38],"17761":[481,13,502,16],"17769":[504,9,504,16],"17777":[504,9,504,16],"17785":[507,9,507,19],"17793":[507,26,507,31],"17801":[507,26,507,39],"17803":[507,26,507,37],"17809":[507,9,507,40],"17811":[507,9,507,25],"17817":[507,9,507,41],"17825":[509,16,509,24],"17833":[509,25,509,35],"17841":[509,43,509,46],"17849":[509,25,509,47],"17851":[509,25,509,42],"17857":[509,16,509,48],"17865":[509,16,509,48],"17873":[509,9,509,49],"17881":[508,7,510,6],"17889":[511,5,511,9],"17897":[511,5,511,11],"17905":[511,5,511,21],"17913":[511,31,511,36],"17921":[511,31,511,46],"17929":[512,9,512,25],"17937":[512,26,512,30],"17945":[512,32,512,36],"17953":[512,32,512,38],"17961":[512,40,512,54],"17969":[513,13,513,17],"17977":[514,13,514,16],"17985":[515,13,515,19],"17993":[516,17,516,21],"18001":[516,13,516,23],"18009":[512,56,517,10],"18017":[512,9,517,11],"18025":[512,9,517,12],"18033":[518,13,518,16],"18041":[519,20,519,28],"18049":[519,29,519,32],"18057":[519,20,519,33],"18065":[519,20,519,33],"18073":[519,13,519,34],"18081":[520,13,520,19],"18089":[520,13,520,29],"18097":[520,30,520,31],"18105":[520,13,520,32],"18113":[520,33,520,39],"18121":[520,13,520,40],"18129":[520,44,520,50],"18137":[520,44,520,60],"18145":[520,61,520,62],"18153":[520,44,520,63],"18161":[520,64,520,72],"18169":[520,44,520,73],"18177":[520,77,520,83],"18185":[520,77,520,93],"18193":[520,94,520,95],"18201":[520,77,520,96],"18209":[520,97,520,102],"18217":[520,77,520,103],"18225":[520,107,520,113],"18233":[520,107,520,123],"18241":[520,124,520,125],"18249":[520,107,520,126],"18257":[520,127,520,133],"18265":[520,107,520,134],"18273":[521,20,521,28],"18281":[521,29,521,39],"18289":[521,47,521,53],"18297":[521,47,521,63],"18305":[521,64,521,65],"18313":[521,47,521,66],"18321":[521,29,521,67],"18323":[521,29,521,46],"18329":[521,20,521,68],"18337":[521,20,521,68],"18345":[521,13,521,69],"18353":[523,13,523,21],"18361":[523,22,523,26],"18369":[523,32,523,45],"18377":[523,46,523,52],"18385":[523,46,523,62],"18393":[523,63,523,64],"18401":[523,46,523,65],"18409":[523,67,523,77],"18417":[523,28,523,78],"18425":[523,13,523,79],"18433":[523,13,523,80],"18441":[525,13,525,20],"18449":[526,23,526,26],"18457":[526,23,526,26],"18465":[526,17,526,27],"18473":[525,30,527,14],"18481":[525,30,527,14],"18489":[525,30,527,14],"18497":[525,13,527,15],"18499":[525,13,525,29],"18505":[525,13,527,16],"18513":[524,11,528,10],"18521":[511,48,529,6],"18529":[511,48,529,6],"18537":[511,48,529,6],"18545":[511,48,529,6],"18553":[511,48,529,6],"18561":[511,5,529,7],"18563":[511,5,511,30],"18569":[511,5,529,8],"18577":[451,30,530,2],"18585":[451,30,530,2],"18593":[451,30,530,2],"18601":[451,30,530,2],"18609":[451,30,530,2],"18617":[451,30,530,2],"18625":[451,30,530,2],"18633":[451,30,530,2],"18641":[451,30,530,2],"18649":[451,30,530,2],"18657":[451,30,530,2],"18665":[451,30,530,2],"18673":[451,30,530,2],"18681":[451,30,530,2],"18689":[451,30,530,2],"18697":[451,30,530,2],"18705":[451,30,530,2],"18713":[451,30,530,2],"18721":[451,30,530,2],"18729":[531,1,531,7],"18737":[531,1,531,17],"18745":[532,16,532,23],"18753":[532,27,532,37],"18761":[533,20,533,27],"18769":[533,20,533,27],"18777":[533,39,533,41],"18785":[533,39,533,41],"18793":[533,9,533,27],"18801":[533,9,533,42],"18809":[534,16,534,20],"18817":[534,16,534,20],"18825":[534,16,534,20],"18833":[535,9,535,13],"18841":[535,9,535,15],"18849":[535,9,535,21],"18857":[535,25,535,34],"18865":[536,16,536,24],"18873":[536,29,536,39],"18881":[536,40,536,41],"18889":[536,42,536,66],"18897":[536,40,536,67],"18905":[536,25,536,68],"18913":[536,16,536,69],"18921":[536,16,536,69],"18929":[536,9,536,70],"18937":[537,15,537,22],"18945":[537,26,537,28],"18953":[537,15,537,28],"18961":[537,5,537,29],"18969":[538,9,538,16],"18977":[538,9,538,31],"18985":[538,37,538,44],"18993":[538,37,538,59],"19001":[538,71,538,85],"19009":[539,19,539,24],"19017":[539,25,539,79],"19025":[539,15,539,80],"19033":[539,15,539,80],"19041":[539,9,539,81],"19049":[541,9,541,13],"19057":[541,9,541,15],"19065":[541,9,541,22],"19073":[541,9,541,32],"19075":[541,9,541,30],"19081":[542,9,542,13],"19089":[542,9,542,15],"19097":[542,9,542,22],"19105":[542,29,542,30],"19113":[542,31,542,66],"19121":[542,68,542,72],"19129":[543,17,543,19],"19137":[544,18,544,21],"19145":[545,22,545,34],"19153":[545,35,545,46],"19161":[545,48,545,55],"19169":[545,22,545,56],"19177":[542,83,546,10],"19185":[542,68,546,11],"19187":[542,68,542,82],"19193":[546,13,546,17],"19201":[546,13,546,22],"19209":[542,29,546,23],"19217":[542,9,546,24],"19219":[542,9,542,28],"19225":[542,9,546,25],"19233":[547,10,547,14],"19241":[547,10,547,28],"19243":[547,10,547,26],"19249":[547,32,547,36],"19257":[547,32,547,38],"19265":[547,32,547,56],"19273":[547,60,547,64],"19281":[548,20,548,39],"19289":[548,40,548,48],"19297":[548,20,548,49],"19305":[548,20,548,49],"19313":[548,9,548,50],"19321":[549,16,549,20],"19329":[549,16,549,22],"19337":[549,16,549,40],"19345":[549,45,549,54],"19353":[549,56,549,58],"19361":[549,60,549,63],"19369":[549,65,549,72],"19377":[549,74,549,82],"19385":[549,16,549,83],"19387":[549,16,549,44],"19393":[549,16,549,83],"19401":[549,9,549,84],"19409":[551,10,551,14],"19417":[551,10,551,16],"19425":[551,10,551,21],"19433":[551,10,551,35],"19435":[551,10,551,33],"19441":[552,16,552,24],"19449":[552,29,552,39],"19457":[552,40,552,41],"19465":[552,42,552,80],"19473":[552,82,552,86],"19481":[552,82,552,91],"19489":[552,40,552,92],"19497":[552,25,552,93],"19505":[552,16,552,94],"19513":[552,16,552,94],"19521":[552,9,552,95],"19529":[553,24,553,31],"19537":[553,24,553,37],"19545":[553,41,553,50],"19553":[553,53,553,60],"19561":[553,53,553,66],"19569":[553,69,553,74],"19577":[553,17,553,74],"19585":[553,17,553,74],"19593":[554,28,554,35],"19601":[554,28,554,45],"19609":[554,49,554,58],"19617":[554,61,554,68],"19625":[554,61,554,78],"19633":[554,81,554,86],"19641":[554,21,554,86],"19649":[554,21,554,86],"19657":[555,37,555,44],"19665":[555,37,555,63],"19673":[555,67,555,76],"19681":[555,79,555,86],"19689":[555,79,555,105],"19697":[555,108,555,113],"19705":[555,30,555,113],"19713":[555,30,555,113],"19721":[556,34,556,41],"19729":[556,34,556,57],"19737":[556,61,556,70],"19745":[556,73,556,80],"19753":[556,73,556,96],"19761":[556,99,556,104],"19769":[556,27,556,104],"19777":[556,27,556,104],"19785":[558,23,558,24],"19793":[559,26,559,27],"19801":[560,20,560,29],"19809":[557,24,561,6],"19817":[557,24,561,6],"19825":[557,24,561,6],"19833":[562,9,562,27],"19841":[563,9,563,21],"19849":[563,43,563,61],"19857":[563,9,563,61],"19865":[563,9,563,62],"19873":[564,9,564,24],"19881":[565,9,565,21],"19889":[565,40,565,55],"19897":[565,9,565,55],"19905":[565,9,565,56],"19913":[566,10,566,15],"19921":[566,24,566,27],"19929":[566,10,566,28],"19931":[566,10,566,23],"19937":[567,16,567,38],"19945":[567,39,567,43],"19953":[567,45,567,47],"19961":[567,49,567,52],"19969":[567,54,567,66],"19977":[567,68,567,75],"19985":[567,77,567,82],"19993":[567,84,567,92],"20001":[567,16,567,93],"20009":[567,16,567,93],"20017":[567,9,567,94],"20025":[569,23,569,28],"20033":[569,29,569,32],"20041":[569,29,569,39],"20049":[569,19,569,40],"20057":[569,19,569,40],"20065":[569,19,569,40],"20073":[570,18,570,19],"20081":[570,18,570,19],"20089":[570,18,570,19],"20097":[570,21,570,22],"20105":[570,25,570,28],"20113":[570,25,570,35],"20129":[570,37,570,38],"20137":[570,37,570,40],"20153":[571,9,571,16],"20161":[571,17,571,18],"20169":[571,26,571,31],"20177":[571,32,571,36],"20185":[571,32,571,38],"20193":[571,32,571,43],"20201":[571,45,571,47],"20209":[571,49,571,52],"20217":[571,53,571,54],"20225":[571,49,571,55],"20233":[571,57,571,69],"20241":[571,22,571,70],"20249":[571,9,571,70],"20257":[571,9,571,71],"20265":[572,9,572,16],"20273":[572,17,572,18],"20281":[572,9,572,19],"20289":[572,30,572,37],"20297":[572,38,572,45],"20305":[572,38,572,60],"20313":[572,30,572,61],"20321":[572,9,572,61],"20329":[572,9,572,62],"20337":[574,9,574,13],"20345":[574,9,574,15],"20353":[574,9,574,40],"20361":[574,44,574,48],"20369":[575,9,575,25],"20377":[575,26,575,30],"20385":[575,32,575,36],"20393":[575,32,575,38],"20401":[575,40,575,56],"20409":[576,13,576,17],"20417":[577,13,577,20],"20425":[578,17,578,21],"20433":[578,13,578,23],"20441":[575,58,579,10],"20449":[575,9,579,11],"20457":[575,9,579,12],"20465":[580,22,580,29],"20473":[580,22,580,40],"20481":[580,44,580,48],"20489":[580,44,580,50],"20497":[580,44,580,55],"20505":[580,44,580,61],"20507":[580,44,580,59],"20513":[580,22,580,61],"20521":[580,22,580,61],"20529":[581,10,581,20],"20537":[581,10,581,34],"20539":[581,10,581,32],"20545":[582,16,582,24],"20553":[582,29,582,39],"20561":[582,40,582,41],"20569":[582,42,582,80],"20577":[582,82,582,86],"20585":[582,82,582,91],"20593":[582,40,582,92],"20601":[582,25,582,93],"20609":[582,16,582,94],"20617":[582,16,582,94],"20625":[582,9,582,95],"20633":[584,9,584,13],"20641":[584,9,584,15],"20649":[584,9,584,22],"20657":[584,9,584,32],"20659":[584,9,584,30],"20665":[585,20,585,30],"20673":[585,20,585,39],"20675":[585,20,585,37],"20681":[585,20,585,39],"20689":[585,20,585,39],"20697":[586,9,586,13],"20705":[586,9,586,15],"20713":[586,9,586,22],"20721":[586,29,586,30],"20729":[586,31,586,96],"20737":[586,98,586,102],"20745":[586,113,586,120],"20753":[586,98,586,121],"20755":[586,98,586,112],"20761":[586,123,586,127],"20769":[586,123,586,130],"20777":[586,132,586,136],"20785":[586,132,586,141],"20793":[586,143,586,147],"20801":[586,143,586,152],"20809":[586,29,586,153],"20817":[586,9,586,154],"20819":[586,9,586,28],"20825":[586,9,586,155],"20833":[588,20,588,25],"20841":[588,20,588,25],"20849":[588,20,588,25],"20857":[589,26,589,33],"20865":[589,26,589,40],"20873":[589,26,589,40],"20881":[589,26,589,40],"20889":[590,19,590,21],"20897":[590,19,590,21],"20905":[590,19,590,21],"20913":[591,18,591,19],"20921":[591,18,591,19],"20929":[591,18,591,19],"20937":[591,21,591,22],"20945":[591,25,591,32],"20953":[591,25,591,39],"20969":[591,41,591,42],"20977":[591,41,591,44],"20993":[592,21,592,28],"21001":[592,29,592,30],"21009":[592,21,592,31],"21017":[592,21,592,31],"21025":[592,21,592,31],"21033":[594,13,594,23],"21041":[594,30,594,35],"21049":[594,30,594,43],"21051":[594,30,594,41],"21057":[594,13,594,44],"21059":[594,13,594,29],"21065":[594,13,594,45],"21073":[596,20,596,28],"21081":[596,29,596,39],"21089":[596,47,596,50],"21097":[596,29,596,51],"21099":[596,29,596,46],"21105":[596,20,596,52],"21113":[596,20,596,52],"21121":[596,13,596,53],"21129":[595,11,597,10],"21137":[598,9,598,13],"21145":[598,9,598,15],"21153":[598,9,598,25],"21161":[598,35,598,40],"21169":[598,35,598,50],"21177":[599,17,599,25],"21185":[600,17,600,24],"21193":[600,17,600,24],"21201":[601,30,601,44],"21209":[601,47,601,48],"21217":[601,30,601,48],"21225":[601,13,601,49],"21233":[602,17,602,20],"21241":[603,28,603,32],"21249":[603,28,603,32],"21257":[603,17,603,33],"21265":[604,24,604,32],"21273":[604,33,604,36],"21281":[604,24,604,37],"21289":[604,24,604,37],"21297":[604,17,604,38],"21305":[606,17,606,23],"21313":[606,17,606,33],"21321":[606,34,606,35],"21329":[606,17,606,36],"21337":[606,37,606,43],"21345":[606,17,606,44],"21353":[606,48,606,54],"21361":[606,48,606,64],"21369":[606,65,606,66],"21377":[606,48,606,67],"21385":[606,68,606,76],"21393":[606,48,606,77],"21401":[606,81,606,87],"21409":[606,81,606,97],"21417":[606,98,606,99],"21425":[606,81,606,100],"21433":[606,101,606,106],"21441":[606,81,606,107],"21449":[606,111,606,117],"21457":[606,111,606,127],"21465":[606,128,606,129],"21473":[606,111,606,130],"21481":[606,131,606,137],"21489":[606,111,606,138],"21497":[607,28,607,32],"21505":[607,28,607,32],"21513":[607,17,607,33],"21521":[608,24,608,32],"21529":[608,33,608,43],"21537":[608,51,608,57],"21545":[608,51,608,67],"21553":[608,68,608,69],"21561":[608,51,608,70],"21569":[608,33,608,71],"21571":[608,33,608,50],"21577":[608,24,608,72],"21585":[608,24,608,72],"21593":[608,17,608,73],"21601":[610,13,610,20],"21609":[610,26,610,32],"21617":[610,26,610,42],"21625":[610,43,610,44],"21633":[610,26,610,45],"21641":[610,13,610,46],"21643":[610,13,610,25],"21649":[610,13,610,47],"21657":[611,17,611,31],"21665":[611,35,611,36],"21673":[612,17,612,33],"21681":[612,34,612,38],"21689":[612,40,612,44],"21697":[612,40,612,46],"21705":[612,48,612,62],"21713":[613,21,613,25],"21721":[614,21,614,24],"21729":[615,21,615,27],"21737":[616,25,616,29],"21745":[616,21,616,31],"21753":[612,64,617,18],"21761":[612,17,617,19],"21769":[612,17,617,20],"21777":[618,42,618,47],"21785":[618,48,618,55],"21793":[618,48,618,62],"21801":[618,38,618,63],"21809":[618,38,618,63],"21817":[618,38,618,63],"21825":[619,30,619,31],"21833":[619,30,619,31],"21841":[619,30,619,31],"21849":[619,33,619,34],"21857":[619,37,619,44],"21865":[619,37,619,51],"21881":[619,53,619,54],"21889":[619,53,619,56],"21905":[620,21,620,35],"21913":[620,36,620,37],"21921":[620,45,620,58],"21929":[620,59,620,66],"21937":[620,67,620,68],"21945":[620,59,620,69],"21953":[620,71,620,81],"21961":[620,41,620,82],"21969":[620,21,620,82],"21977":[620,21,620,83],"21985":[623,21,623,29],"21993":[623,30,623,34],"22001":[623,36,623,50],"22009":[623,21,623,51],"22017":[623,21,623,52],"22025":[625,21,625,28],"22033":[626,31,626,34],"22041":[626,31,626,34],"22049":[626,25,626,35],"22057":[625,38,627,22],"22065":[625,38,627,22],"22073":[625,38,627,22],"22081":[625,21,627,23],"22083":[625,21,625,37],"22089":[625,21,627,24],"22097":[624,19,628,18],"22105":[598,52,630,10],"22113":[598,52,630,10],"22121":[598,52,630,10],"22129":[598,52,630,10],"22137":[598,52,630,10],"22145":[598,52,630,10],"22153":[598,52,630,10],"22161":[598,9,630,11],"22163":[598,9,598,34],"22169":[598,9,630,12],"22177":[531,28,632,2],"22185":[531,28,632,2],"22193":[531,28,632,2],"22201":[531,28,632,2],"22209":[531,28,632,2],"22217":[531,28,632,2],"22225":[531,28,632,2],"22233":[531,28,632,2],"22241":[531,28,632,2],"22249":[531,28,632,2],"22257":[531,28,632,2],"22265":[531,28,632,2],"22273":[531,28,632,2],"22281":[531,28,632,2],"22289":[531,28,632,2],"22297":[531,28,632,2],"22305":[531,28,632,2],"22313":[531,28,632,2],"22321":[531,28,632,2],"22329":[531,28,632,2],"22337":[531,28,632,2],"22345":[531,1,632,2],"22353":[531,1,632,3],"22361":[633,1,633,7],"22369":[633,1,633,17],"22377":[634,16,634,23],"22385":[634,27,634,37],"22393":[635,20,635,27],"22401":[635,20,635,27],"22409":[635,39,635,41],"22417":[635,39,635,41],"22425":[635,9,635,27],"22433":[635,9,635,42],"22441":[636,16,636,20],"22449":[636,16,636,20],"22457":[636,16,636,20],"22465":[637,9,637,13],"22473":[637,9,637,15],"22481":[637,9,637,21],"22489":[637,25,637,34],"22497":[638,16,638,24],"22505":[638,29,638,39],"22513":[638,40,638,41],"22521":[638,42,638,66],"22529":[638,40,638,67],"22537":[638,25,638,68],"22545":[638,16,638,69],"22553":[638,16,638,69],"22561":[638,9,638,70],"22569":[639,10,639,14],"22577":[639,10,639,28],"22579":[639,10,639,26],"22585":[639,32,639,36],"22593":[639,32,639,38],"22601":[639,32,639,56],"22609":[639,60,639,64],"22617":[640,20,640,39],"22625":[640,40,640,48],"22633":[640,20,640,49],"22641":[640,20,640,49],"22649":[640,9,640,50],"22657":[641,16,641,20],"22665":[641,16,641,22],"22673":[641,16,641,40],"22681":[641,45,641,53],"22689":[641,55,641,57],"22697":[641,59,641,62],"22705":[641,64,641,71],"22713":[641,73,641,81],"22721":[641,16,641,82],"22723":[641,16,641,44],"22729":[641,16,641,82],"22737":[641,9,641,83],"22745":[643,11,643,16],"22753":[643,25,643,28],"22761":[643,11,643,29],"22763":[643,11,643,24],"22769":[643,32,643,35],"22777":[643,39,643,42],"22785":[643,38,643,43],"22793":[643,11,643,43],"22801":[643,5,643,44],"22809":[644,12,644,16],"22817":[644,12,644,18],"22825":[644,12,644,38],"22833":[644,46,644,50],"22841":[644,52,644,56],"22849":[644,52,644,58],"22857":[644,52,644,67],"22865":[644,69,644,71],"22873":[644,73,644,77],"22881":[644,73,644,79],"22889":[644,73,644,84],"22897":[644,86,644,90],"22905":[644,86,644,92],"22913":[644,86,644,97],"22921":[644,99,644,103],"22929":[644,99,644,105],"22937":[644,99,644,115],"22945":[644,117,644,120],"22953":[644,122,644,129],"22961":[644,131,644,139],"22969":[644,12,644,140],"22971":[644,12,644,45],"22977":[644,12,644,140],"22985":[644,5,644,141],"22993":[633,27,645,2],"23001":[633,27,645,2],"23009":[633,27,645,2],"23017":[633,27,645,2],"23025":[633,27,645,2],"23033":[633,27,645,2],"23041":[633,27,645,2],"23049":[633,27,645,2],"23057":[633,1,645,2],"23065":[633,1,645,3],"23073":[646,1,646,7],"23081":[646,1,646,17],"23089":[647,16,647,23],"23097":[647,27,647,37],"23105":[648,20,648,27],"23113":[648,20,648,27],"23121":[648,39,648,41],"23129":[648,39,648,41],"23137":[648,9,648,27],"23145":[648,9,648,42],"23153":[649,16,649,20],"23161":[649,16,649,20],"23169":[649,16,649,20],"23177":[650,9,650,13],"23185":[650,9,650,15],"23193":[650,9,650,21],"23201":[650,25,650,34],"23209":[651,16,651,24],"23217":[651,29,651,39],"23225":[651,40,651,41],"23233":[651,42,651,66],"23241":[651,40,651,67],"23249":[651,25,651,68],"23257":[651,16,651,69],"23265":[651,16,651,69],"23273":[651,9,651,70],"23281":[652,10,652,14],"23289":[652,10,652,28],"23291":[652,10,652,26],"23297":[652,32,652,36],"23305":[652,32,652,38],"23313":[652,32,652,56],"23321":[652,60,652,64],"23329":[653,20,653,39],"23337":[653,40,653,48],"23345":[653,20,653,49],"23353":[653,20,653,49],"23361":[653,9,653,50],"23369":[654,16,654,20],"23377":[654,16,654,22],"23385":[654,16,654,40],"23393":[654,45,654,53],"23401":[654,55,654,57],"23409":[654,59,654,62],"23417":[654,64,654,71],"23425":[654,73,654,81],"23433":[654,16,654,82],"23435":[654,16,654,44],"23441":[654,16,654,82],"23449":[654,9,654,83],"23457":[656,11,656,16],"23465":[656,25,656,28],"23473":[656,11,656,29],"23475":[656,11,656,24],"23481":[656,32,656,35],"23489":[656,39,656,42],"23497":[656,38,656,43],"23505":[656,11,656,43],"23513":[656,5,656,44],"23521":[657,12,657,16],"23529":[657,12,657,18],"23537":[657,12,657,38],"23545":[657,46,657,50],"23553":[657,52,657,56],"23561":[657,52,657,58],"23569":[657,52,657,67],"23577":[657,69,657,71],"23585":[657,73,657,77],"23593":[657,73,657,79],"23601":[657,73,657,84],"23609":[657,86,657,90],"23617":[657,86,657,92],"23625":[657,86,657,97],"23633":[657,99,657,103],"23641":[657,99,657,105],"23649":[657,99,657,115],"23657":[657,117,657,120],"23665":[657,122,657,129],"23673":[657,131,657,139],"23681":[657,12,657,140],"23683":[657,12,657,45],"23689":[657,12,657,140],"23697":[657,5,657,141],"23705":[646,27,658,2],"23713":[646,27,658,2],"23721":[646,27,658,2],"23729":[646,27,658,2],"23737":[646,27,658,2],"23745":[646,27,658,2],"23753":[646,27,658,2],"23761":[646,27,658,2],"23769":[646,1,658,2],"23777":[646,1,658,3],"23785":[659,1,659,7],"23793":[659,1,659,17],"23801":[660,16,660,23],"23809":[660,27,660,37],"23817":[661,20,661,27],"23825":[661,20,661,27],"23833":[661,39,661,41],"23841":[661,39,661,41],"23849":[661,9,661,27],"23857":[661,9,661,42],"23865":[662,16,662,20],"23873":[662,16,662,20],"23881":[662,16,662,20],"23889":[663,9,663,13],"23897":[663,9,663,15],"23905":[663,9,663,21],"23913":[663,25,663,34],"23921":[664,16,664,24],"23929":[664,29,664,39],"23937":[664,40,664,41],"23945":[664,42,664,66],"23953":[664,40,664,67],"23961":[664,25,664,68],"23969":[664,16,664,69],"23977":[664,16,664,69],"23985":[664,9,664,70],"23993":[665,10,665,14],"24001":[665,10,665,28],"24003":[665,10,665,26],"24009":[665,32,665,36],"24017":[665,32,665,38],"24025":[665,32,665,56],"24033":[665,60,665,64],"24041":[666,20,666,39],"24049":[666,40,666,48],"24057":[666,20,666,49],"24065":[666,20,666,49],"24073":[666,9,666,50],"24081":[667,16,667,20],"24089":[667,16,667,22],"24097":[667,16,667,40],"24105":[667,45,667,53],"24113":[667,55,667,57],"24121":[667,59,667,62],"24129":[667,64,667,71],"24137":[667,73,667,81],"24145":[667,16,667,82],"24147":[667,16,667,44],"24153":[667,16,667,82],"24161":[667,9,667,83],"24169":[669,11,669,16],"24177":[669,25,669,28],"24185":[669,11,669,29],"24187":[669,11,669,24],"24193":[669,32,669,35],"24201":[669,39,669,42],"24209":[669,38,669,43],"24217":[669,11,669,43],"24225":[669,5,669,44],"24233":[670,12,670,16],"24241":[670,12,670,18],"24249":[670,12,670,38],"24257":[670,46,670,50],"24265":[670,52,670,56],"24273":[670,52,670,58],"24281":[670,52,670,67],"24289":[670,69,670,71],"24297":[670,73,670,77],"24305":[670,73,670,79],"24313":[670,73,670,84],"24321":[670,86,670,90],"24329":[670,86,670,92],"24337":[670,86,670,97],"24345":[670,99,670,103],"24353":[670,99,670,105],"24361":[670,99,670,115],"24369":[670,117,670,120],"24377":[670,122,670,129],"24385":[670,131,670,139],"24393":[670,12,670,140],"24395":[670,12,670,45],"24401":[670,12,670,140],"24409":[670,5,670,141],"24417":[659,27,671,2],"24425":[659,27,671,2],"24433":[659,27,671,2],"24441":[659,27,671,2],"24449":[659,27,671,2],"24457":[659,27,671,2],"24465":[659,27,671,2],"24473":[659,27,671,2],"24481":[659,1,671,2],"24489":[659,1,671,3],"24497":[672,1,672,7],"24505":[672,1,672,17],"24513":[673,16,673,20],"24521":[673,16,673,20],"24529":[673,16,673,20],"24537":[674,16,674,21],"24545":[674,16,674,31],"24553":[674,16,674,37],"24561":[674,43,674,52],"24569":[674,54,674,55],"24577":[674,16,674,56],"24579":[674,16,674,42],"24585":[674,16,674,56],"24593":[674,16,674,56],"24601":[675,20,675,24],"24609":[675,20,675,30],"24611":[675,20,675,28],"24617":[675,20,675,30],"24625":[675,20,675,30],"24633":[676,9,676,13],"24641":[676,9,676,15],"24649":[676,9,676,29],"24657":[676,30,676,39],"24665":[676,9,676,40],"24673":[676,44,676,48],"24681":[676,52,676,61],"24689":[676,65,676,74],"24697":[677,19,677,29],"24705":[677,30,677,31],"24713":[677,32,677,65],"24721":[677,67,677,76],"24729":[677,30,677,77],"24737":[677,15,677,78],"24745":[677,15,677,78],"24753":[677,9,677,79],"24761":[678,9,678,18],"24769":[678,22,678,31],"24777":[678,35,678,39],"24785":[678,35,678,41],"24793":[678,35,678,50],"24801":[678,54,678,58],"24809":[678,54,678,60],"24817":[678,54,678,69],"24825":[678,54,678,84],"24833":[678,88,678,89],"24841":[679,21,679,34],"24849":[679,21,679,34],"24857":[679,9,679,35],"24865":[680,16,680,25],"24873":[680,29,680,38],"24881":[681,21,681,30],"24889":[681,21,681,30],"24897":[681,9,681,31],"24905":[684,9,684,13],"24913":[685,9,685,13],"24921":[685,9,685,15],"24929":[685,9,685,20],"24937":[686,9,686,11],"24945":[683,26,687,6],"24953":[687,14,687,18],"24961":[687,25,687,26],"24969":[687,14,687,27],"24971":[687,14,687,24],"24977":[683,26,687,28],"24979":[683,26,687,13],"24985":[688,17,688,20],"24993":[689,24,689,32],"25001":[689,33,689,36],"25009":[689,24,689,37],"25017":[689,24,689,37],"25025":[689,17,689,38],"25033":[690,18,690,19],"25041":[691,24,691,32],"25049":[691,37,691,47],"25057":[691,48,691,72],"25065":[691,33,691,73],"25073":[691,24,691,74],"25081":[691,24,691,74],"25089":[691,17,691,75],"25097":[692,13,692,21],"25105":[692,22,692,26],"25113":[692,32,692,39],"25121":[692,40,692,42],"25129":[692,44,692,48],"25137":[692,28,692,49],"25145":[692,13,692,50],"25153":[692,13,692,51],"25161":[687,37,693,10],"25169":[687,37,693,10],"25177":[687,37,693,10],"25185":[687,37,693,10],"25193":[687,37,693,10],"25201":[687,36,693,11],"25209":[683,26,693,12],"25211":[683,26,687,35],"25217":[683,26,693,12],"25225":[683,26,693,12],"25233":[694,5,694,9],"25241":[694,5,694,11],"25249":[694,5,694,25],"25257":[694,26,694,35],"25265":[694,5,694,36],"25273":[694,5,694,41],"25281":[694,48,694,52],"25289":[694,48,694,54],"25297":[694,48,694,68],"25305":[694,69,694,78],"25313":[694,48,694,79],"25321":[694,81,694,95],"25329":[694,5,694,96],"25331":[694,5,694,47],"25337":[694,5,694,97],"25345":[672,25,695,2],"25353":[672,25,695,2],"25361":[672,25,695,2],"25369":[672,25,695,2],"25377":[672,25,695,2],"25385":[672,25,695,2],"25393":[672,25,695,2],"25401":[672,25,695,2],"25409":[672,25,695,2],"25417":[672,1,695,2],"25425":[672,1,695,3],"25433":[696,1,696,7],"25441":[696,1,696,17],"25449":[697,16,697,20],"25457":[697,16,697,20],"25465":[697,16,697,20],"25473":[698,9,698,13],"25481":[698,9,698,15],"25489":[698,9,698,40],"25497":[698,44,698,48],"25505":[699,9,699,13],"25513":[699,9,699,15],"25521":[699,43,699,45],"25529":[699,9,699,45],"25537":[699,9,699,46],"25545":[700,5,700,9],"25553":[700,5,700,11],"25561":[700,5,700,36],"25569":[700,37,700,41],"25577":[700,45,700,53],"25585":[700,5,700,53],"25593":[700,5,700,54],"25601":[696,46,701,2],"25609":[696,46,701,2],"25617":[696,46,701,2],"25625":[696,46,701,2],"25633":[696,46,701,2],"25641":[696,46,701,2],"25649":[696,1,701,2],"25657":[696,1,701,3],"25665":[702,1,702,7],"25673":[702,1,702,17],"25681":[703,16,703,20],"25689":[703,16,703,20],"25697":[703,16,703,20],"25705":[704,5,704,9],"25713":[704,5,704,11],"25721":[704,5,704,25],"25729":[704,26,704,30],"25737":[704,34,704,42],"25745":[704,5,704,42],"25753":[704,5,704,43],"25761":[702,36,705,2],"25769":[702,36,705,2],"25777":[702,36,705,2],"25785":[702,36,705,2],"25793":[702,36,705,2],"25801":[702,36,705,2],"25809":[702,1,705,2],"25817":[702,1,705,3],"25825":[706,1,706,7],"25833":[706,1,706,17],"25841":[707,16,707,22],"25849":[707,26,707,34],"25857":[708,16,708,22],"25865":[708,26,708,30],"25873":[708,26,708,35],"25881":[708,16,708,35],"25889":[708,9,708,36],"25897":[709,9,709,15],"25905":[709,19,709,25],"25913":[709,19,709,30],"25921":[710,16,710,22],"25929":[710,16,710,27],"25937":[710,31,710,35],"25945":[710,31,710,40],"25953":[710,16,710,40],"25961":[710,9,710,41],"25969":[712,12,712,17],"25977":[712,12,712,17],"25985":[712,5,712,18],"25993":[706,27,713,2],"26001":[706,27,713,2],"26009":[706,27,713,2],"26017":[706,27,713,2],"26025":[706,1,713,2],"26033":[706,1,713,3],"26041":[714,1,714,7],"26049":[714,1,714,17],"26057":[715,12,715,16],"26065":[715,12,715,18],"26073":[715,12,715,23],"26081":[715,12,715,32],"26083":[715,12,715,30],"26089":[715,12,715,32],"26097":[715,5,715,33],"26105":[714,32,716,2],"26113":[714,32,716,2],"26121":[714,32,716,2],"26129":[714,1,716,2],"26137":[714,1,716,3],"26145":[717,1,717,7],"26153":[717,1,717,17],"26161":[718,12,718,16],"26169":[718,12,718,16],"26177":[718,5,718,17],"26185":[717,30,719,2],"26193":[717,30,719,2],"26201":[717,30,719,2],"26209":[717,30,719,2],"26217":[717,1,719,2],"26225":[717,1,719,3],"26233":[720,1,720,7],"26241":[720,1,720,17],"26249":[721,12,721,16],"26257":[721,12,721,18],"26265":[721,12,721,23],"26273":[721,12,721,29],"26275":[721,12,721,27],"26281":[721,12,721,29],"26289":[721,5,721,30],"26297":[720,34,722,2],"26305":[720,34,722,2],"26313":[720,34,722,2],"26321":[720,34,722,2],"26329":[720,1,722,2],"26337":[720,1,722,3],"26345":[723,1,723,7],"26353":[723,1,723,17],"26361":[724,12,724,16],"26369":[724,12,724,18],"26377":[724,12,724,28],"26385":[724,12,724,28],"26393":[724,5,724,29],"26401":[723,33,725,2],"26409":[723,33,725,2],"26417":[723,33,725,2],"26425":[723,1,725,2],"26433":[723,1,725,3],"26441":[726,1,726,7],"26449":[726,1,726,17],"26457":[727,13,727,17],"26465":[727,13,727,19],"26473":[727,13,727,19],"26481":[727,13,727,19],"26489":[728,9,728,10],"26497":[728,9,728,18],"26505":[728,9,728,23],"26513":[728,9,728,33],"26521":[728,9,728,44],"26523":[728,9,728,42],"26529":[728,53,728,68],"26537":[728,9,728,69],"26539":[728,9,728,52],"26545":[728,74,728,75],"26553":[729,16,729,21],"26561":[729,16,729,21],"26569":[729,9,729,22],"26577":[730,12,730,16],"26585":[730,12,730,16],"26593":[730,5,730,17],"26601":[726,31,731,2],"26609":[726,31,731,2],"26617":[726,31,731,2],"26625":[726,31,731,2],"26633":[726,1,731,2],"26641":[726,1,731,3],"26649":[732,1,732,7],"26657":[732,1,732,17],"26665":[733,13,733,17],"26673":[733,13,733,19],"26681":[733,13,733,19],"26689":[733,13,733,19],"26697":[734,21,734,34],"26705":[734,38,734,40],"26713":[734,21,734,40],"26721":[734,5,734,41],"26729":[735,23,735,36],"26737":[735,23,735,50],"26745":[735,54,735,55],"26753":[735,54,735,62],"26761":[735,23,735,62],"26769":[735,23,735,62],"26777":[736,16,736,27],"26785":[736,28,736,29],"26793":[736,28,736,34],"26801":[736,36,736,38],"26809":[736,40,736,43],"26817":[736,45,736,58],"26825":[736,60,736,64],"26833":[736,66,736,67],"26841":[736,66,736,75],"26849":[736,12,736,76],"26857":[736,12,736,76],"26865":[736,5,736,77],"26873":[732,27,737,2],"26881":[732,27,737,2],"26889":[732,27,737,2],"26897":[732,27,737,2],"26905":[732,27,737,2],"26913":[732,27,737,2],"26921":[732,27,737,2],"26929":[732,27,737,2],"26937":[732,1,737,2],"26945":[732,1,737,3],"26953":[738,1,738,7],"26961":[738,18,738,24],"26969":[738,1,738,24],"26977":[738,1,738,25],"26985":[1,1,738,25],"26993":[1,1,738,25],"27001":[1,1,738,25],"27009":[1,1,738,25],"27017":[1,1,738,25],"27025":[1,1,738,25],"27033":[1,1,738,25],"27041":[1,1,738,25],"27049":[1,1,738,25],"27057":[1,1,738,25],"27065":[1,1,738,25],"27073":[1,1,738,25],"27081":[1,1,738,25],"27089":[1,1,738,25],"27097":[1,1,738,25],"27105":[1,1,738,25],"27113":[1,1,738,25],"27121":[1,1,738,25],"27129":[1,1,738,25],"27137":[1,1,738,25],"27145":[1,1,738,25],"27153":[1,1,738,25],"27161":[1,1,738,25],"27169":[1,1,738,25],"27177":[1,1,738,25],"27185":[1,1,738,25],"27193":[1,1,738,25],"27201":[1,1,738,25],"27209":[1,1,738,25],"27217":[1,1,738,25],"27225":[1,1,738,25],"27233":[1,1,738,25],"27241":[1,1,738,25],"27249":[1,1,738,25],"27257":[1,1,738,25],"27265":[1,1,738,25],"27273":[1,1,738,25],"27281":[1,1,738,25],"27289":[1,1,738,25],"27297":[1,1,738,25],"27305":[1,1,738,25],"27313":[1,1,738,25],"27321":[1,1,738,25],"27329":[1,1,738,25],"27337":[1,1,738,25],"27345":[1,1,738,25],"27353":[1,1,738,25],"27361":[1,1,738,25],"27369":[1,1,738,25],"27377":[1,1,738,25],"27385":[1,1,738,25],"27393":[1,1,738,25],"27401":[1,1,738,25],"27409":[20,17,25,2],"27417":[20,17,25,2],"27425":[26,20,32,2],"27433":[26,20,32,2],"27441":[35,9,39,10],"27449":[33,29,41,2],"27457":[33,29,41,2],"27465":[42,28,46,2],"27473":[42,28,46,2],"27481":[48,5,49,22],"27489":[50,12,50,57],"27497":[47,27,51,2],"27505":[47,27,51,2],"27513":[53,5,54,22],"27521":[55,12,55,117],"27529":[52,43,56,2],"27537":[52,43,56,2],"27545":[57,34,59,2],"27553":[57,34,59,2],"27561":[60,32,62,2],"27569":[60,32,62,2],"27577":[65,5,66,25],"27585":[63,27,68,2],"27593":[63,27,68,2],"27601":[73,22,75,2],"27609":[73,22,75,2],"27617":[77,5,79,6],"27625":[80,5,82,6],"27633":[76,33,84,2],"27641":[76,33,84,2],"27649":[86,5,88,6],"27657":[89,5,91,6],"27665":[103,24,105,14],"27673":[103,24,105,14],"27681":[99,9,106,10],"27689":[95,33,107,6],"27697":[95,33,107,6],"27705":[116,24,118,10],"27713":[116,24,118,10],"27721":[125,9,126,49],"27729":[131,17,133,18],"27737":[129,75,134,14],"27745":[129,75,134,14],"27753":[128,9,135,10],"27761":[128,9,135,10],"27769":[108,32,136,6],"27777":[108,32,136,6],"27785":[85,23,142,2],"27793":[85,23,142,2],"27801":[150,13,151,113],"27809":[144,12,157,6],"27817":[144,12,157,6],"27825":[143,22,158,2],"27833":[143,22,158,2],"27841":[161,9,162,20],"27849":[164,9,165,61],"27857":[166,9,167,99],"27865":[168,9,169,120],"27873":[171,9,172,43],"27881":[174,24,176,14],"27889":[174,24,176,14],"27897":[173,9,176,41],"27905":[160,12,177,6],"27913":[160,12,177,6],"27921":[159,20,178,2],"27929":[159,20,178,2],"27937":[181,9,182,20],"27945":[184,9,185,61],"27953":[186,9,187,99],"27961":[188,9,189,120],"27969":[190,9,191,43],"27977":[193,24,195,14],"27985":[193,24,195,14],"27993":[192,9,195,41],"28001":[180,12,197,6],"28009":[180,12,197,6],"28017":[179,25,198,2],"28025":[179,25,198,2],"28033":[201,9,202,20],"28041":[204,9,205,63],"28049":[206,9,207,68],"28057":[208,9,209,88],"28065":[212,24,214,14],"28073":[212,24,214,14],"28081":[211,9,214,41],"28089":[200,12,216,6],"28097":[200,12,216,6],"28105":[199,22,217,2],"28113":[199,22,217,2],"28121":[220,9,221,20],"28129":[223,9,224,61],"28137":[225,9,226,65],"28145":[227,9,228,93],"28153":[231,24,233,14],"28161":[231,24,233,14],"28169":[230,9,233,41],"28177":[219,12,235,6],"28185":[219,12,235,6],"28193":[218,20,236,2],"28201":[218,20,236,2],"28209":[240,9,241,41],"28217":[246,17,248,18],"28225":[244,75,249,14],"28233":[244,75,249,14],"28241":[243,9,250,10],"28249":[243,9,250,10],"28257":[238,32,251,6],"28265":[238,32,251,6],"28273":[256,17,259,18],"28281":[261,17,263,18],"28289":[267,17,268,121],"28297":[269,17,272,18],"28305":[273,17,274,66],"28313":[275,17,278,18],"28321":[279,67,282,18],"28329":[279,67,282,18],"28337":[255,60,283,14],"28345":[255,60,283,14],"28353":[253,30,284,10],"28361":[253,30,284,10],"28369":[252,12,285,6],"28377":[252,12,285,6],"28385":[237,22,286,2],"28393":[237,22,286,2],"28401":[288,5,289,28],"28409":[287,15,291,2],"28417":[287,15,291,2],"28425":[295,13,298,14],"28433":[293,5,301,6],"28441":[303,5,304,37],"28449":[311,17,313,18],"28457":[309,26,314,14],"28465":[309,26,314,14],"28473":[306,9,316,10],"28481":[292,24,318,2],"28489":[292,24,318,2],"28497":[344,5,346,6],"28505":[353,20,353,84],"28513":[356,20,356,85],"28521":[367,15,367,57],"28529":[373,19,373,87],"28537":[341,14,388,2],"28545":[341,14,388,2],"28553":[394,12,398,6],"28561":[392,5,398,6],"28569":[390,38,400,2],"28577":[390,38,400,2],"28585":[401,35,403,2],"28593":[401,35,403,2],"28601":[404,33,406,2],"28609":[404,33,406,2],"28617":[410,5,412,6],"28625":[413,5,416,6],"28633":[418,5,421,6],"28641":[407,28,428,2],"28649":[407,28,428,2],"28657":[431,5,432,74],"28665":[433,5,434,34],"28673":[435,5,436,36],"28681":[439,5,440,90],"28689":[429,28,441,2],"28697":[429,28,441,2],"28705":[444,5,445,42],"28713":[442,32,447,2],"28721":[442,32,447,2],"28729":[448,32,450,2],"28737":[448,32,450,2],"28745":[454,5,459,12],"28753":[461,5,463,6],"28761":[464,5,467,6],"28769":[478,17,479,61],"28777":[482,17,483,33],"28785":[492,21,493,67],"28793":[497,42,499,26],"28801":[497,42,499,26],"28809":[485,17,501,18],"28817":[481,56,502,14],"28825":[481,56,502,14],"28833":[472,9,503,10],"28841":[472,9,503,10],"28849":[468,5,505,6],"28857":[518,9,519,34],"28865":[520,9,521,69],"28873":[525,30,527,14],"28881":[525,30,527,14],"28889":[511,48,529,6],"28897":[511,48,529,6],"28905":[451,30,530,2],"28913":[451,30,530,2],"28921":[532,5,533,42],"28929":[535,5,536,70],"28937":[538,5,540,6],"28945":[541,5,546,25],"28953":[547,5,550,6],"28961":[551,5,552,95],"28969":[553,17,553,74],"28977":[554,21,554,86],"28985":[555,30,555,113],"28993":[556,27,556,104],"29001":[562,5,563,62],"29009":[564,5,565,56],"29017":[566,5,568,6],"29025":[570,5,573,6],"29033":[570,5,573,6],"29041":[574,5,579,12],"29049":[581,5,583,6],"29057":[584,5,587,6],"29065":[599,13,600,24],"29073":[602,13,605,14],"29081":[606,13,609,14],"29089":[619,17,621,18],"29097":[619,17,621,18],"29105":[625,38,627,22],"29113":[625,38,627,22],"29121":[611,13,629,14],"29129":[598,52,630,10],"29137":[598,52,630,10],"29145":[591,5,631,6],"29153":[591,5,631,6],"29161":[531,28,632,2],"29169":[531,28,632,2],"29177":[634,5,635,42],"29185":[637,5,638,70],"29193":[639,5,642,6],"29201":[643,11,643,43],"29209":[633,27,645,2],"29217":[633,27,645,2],"29225":[647,5,648,42],"29233":[650,5,651,70],"29241":[652,5,655,6],"29249":[656,11,656,43],"29257":[646,27,658,2],"29265":[646,27,658,2],"29273":[660,5,661,42],"29281":[663,5,664,70],"29289":[665,5,668,6],"29297":[669,11,669,43],"29305":[659,27,671,2],"29313":[659,27,671,2],"29321":[676,5,677,79],"29329":[680,12,682,6],"29337":[678,5,682,6],"29345":[688,13,689,38],"29353":[690,13,691,75],"29361":[687,37,693,10],"29369":[687,37,693,10],"29377":[672,25,695,2],"29385":[672,25,695,2],"29393":[698,5,699,46],"29401":[696,46,701,2],"29409":[696,46,701,2],"29417":[702,36,705,2],"29425":[702,36,705,2],"29433":[707,5,708,36],"29441":[709,5,711,6],"29449":[706,27,713,2],"29457":[706,27,713,2],"29465":[714,32,716,2],"29473":[714,32,716,2],"29481":[717,30,719,2],"29489":[717,30,719,2],"29497":[720,34,722,2],"29505":[720,34,722,2],"29513":[723,33,725,2],"29521":[723,33,725,2],"29529":[728,5,729,22],"29537":[726,31,731,2],"29545":[726,31,731,2],"29553":[732,27,737,2],"29561":[732,27,737,2],"29569":[1,1,738,25],"29577":[1,1,738,25],"nBranches":326,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/server.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/server_jalangi_.js","code":" \"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , bindToCurrentDomain = require('../connection/utils').bindToCurrentDomain\n  , EventEmitter = require('events').EventEmitter\n  , Pool = require('../connection/pool')\n  , b = require('bson')\n  , Query = require('../connection/commands').Query\n  , MongoError = require('../error')\n  , ReadPreference = require('./read_preference')\n  , BasicCursor = require('../cursor')\n  , CommandResult = require('./command_result')\n  , getSingleProperty = require('../connection/utils').getSingleProperty\n  , getProperty = require('../connection/utils').getProperty\n  , debugOptions = require('../connection/utils').debugOptions\n  , BSON = require('bson').native().BSON\n  , PreTwoSixWireProtocolSupport = require('../wireprotocol/2_4_support')\n  , TwoSixWireProtocolSupport = require('../wireprotocol/2_6_support')\n  , ThreeTwoWireProtocolSupport = require('../wireprotocol/3_2_support')\n  , Session = require('./session')\n  , Logger = require('../connection/logger')\n  , MongoCR = require('../auth/mongocr')\n  , X509 = require('../auth/x509')\n  , Plain = require('../auth/plain')\n  , GSSAPI = require('../auth/gssapi')\n  , SSPI = require('../auth/sspi')\n  , ScramSHA1 = require('../auth/scram');\n\n/**\n * @fileOverview The **Server** class is a class that represents a single server topology and is\n * used to construct connections.\n *\n * @example\n * var Server = require('mongodb-core').Server\n *   , ReadPreference = require('mongodb-core').ReadPreference\n *   , assert = require('assert');\n *\n * var server = new Server({host: 'localhost', port: 27017});\n * // Wait for the connection event\n * server.on('connect', function(server) {\n *   server.destroy();\n * });\n *\n * // Start connecting\n * server.connect();\n */\n\n// All bson types\nvar bsonTypes = [b.Long, b.ObjectID, b.Binary, b.Code, b.DBRef, b.Symbol, b.Double, b.Timestamp, b.MaxKey, b.MinKey];\n// BSON parser\nvar bsonInstance = null;\n// Server instance id\nvar serverId = 0;\n// Callbacks instance id\nvar callbackId = 0;\n\n// Single store for all callbacks\nvar Callbacks = function() {\n  // EventEmitter.call(this);\n  var self = this;\n  // Callbacks\n  this.callbacks = {};\n  // Set the callbacks id\n  this.id = callbackId++;\n  // Set the type to server\n  this.type = 'server';\n}\n\n//\n// Clone the options\nvar cloneOptions = function(options) {\n  var opts = {};\n  for(var name in options) {\n    opts[name] = options[name];\n  }\n  return opts;\n}\n\n//\n// Flush all callbacks\nCallbacks.prototype.flush = function(err) {\n  for(var id in this.callbacks) {\n    if(!isNaN(parseInt(id, 10))) {\n      var callback = this.callbacks[id];\n      delete this.callbacks[id];\n      callback(err, null);\n    }\n  }\n}\n\nCallbacks.prototype.emit = function(id, err, value) {\n  var callback = this.callbacks[id];\n  delete this.callbacks[id];\n  callback(err, value);\n}\n\nCallbacks.prototype.raw = function(id) {\n  if(this.callbacks[id] == null) return false;\n  return this.callbacks[id].raw == true ? true : false\n}\n\nCallbacks.prototype.documentsReturnedIn = function(id) {\n  if(this.callbacks[id] == null) return false;\n  return typeof this.callbacks[id].documentsReturnedIn == 'string' ? this.callbacks[id].documentsReturnedIn : null;\n}\n\nCallbacks.prototype.unregister = function(id) {\n  delete this.callbacks[id];\n}\n\nCallbacks.prototype.register = function(id, callback) {\n  this.callbacks[id] = bindToCurrentDomain(callback);\n}\n\n/**\n * @ignore\n */\nvar bindToCurrentDomain = function(callback) {\n  var domain = process.domain;\n  if(domain == null || callback == null) return callback;\n  return domain.bind(callback);\n}\n\nvar DISCONNECTED = 'disconnected';\nvar CONNECTING = 'connecting';\nvar CONNECTED = 'connected';\nvar DESTROYED = 'destroyed';\n\n// Supports server\nvar supportsServer = function(_s) {\n  return _s.ismaster && typeof _s.ismaster.minWireVersion == 'number';\n}\n\n//\n// createWireProtocolHandler\nvar createWireProtocolHandler = function(result) {\n  // 3.2 wire protocol handler\n  if(result && result.maxWireVersion >= 4) {\n    return new ThreeTwoWireProtocolSupport(new TwoSixWireProtocolSupport());\n  }\n\n  // 2.6 wire protocol handler\n  if(result && result.maxWireVersion >= 2) {\n    return new TwoSixWireProtocolSupport();\n  }\n\n  // 2.4 or earlier wire protocol handler\n  return new PreTwoSixWireProtocolSupport();\n}\n\n//\n// Reconnect server\nvar reconnectServer = function(self, state) {\n  // Flush out any left over callbacks\n  if(self && state && state.callbacks) {\n    state.callbacks.flush(new MongoError(f(\"server %s received a broken socket pipe error\", self.name)));\n  }\n\n  // If the current reconnect retries is 0 stop attempting to reconnect\n  if(state.currentReconnectRetry == 0) {\n    return self.destroy(true, true);\n  }\n\n  // Adjust the number of retries\n  state.currentReconnectRetry = state.currentReconnectRetry - 1;\n\n  // Set status to connecting\n  state.state = CONNECTING;\n  // Create a new Pool\n  state.pool = new Pool(state.options);\n  // error handler\n  var reconnectErrorHandler = function(err) {\n    // Set the state to disconnected so we can peform a proper reconnect\n    state.state = DISCONNECTED;\n    // Destroy the pool\n    state.pool.destroy();\n    // Adjust the number of retries\n    state.currentReconnectRetry = state.currentReconnectRetry - 1;\n    // No more retries\n    if(state.currentReconnectRetry <= 0) {\n      self.state = DESTROYED;\n      self.emit('error', f('failed to connect to %s:%s after %s retries', state.options.host, state.options.port, state.reconnectTries));\n    } else {\n      setTimeout(function() {\n        reconnectServer(self, state);\n      }, state.reconnectInterval);\n    }\n  }\n\n  //\n  // Attempt to connect\n  state.pool.once('connect', function() {\n    // Reset retries\n    state.currentReconnectRetry = state.reconnectTries;\n\n    // Remove any non used handlers\n    var events = ['error', 'close', 'timeout', 'parseError'];\n    events.forEach(function(e) {\n      state.pool.removeAllListeners(e);\n    });\n\n    // Set connected state\n    state.state = CONNECTED;\n\n    // Add proper handlers\n    state.pool.once('error', reconnectErrorHandler);\n    state.pool.once('close', closeHandler(self, state));\n    state.pool.once('timeout', timeoutHandler(self, state));\n    state.pool.once('parseError', fatalErrorHandler(self, state));\n\n    // We need to ensure we have re-authenticated\n    var keys = Object.keys(state.authProviders);\n    if(keys.length == 0) return self.emit('reconnect', self);\n\n    // Execute all providers\n    var count = keys.length;\n    // Iterate over keys\n    for(var i = 0; i < keys.length; i++) {\n      state.authProviders[keys[i]].reauthenticate(self, state.pool, function(err, r) {\n        count = count - 1;\n        // We are done, emit reconnect event\n        if(count == 0) {\n          return self.emit('reconnect', self);\n        }\n      });\n    }\n  });\n\n  //\n  // Handle connection failure\n  state.pool.once('error', errorHandler(self, state));\n  state.pool.once('close', errorHandler(self, state));\n  state.pool.once('timeout', errorHandler(self, state));\n  state.pool.once('parseError', errorHandler(self, state));\n\n  // Connect pool\n  state.pool.connect();\n}\n\n//\n// Handlers\nvar messageHandler = function(self, state) {\n  return function(response, connection) {\n    try {\n      // Parse the message\n      response.parse({raw: state.callbacks.raw(response.responseTo), documentsReturnedIn: state.callbacks.documentsReturnedIn(response.responseTo)});\n      if(state.logger.isDebug()) state.logger.debug(f('message [%s] received from %s', response.raw.toString('hex'), self.name));\n      state.callbacks.emit(response.responseTo, null, response);\n    } catch (err) {\n      state.callbacks.flush(new MongoError(err));\n      self.destroy();\n    }\n  }\n}\n\nvar errorHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'error', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s errored out with %s', self.name, JSON.stringify(err)));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s received an error %s\", self.name, JSON.stringify(err))));\n    // Destroy all connections\n    self.destroy();\n    // Emit error event\n    if(state.emitError && self.listeners('error').length > 0) self.emit('error', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      // state.currentReconnectRetry = state.reconnectTries,\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n  }\n}\n\nvar fatalErrorHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'error', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s errored out with %s', self.name, JSON.stringify(err)));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s received an error %s\", self.name, JSON.stringify(err))));\n    // Emit error event\n    if(self.listeners('error').length > 0) self.emit('error', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      // state.currentReconnectRetry = state.reconnectTries,\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n    // Destroy all connections\n    self.destroy();\n  }\n}\n\nvar timeoutHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'timeout', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s timed out', self.name));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s timed out\", self.name)));\n    // Emit error event\n    self.emit('timeout', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      // state.currentReconnectRetry = state.reconnectTries,\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n    // Destroy all connections\n    self.destroy();\n  }\n}\n\nvar closeHandler = function(self, state) {\n  return function(err, connection) {\n    if(state.state == DISCONNECTED || state.state == DESTROYED) return;\n    // Set disconnected state\n    state.state = DISCONNECTED;\n\n    if(state.readPreferenceStrategies != null) notifyStrategies(self, self.s, 'close', [self]);\n    if(state.logger.isInfo()) state.logger.info(f('server %s closed', self.name));\n    // Flush out all the callbacks\n    if(state.callbacks) state.callbacks.flush(new MongoError(f(\"server %s sockets closed\", self.name)));\n    // Emit error event\n    self.emit('close', err, self);\n    // If we specified the driver to reconnect perform it\n    if(state.reconnect) setTimeout(function() {\n      // state.currentReconnectRetry = state.reconnectTries,\n      reconnectServer(self, state)\n    }, state.reconnectInterval);\n    // Destroy all connections\n    self.destroy();\n  }\n}\n\nvar connectHandler = function(self, state) {\n  // Apply all stored authentications\n  var applyAuthentications = function(callback) {\n    // We need to ensure we have re-authenticated\n    var keys = Object.keys(state.authProviders);\n    if(keys.length == 0) return callback(null, null);\n\n    // Execute all providers\n    var count = keys.length;\n    // Iterate over keys\n    for(var i = 0; i < keys.length; i++) {\n      state.authProviders[keys[i]].reauthenticate(self, state.pool, function(err, r) {\n        count = count - 1;\n        // We are done, emit reconnect event\n        if(count == 0) {\n          return callback(null, null);\n        }\n      });\n    }\n  }\n\n  return function(connection) {\n    // Apply any applyAuthentications\n    applyAuthentications(function() {\n      // Get the actual latency of the ismaster\n      var start = new Date().getTime();\n      // Execute an ismaster\n      self.command('admin.$cmd', {ismaster:true}, function(err, r) {\n        if(err) {\n          state.state = DISCONNECTED;\n          return self.emit('close', err, self);\n        }\n\n        // Set the latency for this instance\n        state.isMasterLatencyMS = new Date().getTime() - start;\n\n        // Set the current ismaster\n        if(!err) {\n          state.ismaster = r.result;\n        }\n\n        // Emit the ismaster\n        self.emit('ismaster', r.result, self);\n\n        // Determine the wire protocol handler\n        state.wireProtocolHandler = createWireProtocolHandler(state.ismaster);\n\n        // Set the wireProtocolHandler\n        state.options.wireProtocolHandler = state.wireProtocolHandler;\n\n        // Log the ismaster if available\n        if(state.logger.isInfo()) state.logger.info(f('server %s connected with ismaster [%s]', self.name, JSON.stringify(r.result)));\n\n        // Validate if we it's a server we can connect to\n        if(!supportsServer(state) && state.wireProtocolHandler == null) {\n          state.state = DISCONNECTED\n          return self.emit('error', new MongoError(\"non supported server version\"), self);\n        }\n\n        // Set the details\n        if(state.ismaster && state.ismaster.me) state.serverDetails.name = state.ismaster.me;\n\n        // No read preference strategies just emit connect\n        if(state.readPreferenceStrategies == null) {\n          state.state = CONNECTED;\n          return self.emit('connect', self);\n        }\n\n        // Signal connect to all readPreferences\n        notifyStrategies(self, self.s, 'connect', [self], function(err, result) {\n          state.state = CONNECTED;\n          return self.emit('connect', self);\n        });\n      });\n    });\n  }\n}\n\nvar slaveOk = function(r) {\n  if(r) return r.slaveOk()\n  return false;\n}\n\n//\n// Execute readPreference Strategies\nvar notifyStrategies = function(self, state, op, params, callback) {\n  if(typeof callback != 'function') {\n    // Notify query start to any read Preference strategies\n    for(var name in state.readPreferenceStrategies) {\n      if(state.readPreferenceStrategies[name][op]) {\n        var strat = state.readPreferenceStrategies[name];\n        strat[op].apply(strat, params);\n      }\n    }\n    // Finish up\n    return;\n  }\n\n  // Execute the async callbacks\n  var nPreferences = Object.keys(state.readPreferenceStrategies).length;\n  if(nPreferences == 0) return callback(null, null);\n  for(var name in state.readPreferenceStrategies) {\n    if(state.readPreferenceStrategies[name][op]) {\n      var strat = state.readPreferenceStrategies[name];\n      // Add a callback to params\n      var cParams = params.slice(0);\n      cParams.push(function(err, r) {\n        nPreferences = nPreferences - 1;\n        if(nPreferences == 0) {\n          callback(null, null);\n        }\n      })\n      // Execute the readPreference\n      strat[op].apply(strat, cParams);\n    }\n  }\n}\n\nvar debugFields = ['reconnect', 'reconnectTries', 'reconnectInterval', 'emitError', 'cursorFactory', 'host'\n  , 'port', 'size', 'keepAlive', 'keepAliveInitialDelay', 'noDelay', 'connectionTimeout'\n  , 'socketTimeout', 'singleBufferSerializtion', 'ssl', 'ca', 'cert', 'key', 'rejectUnauthorized', 'promoteLongs'];\n\n/**\n * Creates a new Server instance\n * @class\n * @param {boolean} [options.reconnect=true] Server will attempt to reconnect on loss of connection\n * @param {number} [options.reconnectTries=30] Server attempt to reconnect #times\n * @param {number} [options.reconnectInterval=1000] Server will wait # milliseconds between retries\n * @param {boolean} [options.emitError=false] Server will emit errors events\n * @param {Cursor} [options.cursorFactory=Cursor] The cursor factory class used for all query cursors\n * @param {string} options.host The server host\n * @param {number} options.port The server port\n * @param {number} [options.size=5] Server connection pool size\n * @param {boolean} [options.keepAlive=true] TCP Connection keep alive enabled\n * @param {number} [options.keepAliveInitialDelay=0] Initial delay before TCP keep alive enabled\n * @param {boolean} [options.noDelay=true] TCP Connection no delay\n * @param {number} [options.connectionTimeout=0] TCP Connection timeout setting\n * @param {number} [options.socketTimeout=0] TCP Socket timeout setting\n * @param {boolean} [options.ssl=false] Use SSL for connection\n * @param {Buffer} [options.ca] SSL Certificate store binary buffer\n * @param {Buffer} [options.cert] SSL Certificate binary buffer\n * @param {Buffer} [options.key] SSL Key file binary buffer\n * @param {string} [options.passphrase] SSL Certificate pass phrase\n * @param {boolean} [options.rejectUnauthorized=true] Reject unauthorized server certificates\n * @param {boolean} [options.promoteLongs=true] Convert Long values from the db into Numbers if they fit into 53 bits\n * @return {Server} A cursor instance\n * @fires Server#connect\n * @fires Server#close\n * @fires Server#error\n * @fires Server#timeout\n * @fires Server#parseError\n * @fires Server#reconnect\n */\nvar Server = function(options) {\n  var self = this;\n\n  // Add event listener\n  EventEmitter.call(this);\n\n  // BSON Parser, ensure we have a single instance\n  if(bsonInstance == null) {\n    bsonInstance = new BSON(bsonTypes);\n  }\n\n  // Reconnect retries\n  var reconnectTries = options.reconnectTries || 30;\n\n  // Keeps all the internal state of the server\n  this.s = {\n    // Options\n      options: options\n    // Contains all the callbacks\n    , callbacks: new Callbacks()\n    // Logger\n    , logger: Logger('Server', options)\n    // Server state\n    , state: DISCONNECTED\n    // Reconnect option\n    , reconnect: typeof options.reconnect == 'boolean' ? options.reconnect :  true\n    , reconnectTries: reconnectTries\n    , reconnectInterval: options.reconnectInterval || 1000\n    // Swallow or emit errors\n    , emitError: typeof options.emitError == 'boolean' ? options.emitError : false\n    // Current state\n    , currentReconnectRetry: reconnectTries\n    // Contains the ismaster\n    , ismaster: null\n    // Contains any alternate strategies for picking\n    , readPreferenceStrategies: options.readPreferenceStrategies\n    // Auth providers\n    , authProviders: options.authProviders || {}\n    // Server instance id\n    , id: serverId++\n    // Grouping tag used for debugging purposes\n    , tag: options.tag\n    // Do we have a not connected handler\n    , disconnectHandler: options.disconnectHandler\n    // wireProtocolHandler methods\n    , wireProtocolHandler: options.wireProtocolHandler || new PreTwoSixWireProtocolSupport()\n    // Factory overrides\n    , Cursor: options.cursorFactory || BasicCursor\n    // BSON Parser, ensure we have a single instance\n    , bsonInstance: bsonInstance\n    // Pick the right bson parser\n    , bson: options.bson ? options.bson : bsonInstance\n    // Internal connection pool\n    , pool: null\n    // Is master latency\n    , isMasterLatencyMS: 0\n    // Server details\n    , serverDetails: {\n        host: options.host\n      , port: options.port\n      , name: options.port ? f(\"%s:%s\", options.host, options.port) : options.host\n    }\n  }\n\n  // Reference state\n  var s = this.s;\n\n  // Add bson parser to options\n  options.bson = s.bson;\n\n  // Set error properties\n  getProperty(this, 'name', 'name', s.serverDetails, {});\n  getProperty(this, 'bson', 'bson', s.options, {});\n  getProperty(this, 'wireProtocolHandler', 'wireProtocolHandler', s.options, {});\n  getSingleProperty(this, 'id', s.id);\n\n  // Add auth providers\n  this.addAuthProvider('mongocr', new MongoCR());\n  this.addAuthProvider('x509', new X509());\n  this.addAuthProvider('plain', new Plain());\n  this.addAuthProvider('gssapi', new GSSAPI());\n  this.addAuthProvider('sspi', new SSPI());\n  this.addAuthProvider('scram-sha-1', new ScramSHA1());\n}\n\ninherits(Server, EventEmitter);\n\n/**\n * Execute a command\n * @method\n * @param {string} type Type of BSON parser to use (c++ or js)\n */\nServer.prototype.setBSONParserType = function(type) {\n  var nBSON = null;\n\n  if(type == 'c++') {\n    nBSON = require('bson').native().BSON;\n  } else if(type == 'js') {\n    nBSON = require('bson').pure().BSON;\n  } else {\n    throw new MongoError(f(\"% parser not supported\", type));\n  }\n\n  this.s.options.bson = new nBSON(bsonTypes);\n}\n\n/**\n * Reduce the poolSize to the provided max connections value\n * @method\n * @param {number} maxConnections reduce the poolsize to maxConnections\n */\nServer.prototype.capConnections = function(maxConnections) {\n  this.s.pool.capConnections(maxConnections);\n}\n\n/**\n * Returns the last known ismaster document for this server\n * @method\n * @return {object}\n */\nServer.prototype.lastIsMaster = function() {\n  return this.s.ismaster;\n}\n\n/**\n * Initiate server connect\n * @method\n */\nServer.prototype.connect = function(_options) {\n  var self = this;\n  // Set server specific settings\n  _options = _options || {}\n  // Set the promotion\n  if(typeof _options.promoteLongs == 'boolean')  {\n    self.s.options.promoteLongs = _options.promoteLongs;\n  }\n\n  // Destroy existing pool\n  if(self.s.pool) {\n    self.s.pool.destroy();\n    self.s.pool = null;\n  }\n\n  // Set the state to connection\n  self.s.state = CONNECTING;\n  // Create a new connection pool\n  if(!self.s.pool) {\n    self.s.options.messageHandler = messageHandler(self, self.s);\n    self.s.pool = new Pool(self.s.options);\n  }\n\n  // Add all the event handlers\n  self.s.pool.once('timeout', timeoutHandler(self, self.s));\n  self.s.pool.once('close', closeHandler(self, self.s));\n  self.s.pool.once('error', errorHandler(self, self.s));\n  self.s.pool.once('connect', connectHandler(self, self.s));\n  self.s.pool.once('parseError', fatalErrorHandler(self, self.s));\n\n  // Connect the pool\n  self.s.pool.connect();\n}\n\n/**\n * Destroy the server connection\n * @method\n */\nServer.prototype.destroy = function(emitClose, emitDestroy) {\n  var self = this;\n  if(self.s.logger.isDebug()) self.s.logger.debug(f('destroy called on server %s', self.name));\n  // Emit close\n  if(emitClose && self.listeners('close').length > 0) self.emit('close', self);\n\n  // Emit destroy event\n  if(emitDestroy) self.emit('destroy', self);\n  // Set state as destroyed\n  self.s.state = DESTROYED;\n  // Close the pool\n  self.s.pool.destroy();\n  // Flush out all the callbacks\n  if(self.s.callbacks) self.s.callbacks.flush(new MongoError(f(\"server %s sockets closed\", self.name)));\n}\n\n/**\n * Figure out if the server is connected\n * @method\n * @return {boolean}\n */\nServer.prototype.isConnected = function() {\n  var self = this;\n  if(self.s.pool) return self.s.pool.isConnected();\n  return false;\n}\n\n/**\n * Figure out if the server instance was destroyed by calling destroy\n * @method\n * @return {boolean}\n */\nServer.prototype.isDestroyed = function() {\n  return this.s.state == DESTROYED;\n}\n\nvar executeSingleOperation = function(self, ns, cmd, queryOptions, options, onAll, callback) {\n  // Create a query instance\n  var query = new Query(self.s.bson, ns, cmd, queryOptions);\n\n  // Set slave OK\n  query.slaveOk = slaveOk(options.readPreference);\n\n  // Notify query start to any read Preference strategies\n  if(self.s.readPreferenceStrategies != null)\n    notifyStrategies(self, self.s, 'startOperation', [self, query, new Date()]);\n\n  // Get a connection (either passed or from the pool)\n  var connection = options.connection || self.s.pool.get();\n\n  // Double check if we have a valid connection\n  // Checking that the connection exists to avoid an uncaught exception in case there is an issue with the pool\n  if(!(connection && connection.isConnected())) {\n    return callback(new MongoError(f(\"no connection available to server %s\", self.name)));\n  }\n\n  // Print cmd and execution connection if in debug mode for logging\n  if(self.s.logger.isDebug()) {\n    var json = connection.toJSON();\n    self.s.logger.debug(f('cmd [%s] about to be executed on connection with id %s at %s:%s', JSON.stringify(cmd), json.id, json.host, json.port));\n  }\n\n  // Execute multiple queries\n  if(onAll) {\n    var connections = self.s.pool.getAll();\n    var total = connections.length;\n    // We have an error\n    var error = null;\n    // Execute on all connections\n    for(var i = 0; i < connections.length; i++) {\n      try {\n        query.incRequestId();\n        connections[i].write(query.toBin());\n      } catch(err) {\n        total = total - 1;\n        if(total == 0) return callback(MongoError.create(err));\n      }\n\n      // Register the callback\n      self.s.callbacks.register(query.requestId, function(err, result) {\n        if(err) error = err;\n        total = total - 1;\n\n        // Done\n        if(total == 0) {\n          // Notify end of command\n          notifyStrategies(self, self.s, 'endOperation', [self, error, result, new Date()]);\n          if(error) return callback(MongoError.create(error));\n          // Execute callback, catch and rethrow if needed\n          try { callback(null, new CommandResult(result.documents[0], connections)); }\n          catch(err) { process.nextTick(function() { throw err}); }\n        }\n      });\n    }\n\n    return;\n  }\n\n  // Execute a single command query\n  try {\n    connection.write(query.toBin());\n  } catch(err) {\n    return callback(MongoError.create(err));\n  }\n\n  // Register the callback\n  self.s.callbacks.register(query.requestId, function(err, result) {\n    // Notify end of command\n    notifyStrategies(self, self.s, 'endOperation', [self, err, result, new Date()]);\n    if(err) return callback(err);\n    if(result.documents[0]['$err']\n      || result.documents[0]['errmsg']\n      || result.documents[0]['err']\n      || result.documents[0]['code']) return callback(MongoError.create(result.documents[0]));\n      // Execute callback, catch and rethrow if needed\n      try { callback(null, new CommandResult(result.documents[0], connection)); }\n      catch(err) { process.nextTick(function() { throw err}); }\n  });\n}\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Connection} [options.connection] Specify connection object to execute command against\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.command = function(ns, cmd, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Ensure we have no options\n  options = options || {};\n  // Do we have a read Preference it need to be of type ReadPreference\n  if(options.readPreference && !(options.readPreference instanceof ReadPreference)) {\n    throw new Error(\"readPreference must be an instance of ReadPreference\");\n  }\n\n  // Debug log\n  if(self.s.logger.isDebug()) self.s.logger.debug(f('executing command [%s] against %s', JSON.stringify({\n    ns: ns, cmd: cmd, options: debugOptions(debugFields, options)\n  }), self.name));\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('command', ns, cmd, options, callback);\n  }\n\n  // If we have no connection error\n  if(!self.s.pool.isConnected()) return callback(new MongoError(f(\"no connection available to server %s\", self.name)));\n\n  // Execute on all connections\n  var onAll = typeof options.onAll == 'boolean' ? options.onAll : false;\n\n  // Check keys\n  var checkKeys = typeof options.checkKeys == 'boolean' ? options.checkKeys: false;\n\n  // Serialize function\n  var serializeFunctions = typeof options.serializeFunctions == 'boolean' ? options.serializeFunctions : false;\n\n  // Ignore undefined values\n  var ignoreUndefined = typeof options.ignoreUndefined == 'boolean' ? options.ignoreUndefined : false;\n\n  // Query options\n  var queryOptions = {\n    numberToSkip: 0, numberToReturn: -1, checkKeys: checkKeys\n  };\n\n  // Set up the serialize functions and ignore undefined\n  if(serializeFunctions) queryOptions.serializeFunctions = serializeFunctions;\n  if(ignoreUndefined) queryOptions.ignoreUndefined = ignoreUndefined;\n\n  // Single operation execution\n  if(!Array.isArray(cmd)) {\n    return executeSingleOperation(self, ns, cmd, queryOptions, options, onAll, callback);\n  }\n\n  // Build commands for each of the instances\n  var queries = new Array(cmd.length);\n  for(var i = 0; i < cmd.length; i++) {\n    queries[i] = new Query(self.s.bson, ns, cmd[i], queryOptions);\n    queries[i].slaveOk = slaveOk(options.readPreference);\n  }\n\n  // Notify query start to any read Preference strategies\n  if(self.s.readPreferenceStrategies != null)\n    notifyStrategies(self, self.s, 'startOperation', [self, queries, new Date()]);\n\n  // Get a connection (either passed or from the pool)\n  var connection = options.connection || self.s.pool.get();\n\n  // Double check if we have a valid connection\n  if(!connection.isConnected()) {\n    return callback(new MongoError(f(\"no connection available to server %s\", self.name)));\n  }\n\n  // Print cmd and execution connection if in debug mode for logging\n  if(self.s.logger.isDebug()) {\n    var json = connection.toJSON();\n    self.s.logger.debug(f('cmd [%s] about to be executed on connection with id %s at %s:%s', JSON.stringify(queries), json.id, json.host, json.port));\n  }\n\n  // Canceled operations\n  var canceled = false;\n  // Number of operations left\n  var operationsLeft = queries.length;\n  // Results\n  var results = [];\n\n  // We need to nest the callbacks\n  for(var i = 0; i < queries.length; i++) {\n    // Get the query object\n    var query = queries[i];\n\n    // Execute a single command query\n    try {\n      connection.write(query.toBin());\n    } catch(err) {\n      return callback(MongoError.create(err));\n    }\n\n    // Register the callback\n    self.s.callbacks.register(query.requestId, function(err, result) {\n      // If it's canceled ignore the operation\n      if(canceled) return;\n      // Update the current index\n      operationsLeft = operationsLeft - 1;\n\n      // If we have an error cancel the operation\n      if(err) {\n        canceled = true;\n        return callback(err);\n      }\n\n      // Return the result\n      if(result.documents[0]['$err']\n        || result.documents[0]['errmsg']\n        || result.documents[0]['err']\n        || result.documents[0]['code']) {\n\n        // Set to canceled\n        canceled = true;\n        // Return the error\n        return callback(MongoError.create(result.documents[0]));\n      }\n\n      // Push results\n      results.push(result.documents[0]);\n\n      // We are done, return the result\n      if(operationsLeft == 0) {\n        // Notify end of command\n        notifyStrategies(self, self.s, 'endOperation', [self, err, result, new Date()]);\n\n        // Turn into command results\n        var commandResults = new Array(results.length);\n        for(var i = 0; i < results.length; i++) {\n          commandResults[i] = new CommandResult(results[i], connection);\n        }\n\n        // Execute callback, catch and rethrow if needed\n        try { callback(null, commandResults); }\n        catch(err) { process.nextTick(function() { throw err}); }\n      }\n    });\n  }\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.insert = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('insert', ns, ops, options, callback);\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.s.wireProtocolHandler.insert(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);\n}\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.update = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('update', ns, ops, options, callback);\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n\n  // Execute write\n  return self.s.wireProtocolHandler.update(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.remove = function(ns, ops, options, callback) {\n  if(typeof options == 'function') callback = options, options = {};\n  var self = this;\n  if(this.s.state == DESTROYED) return callback(new MongoError(f('topology was destroyed')));\n  // Topology is not connected, save the call in the provided store to be\n  // Executed at some point when the handler deems it's reconnected\n  if(!self.isConnected() && self.s.disconnectHandler != null) {\n    callback = bindToCurrentDomain(callback);\n    return self.s.disconnectHandler.add('remove', ns, ops, options, callback);\n  }\n\n  // Setup the docs as an array\n  ops = Array.isArray(ops) ? ops : [ops];\n  // Execute write\n  return self.s.wireProtocolHandler.remove(self, self.s.ismaster, ns, self.s.bson, self.s.pool, self.s.callbacks, ops, options, callback);\n}\n\n/**\n * Authenticate using a specified mechanism\n * @method\n * @param {string} mechanism The Auth mechanism we are invoking\n * @param {string} db The db we are invoking the mechanism against\n * @param {...object} param Parameters for the specific mechanism\n * @param {authResultCallback} callback A callback function\n */\nServer.prototype.auth = function(mechanism, db) {\n  var self = this;\n  var args = Array.prototype.slice.call(arguments, 2);\n  var callback = args.pop();\n\n  // If we don't have the mechanism fail\n  if(self.s.authProviders[mechanism] == null && mechanism != 'default')\n    throw new MongoError(f(\"auth provider %s does not exist\", mechanism));\n\n  // If we have the default mechanism we pick mechanism based on the wire\n  // protocol max version. If it's >= 3 then scram-sha1 otherwise mongodb-cr\n  if(mechanism == 'default' && self.s.ismaster && self.s.ismaster.maxWireVersion >= 3) {\n    mechanism = 'scram-sha-1';\n  } else if(mechanism == 'default') {\n    mechanism = 'mongocr';\n  }\n\n  // Actual arguments\n  var finalArguments = [self, self.s.pool, db].concat(args.slice(0)).concat([function(err, r) {\n    if(err) return callback(err);\n    if(!r) return callback(new MongoError('could not authenticate'));\n    callback(null, new Session({}, self));\n  }]);\n\n  // Let's invoke the auth mechanism\n  self.s.authProviders[mechanism].auth.apply(self.s.authProviders[mechanism], finalArguments);\n}\n\n//\n// Plugin methods\n//\n\n/**\n * Add custom read preference strategy\n * @method\n * @param {string} name Name of the read preference strategy\n * @param {object} strategy Strategy object instance\n */\nServer.prototype.addReadPreferenceStrategy = function(name, strategy) {\n  var self = this;\n  if(self.s.readPreferenceStrategies == null) self.s.readPreferenceStrategies = {};\n  self.s.readPreferenceStrategies[name] = strategy;\n}\n\n/**\n * Add custom authentication mechanism\n * @method\n * @param {string} name Name of the authentication mechanism\n * @param {object} provider Authentication object instance\n */\nServer.prototype.addAuthProvider = function(name, provider) {\n  var self = this;\n  self.s.authProviders[name] = provider;\n}\n\n/**\n * Compare two server instances\n * @method\n * @param {Server} server Server to compare equality against\n * @return {boolean}\n */\nServer.prototype.equals = function(server) {\n  if(typeof server == 'string') return server == this.name;\n\n  if(server && server.name) {\n    return server.name == this.name;\n  }\n\n  return false;\n}\n\n/**\n * All raw connections\n * @method\n * @return {Connection[]}\n */\nServer.prototype.connections = function() {\n  return this.s.pool.getAll();\n}\n\n/**\n * Get server\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Server}\n */\nServer.prototype.getServer = function(options) {\n  return this;\n}\n\n/**\n * Get connection\n * @method\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @return {Connection}\n */\nServer.prototype.getConnection = function(options) {\n  return this.s.pool.get();\n}\n\n/**\n * Get callbacks object\n * @method\n * @return {Callbacks}\n */\nServer.prototype.getCallbacks = function() {\n  return this.s.callbacks;\n}\n\n/**\n * Name of BSON parser currently used\n * @method\n * @return {string}\n */\nServer.prototype.parserType = function() {\n  var s = this.s;\n  if(s.options.bson.serialize.toString().indexOf('[native code]') != -1)\n    return 'c++';\n  return 'js';\n}\n\n// // Command\n// {\n//     find: ns\n//   , query: <object>\n//   , limit: <n>\n//   , fields: <object>\n//   , skip: <n>\n//   , hint: <string>\n//   , explain: <boolean>\n//   , snapshot: <boolean>\n//   , batchSize: <n>\n//   , returnKey: <boolean>\n//   , maxScan: <n>\n//   , min: <n>\n//   , max: <n>\n//   , showDiskLoc: <boolean>\n//   , comment: <string>\n//   , maxTimeMS: <n>\n//   , raw: <boolean>\n//   , readPreference: <ReadPreference>\n//   , tailable: <boolean>\n//   , oplogReplay: <boolean>\n//   , noCursorTimeout: <boolean>\n//   , awaitdata: <boolean>\n//   , exhaust: <boolean>\n//   , partial: <boolean>\n// }\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {ReadPreference} [options.readPreference] Specify read preference if command supports it\n * @param {Boolean} [options.serializeFunctions=false] Specify if functions on an object should be serialized.\n * @param {Boolean} [options.ignoreUndefined=false] Specify if the BSON serializer should ignore undefined fields.\n * @param {opResultCallback} callback A callback function\n */\nServer.prototype.cursor = function(ns, cmd, cursorOptions) {\n  var s = this.s;\n  cursorOptions = cursorOptions || {};\n  // Set up final cursor type\n  var FinalCursor = cursorOptions.cursorFactory || s.Cursor;\n  // Return the cursor\n  return new FinalCursor(s.bson, ns, cmd, cursorOptions, this, s.options);\n}\n\n/**\n * A server connect event, used to verify that the connection is up and running\n *\n * @event Server#connect\n * @type {Server}\n */\n\n/**\n * The server connection closed, all pool connections closed\n *\n * @event Server#close\n * @type {Server}\n */\n\n/**\n * The server connection caused an error, all pool connections closed\n *\n * @event Server#error\n * @type {Server}\n */\n\n/**\n * The server connection timed out, all pool connections closed\n *\n * @event Server#timeout\n * @type {Server}\n */\n\n/**\n * The driver experienced an invalid message, all pool connections closed\n *\n * @event Server#parseError\n * @type {Server}\n */\n\n/**\n * The server reestablished the connection\n *\n * @event Server#reconnect\n * @type {Server}\n */\n\n/**\n * This is an insert result callback\n *\n * @callback opResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {CommandResult} command result\n */\n\n/**\n * This is an authentication result callback\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {Session} an authenticated session\n */\n\nmodule.exports = Server;\n"};
jalangiLabel2714:
    while (true) {
        try {
            J$.Se(26985, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/server_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/server.js');
            J$.N(26993, '__secret__S$', __secret__S$, 0);
            J$.N(27001, '__secret__traits__', __secret__traits__, 0);
            J$.N(27009, 'inherits', inherits, 0);
            J$.N(27017, 'f', f, 0);
            J$.N(27025, 'bindToCurrentDomain', bindToCurrentDomain, 0);
            J$.N(27033, 'EventEmitter', EventEmitter, 0);
            J$.N(27041, 'Pool', Pool, 0);
            J$.N(27049, 'b', b, 0);
            J$.N(27057, 'Query', Query, 0);
            J$.N(27065, 'MongoError', MongoError, 0);
            J$.N(27073, 'ReadPreference', ReadPreference, 0);
            J$.N(27081, 'BasicCursor', BasicCursor, 0);
            J$.N(27089, 'CommandResult', CommandResult, 0);
            J$.N(27097, 'getSingleProperty', getSingleProperty, 0);
            J$.N(27105, 'getProperty', getProperty, 0);
            J$.N(27113, 'debugOptions', debugOptions, 0);
            J$.N(27121, 'BSON', BSON, 0);
            J$.N(27129, 'PreTwoSixWireProtocolSupport', PreTwoSixWireProtocolSupport, 0);
            J$.N(27137, 'TwoSixWireProtocolSupport', TwoSixWireProtocolSupport, 0);
            J$.N(27145, 'ThreeTwoWireProtocolSupport', ThreeTwoWireProtocolSupport, 0);
            J$.N(27153, 'Session', Session, 0);
            J$.N(27161, 'Logger', Logger, 0);
            J$.N(27169, 'MongoCR', MongoCR, 0);
            J$.N(27177, 'X509', X509, 0);
            J$.N(27185, 'Plain', Plain, 0);
            J$.N(27193, 'GSSAPI', GSSAPI, 0);
            J$.N(27201, 'SSPI', SSPI, 0);
            J$.N(27209, 'ScramSHA1', ScramSHA1, 0);
            J$.N(27217, 'bsonTypes', bsonTypes, 0);
            J$.N(27225, 'bsonInstance', bsonInstance, 0);
            J$.N(27233, 'serverId', serverId, 0);
            J$.N(27241, 'callbackId', callbackId, 0);
            J$.N(27249, 'Callbacks', Callbacks, 0);
            J$.N(27257, 'cloneOptions', cloneOptions, 0);
            J$.N(27265, 'DISCONNECTED', DISCONNECTED, 0);
            J$.N(27273, 'CONNECTING', CONNECTING, 0);
            J$.N(27281, 'CONNECTED', CONNECTED, 0);
            J$.N(27289, 'DESTROYED', DESTROYED, 0);
            J$.N(27297, 'supportsServer', supportsServer, 0);
            J$.N(27305, 'createWireProtocolHandler', createWireProtocolHandler, 0);
            J$.N(27313, 'reconnectServer', reconnectServer, 0);
            J$.N(27321, 'messageHandler', messageHandler, 0);
            J$.N(27329, 'errorHandler', errorHandler, 0);
            J$.N(27337, 'fatalErrorHandler', fatalErrorHandler, 0);
            J$.N(27345, 'timeoutHandler', timeoutHandler, 0);
            J$.N(27353, 'closeHandler', closeHandler, 0);
            J$.N(27361, 'connectHandler', connectHandler, 0);
            J$.N(27369, 'slaveOk', slaveOk, 0);
            J$.N(27377, 'notifyStrategies', notifyStrategies, 0);
            J$.N(27385, 'debugFields', debugFields, 0);
            J$.N(27393, 'Server', Server, 0);
            J$.N(27401, 'executeSingleOperation', executeSingleOperation, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(809, J$.W(801, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(825, J$.W(817, 'f', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'util', 21, false)), 'format', 0), f, 3)), bindToCurrentDomain = J$.X1(841, J$.W(833, 'bindToCurrentDomain', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, '../connection/utils', 21, false)), 'bindToCurrentDomain', 0), bindToCurrentDomain, 3)), EventEmitter = J$.X1(857, J$.W(849, 'EventEmitter', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), Pool = J$.X1(873, J$.W(865, 'Pool', J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, '../connection/pool', 21, false)), Pool, 3)), b = J$.X1(889, J$.W(881, 'b', J$.F(265, J$.R(249, 'require', require, 2), 0)(J$.T(257, 'bson', 21, false)), b, 3)), Query = J$.X1(905, J$.W(897, 'Query', J$.G(297, J$.F(289, J$.R(273, 'require', require, 2), 0)(J$.T(281, '../connection/commands', 21, false)), 'Query', 0), Query, 3)), MongoError = J$.X1(921, J$.W(913, 'MongoError', J$.F(321, J$.R(305, 'require', require, 2), 0)(J$.T(313, '../error', 21, false)), MongoError, 3)), ReadPreference = J$.X1(937, J$.W(929, 'ReadPreference', J$.F(345, J$.R(329, 'require', require, 2), 0)(J$.T(337, './read_preference', 21, false)), ReadPreference, 3)), BasicCursor = J$.X1(953, J$.W(945, 'BasicCursor', J$.F(369, J$.R(353, 'require', require, 2), 0)(J$.T(361, '../cursor', 21, false)), BasicCursor, 3)), CommandResult = J$.X1(969, J$.W(961, 'CommandResult', J$.F(393, J$.R(377, 'require', require, 2), 0)(J$.T(385, './command_result', 21, false)), CommandResult, 3)), getSingleProperty = J$.X1(985, J$.W(977, 'getSingleProperty', J$.G(425, J$.F(417, J$.R(401, 'require', require, 2), 0)(J$.T(409, '../connection/utils', 21, false)), 'getSingleProperty', 0), getSingleProperty, 3)), getProperty = J$.X1(1001, J$.W(993, 'getProperty', J$.G(457, J$.F(449, J$.R(433, 'require', require, 2), 0)(J$.T(441, '../connection/utils', 21, false)), 'getProperty', 0), getProperty, 3)), debugOptions = J$.X1(1017, J$.W(1009, 'debugOptions', J$.G(489, J$.F(481, J$.R(465, 'require', require, 2), 0)(J$.T(473, '../connection/utils', 21, false)), 'debugOptions', 0), debugOptions, 3)), BSON = J$.X1(1033, J$.W(1025, 'BSON', J$.G(529, J$.M(521, J$.F(513, J$.R(497, 'require', require, 2), 0)(J$.T(505, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), BSON, 3)), PreTwoSixWireProtocolSupport = J$.X1(1049, J$.W(1041, 'PreTwoSixWireProtocolSupport', J$.F(553, J$.R(537, 'require', require, 2), 0)(J$.T(545, '../wireprotocol/2_4_support', 21, false)), PreTwoSixWireProtocolSupport, 3)), TwoSixWireProtocolSupport = J$.X1(1065, J$.W(1057, 'TwoSixWireProtocolSupport', J$.F(577, J$.R(561, 'require', require, 2), 0)(J$.T(569, '../wireprotocol/2_6_support', 21, false)), TwoSixWireProtocolSupport, 3)), ThreeTwoWireProtocolSupport = J$.X1(1081, J$.W(1073, 'ThreeTwoWireProtocolSupport', J$.F(601, J$.R(585, 'require', require, 2), 0)(J$.T(593, '../wireprotocol/3_2_support', 21, false)), ThreeTwoWireProtocolSupport, 3)), Session = J$.X1(1097, J$.W(1089, 'Session', J$.F(625, J$.R(609, 'require', require, 2), 0)(J$.T(617, './session', 21, false)), Session, 3)), Logger = J$.X1(1113, J$.W(1105, 'Logger', J$.F(649, J$.R(633, 'require', require, 2), 0)(J$.T(641, '../connection/logger', 21, false)), Logger, 3)), MongoCR = J$.X1(1129, J$.W(1121, 'MongoCR', J$.F(673, J$.R(657, 'require', require, 2), 0)(J$.T(665, '../auth/mongocr', 21, false)), MongoCR, 3)), X509 = J$.X1(1145, J$.W(1137, 'X509', J$.F(697, J$.R(681, 'require', require, 2), 0)(J$.T(689, '../auth/x509', 21, false)), X509, 3)), Plain = J$.X1(1161, J$.W(1153, 'Plain', J$.F(721, J$.R(705, 'require', require, 2), 0)(J$.T(713, '../auth/plain', 21, false)), Plain, 3)), GSSAPI = J$.X1(1177, J$.W(1169, 'GSSAPI', J$.F(745, J$.R(729, 'require', require, 2), 0)(J$.T(737, '../auth/gssapi', 21, false)), GSSAPI, 3)), SSPI = J$.X1(1193, J$.W(1185, 'SSPI', J$.F(769, J$.R(753, 'require', require, 2), 0)(J$.T(761, '../auth/sspi', 21, false)), SSPI, 3)), ScramSHA1 = J$.X1(1209, J$.W(1201, 'ScramSHA1', J$.F(793, J$.R(777, 'require', require, 2), 0)(J$.T(785, '../auth/scram', 21, false)), ScramSHA1, 3));
            var bsonTypes = J$.X1(1393, J$.W(1385, 'bsonTypes', J$.T(1377, [
                J$.G(1225, J$.R(1217, 'b', b, 1), 'Long', 0),
                J$.G(1241, J$.R(1233, 'b', b, 1), 'ObjectID', 0),
                J$.G(1257, J$.R(1249, 'b', b, 1), 'Binary', 0),
                J$.G(1273, J$.R(1265, 'b', b, 1), 'Code', 0),
                J$.G(1289, J$.R(1281, 'b', b, 1), 'DBRef', 0),
                J$.G(1305, J$.R(1297, 'b', b, 1), 'Symbol', 0),
                J$.G(1321, J$.R(1313, 'b', b, 1), 'Double', 0),
                J$.G(1337, J$.R(1329, 'b', b, 1), 'Timestamp', 0),
                J$.G(1353, J$.R(1345, 'b', b, 1), 'MaxKey', 0),
                J$.G(1369, J$.R(1361, 'b', b, 1), 'MinKey', 0)
            ], 10, false), bsonTypes, 3));
            var bsonInstance = J$.X1(1417, J$.W(1409, 'bsonInstance', J$.T(1401, null, 25, false), bsonInstance, 3));
            var serverId = J$.X1(1441, J$.W(1433, 'serverId', J$.T(1425, 0, 22, false), serverId, 3));
            var callbackId = J$.X1(1465, J$.W(1457, 'callbackId', J$.T(1449, 0, 22, false), callbackId, 3));
            var Callbacks = J$.X1(1657, J$.W(1649, 'Callbacks', J$.T(1641, function () {
                jalangiLabel2643:
                    while (true) {
                        try {
                            J$.Fe(1617, arguments.callee, this, arguments);
                            arguments = J$.N(1625, 'arguments', arguments, 4);
                            J$.N(1633, 'self', self, 0);
                            var self = J$.X1(1489, J$.W(1481, 'self', J$.R(1473, 'this', this, 0), self, 1));
                            J$.X1(1521, J$.P(1513, J$.R(1497, 'this', this, 0), 'callbacks', J$.T(1505, {}, 11, false), 0));
                            J$.X1(1577, J$.P(1569, J$.R(1529, 'this', this, 0), 'id', J$.B(26, '-', callbackId = J$.W(1553, 'callbackId', J$.B(18, '+', J$.U(10, '+', J$.R(1545, 'callbackId', callbackId, 1)), J$.T(1537, 1, 22, false), 0), callbackId, 2), J$.T(1561, 1, 22, false), 0), 0));
                            J$.X1(1609, J$.P(1601, J$.R(1585, 'this', this, 0), 'type', J$.T(1593, 'server', 21, false), 0));
                        } catch (J$e) {
                            J$.Ex(27409, J$e);
                        } finally {
                            if (J$.Fr(27417))
                                continue jalangiLabel2643;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1617), Callbacks, 3));
            var cloneOptions = J$.X1(1857, J$.W(1849, 'cloneOptions', J$.T(1841, function (options) {
                jalangiLabel2644:
                    while (true) {
                        try {
                            J$.Fe(1801, arguments.callee, this, arguments);
                            arguments = J$.N(1809, 'arguments', arguments, 4);
                            options = J$.N(1817, 'options', options, 4);
                            J$.N(1825, 'opts', opts, 0);
                            J$.N(1833, 'name', name, 0);
                            var opts = J$.X1(1681, J$.W(1673, 'opts', J$.T(1665, {}, 11, false), opts, 1));
                            for (J$._tm_p in J$.H(1753, J$.R(1689, 'options', options, 0))) {
                                var name = J$.X1(1769, J$.W(1761, 'name', J$._tm_p, name, 1));
                                {
                                    {
                                        J$.X1(1745, J$.P(1737, J$.R(1697, 'opts', opts, 0), J$.R(1705, 'name', name, 0), J$.G(1729, J$.R(1713, 'options', options, 0), J$.R(1721, 'name', name, 0), 4), 2));
                                    }
                                }
                            }
                            return J$.X1(1793, J$.Rt(1785, J$.R(1777, 'opts', opts, 0)));
                        } catch (J$e) {
                            J$.Ex(27425, J$e);
                        } finally {
                            if (J$.Fr(27433))
                                continue jalangiLabel2644;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1801), cloneOptions, 3));
            J$.X1(2145, J$.P(2137, J$.G(1873, J$.R(1865, 'Callbacks', Callbacks, 1), 'prototype', 0), 'flush', J$.T(2129, function (err) {
                jalangiLabel2645:
                    while (true) {
                        try {
                            J$.Fe(2089, arguments.callee, this, arguments);
                            arguments = J$.N(2097, 'arguments', arguments, 4);
                            err = J$.N(2105, 'err', err, 4);
                            J$.N(2113, 'id', id, 0);
                            J$.N(2121, 'callback', callback, 0);
                            for (J$._tm_p in J$.H(2065, J$.G(1889, J$.R(1881, 'this', this, 0), 'callbacks', 0))) {
                                var id = J$.X1(2081, J$.W(2073, 'id', J$._tm_p, id, 1));
                                {
                                    {
                                        if (J$.X1(27441, J$.C(8, J$.U(34, '!', J$.F(1937, J$.R(1897, 'isNaN', isNaN, 2), 0)(J$.F(1929, J$.R(1905, 'parseInt', parseInt, 2), 0)(J$.R(1913, 'id', id, 0), J$.T(1921, 10, 22, false))))))) {
                                            var callback = J$.X1(1985, J$.W(1977, 'callback', J$.G(1969, J$.G(1953, J$.R(1945, 'this', this, 0), 'callbacks', 0), J$.R(1961, 'id', id, 0), 4), callback, 1));
                                            J$.X1(2017, J$.B(42, 'delete', J$.G(2001, J$.R(1993, 'this', this, 0), 'callbacks', 0), J$.R(2009, 'id', id, 0), 4));
                                            J$.X1(2057, J$.F(2049, J$.R(2025, 'callback', callback, 0), 0)(J$.R(2033, 'err', err, 0), J$.T(2041, null, 25, false)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(27449, J$e);
                        } finally {
                            if (J$.Fr(27457))
                                continue jalangiLabel2645;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2089), 0));
            J$.X1(2353, J$.P(2345, J$.G(2161, J$.R(2153, 'Callbacks', Callbacks, 1), 'prototype', 0), 'emit', J$.T(2337, function (id, err, value) {
                jalangiLabel2646:
                    while (true) {
                        try {
                            J$.Fe(2289, arguments.callee, this, arguments);
                            arguments = J$.N(2297, 'arguments', arguments, 4);
                            id = J$.N(2305, 'id', id, 4);
                            err = J$.N(2313, 'err', err, 4);
                            value = J$.N(2321, 'value', value, 4);
                            J$.N(2329, 'callback', callback, 0);
                            var callback = J$.X1(2209, J$.W(2201, 'callback', J$.G(2193, J$.G(2177, J$.R(2169, 'this', this, 0), 'callbacks', 0), J$.R(2185, 'id', id, 0), 4), callback, 1));
                            J$.X1(2241, J$.B(50, 'delete', J$.G(2225, J$.R(2217, 'this', this, 0), 'callbacks', 0), J$.R(2233, 'id', id, 0), 4));
                            J$.X1(2281, J$.F(2273, J$.R(2249, 'callback', callback, 0), 0)(J$.R(2257, 'err', err, 0), J$.R(2265, 'value', value, 0)));
                        } catch (J$e) {
                            J$.Ex(27465, J$e);
                        } finally {
                            if (J$.Fr(27473))
                                continue jalangiLabel2646;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2289), 0));
            J$.X1(2561, J$.P(2553, J$.G(2369, J$.R(2361, 'Callbacks', Callbacks, 1), 'prototype', 0), 'raw', J$.T(2545, function (id) {
                jalangiLabel2647:
                    while (true) {
                        try {
                            J$.Fe(2521, arguments.callee, this, arguments);
                            arguments = J$.N(2529, 'arguments', arguments, 4);
                            id = J$.N(2537, 'id', id, 4);
                            if (J$.X1(27481, J$.C(16, J$.B(58, '==', J$.G(2401, J$.G(2385, J$.R(2377, 'this', this, 0), 'callbacks', 0), J$.R(2393, 'id', id, 0), 4), J$.T(2409, null, 25, false), 0))))
                                return J$.X1(2433, J$.Rt(2425, J$.T(2417, false, 23, false)));
                            return J$.X1(2513, J$.Rt(2505, J$.X1(27489, J$.C(24, J$.B(66, '==', J$.G(2473, J$.G(2465, J$.G(2449, J$.R(2441, 'this', this, 0), 'callbacks', 0), J$.R(2457, 'id', id, 0), 4), 'raw', 0), J$.T(2481, true, 23, false), 0))) ? J$.T(2489, true, 23, false) : J$.T(2497, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(27497, J$e);
                        } finally {
                            if (J$.Fr(27505))
                                continue jalangiLabel2647;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2521), 0));
            J$.X1(2801, J$.P(2793, J$.G(2577, J$.R(2569, 'Callbacks', Callbacks, 1), 'prototype', 0), 'documentsReturnedIn', J$.T(2785, function (id) {
                jalangiLabel2648:
                    while (true) {
                        try {
                            J$.Fe(2761, arguments.callee, this, arguments);
                            arguments = J$.N(2769, 'arguments', arguments, 4);
                            id = J$.N(2777, 'id', id, 4);
                            if (J$.X1(27513, J$.C(32, J$.B(74, '==', J$.G(2609, J$.G(2593, J$.R(2585, 'this', this, 0), 'callbacks', 0), J$.R(2601, 'id', id, 0), 4), J$.T(2617, null, 25, false), 0))))
                                return J$.X1(2641, J$.Rt(2633, J$.T(2625, false, 23, false)));
                            return J$.X1(2753, J$.Rt(2745, J$.X1(27521, J$.C(40, J$.B(90, '==', J$.U(82, 'typeof', J$.G(2681, J$.G(2673, J$.G(2657, J$.R(2649, 'this', this, 0), 'callbacks', 0), J$.R(2665, 'id', id, 0), 4), 'documentsReturnedIn', 0)), J$.T(2689, 'string', 21, false), 0))) ? J$.G(2729, J$.G(2721, J$.G(2705, J$.R(2697, 'this', this, 0), 'callbacks', 0), J$.R(2713, 'id', id, 0), 4), 'documentsReturnedIn', 0) : J$.T(2737, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(27529, J$e);
                        } finally {
                            if (J$.Fr(27537))
                                continue jalangiLabel2648;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2761), 0));
            J$.X1(2897, J$.P(2889, J$.G(2817, J$.R(2809, 'Callbacks', Callbacks, 1), 'prototype', 0), 'unregister', J$.T(2881, function (id) {
                jalangiLabel2649:
                    while (true) {
                        try {
                            J$.Fe(2857, arguments.callee, this, arguments);
                            arguments = J$.N(2865, 'arguments', arguments, 4);
                            id = J$.N(2873, 'id', id, 4);
                            J$.X1(2849, J$.B(98, 'delete', J$.G(2833, J$.R(2825, 'this', this, 0), 'callbacks', 0), J$.R(2841, 'id', id, 0), 4));
                        } catch (J$e) {
                            J$.Ex(27545, J$e);
                        } finally {
                            if (J$.Fr(27553))
                                continue jalangiLabel2649;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2857), 0));
            J$.X1(3033, J$.P(3025, J$.G(2913, J$.R(2905, 'Callbacks', Callbacks, 1), 'prototype', 0), 'register', J$.T(3017, function (id, callback) {
                jalangiLabel2650:
                    while (true) {
                        try {
                            J$.Fe(2985, arguments.callee, this, arguments);
                            arguments = J$.N(2993, 'arguments', arguments, 4);
                            id = J$.N(3001, 'id', id, 4);
                            callback = J$.N(3009, 'callback', callback, 4);
                            J$.X1(2977, J$.P(2969, J$.G(2929, J$.R(2921, 'this', this, 0), 'callbacks', 0), J$.R(2937, 'id', id, 0), J$.F(2961, J$.R(2945, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(2953, 'callback', callback, 0)), 2));
                        } catch (J$e) {
                            J$.Ex(27561, J$e);
                        } finally {
                            if (J$.Fr(27569))
                                continue jalangiLabel2650;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2985), 0));
            var bindToCurrentDomain = J$.X1(3217, J$.W(3209, 'bindToCurrentDomain', J$.T(3201, function (callback) {
                jalangiLabel2651:
                    while (true) {
                        try {
                            J$.Fe(3169, arguments.callee, this, arguments);
                            arguments = J$.N(3177, 'arguments', arguments, 4);
                            callback = J$.N(3185, 'callback', callback, 4);
                            J$.N(3193, 'domain', domain, 0);
                            var domain = J$.X1(3065, J$.W(3057, 'domain', J$.G(3049, J$.R(3041, 'process', process, 2), 'domain', 0), domain, 1));
                            if (J$.X1(27577, J$.C(56, J$.C(48, J$.B(106, '==', J$.R(3073, 'domain', domain, 0), J$.T(3081, null, 25, false), 0)) ? J$._() : J$.B(114, '==', J$.R(3089, 'callback', callback, 0), J$.T(3097, null, 25, false), 0))))
                                return J$.X1(3121, J$.Rt(3113, J$.R(3105, 'callback', callback, 0)));
                            return J$.X1(3161, J$.Rt(3153, J$.M(3145, J$.R(3129, 'domain', domain, 0), 'bind', 0)(J$.R(3137, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(27585, J$e);
                        } finally {
                            if (J$.Fr(27593))
                                continue jalangiLabel2651;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3169), bindToCurrentDomain, 3));
            var DISCONNECTED = J$.X1(3241, J$.W(3233, 'DISCONNECTED', J$.T(3225, 'disconnected', 21, false), DISCONNECTED, 3));
            var CONNECTING = J$.X1(3265, J$.W(3257, 'CONNECTING', J$.T(3249, 'connecting', 21, false), CONNECTING, 3));
            var CONNECTED = J$.X1(3289, J$.W(3281, 'CONNECTED', J$.T(3273, 'connected', 21, false), CONNECTED, 3));
            var DESTROYED = J$.X1(3313, J$.W(3305, 'DESTROYED', J$.T(3297, 'destroyed', 21, false), DESTROYED, 3));
            var supportsServer = J$.X1(3425, J$.W(3417, 'supportsServer', J$.T(3409, function (_s) {
                jalangiLabel2652:
                    while (true) {
                        try {
                            J$.Fe(3385, arguments.callee, this, arguments);
                            arguments = J$.N(3393, 'arguments', arguments, 4);
                            _s = J$.N(3401, '_s', _s, 4);
                            return J$.X1(3377, J$.Rt(3369, J$.C(64, J$.G(3329, J$.R(3321, '_s', _s, 0), 'ismaster', 0)) ? J$.B(130, '==', J$.U(122, 'typeof', J$.G(3353, J$.G(3345, J$.R(3337, '_s', _s, 0), 'ismaster', 0), 'minWireVersion', 0)), J$.T(3361, 'number', 21, false), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(27601, J$e);
                        } finally {
                            if (J$.Fr(27609))
                                continue jalangiLabel2652;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3385), supportsServer, 3));
            var createWireProtocolHandler = J$.X1(3649, J$.W(3641, 'createWireProtocolHandler', J$.T(3633, function (result) {
                jalangiLabel2653:
                    while (true) {
                        try {
                            J$.Fe(3609, arguments.callee, this, arguments);
                            arguments = J$.N(3617, 'arguments', arguments, 4);
                            result = J$.N(3625, 'result', result, 4);
                            if (J$.X1(27617, J$.C(80, J$.C(72, J$.R(3433, 'result', result, 0)) ? J$.B(138, '>=', J$.G(3449, J$.R(3441, 'result', result, 0), 'maxWireVersion', 0), J$.T(3457, 4, 22, false), 0) : J$._()))) {
                                return J$.X1(3505, J$.Rt(3497, J$.F(3489, J$.R(3465, 'ThreeTwoWireProtocolSupport', ThreeTwoWireProtocolSupport, 1), 1)(J$.F(3481, J$.R(3473, 'TwoSixWireProtocolSupport', TwoSixWireProtocolSupport, 1), 1)())));
                            }
                            if (J$.X1(27625, J$.C(96, J$.C(88, J$.R(3513, 'result', result, 0)) ? J$.B(146, '>=', J$.G(3529, J$.R(3521, 'result', result, 0), 'maxWireVersion', 0), J$.T(3537, 2, 22, false), 0) : J$._()))) {
                                return J$.X1(3569, J$.Rt(3561, J$.F(3553, J$.R(3545, 'TwoSixWireProtocolSupport', TwoSixWireProtocolSupport, 1), 1)()));
                            }
                            return J$.X1(3601, J$.Rt(3593, J$.F(3585, J$.R(3577, 'PreTwoSixWireProtocolSupport', PreTwoSixWireProtocolSupport, 1), 1)()));
                        } catch (J$e) {
                            J$.Ex(27633, J$e);
                        } finally {
                            if (J$.Fr(27641))
                                continue jalangiLabel2653;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3609), createWireProtocolHandler, 3));
            var reconnectServer = J$.X1(5841, J$.W(5833, 'reconnectServer', J$.T(5825, function (self, state) {
                jalangiLabel2659:
                    while (true) {
                        try {
                            J$.Fe(5785, arguments.callee, this, arguments);
                            arguments = J$.N(5793, 'arguments', arguments, 4);
                            self = J$.N(5801, 'self', self, 4);
                            state = J$.N(5809, 'state', state, 4);
                            J$.N(5817, 'reconnectErrorHandler', reconnectErrorHandler, 0);
                            if (J$.X1(27649, J$.C(120, J$.C(112, J$.C(104, J$.R(3657, 'self', self, 0)) ? J$.R(3665, 'state', state, 0) : J$._()) ? J$.G(3681, J$.R(3673, 'state', state, 0), 'callbacks', 0) : J$._()))) {
                                J$.X1(3769, J$.M(3761, J$.G(3697, J$.R(3689, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(3753, J$.R(3705, 'MongoError', MongoError, 1), 1)(J$.F(3745, J$.R(3713, 'f', f, 1), 0)(J$.T(3721, 'server %s received a broken socket pipe error', 21, false), J$.G(3737, J$.R(3729, 'self', self, 0), 'name', 0)))));
                            }
                            if (J$.X1(27657, J$.C(128, J$.B(154, '==', J$.G(3785, J$.R(3777, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(3793, 0, 22, false), 0)))) {
                                return J$.X1(3841, J$.Rt(3833, J$.M(3825, J$.R(3801, 'self', self, 0), 'destroy', 0)(J$.T(3809, true, 23, false), J$.T(3817, true, 23, false))));
                            }
                            J$.X1(3889, J$.P(3881, J$.R(3849, 'state', state, 0), 'currentReconnectRetry', J$.B(162, '-', J$.G(3865, J$.R(3857, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(3873, 1, 22, false), 0), 0));
                            J$.X1(3921, J$.P(3913, J$.R(3897, 'state', state, 0), 'state', J$.R(3905, 'CONNECTING', CONNECTING, 1), 0));
                            J$.X1(3977, J$.P(3969, J$.R(3929, 'state', state, 0), 'pool', J$.F(3961, J$.R(3937, 'Pool', Pool, 1), 1)(J$.G(3953, J$.R(3945, 'state', state, 0), 'options', 0)), 0));
                            var reconnectErrorHandler = J$.X1(4417, J$.W(4409, 'reconnectErrorHandler', J$.T(4401, function (err) {
                                jalangiLabel2655:
                                    while (true) {
                                        try {
                                            J$.Fe(4377, arguments.callee, this, arguments);
                                            arguments = J$.N(4385, 'arguments', arguments, 4);
                                            err = J$.N(4393, 'err', err, 4);
                                            J$.X1(4009, J$.P(4001, J$.R(3985, 'state', state, 0), 'state', J$.R(3993, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            J$.X1(4041, J$.M(4033, J$.G(4025, J$.R(4017, 'state', state, 0), 'pool', 0), 'destroy', 0)());
                                            J$.X1(4089, J$.P(4081, J$.R(4049, 'state', state, 0), 'currentReconnectRetry', J$.B(170, '-', J$.G(4065, J$.R(4057, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(4073, 1, 22, false), 0), 0));
                                            if (J$.X1(27681, J$.C(136, J$.B(178, '<=', J$.G(4105, J$.R(4097, 'state', state, 0), 'currentReconnectRetry', 0), J$.T(4113, 0, 22, false), 0)))) {
                                                J$.X1(4145, J$.P(4137, J$.R(4121, 'self', self, 0), 'state', J$.R(4129, 'DESTROYED', DESTROYED, 1), 0));
                                                J$.X1(4265, J$.M(4257, J$.R(4153, 'self', self, 0), 'emit', 0)(J$.T(4161, 'error', 21, false), J$.F(4249, J$.R(4169, 'f', f, 1), 0)(J$.T(4177, 'failed to connect to %s:%s after %s retries', 21, false), J$.G(4201, J$.G(4193, J$.R(4185, 'state', state, 0), 'options', 0), 'host', 0), J$.G(4225, J$.G(4217, J$.R(4209, 'state', state, 0), 'options', 0), 'port', 0), J$.G(4241, J$.R(4233, 'state', state, 0), 'reconnectTries', 0))));
                                            } else {
                                                J$.X1(4369, J$.F(4361, J$.R(4273, 'setTimeout', setTimeout, 2), 0)(J$.T(4337, function () {
                                                    jalangiLabel2654:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(4321, arguments.callee, this, arguments);
                                                                arguments = J$.N(4329, 'arguments', arguments, 4);
                                                                J$.X1(4313, J$.F(4305, J$.R(4281, 'reconnectServer', reconnectServer, 1), 0)(J$.R(4289, 'self', self, 0), J$.R(4297, 'state', state, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(27665, J$e);
                                                            } finally {
                                                                if (J$.Fr(27673))
                                                                    continue jalangiLabel2654;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 4321), J$.G(4353, J$.R(4345, 'state', state, 0), 'reconnectInterval', 0)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(27689, J$e);
                                        } finally {
                                            if (J$.Fr(27697))
                                                continue jalangiLabel2655;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 4377), reconnectErrorHandler, 1));
                            J$.X1(5457, J$.M(5449, J$.G(4433, J$.R(4425, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4441, 'connect', 21, false), J$.T(5441, function () {
                                jalangiLabel2658:
                                    while (true) {
                                        try {
                                            J$.Fe(5393, arguments.callee, this, arguments);
                                            arguments = J$.N(5401, 'arguments', arguments, 4);
                                            J$.N(5409, 'events', events, 0);
                                            J$.N(5417, 'keys', keys, 0);
                                            J$.N(5425, 'count', count, 0);
                                            J$.N(5433, 'i', i, 0);
                                            J$.X1(4481, J$.P(4473, J$.R(4449, 'state', state, 0), 'currentReconnectRetry', J$.G(4465, J$.R(4457, 'state', state, 0), 'reconnectTries', 0), 0));
                                            var events = J$.X1(4537, J$.W(4529, 'events', J$.T(4521, [
                                                J$.T(4489, 'error', 21, false),
                                                J$.T(4497, 'close', 21, false),
                                                J$.T(4505, 'timeout', 21, false),
                                                J$.T(4513, 'parseError', 21, false)
                                            ], 10, false), events, 1));
                                            J$.X1(4633, J$.M(4625, J$.R(4545, 'events', events, 0), 'forEach', 0)(J$.T(4617, function (e) {
                                                jalangiLabel2656:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4593, arguments.callee, this, arguments);
                                                            arguments = J$.N(4601, 'arguments', arguments, 4);
                                                            e = J$.N(4609, 'e', e, 4);
                                                            J$.X1(4585, J$.M(4577, J$.G(4561, J$.R(4553, 'state', state, 0), 'pool', 0), 'removeAllListeners', 0)(J$.R(4569, 'e', e, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(27705, J$e);
                                                        } finally {
                                                            if (J$.Fr(27713))
                                                                continue jalangiLabel2656;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 4593)));
                                            J$.X1(4665, J$.P(4657, J$.R(4641, 'state', state, 0), 'state', J$.R(4649, 'CONNECTED', CONNECTED, 1), 0));
                                            J$.X1(4713, J$.M(4705, J$.G(4681, J$.R(4673, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4689, 'error', 21, false), J$.R(4697, 'reconnectErrorHandler', reconnectErrorHandler, 0)));
                                            J$.X1(4785, J$.M(4777, J$.G(4729, J$.R(4721, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4737, 'close', 21, false), J$.F(4769, J$.R(4745, 'closeHandler', closeHandler, 1), 0)(J$.R(4753, 'self', self, 0), J$.R(4761, 'state', state, 0))));
                                            J$.X1(4857, J$.M(4849, J$.G(4801, J$.R(4793, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4809, 'timeout', 21, false), J$.F(4841, J$.R(4817, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(4825, 'self', self, 0), J$.R(4833, 'state', state, 0))));
                                            J$.X1(4929, J$.M(4921, J$.G(4873, J$.R(4865, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(4881, 'parseError', 21, false), J$.F(4913, J$.R(4889, 'fatalErrorHandler', fatalErrorHandler, 1), 0)(J$.R(4897, 'self', self, 0), J$.R(4905, 'state', state, 0))));
                                            var keys = J$.X1(4977, J$.W(4969, 'keys', J$.M(4961, J$.R(4937, 'Object', Object, 2), 'keys', 0)(J$.G(4953, J$.R(4945, 'state', state, 0), 'authProviders', 0)), keys, 1));
                                            if (J$.X1(27721, J$.C(144, J$.B(186, '==', J$.G(4993, J$.R(4985, 'keys', keys, 0), 'length', 0), J$.T(5001, 0, 22, false), 0))))
                                                return J$.X1(5049, J$.Rt(5041, J$.M(5033, J$.R(5009, 'self', self, 0), 'emit', 0)(J$.T(5017, 'reconnect', 21, false), J$.R(5025, 'self', self, 0))));
                                            var count = J$.X1(5081, J$.W(5073, 'count', J$.G(5065, J$.R(5057, 'keys', keys, 0), 'length', 0), count, 1));
                                            for (var i = J$.X1(5105, J$.W(5097, 'i', J$.T(5089, 0, 22, false), i, 1)); J$.X1(27753, J$.C(160, J$.B(194, '<', J$.R(5113, 'i', i, 0), J$.G(5129, J$.R(5121, 'keys', keys, 0), 'length', 0), 0))); J$.X1(27761, J$.B(218, '-', i = J$.W(5153, 'i', J$.B(210, '+', J$.U(202, '+', J$.R(5145, 'i', i, 0)), J$.T(5137, 1, 22, false), 0), i, 0), J$.T(5161, 1, 22, false), 0))) {
                                                J$.X1(5385, J$.M(5377, J$.G(5209, J$.G(5177, J$.R(5169, 'state', state, 0), 'authProviders', 0), J$.G(5201, J$.R(5185, 'keys', keys, 0), J$.R(5193, 'i', i, 0), 4), 4), 'reauthenticate', 0)(J$.R(5217, 'self', self, 0), J$.G(5233, J$.R(5225, 'state', state, 0), 'pool', 0), J$.T(5369, function (err, r) {
                                                    jalangiLabel2657:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(5337, arguments.callee, this, arguments);
                                                                arguments = J$.N(5345, 'arguments', arguments, 4);
                                                                err = J$.N(5353, 'err', err, 4);
                                                                r = J$.N(5361, 'r', r, 4);
                                                                J$.X1(5265, count = J$.W(5257, 'count', J$.B(226, '-', J$.R(5241, 'count', count, 0), J$.T(5249, 1, 22, false), 0), count, 0));
                                                                if (J$.X1(27729, J$.C(152, J$.B(234, '==', J$.R(5273, 'count', count, 0), J$.T(5281, 0, 22, false), 0)))) {
                                                                    return J$.X1(5329, J$.Rt(5321, J$.M(5313, J$.R(5289, 'self', self, 0), 'emit', 0)(J$.T(5297, 'reconnect', 21, false), J$.R(5305, 'self', self, 0))));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(27737, J$e);
                                                            } finally {
                                                                if (J$.Fr(27745))
                                                                    continue jalangiLabel2657;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 5337)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(27769, J$e);
                                        } finally {
                                            if (J$.Fr(27777))
                                                continue jalangiLabel2658;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 5393)));
                            J$.X1(5529, J$.M(5521, J$.G(5473, J$.R(5465, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5481, 'error', 21, false), J$.F(5513, J$.R(5489, 'errorHandler', errorHandler, 1), 0)(J$.R(5497, 'self', self, 0), J$.R(5505, 'state', state, 0))));
                            J$.X1(5601, J$.M(5593, J$.G(5545, J$.R(5537, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5553, 'close', 21, false), J$.F(5585, J$.R(5561, 'errorHandler', errorHandler, 1), 0)(J$.R(5569, 'self', self, 0), J$.R(5577, 'state', state, 0))));
                            J$.X1(5673, J$.M(5665, J$.G(5617, J$.R(5609, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5625, 'timeout', 21, false), J$.F(5657, J$.R(5633, 'errorHandler', errorHandler, 1), 0)(J$.R(5641, 'self', self, 0), J$.R(5649, 'state', state, 0))));
                            J$.X1(5745, J$.M(5737, J$.G(5689, J$.R(5681, 'state', state, 0), 'pool', 0), 'once', 0)(J$.T(5697, 'parseError', 21, false), J$.F(5729, J$.R(5705, 'errorHandler', errorHandler, 1), 0)(J$.R(5713, 'self', self, 0), J$.R(5721, 'state', state, 0))));
                            J$.X1(5777, J$.M(5769, J$.G(5761, J$.R(5753, 'state', state, 0), 'pool', 0), 'connect', 0)());
                        } catch (J$e) {
                            J$.Ex(27785, J$e);
                        } finally {
                            if (J$.Fr(27793))
                                continue jalangiLabel2659;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5785), reconnectServer, 3));
            var messageHandler = J$.X1(6345, J$.W(6337, 'messageHandler', J$.T(6329, function (self, state) {
                jalangiLabel2661:
                    while (true) {
                        try {
                            J$.Fe(6297, arguments.callee, this, arguments);
                            arguments = J$.N(6305, 'arguments', arguments, 4);
                            self = J$.N(6313, 'self', self, 4);
                            state = J$.N(6321, 'state', state, 4);
                            return J$.X1(6289, J$.Rt(6281, J$.T(6273, function (response, connection) {
                                jalangiLabel2660:
                                    while (true) {
                                        try {
                                            J$.Fe(6241, arguments.callee, this, arguments);
                                            arguments = J$.N(6249, 'arguments', arguments, 4);
                                            response = J$.N(6257, 'response', response, 4);
                                            connection = J$.N(6265, 'connection', connection, 4);
                                            try {
                                                J$.X1(5953, J$.M(5945, J$.R(5849, 'response', response, 0), 'parse', 0)(J$.T(5937, {
                                                    raw: J$.M(5889, J$.G(5865, J$.R(5857, 'state', state, 0), 'callbacks', 0), 'raw', 0)(J$.G(5881, J$.R(5873, 'response', response, 0), 'responseTo', 0)),
                                                    documentsReturnedIn: J$.M(5929, J$.G(5905, J$.R(5897, 'state', state, 0), 'callbacks', 0), 'documentsReturnedIn', 0)(J$.G(5921, J$.R(5913, 'response', response, 0), 'responseTo', 0))
                                                }, 11, false)));
                                                if (J$.X1(27801, J$.C(168, J$.M(5977, J$.G(5969, J$.R(5961, 'state', state, 0), 'logger', 0), 'isDebug', 0)())))
                                                    J$.X1(6081, J$.M(6073, J$.G(5993, J$.R(5985, 'state', state, 0), 'logger', 0), 'debug', 0)(J$.F(6065, J$.R(6001, 'f', f, 1), 0)(J$.T(6009, 'message [%s] received from %s', 21, false), J$.M(6041, J$.G(6025, J$.R(6017, 'response', response, 0), 'raw', 0), 'toString', 0)(J$.T(6033, 'hex', 21, false)), J$.G(6057, J$.R(6049, 'self', self, 0), 'name', 0))));
                                                J$.X1(6145, J$.M(6137, J$.G(6097, J$.R(6089, 'state', state, 0), 'callbacks', 0), 'emit', 0)(J$.G(6113, J$.R(6105, 'response', response, 0), 'responseTo', 0), J$.T(6121, null, 25, false), J$.R(6129, 'response', response, 0)));
                                            } catch (err) {
                                                err = J$.N(6233, 'err', err, 1);
                                                J$.X1(6201, J$.M(6193, J$.G(6161, J$.R(6153, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(6185, J$.R(6169, 'MongoError', MongoError, 1), 1)(J$.R(6177, 'err', err, 0))));
                                                J$.X1(6225, J$.M(6217, J$.R(6209, 'self', self, 0), 'destroy', 0)());
                                            }
                                        } catch (J$e) {
                                            J$.Ex(27809, J$e);
                                        } finally {
                                            if (J$.Fr(27817))
                                                continue jalangiLabel2660;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 6241)));
                        } catch (J$e) {
                            J$.Ex(27825, J$e);
                        } finally {
                            if (J$.Fr(27833))
                                continue jalangiLabel2661;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6297), messageHandler, 3));
            var errorHandler = J$.X1(7145, J$.W(7137, 'errorHandler', J$.T(7129, function (self, state) {
                jalangiLabel2664:
                    while (true) {
                        try {
                            J$.Fe(7097, arguments.callee, this, arguments);
                            arguments = J$.N(7105, 'arguments', arguments, 4);
                            self = J$.N(7113, 'self', self, 4);
                            state = J$.N(7121, 'state', state, 4);
                            return J$.X1(7089, J$.Rt(7081, J$.T(7073, function (err, connection) {
                                jalangiLabel2663:
                                    while (true) {
                                        try {
                                            J$.Fe(7041, arguments.callee, this, arguments);
                                            arguments = J$.N(7049, 'arguments', arguments, 4);
                                            err = J$.N(7057, 'err', err, 4);
                                            connection = J$.N(7065, 'connection', connection, 4);
                                            if (J$.X1(27841, J$.C(184, J$.C(176, J$.B(242, '==', J$.G(6361, J$.R(6353, 'state', state, 0), 'state', 0), J$.R(6369, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(250, '==', J$.G(6385, J$.R(6377, 'state', state, 0), 'state', 0), J$.R(6393, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(6409, J$.Rt(6401, undefined));
                                            J$.X1(6441, J$.P(6433, J$.R(6417, 'state', state, 0), 'state', J$.R(6425, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(27849, J$.C(192, J$.B(258, '!=', J$.G(6457, J$.R(6449, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(6465, null, 25, false), 0))))
                                                J$.X1(6537, J$.F(6529, J$.R(6473, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(6481, 'self', self, 0), J$.G(6497, J$.R(6489, 'self', self, 0), 's', 0), J$.T(6505, 'error', 21, false), J$.T(6521, [J$.R(6513, 'self', self, 0)], 10, false)));
                                            if (J$.X1(27857, J$.C(200, J$.M(6561, J$.G(6553, J$.R(6545, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(6657, J$.M(6649, J$.G(6577, J$.R(6569, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(6641, J$.R(6585, 'f', f, 1), 0)(J$.T(6593, 'server %s errored out with %s', 21, false), J$.G(6609, J$.R(6601, 'self', self, 0), 'name', 0), J$.M(6633, J$.R(6617, 'JSON', JSON, 2), 'stringify', 0)(J$.R(6625, 'err', err, 0)))));
                                            if (J$.X1(27865, J$.C(208, J$.G(6673, J$.R(6665, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(6785, J$.M(6777, J$.G(6689, J$.R(6681, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(6769, J$.R(6697, 'MongoError', MongoError, 1), 1)(J$.F(6761, J$.R(6705, 'f', f, 1), 0)(J$.T(6713, 'server %s received an error %s', 21, false), J$.G(6729, J$.R(6721, 'self', self, 0), 'name', 0), J$.M(6753, J$.R(6737, 'JSON', JSON, 2), 'stringify', 0)(J$.R(6745, 'err', err, 0))))));
                                            J$.X1(6809, J$.M(6801, J$.R(6793, 'self', self, 0), 'destroy', 0)());
                                            if (J$.X1(27873, J$.C(224, J$.C(216, J$.G(6825, J$.R(6817, 'state', state, 0), 'emitError', 0)) ? J$.B(266, '>', J$.G(6857, J$.M(6849, J$.R(6833, 'self', self, 0), 'listeners', 0)(J$.T(6841, 'error', 21, false)), 'length', 0), J$.T(6865, 0, 22, false), 0) : J$._())))
                                                J$.X1(6913, J$.M(6905, J$.R(6873, 'self', self, 0), 'emit', 0)(J$.T(6881, 'error', 21, false), J$.R(6889, 'err', err, 0), J$.R(6897, 'self', self, 0)));
                                            if (J$.X1(27897, J$.C(232, J$.G(6929, J$.R(6921, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(7033, J$.F(7025, J$.R(6937, 'setTimeout', setTimeout, 2), 0)(J$.T(7001, function () {
                                                jalangiLabel2662:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6985, arguments.callee, this, arguments);
                                                            arguments = J$.N(6993, 'arguments', arguments, 4);
                                                            J$.X1(6977, J$.F(6969, J$.R(6945, 'reconnectServer', reconnectServer, 1), 0)(J$.R(6953, 'self', self, 0), J$.R(6961, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(27881, J$e);
                                                        } finally {
                                                            if (J$.Fr(27889))
                                                                continue jalangiLabel2662;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 6985), J$.G(7017, J$.R(7009, 'state', state, 0), 'reconnectInterval', 0)));
                                        } catch (J$e) {
                                            J$.Ex(27905, J$e);
                                        } finally {
                                            if (J$.Fr(27913))
                                                continue jalangiLabel2663;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7041)));
                        } catch (J$e) {
                            J$.Ex(27921, J$e);
                        } finally {
                            if (J$.Fr(27929))
                                continue jalangiLabel2664;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7097), errorHandler, 3));
            var fatalErrorHandler = J$.X1(7929, J$.W(7921, 'fatalErrorHandler', J$.T(7913, function (self, state) {
                jalangiLabel2667:
                    while (true) {
                        try {
                            J$.Fe(7881, arguments.callee, this, arguments);
                            arguments = J$.N(7889, 'arguments', arguments, 4);
                            self = J$.N(7897, 'self', self, 4);
                            state = J$.N(7905, 'state', state, 4);
                            return J$.X1(7873, J$.Rt(7865, J$.T(7857, function (err, connection) {
                                jalangiLabel2666:
                                    while (true) {
                                        try {
                                            J$.Fe(7825, arguments.callee, this, arguments);
                                            arguments = J$.N(7833, 'arguments', arguments, 4);
                                            err = J$.N(7841, 'err', err, 4);
                                            connection = J$.N(7849, 'connection', connection, 4);
                                            if (J$.X1(27937, J$.C(248, J$.C(240, J$.B(274, '==', J$.G(7161, J$.R(7153, 'state', state, 0), 'state', 0), J$.R(7169, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(282, '==', J$.G(7185, J$.R(7177, 'state', state, 0), 'state', 0), J$.R(7193, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(7209, J$.Rt(7201, undefined));
                                            J$.X1(7241, J$.P(7233, J$.R(7217, 'state', state, 0), 'state', J$.R(7225, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(27945, J$.C(256, J$.B(290, '!=', J$.G(7257, J$.R(7249, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(7265, null, 25, false), 0))))
                                                J$.X1(7337, J$.F(7329, J$.R(7273, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(7281, 'self', self, 0), J$.G(7297, J$.R(7289, 'self', self, 0), 's', 0), J$.T(7305, 'error', 21, false), J$.T(7321, [J$.R(7313, 'self', self, 0)], 10, false)));
                                            if (J$.X1(27953, J$.C(264, J$.M(7361, J$.G(7353, J$.R(7345, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(7457, J$.M(7449, J$.G(7377, J$.R(7369, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(7441, J$.R(7385, 'f', f, 1), 0)(J$.T(7393, 'server %s errored out with %s', 21, false), J$.G(7409, J$.R(7401, 'self', self, 0), 'name', 0), J$.M(7433, J$.R(7417, 'JSON', JSON, 2), 'stringify', 0)(J$.R(7425, 'err', err, 0)))));
                                            if (J$.X1(27961, J$.C(272, J$.G(7473, J$.R(7465, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(7585, J$.M(7577, J$.G(7489, J$.R(7481, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(7569, J$.R(7497, 'MongoError', MongoError, 1), 1)(J$.F(7561, J$.R(7505, 'f', f, 1), 0)(J$.T(7513, 'server %s received an error %s', 21, false), J$.G(7529, J$.R(7521, 'self', self, 0), 'name', 0), J$.M(7553, J$.R(7537, 'JSON', JSON, 2), 'stringify', 0)(J$.R(7545, 'err', err, 0))))));
                                            if (J$.X1(27969, J$.C(280, J$.B(298, '>', J$.G(7617, J$.M(7609, J$.R(7593, 'self', self, 0), 'listeners', 0)(J$.T(7601, 'error', 21, false)), 'length', 0), J$.T(7625, 0, 22, false), 0))))
                                                J$.X1(7673, J$.M(7665, J$.R(7633, 'self', self, 0), 'emit', 0)(J$.T(7641, 'error', 21, false), J$.R(7649, 'err', err, 0), J$.R(7657, 'self', self, 0)));
                                            if (J$.X1(27993, J$.C(288, J$.G(7689, J$.R(7681, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(7793, J$.F(7785, J$.R(7697, 'setTimeout', setTimeout, 2), 0)(J$.T(7761, function () {
                                                jalangiLabel2665:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(7745, arguments.callee, this, arguments);
                                                            arguments = J$.N(7753, 'arguments', arguments, 4);
                                                            J$.X1(7737, J$.F(7729, J$.R(7705, 'reconnectServer', reconnectServer, 1), 0)(J$.R(7713, 'self', self, 0), J$.R(7721, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(27977, J$e);
                                                        } finally {
                                                            if (J$.Fr(27985))
                                                                continue jalangiLabel2665;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 7745), J$.G(7777, J$.R(7769, 'state', state, 0), 'reconnectInterval', 0)));
                                            J$.X1(7817, J$.M(7809, J$.R(7801, 'self', self, 0), 'destroy', 0)());
                                        } catch (J$e) {
                                            J$.Ex(28001, J$e);
                                        } finally {
                                            if (J$.Fr(28009))
                                                continue jalangiLabel2666;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7825)));
                        } catch (J$e) {
                            J$.Ex(28017, J$e);
                        } finally {
                            if (J$.Fr(28025))
                                continue jalangiLabel2667;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7881), fatalErrorHandler, 3));
            var timeoutHandler = J$.X1(8625, J$.W(8617, 'timeoutHandler', J$.T(8609, function (self, state) {
                jalangiLabel2670:
                    while (true) {
                        try {
                            J$.Fe(8577, arguments.callee, this, arguments);
                            arguments = J$.N(8585, 'arguments', arguments, 4);
                            self = J$.N(8593, 'self', self, 4);
                            state = J$.N(8601, 'state', state, 4);
                            return J$.X1(8569, J$.Rt(8561, J$.T(8553, function (err, connection) {
                                jalangiLabel2669:
                                    while (true) {
                                        try {
                                            J$.Fe(8521, arguments.callee, this, arguments);
                                            arguments = J$.N(8529, 'arguments', arguments, 4);
                                            err = J$.N(8537, 'err', err, 4);
                                            connection = J$.N(8545, 'connection', connection, 4);
                                            if (J$.X1(28033, J$.C(304, J$.C(296, J$.B(306, '==', J$.G(7945, J$.R(7937, 'state', state, 0), 'state', 0), J$.R(7953, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(314, '==', J$.G(7969, J$.R(7961, 'state', state, 0), 'state', 0), J$.R(7977, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(7993, J$.Rt(7985, undefined));
                                            J$.X1(8025, J$.P(8017, J$.R(8001, 'state', state, 0), 'state', J$.R(8009, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(28041, J$.C(312, J$.B(322, '!=', J$.G(8041, J$.R(8033, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(8049, null, 25, false), 0))))
                                                J$.X1(8121, J$.F(8113, J$.R(8057, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(8065, 'self', self, 0), J$.G(8081, J$.R(8073, 'self', self, 0), 's', 0), J$.T(8089, 'timeout', 21, false), J$.T(8105, [J$.R(8097, 'self', self, 0)], 10, false)));
                                            if (J$.X1(28049, J$.C(320, J$.M(8145, J$.G(8137, J$.R(8129, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(8217, J$.M(8209, J$.G(8161, J$.R(8153, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(8201, J$.R(8169, 'f', f, 1), 0)(J$.T(8177, 'server %s timed out', 21, false), J$.G(8193, J$.R(8185, 'self', self, 0), 'name', 0))));
                                            if (J$.X1(28057, J$.C(328, J$.G(8233, J$.R(8225, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(8321, J$.M(8313, J$.G(8249, J$.R(8241, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(8305, J$.R(8257, 'MongoError', MongoError, 1), 1)(J$.F(8297, J$.R(8265, 'f', f, 1), 0)(J$.T(8273, 'server %s timed out', 21, false), J$.G(8289, J$.R(8281, 'self', self, 0), 'name', 0)))));
                                            J$.X1(8369, J$.M(8361, J$.R(8329, 'self', self, 0), 'emit', 0)(J$.T(8337, 'timeout', 21, false), J$.R(8345, 'err', err, 0), J$.R(8353, 'self', self, 0)));
                                            if (J$.X1(28081, J$.C(336, J$.G(8385, J$.R(8377, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(8489, J$.F(8481, J$.R(8393, 'setTimeout', setTimeout, 2), 0)(J$.T(8457, function () {
                                                jalangiLabel2668:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(8441, arguments.callee, this, arguments);
                                                            arguments = J$.N(8449, 'arguments', arguments, 4);
                                                            J$.X1(8433, J$.F(8425, J$.R(8401, 'reconnectServer', reconnectServer, 1), 0)(J$.R(8409, 'self', self, 0), J$.R(8417, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(28065, J$e);
                                                        } finally {
                                                            if (J$.Fr(28073))
                                                                continue jalangiLabel2668;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 8441), J$.G(8473, J$.R(8465, 'state', state, 0), 'reconnectInterval', 0)));
                                            J$.X1(8513, J$.M(8505, J$.R(8497, 'self', self, 0), 'destroy', 0)());
                                        } catch (J$e) {
                                            J$.Ex(28089, J$e);
                                        } finally {
                                            if (J$.Fr(28097))
                                                continue jalangiLabel2669;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 8521)));
                        } catch (J$e) {
                            J$.Ex(28105, J$e);
                        } finally {
                            if (J$.Fr(28113))
                                continue jalangiLabel2670;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8577), timeoutHandler, 3));
            var closeHandler = J$.X1(9321, J$.W(9313, 'closeHandler', J$.T(9305, function (self, state) {
                jalangiLabel2673:
                    while (true) {
                        try {
                            J$.Fe(9273, arguments.callee, this, arguments);
                            arguments = J$.N(9281, 'arguments', arguments, 4);
                            self = J$.N(9289, 'self', self, 4);
                            state = J$.N(9297, 'state', state, 4);
                            return J$.X1(9265, J$.Rt(9257, J$.T(9249, function (err, connection) {
                                jalangiLabel2672:
                                    while (true) {
                                        try {
                                            J$.Fe(9217, arguments.callee, this, arguments);
                                            arguments = J$.N(9225, 'arguments', arguments, 4);
                                            err = J$.N(9233, 'err', err, 4);
                                            connection = J$.N(9241, 'connection', connection, 4);
                                            if (J$.X1(28121, J$.C(352, J$.C(344, J$.B(330, '==', J$.G(8641, J$.R(8633, 'state', state, 0), 'state', 0), J$.R(8649, 'DISCONNECTED', DISCONNECTED, 1), 0)) ? J$._() : J$.B(338, '==', J$.G(8665, J$.R(8657, 'state', state, 0), 'state', 0), J$.R(8673, 'DESTROYED', DESTROYED, 1), 0))))
                                                return J$.X1(8689, J$.Rt(8681, undefined));
                                            J$.X1(8721, J$.P(8713, J$.R(8697, 'state', state, 0), 'state', J$.R(8705, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                            if (J$.X1(28129, J$.C(360, J$.B(346, '!=', J$.G(8737, J$.R(8729, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(8745, null, 25, false), 0))))
                                                J$.X1(8817, J$.F(8809, J$.R(8753, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(8761, 'self', self, 0), J$.G(8777, J$.R(8769, 'self', self, 0), 's', 0), J$.T(8785, 'close', 21, false), J$.T(8801, [J$.R(8793, 'self', self, 0)], 10, false)));
                                            if (J$.X1(28137, J$.C(368, J$.M(8841, J$.G(8833, J$.R(8825, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                J$.X1(8913, J$.M(8905, J$.G(8857, J$.R(8849, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(8897, J$.R(8865, 'f', f, 1), 0)(J$.T(8873, 'server %s closed', 21, false), J$.G(8889, J$.R(8881, 'self', self, 0), 'name', 0))));
                                            if (J$.X1(28145, J$.C(376, J$.G(8929, J$.R(8921, 'state', state, 0), 'callbacks', 0))))
                                                J$.X1(9017, J$.M(9009, J$.G(8945, J$.R(8937, 'state', state, 0), 'callbacks', 0), 'flush', 0)(J$.F(9001, J$.R(8953, 'MongoError', MongoError, 1), 1)(J$.F(8993, J$.R(8961, 'f', f, 1), 0)(J$.T(8969, 'server %s sockets closed', 21, false), J$.G(8985, J$.R(8977, 'self', self, 0), 'name', 0)))));
                                            J$.X1(9065, J$.M(9057, J$.R(9025, 'self', self, 0), 'emit', 0)(J$.T(9033, 'close', 21, false), J$.R(9041, 'err', err, 0), J$.R(9049, 'self', self, 0)));
                                            if (J$.X1(28169, J$.C(384, J$.G(9081, J$.R(9073, 'state', state, 0), 'reconnect', 0))))
                                                J$.X1(9185, J$.F(9177, J$.R(9089, 'setTimeout', setTimeout, 2), 0)(J$.T(9153, function () {
                                                jalangiLabel2671:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(9137, arguments.callee, this, arguments);
                                                            arguments = J$.N(9145, 'arguments', arguments, 4);
                                                            J$.X1(9129, J$.F(9121, J$.R(9097, 'reconnectServer', reconnectServer, 1), 0)(J$.R(9105, 'self', self, 0), J$.R(9113, 'state', state, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(28153, J$e);
                                                        } finally {
                                                            if (J$.Fr(28161))
                                                                continue jalangiLabel2671;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 9137), J$.G(9169, J$.R(9161, 'state', state, 0), 'reconnectInterval', 0)));
                                            J$.X1(9209, J$.M(9201, J$.R(9193, 'self', self, 0), 'destroy', 0)());
                                        } catch (J$e) {
                                            J$.Ex(28177, J$e);
                                        } finally {
                                            if (J$.Fr(28185))
                                                continue jalangiLabel2672;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 9217)));
                        } catch (J$e) {
                            J$.Ex(28193, J$e);
                        } finally {
                            if (J$.Fr(28201))
                                continue jalangiLabel2673;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9273), closeHandler, 3));
            var connectHandler = J$.X1(11177, J$.W(11169, 'connectHandler', J$.T(11161, function (self, state) {
                jalangiLabel2680:
                    while (true) {
                        try {
                            J$.Fe(11121, arguments.callee, this, arguments);
                            arguments = J$.N(11129, 'arguments', arguments, 4);
                            self = J$.N(11137, 'self', self, 4);
                            state = J$.N(11145, 'state', state, 4);
                            J$.N(11153, 'applyAuthentications', applyAuthentications, 0);
                            var applyAuthentications = J$.X1(9849, J$.W(9841, 'applyAuthentications', J$.T(9833, function (callback) {
                                jalangiLabel2675:
                                    while (true) {
                                        try {
                                            J$.Fe(9785, arguments.callee, this, arguments);
                                            arguments = J$.N(9793, 'arguments', arguments, 4);
                                            callback = J$.N(9801, 'callback', callback, 4);
                                            J$.N(9809, 'keys', keys, 0);
                                            J$.N(9817, 'count', count, 0);
                                            J$.N(9825, 'i', i, 0);
                                            var keys = J$.X1(9369, J$.W(9361, 'keys', J$.M(9353, J$.R(9329, 'Object', Object, 2), 'keys', 0)(J$.G(9345, J$.R(9337, 'state', state, 0), 'authProviders', 0)), keys, 1));
                                            if (J$.X1(28209, J$.C(392, J$.B(354, '==', J$.G(9385, J$.R(9377, 'keys', keys, 0), 'length', 0), J$.T(9393, 0, 22, false), 0))))
                                                return J$.X1(9441, J$.Rt(9433, J$.F(9425, J$.R(9401, 'callback', callback, 0), 0)(J$.T(9409, null, 25, false), J$.T(9417, null, 25, false))));
                                            var count = J$.X1(9473, J$.W(9465, 'count', J$.G(9457, J$.R(9449, 'keys', keys, 0), 'length', 0), count, 1));
                                            for (var i = J$.X1(9497, J$.W(9489, 'i', J$.T(9481, 0, 22, false), i, 1)); J$.X1(28241, J$.C(408, J$.B(362, '<', J$.R(9505, 'i', i, 0), J$.G(9521, J$.R(9513, 'keys', keys, 0), 'length', 0), 0))); J$.X1(28249, J$.B(386, '-', i = J$.W(9545, 'i', J$.B(378, '+', J$.U(370, '+', J$.R(9537, 'i', i, 0)), J$.T(9529, 1, 22, false), 0), i, 0), J$.T(9553, 1, 22, false), 0))) {
                                                J$.X1(9777, J$.M(9769, J$.G(9601, J$.G(9569, J$.R(9561, 'state', state, 0), 'authProviders', 0), J$.G(9593, J$.R(9577, 'keys', keys, 0), J$.R(9585, 'i', i, 0), 4), 4), 'reauthenticate', 0)(J$.R(9609, 'self', self, 0), J$.G(9625, J$.R(9617, 'state', state, 0), 'pool', 0), J$.T(9761, function (err, r) {
                                                    jalangiLabel2674:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(9729, arguments.callee, this, arguments);
                                                                arguments = J$.N(9737, 'arguments', arguments, 4);
                                                                err = J$.N(9745, 'err', err, 4);
                                                                r = J$.N(9753, 'r', r, 4);
                                                                J$.X1(9657, count = J$.W(9649, 'count', J$.B(394, '-', J$.R(9633, 'count', count, 0), J$.T(9641, 1, 22, false), 0), count, 0));
                                                                if (J$.X1(28217, J$.C(400, J$.B(402, '==', J$.R(9665, 'count', count, 0), J$.T(9673, 0, 22, false), 0)))) {
                                                                    return J$.X1(9721, J$.Rt(9713, J$.F(9705, J$.R(9681, 'callback', callback, 0), 0)(J$.T(9689, null, 25, false), J$.T(9697, null, 25, false))));
                                                                }
                                                            } catch (J$e) {
                                                                J$.Ex(28225, J$e);
                                                            } finally {
                                                                if (J$.Fr(28233))
                                                                    continue jalangiLabel2674;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 9729)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(28257, J$e);
                                        } finally {
                                            if (J$.Fr(28265))
                                                continue jalangiLabel2675;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 9785), applyAuthentications, 1));
                            return J$.X1(11113, J$.Rt(11105, J$.T(11097, function (connection) {
                                jalangiLabel2679:
                                    while (true) {
                                        try {
                                            J$.Fe(11073, arguments.callee, this, arguments);
                                            arguments = J$.N(11081, 'arguments', arguments, 4);
                                            connection = J$.N(11089, 'connection', connection, 4);
                                            J$.X1(11065, J$.F(11057, J$.R(9857, 'applyAuthentications', applyAuthentications, 0), 0)(J$.T(11049, function () {
                                                jalangiLabel2678:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(11025, arguments.callee, this, arguments);
                                                            arguments = J$.N(11033, 'arguments', arguments, 4);
                                                            J$.N(11041, 'start', start, 0);
                                                            var start = J$.X1(9897, J$.W(9889, 'start', J$.M(9881, J$.F(9873, J$.R(9865, 'Date', Date, 2), 1)(), 'getTime', 0)(), start, 1));
                                                            J$.X1(11017, J$.M(11009, J$.R(9905, 'self', self, 0), 'command', 0)(J$.T(9913, 'admin.$cmd', 21, false), J$.T(9929, {
                                                                ismaster: J$.T(9921, true, 23, false)
                                                            }, 11, false), J$.T(11001, function (err, r) {
                                                                jalangiLabel2677:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(10969, arguments.callee, this, arguments);
                                                                            arguments = J$.N(10977, 'arguments', arguments, 4);
                                                                            err = J$.N(10985, 'err', err, 4);
                                                                            r = J$.N(10993, 'r', r, 4);
                                                                            if (J$.X1(28273, J$.C(416, J$.R(9937, 'err', err, 0)))) {
                                                                                J$.X1(9969, J$.P(9961, J$.R(9945, 'state', state, 0), 'state', J$.R(9953, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                                                                return J$.X1(10025, J$.Rt(10017, J$.M(10009, J$.R(9977, 'self', self, 0), 'emit', 0)(J$.T(9985, 'close', 21, false), J$.R(9993, 'err', err, 0), J$.R(10001, 'self', self, 0))));
                                                                            }
                                                                            J$.X1(10081, J$.P(10073, J$.R(10033, 'state', state, 0), 'isMasterLatencyMS', J$.B(410, '-', J$.M(10057, J$.F(10049, J$.R(10041, 'Date', Date, 2), 1)(), 'getTime', 0)(), J$.R(10065, 'start', start, 0), 0), 0));
                                                                            if (J$.X1(28281, J$.C(424, J$.U(418, '!', J$.R(10089, 'err', err, 0))))) {
                                                                                J$.X1(10129, J$.P(10121, J$.R(10097, 'state', state, 0), 'ismaster', J$.G(10113, J$.R(10105, 'r', r, 0), 'result', 0), 0));
                                                                            }
                                                                            J$.X1(10185, J$.M(10177, J$.R(10137, 'self', self, 0), 'emit', 0)(J$.T(10145, 'ismaster', 21, false), J$.G(10161, J$.R(10153, 'r', r, 0), 'result', 0), J$.R(10169, 'self', self, 0)));
                                                                            J$.X1(10241, J$.P(10233, J$.R(10193, 'state', state, 0), 'wireProtocolHandler', J$.F(10225, J$.R(10201, 'createWireProtocolHandler', createWireProtocolHandler, 1), 0)(J$.G(10217, J$.R(10209, 'state', state, 0), 'ismaster', 0)), 0));
                                                                            J$.X1(10289, J$.P(10281, J$.G(10257, J$.R(10249, 'state', state, 0), 'options', 0), 'wireProtocolHandler', J$.G(10273, J$.R(10265, 'state', state, 0), 'wireProtocolHandler', 0), 0));
                                                                            if (J$.X1(28289, J$.C(432, J$.M(10313, J$.G(10305, J$.R(10297, 'state', state, 0), 'logger', 0), 'isInfo', 0)())))
                                                                                J$.X1(10417, J$.M(10409, J$.G(10329, J$.R(10321, 'state', state, 0), 'logger', 0), 'info', 0)(J$.F(10401, J$.R(10337, 'f', f, 1), 0)(J$.T(10345, 'server %s connected with ismaster [%s]', 21, false), J$.G(10361, J$.R(10353, 'self', self, 0), 'name', 0), J$.M(10393, J$.R(10369, 'JSON', JSON, 2), 'stringify', 0)(J$.G(10385, J$.R(10377, 'r', r, 0), 'result', 0)))));
                                                                            if (J$.X1(28297, J$.C(448, J$.C(440, J$.U(426, '!', J$.F(10441, J$.R(10425, 'supportsServer', supportsServer, 1), 0)(J$.R(10433, 'state', state, 0)))) ? J$.B(434, '==', J$.G(10457, J$.R(10449, 'state', state, 0), 'wireProtocolHandler', 0), J$.T(10465, null, 25, false), 0) : J$._()))) {
                                                                                J$.X1(10497, J$.P(10489, J$.R(10473, 'state', state, 0), 'state', J$.R(10481, 'DISCONNECTED', DISCONNECTED, 1), 0));
                                                                                return J$.X1(10569, J$.Rt(10561, J$.M(10553, J$.R(10505, 'self', self, 0), 'emit', 0)(J$.T(10513, 'error', 21, false), J$.F(10537, J$.R(10521, 'MongoError', MongoError, 1), 1)(J$.T(10529, 'non supported server version', 21, false)), J$.R(10545, 'self', self, 0))));
                                                                            }
                                                                            if (J$.X1(28305, J$.C(464, J$.C(456, J$.G(10585, J$.R(10577, 'state', state, 0), 'ismaster', 0)) ? J$.G(10609, J$.G(10601, J$.R(10593, 'state', state, 0), 'ismaster', 0), 'me', 0) : J$._())))
                                                                                J$.X1(10665, J$.P(10657, J$.G(10625, J$.R(10617, 'state', state, 0), 'serverDetails', 0), 'name', J$.G(10649, J$.G(10641, J$.R(10633, 'state', state, 0), 'ismaster', 0), 'me', 0), 0));
                                                                            if (J$.X1(28313, J$.C(472, J$.B(442, '==', J$.G(10681, J$.R(10673, 'state', state, 0), 'readPreferenceStrategies', 0), J$.T(10689, null, 25, false), 0)))) {
                                                                                J$.X1(10721, J$.P(10713, J$.R(10697, 'state', state, 0), 'state', J$.R(10705, 'CONNECTED', CONNECTED, 1), 0));
                                                                                return J$.X1(10769, J$.Rt(10761, J$.M(10753, J$.R(10729, 'self', self, 0), 'emit', 0)(J$.T(10737, 'connect', 21, false), J$.R(10745, 'self', self, 0))));
                                                                            }
                                                                            J$.X1(10961, J$.F(10953, J$.R(10777, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(10785, 'self', self, 0), J$.G(10801, J$.R(10793, 'self', self, 0), 's', 0), J$.T(10809, 'connect', 21, false), J$.T(10825, [J$.R(10817, 'self', self, 0)], 10, false), J$.T(10945, function (err, result) {
                                                                                jalangiLabel2676:
                                                                                    while (true) {
                                                                                        try {
                                                                                            J$.Fe(10913, arguments.callee, this, arguments);
                                                                                            arguments = J$.N(10921, 'arguments', arguments, 4);
                                                                                            err = J$.N(10929, 'err', err, 4);
                                                                                            result = J$.N(10937, 'result', result, 4);
                                                                                            J$.X1(10857, J$.P(10849, J$.R(10833, 'state', state, 0), 'state', J$.R(10841, 'CONNECTED', CONNECTED, 1), 0));
                                                                                            return J$.X1(10905, J$.Rt(10897, J$.M(10889, J$.R(10865, 'self', self, 0), 'emit', 0)(J$.T(10873, 'connect', 21, false), J$.R(10881, 'self', self, 0))));
                                                                                        } catch (J$e) {
                                                                                            J$.Ex(28321, J$e);
                                                                                        } finally {
                                                                                            if (J$.Fr(28329))
                                                                                                continue jalangiLabel2676;
                                                                                            else
                                                                                                return J$.Ra();
                                                                                        }
                                                                                    }
                                                                            }, 12, false, 10913)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(28337, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(28345))
                                                                                continue jalangiLabel2677;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false, 10969)));
                                                        } catch (J$e) {
                                                            J$.Ex(28353, J$e);
                                                        } finally {
                                                            if (J$.Fr(28361))
                                                                continue jalangiLabel2678;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 11025)));
                                        } catch (J$e) {
                                            J$.Ex(28369, J$e);
                                        } finally {
                                            if (J$.Fr(28377))
                                                continue jalangiLabel2679;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 11073)));
                        } catch (J$e) {
                            J$.Ex(28385, J$e);
                        } finally {
                            if (J$.Fr(28393))
                                continue jalangiLabel2680;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11121), connectHandler, 3));
            var slaveOk = J$.X1(11289, J$.W(11281, 'slaveOk', J$.T(11273, function (r) {
                jalangiLabel2681:
                    while (true) {
                        try {
                            J$.Fe(11249, arguments.callee, this, arguments);
                            arguments = J$.N(11257, 'arguments', arguments, 4);
                            r = J$.N(11265, 'r', r, 4);
                            if (J$.X1(28401, J$.C(480, J$.R(11185, 'r', r, 0))))
                                return J$.X1(11217, J$.Rt(11209, J$.M(11201, J$.R(11193, 'r', r, 0), 'slaveOk', 0)()));
                            return J$.X1(11241, J$.Rt(11233, J$.T(11225, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(28409, J$e);
                        } finally {
                            if (J$.Fr(28417))
                                continue jalangiLabel2681;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11249), slaveOk, 3));
            var notifyStrategies = J$.X1(12129, J$.W(12121, 'notifyStrategies', J$.T(12113, function (self, state, op, params, callback) {
                jalangiLabel2683:
                    while (true) {
                        try {
                            J$.Fe(12025, arguments.callee, this, arguments);
                            arguments = J$.N(12033, 'arguments', arguments, 4);
                            self = J$.N(12041, 'self', self, 4);
                            state = J$.N(12049, 'state', state, 4);
                            op = J$.N(12057, 'op', op, 4);
                            params = J$.N(12065, 'params', params, 4);
                            callback = J$.N(12073, 'callback', callback, 4);
                            J$.N(12081, 'name', name, 0);
                            J$.N(12089, 'strat', strat, 0);
                            J$.N(12097, 'nPreferences', nPreferences, 0);
                            J$.N(12105, 'cParams', cParams, 0);
                            if (J$.X1(28433, J$.C(496, J$.B(458, '!=', J$.U(450, 'typeof', J$.R(11297, 'callback', callback, 0)), J$.T(11305, 'function', 21, false), 0)))) {
                                for (J$._tm_p in J$.H(11481, J$.G(11321, J$.R(11313, 'state', state, 0), 'readPreferenceStrategies', 0))) {
                                    var name = J$.X1(11497, J$.W(11489, 'name', J$._tm_p, name, 1));
                                    {
                                        {
                                            if (J$.X1(28425, J$.C(488, J$.G(11369, J$.G(11353, J$.G(11337, J$.R(11329, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11345, 'name', name, 0), 4), J$.R(11361, 'op', op, 0), 4)))) {
                                                var strat = J$.X1(11417, J$.W(11409, 'strat', J$.G(11401, J$.G(11385, J$.R(11377, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11393, 'name', name, 0), 4), strat, 1));
                                                J$.X1(11473, J$.M(11465, J$.G(11441, J$.R(11425, 'strat', strat, 0), J$.R(11433, 'op', op, 0), 4), 'apply', 0)(J$.R(11449, 'strat', strat, 0), J$.R(11457, 'params', params, 0)));
                                            }
                                        }
                                    }
                                }
                                return J$.X1(11513, J$.Rt(11505, undefined));
                            }
                            var nPreferences = J$.X1(11569, J$.W(11561, 'nPreferences', J$.G(11553, J$.M(11545, J$.R(11521, 'Object', Object, 2), 'keys', 0)(J$.G(11537, J$.R(11529, 'state', state, 0), 'readPreferenceStrategies', 0)), 'length', 0), nPreferences, 1));
                            if (J$.X1(28441, J$.C(504, J$.B(466, '==', J$.R(11577, 'nPreferences', nPreferences, 0), J$.T(11585, 0, 22, false), 0))))
                                return J$.X1(11633, J$.Rt(11625, J$.F(11617, J$.R(11593, 'callback', callback, 0), 0)(J$.T(11601, null, 25, false), J$.T(11609, null, 25, false))));
                            for (J$._tm_p in J$.H(12001, J$.G(11649, J$.R(11641, 'state', state, 0), 'readPreferenceStrategies', 0))) {
                                var name = J$.X1(12017, J$.W(12009, 'name', J$._tm_p, name, 1));
                                {
                                    {
                                        if (J$.X1(28473, J$.C(520, J$.G(11697, J$.G(11681, J$.G(11665, J$.R(11657, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11673, 'name', name, 0), 4), J$.R(11689, 'op', op, 0), 4)))) {
                                            var strat = J$.X1(11745, J$.W(11737, 'strat', J$.G(11729, J$.G(11713, J$.R(11705, 'state', state, 0), 'readPreferenceStrategies', 0), J$.R(11721, 'name', name, 0), 4), strat, 1));
                                            var cParams = J$.X1(11785, J$.W(11777, 'cParams', J$.M(11769, J$.R(11753, 'params', params, 0), 'slice', 0)(J$.T(11761, 0, 22, false)), cParams, 1));
                                            J$.X1(11937, J$.M(11929, J$.R(11793, 'cParams', cParams, 0), 'push', 0)(J$.T(11921, function (err, r) {
                                                jalangiLabel2682:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(11889, arguments.callee, this, arguments);
                                                            arguments = J$.N(11897, 'arguments', arguments, 4);
                                                            err = J$.N(11905, 'err', err, 4);
                                                            r = J$.N(11913, 'r', r, 4);
                                                            J$.X1(11825, nPreferences = J$.W(11817, 'nPreferences', J$.B(474, '-', J$.R(11801, 'nPreferences', nPreferences, 0), J$.T(11809, 1, 22, false), 0), nPreferences, 0));
                                                            if (J$.X1(28449, J$.C(512, J$.B(482, '==', J$.R(11833, 'nPreferences', nPreferences, 0), J$.T(11841, 0, 22, false), 0)))) {
                                                                J$.X1(11881, J$.F(11873, J$.R(11849, 'callback', callback, 0), 0)(J$.T(11857, null, 25, false), J$.T(11865, null, 25, false)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(28457, J$e);
                                                        } finally {
                                                            if (J$.Fr(28465))
                                                                continue jalangiLabel2682;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 11889)));
                                            J$.X1(11993, J$.M(11985, J$.G(11961, J$.R(11945, 'strat', strat, 0), J$.R(11953, 'op', op, 0), 4), 'apply', 0)(J$.R(11969, 'strat', strat, 0), J$.R(11977, 'cParams', cParams, 0)));
                                        }
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(28481, J$e);
                        } finally {
                            if (J$.Fr(28489))
                                continue jalangiLabel2683;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12025), notifyStrategies, 3));
            var debugFields = J$.X1(12313, J$.W(12305, 'debugFields', J$.T(12297, [
                J$.T(12137, 'reconnect', 21, false),
                J$.T(12145, 'reconnectTries', 21, false),
                J$.T(12153, 'reconnectInterval', 21, false),
                J$.T(12161, 'emitError', 21, false),
                J$.T(12169, 'cursorFactory', 21, false),
                J$.T(12177, 'host', 21, false),
                J$.T(12185, 'port', 21, false),
                J$.T(12193, 'size', 21, false),
                J$.T(12201, 'keepAlive', 21, false),
                J$.T(12209, 'keepAliveInitialDelay', 21, false),
                J$.T(12217, 'noDelay', 21, false),
                J$.T(12225, 'connectionTimeout', 21, false),
                J$.T(12233, 'socketTimeout', 21, false),
                J$.T(12241, 'singleBufferSerializtion', 21, false),
                J$.T(12249, 'ssl', 21, false),
                J$.T(12257, 'ca', 21, false),
                J$.T(12265, 'cert', 21, false),
                J$.T(12273, 'key', 21, false),
                J$.T(12281, 'rejectUnauthorized', 21, false),
                J$.T(12289, 'promoteLongs', 21, false)
            ], 10, false), debugFields, 3));
            var Server = J$.X1(13761, J$.W(13753, 'Server', J$.T(13745, function (options) {
                jalangiLabel2684:
                    while (true) {
                        try {
                            J$.Fe(13697, arguments.callee, this, arguments);
                            arguments = J$.N(13705, 'arguments', arguments, 4);
                            options = J$.N(13713, 'options', options, 4);
                            J$.N(13721, 'self', self, 0);
                            J$.N(13729, 'reconnectTries', reconnectTries, 0);
                            J$.N(13737, 's', s, 0);
                            var self = J$.X1(12337, J$.W(12329, 'self', J$.R(12321, 'this', this, 0), self, 1));
                            J$.X1(12369, J$.M(12361, J$.R(12345, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(12353, 'this', this, 0)));
                            if (J$.X1(28497, J$.C(528, J$.B(490, '==', J$.R(12377, 'bsonInstance', bsonInstance, 1), J$.T(12385, null, 25, false), 0)))) {
                                J$.X1(12425, bsonInstance = J$.W(12417, 'bsonInstance', J$.F(12409, J$.R(12393, 'BSON', BSON, 1), 1)(J$.R(12401, 'bsonTypes', bsonTypes, 1)), bsonInstance, 2));
                            }
                            var reconnectTries = J$.X1(12465, J$.W(12457, 'reconnectTries', J$.C(536, J$.G(12441, J$.R(12433, 'options', options, 0), 'reconnectTries', 0)) ? J$._() : J$.T(12449, 30, 22, false), reconnectTries, 1));
                            J$.X1(13057, J$.P(13049, J$.R(12473, 'this', this, 0), 's', J$.T(13041, {
                                options: J$.R(12481, 'options', options, 0),
                                callbacks: J$.F(12497, J$.R(12489, 'Callbacks', Callbacks, 1), 1)(),
                                logger: J$.F(12529, J$.R(12505, 'Logger', Logger, 1), 0)(J$.T(12513, 'Server', 21, false), J$.R(12521, 'options', options, 0)),
                                state: J$.R(12537, 'DISCONNECTED', DISCONNECTED, 1),
                                reconnect: J$.X1(28505, J$.C(544, J$.B(506, '==', J$.U(498, 'typeof', J$.G(12553, J$.R(12545, 'options', options, 0), 'reconnect', 0)), J$.T(12561, 'boolean', 21, false), 0))) ? J$.G(12577, J$.R(12569, 'options', options, 0), 'reconnect', 0) : J$.T(12585, true, 23, false),
                                reconnectTries: J$.R(12593, 'reconnectTries', reconnectTries, 0),
                                reconnectInterval: J$.C(552, J$.G(12609, J$.R(12601, 'options', options, 0), 'reconnectInterval', 0)) ? J$._() : J$.T(12617, 1000, 22, false),
                                emitError: J$.X1(28513, J$.C(560, J$.B(522, '==', J$.U(514, 'typeof', J$.G(12633, J$.R(12625, 'options', options, 0), 'emitError', 0)), J$.T(12641, 'boolean', 21, false), 0))) ? J$.G(12657, J$.R(12649, 'options', options, 0), 'emitError', 0) : J$.T(12665, false, 23, false),
                                currentReconnectRetry: J$.R(12673, 'reconnectTries', reconnectTries, 0),
                                ismaster: J$.T(12681, null, 25, false),
                                readPreferenceStrategies: J$.G(12697, J$.R(12689, 'options', options, 0), 'readPreferenceStrategies', 0),
                                authProviders: J$.C(568, J$.G(12713, J$.R(12705, 'options', options, 0), 'authProviders', 0)) ? J$._() : J$.T(12721, {}, 11, false),
                                id: J$.B(546, '-', serverId = J$.W(12745, 'serverId', J$.B(538, '+', J$.U(530, '+', J$.R(12737, 'serverId', serverId, 1)), J$.T(12729, 1, 22, false), 0), serverId, 2), J$.T(12753, 1, 22, false), 0),
                                tag: J$.G(12769, J$.R(12761, 'options', options, 0), 'tag', 0),
                                disconnectHandler: J$.G(12785, J$.R(12777, 'options', options, 0), 'disconnectHandler', 0),
                                wireProtocolHandler: J$.C(576, J$.G(12801, J$.R(12793, 'options', options, 0), 'wireProtocolHandler', 0)) ? J$._() : J$.F(12817, J$.R(12809, 'PreTwoSixWireProtocolSupport', PreTwoSixWireProtocolSupport, 1), 1)(),
                                Cursor: J$.C(584, J$.G(12833, J$.R(12825, 'options', options, 0), 'cursorFactory', 0)) ? J$._() : J$.R(12841, 'BasicCursor', BasicCursor, 1),
                                bsonInstance: J$.R(12849, 'bsonInstance', bsonInstance, 1),
                                bson: J$.X1(28521, J$.C(592, J$.G(12865, J$.R(12857, 'options', options, 0), 'bson', 0))) ? J$.G(12881, J$.R(12873, 'options', options, 0), 'bson', 0) : J$.R(12889, 'bsonInstance', bsonInstance, 1),
                                pool: J$.T(12897, null, 25, false),
                                isMasterLatencyMS: J$.T(12905, 0, 22, false),
                                serverDetails: J$.T(13033, {
                                    host: J$.G(12921, J$.R(12913, 'options', options, 0), 'host', 0),
                                    port: J$.G(12937, J$.R(12929, 'options', options, 0), 'port', 0),
                                    name: J$.X1(28529, J$.C(600, J$.G(12953, J$.R(12945, 'options', options, 0), 'port', 0))) ? J$.F(13009, J$.R(12961, 'f', f, 1), 0)(J$.T(12969, '%s:%s', 21, false), J$.G(12985, J$.R(12977, 'options', options, 0), 'host', 0), J$.G(13001, J$.R(12993, 'options', options, 0), 'port', 0)) : J$.G(13025, J$.R(13017, 'options', options, 0), 'host', 0)
                                }, 11, false)
                            }, 11, false), 0));
                            var s = J$.X1(13089, J$.W(13081, 's', J$.G(13073, J$.R(13065, 'this', this, 0), 's', 0), s, 1));
                            J$.X1(13129, J$.P(13121, J$.R(13097, 'options', options, 0), 'bson', J$.G(13113, J$.R(13105, 's', s, 0), 'bson', 0), 0));
                            J$.X1(13201, J$.F(13193, J$.R(13137, 'getProperty', getProperty, 1), 0)(J$.R(13145, 'this', this, 0), J$.T(13153, 'name', 21, false), J$.T(13161, 'name', 21, false), J$.G(13177, J$.R(13169, 's', s, 0), 'serverDetails', 0), J$.T(13185, {}, 11, false)));
                            J$.X1(13273, J$.F(13265, J$.R(13209, 'getProperty', getProperty, 1), 0)(J$.R(13217, 'this', this, 0), J$.T(13225, 'bson', 21, false), J$.T(13233, 'bson', 21, false), J$.G(13249, J$.R(13241, 's', s, 0), 'options', 0), J$.T(13257, {}, 11, false)));
                            J$.X1(13345, J$.F(13337, J$.R(13281, 'getProperty', getProperty, 1), 0)(J$.R(13289, 'this', this, 0), J$.T(13297, 'wireProtocolHandler', 21, false), J$.T(13305, 'wireProtocolHandler', 21, false), J$.G(13321, J$.R(13313, 's', s, 0), 'options', 0), J$.T(13329, {}, 11, false)));
                            J$.X1(13401, J$.F(13393, J$.R(13353, 'getSingleProperty', getSingleProperty, 1), 0)(J$.R(13361, 'this', this, 0), J$.T(13369, 'id', 21, false), J$.G(13385, J$.R(13377, 's', s, 0), 'id', 0)));
                            J$.X1(13449, J$.M(13441, J$.R(13409, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13417, 'mongocr', 21, false), J$.F(13433, J$.R(13425, 'MongoCR', MongoCR, 1), 1)()));
                            J$.X1(13497, J$.M(13489, J$.R(13457, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13465, 'x509', 21, false), J$.F(13481, J$.R(13473, 'X509', X509, 1), 1)()));
                            J$.X1(13545, J$.M(13537, J$.R(13505, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13513, 'plain', 21, false), J$.F(13529, J$.R(13521, 'Plain', Plain, 1), 1)()));
                            J$.X1(13593, J$.M(13585, J$.R(13553, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13561, 'gssapi', 21, false), J$.F(13577, J$.R(13569, 'GSSAPI', GSSAPI, 1), 1)()));
                            J$.X1(13641, J$.M(13633, J$.R(13601, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13609, 'sspi', 21, false), J$.F(13625, J$.R(13617, 'SSPI', SSPI, 1), 1)()));
                            J$.X1(13689, J$.M(13681, J$.R(13649, 'this', this, 0), 'addAuthProvider', 0)(J$.T(13657, 'scram-sha-1', 21, false), J$.F(13673, J$.R(13665, 'ScramSHA1', ScramSHA1, 1), 1)()));
                        } catch (J$e) {
                            J$.Ex(28537, J$e);
                        } finally {
                            if (J$.Fr(28545))
                                continue jalangiLabel2684;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13697), Server, 3));
            J$.X1(13801, J$.F(13793, J$.R(13769, 'inherits', inherits, 1), 0)(J$.R(13777, 'Server', Server, 1), J$.R(13785, 'EventEmitter', EventEmitter, 1)));
            J$.X1(14169, J$.P(14161, J$.G(13817, J$.R(13809, 'Server', Server, 1), 'prototype', 0), 'setBSONParserType', J$.T(14153, function (type) {
                jalangiLabel2685:
                    while (true) {
                        try {
                            J$.Fe(14121, arguments.callee, this, arguments);
                            arguments = J$.N(14129, 'arguments', arguments, 4);
                            type = J$.N(14137, 'type', type, 4);
                            J$.N(14145, 'nBSON', nBSON, 0);
                            var nBSON = J$.X1(13841, J$.W(13833, 'nBSON', J$.T(13825, null, 25, false), nBSON, 1));
                            if (J$.X1(28561, J$.C(616, J$.B(554, '==', J$.R(13849, 'type', type, 0), J$.T(13857, 'c++', 21, false), 0)))) {
                                J$.X1(13913, nBSON = J$.W(13905, 'nBSON', J$.G(13897, J$.M(13889, J$.F(13881, J$.R(13865, 'require', require, 2), 0)(J$.T(13873, 'bson', 21, false)), 'native', 0)(), 'BSON', 0), nBSON, 0));
                            } else if (J$.X1(28553, J$.C(608, J$.B(562, '==', J$.R(13921, 'type', type, 0), J$.T(13929, 'js', 21, false), 0)))) {
                                J$.X1(13985, nBSON = J$.W(13977, 'nBSON', J$.G(13969, J$.M(13961, J$.F(13953, J$.R(13937, 'require', require, 2), 0)(J$.T(13945, 'bson', 21, false)), 'pure', 0)(), 'BSON', 0), nBSON, 0));
                            } else {
                                throw J$.X1(14049, J$.Th(14041, J$.F(14033, J$.R(13993, 'MongoError', MongoError, 1), 1)(J$.F(14025, J$.R(14001, 'f', f, 1), 0)(J$.T(14009, '% parser not supported', 21, false), J$.R(14017, 'type', type, 0)))));
                            }
                            J$.X1(14113, J$.P(14105, J$.G(14073, J$.G(14065, J$.R(14057, 'this', this, 0), 's', 0), 'options', 0), 'bson', J$.F(14097, J$.R(14081, 'nBSON', nBSON, 0), 1)(J$.R(14089, 'bsonTypes', bsonTypes, 1)), 0));
                        } catch (J$e) {
                            J$.Ex(28569, J$e);
                        } finally {
                            if (J$.Fr(28577))
                                continue jalangiLabel2685;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14121), 0));
            J$.X1(14281, J$.P(14273, J$.G(14185, J$.R(14177, 'Server', Server, 1), 'prototype', 0), 'capConnections', J$.T(14265, function (maxConnections) {
                jalangiLabel2686:
                    while (true) {
                        try {
                            J$.Fe(14241, arguments.callee, this, arguments);
                            arguments = J$.N(14249, 'arguments', arguments, 4);
                            maxConnections = J$.N(14257, 'maxConnections', maxConnections, 4);
                            J$.X1(14233, J$.M(14225, J$.G(14209, J$.G(14201, J$.R(14193, 'this', this, 0), 's', 0), 'pool', 0), 'capConnections', 0)(J$.R(14217, 'maxConnections', maxConnections, 0)));
                        } catch (J$e) {
                            J$.Ex(28585, J$e);
                        } finally {
                            if (J$.Fr(28593))
                                continue jalangiLabel2686;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14241), 0));
            J$.X1(14377, J$.P(14369, J$.G(14297, J$.R(14289, 'Server', Server, 1), 'prototype', 0), 'lastIsMaster', J$.T(14361, function () {
                jalangiLabel2687:
                    while (true) {
                        try {
                            J$.Fe(14345, arguments.callee, this, arguments);
                            arguments = J$.N(14353, 'arguments', arguments, 4);
                            return J$.X1(14337, J$.Rt(14329, J$.G(14321, J$.G(14313, J$.R(14305, 'this', this, 0), 's', 0), 'ismaster', 0)));
                        } catch (J$e) {
                            J$.Ex(28601, J$e);
                        } finally {
                            if (J$.Fr(28609))
                                continue jalangiLabel2687;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14345), 0));
            J$.X1(15385, J$.P(15377, J$.G(14393, J$.R(14385, 'Server', Server, 1), 'prototype', 0), 'connect', J$.T(15369, function (_options) {
                jalangiLabel2688:
                    while (true) {
                        try {
                            J$.Fe(15337, arguments.callee, this, arguments);
                            arguments = J$.N(15345, 'arguments', arguments, 4);
                            _options = J$.N(15353, '_options', _options, 4);
                            J$.N(15361, 'self', self, 0);
                            var self = J$.X1(14417, J$.W(14409, 'self', J$.R(14401, 'this', this, 0), self, 1));
                            J$.X1(14449, _options = J$.W(14441, '_options', J$.C(624, J$.R(14425, '_options', _options, 0)) ? J$._() : J$.T(14433, {}, 11, false), _options, 0));
                            if (J$.X1(28617, J$.C(632, J$.B(578, '==', J$.U(570, 'typeof', J$.G(14465, J$.R(14457, '_options', _options, 0), 'promoteLongs', 0)), J$.T(14473, 'boolean', 21, false), 0)))) {
                                J$.X1(14529, J$.P(14521, J$.G(14497, J$.G(14489, J$.R(14481, 'self', self, 0), 's', 0), 'options', 0), 'promoteLongs', J$.G(14513, J$.R(14505, '_options', _options, 0), 'promoteLongs', 0), 0));
                            }
                            if (J$.X1(28625, J$.C(640, J$.G(14553, J$.G(14545, J$.R(14537, 'self', self, 0), 's', 0), 'pool', 0)))) {
                                J$.X1(14593, J$.M(14585, J$.G(14577, J$.G(14569, J$.R(14561, 'self', self, 0), 's', 0), 'pool', 0), 'destroy', 0)());
                                J$.X1(14633, J$.P(14625, J$.G(14609, J$.R(14601, 'self', self, 0), 's', 0), 'pool', J$.T(14617, null, 25, false), 0));
                            }
                            J$.X1(14673, J$.P(14665, J$.G(14649, J$.R(14641, 'self', self, 0), 's', 0), 'state', J$.R(14657, 'CONNECTING', CONNECTING, 1), 0));
                            if (J$.X1(28633, J$.C(648, J$.U(586, '!', J$.G(14697, J$.G(14689, J$.R(14681, 'self', self, 0), 's', 0), 'pool', 0))))) {
                                J$.X1(14777, J$.P(14769, J$.G(14721, J$.G(14713, J$.R(14705, 'self', self, 0), 's', 0), 'options', 0), 'messageHandler', J$.F(14761, J$.R(14729, 'messageHandler', messageHandler, 1), 0)(J$.R(14737, 'self', self, 0), J$.G(14753, J$.R(14745, 'self', self, 0), 's', 0)), 0));
                                J$.X1(14849, J$.P(14841, J$.G(14793, J$.R(14785, 'self', self, 0), 's', 0), 'pool', J$.F(14833, J$.R(14801, 'Pool', Pool, 1), 1)(J$.G(14825, J$.G(14817, J$.R(14809, 'self', self, 0), 's', 0), 'options', 0)), 0));
                            }
                            J$.X1(14937, J$.M(14929, J$.G(14873, J$.G(14865, J$.R(14857, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(14881, 'timeout', 21, false), J$.F(14921, J$.R(14889, 'timeoutHandler', timeoutHandler, 1), 0)(J$.R(14897, 'self', self, 0), J$.G(14913, J$.R(14905, 'self', self, 0), 's', 0))));
                            J$.X1(15025, J$.M(15017, J$.G(14961, J$.G(14953, J$.R(14945, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(14969, 'close', 21, false), J$.F(15009, J$.R(14977, 'closeHandler', closeHandler, 1), 0)(J$.R(14985, 'self', self, 0), J$.G(15001, J$.R(14993, 'self', self, 0), 's', 0))));
                            J$.X1(15113, J$.M(15105, J$.G(15049, J$.G(15041, J$.R(15033, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(15057, 'error', 21, false), J$.F(15097, J$.R(15065, 'errorHandler', errorHandler, 1), 0)(J$.R(15073, 'self', self, 0), J$.G(15089, J$.R(15081, 'self', self, 0), 's', 0))));
                            J$.X1(15201, J$.M(15193, J$.G(15137, J$.G(15129, J$.R(15121, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(15145, 'connect', 21, false), J$.F(15185, J$.R(15153, 'connectHandler', connectHandler, 1), 0)(J$.R(15161, 'self', self, 0), J$.G(15177, J$.R(15169, 'self', self, 0), 's', 0))));
                            J$.X1(15289, J$.M(15281, J$.G(15225, J$.G(15217, J$.R(15209, 'self', self, 0), 's', 0), 'pool', 0), 'once', 0)(J$.T(15233, 'parseError', 21, false), J$.F(15273, J$.R(15241, 'fatalErrorHandler', fatalErrorHandler, 1), 0)(J$.R(15249, 'self', self, 0), J$.G(15265, J$.R(15257, 'self', self, 0), 's', 0))));
                            J$.X1(15329, J$.M(15321, J$.G(15313, J$.G(15305, J$.R(15297, 'self', self, 0), 's', 0), 'pool', 0), 'connect', 0)());
                        } catch (J$e) {
                            J$.Ex(28641, J$e);
                        } finally {
                            if (J$.Fr(28649))
                                continue jalangiLabel2688;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15337), 0));
            J$.X1(15937, J$.P(15929, J$.G(15401, J$.R(15393, 'Server', Server, 1), 'prototype', 0), 'destroy', J$.T(15921, function (emitClose, emitDestroy) {
                jalangiLabel2689:
                    while (true) {
                        try {
                            J$.Fe(15881, arguments.callee, this, arguments);
                            arguments = J$.N(15889, 'arguments', arguments, 4);
                            emitClose = J$.N(15897, 'emitClose', emitClose, 4);
                            emitDestroy = J$.N(15905, 'emitDestroy', emitDestroy, 4);
                            J$.N(15913, 'self', self, 0);
                            var self = J$.X1(15425, J$.W(15417, 'self', J$.R(15409, 'this', this, 0), self, 1));
                            if (J$.X1(28657, J$.C(656, J$.M(15457, J$.G(15449, J$.G(15441, J$.R(15433, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)())))
                                J$.X1(15537, J$.M(15529, J$.G(15481, J$.G(15473, J$.R(15465, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(15521, J$.R(15489, 'f', f, 1), 0)(J$.T(15497, 'destroy called on server %s', 21, false), J$.G(15513, J$.R(15505, 'self', self, 0), 'name', 0))));
                            if (J$.X1(28665, J$.C(672, J$.C(664, J$.R(15545, 'emitClose', emitClose, 0)) ? J$.B(594, '>', J$.G(15577, J$.M(15569, J$.R(15553, 'self', self, 0), 'listeners', 0)(J$.T(15561, 'close', 21, false)), 'length', 0), J$.T(15585, 0, 22, false), 0) : J$._())))
                                J$.X1(15625, J$.M(15617, J$.R(15593, 'self', self, 0), 'emit', 0)(J$.T(15601, 'close', 21, false), J$.R(15609, 'self', self, 0)));
                            if (J$.X1(28673, J$.C(680, J$.R(15633, 'emitDestroy', emitDestroy, 0))))
                                J$.X1(15673, J$.M(15665, J$.R(15641, 'self', self, 0), 'emit', 0)(J$.T(15649, 'destroy', 21, false), J$.R(15657, 'self', self, 0)));
                            J$.X1(15713, J$.P(15705, J$.G(15689, J$.R(15681, 'self', self, 0), 's', 0), 'state', J$.R(15697, 'DESTROYED', DESTROYED, 1), 0));
                            J$.X1(15753, J$.M(15745, J$.G(15737, J$.G(15729, J$.R(15721, 'self', self, 0), 's', 0), 'pool', 0), 'destroy', 0)());
                            if (J$.X1(28681, J$.C(688, J$.G(15777, J$.G(15769, J$.R(15761, 'self', self, 0), 's', 0), 'callbacks', 0))))
                                J$.X1(15873, J$.M(15865, J$.G(15801, J$.G(15793, J$.R(15785, 'self', self, 0), 's', 0), 'callbacks', 0), 'flush', 0)(J$.F(15857, J$.R(15809, 'MongoError', MongoError, 1), 1)(J$.F(15849, J$.R(15817, 'f', f, 1), 0)(J$.T(15825, 'server %s sockets closed', 21, false), J$.G(15841, J$.R(15833, 'self', self, 0), 'name', 0)))));
                        } catch (J$e) {
                            J$.Ex(28689, J$e);
                        } finally {
                            if (J$.Fr(28697))
                                continue jalangiLabel2689;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15881), 0));
            J$.X1(16121, J$.P(16113, J$.G(15953, J$.R(15945, 'Server', Server, 1), 'prototype', 0), 'isConnected', J$.T(16105, function () {
                jalangiLabel2690:
                    while (true) {
                        try {
                            J$.Fe(16081, arguments.callee, this, arguments);
                            arguments = J$.N(16089, 'arguments', arguments, 4);
                            J$.N(16097, 'self', self, 0);
                            var self = J$.X1(15977, J$.W(15969, 'self', J$.R(15961, 'this', this, 0), self, 1));
                            if (J$.X1(28705, J$.C(696, J$.G(16001, J$.G(15993, J$.R(15985, 'self', self, 0), 's', 0), 'pool', 0))))
                                return J$.X1(16049, J$.Rt(16041, J$.M(16033, J$.G(16025, J$.G(16017, J$.R(16009, 'self', self, 0), 's', 0), 'pool', 0), 'isConnected', 0)()));
                            return J$.X1(16073, J$.Rt(16065, J$.T(16057, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(28713, J$e);
                        } finally {
                            if (J$.Fr(28721))
                                continue jalangiLabel2690;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16081), 0));
            J$.X1(16225, J$.P(16217, J$.G(16137, J$.R(16129, 'Server', Server, 1), 'prototype', 0), 'isDestroyed', J$.T(16209, function () {
                jalangiLabel2691:
                    while (true) {
                        try {
                            J$.Fe(16193, arguments.callee, this, arguments);
                            arguments = J$.N(16201, 'arguments', arguments, 4);
                            return J$.X1(16185, J$.Rt(16177, J$.B(602, '==', J$.G(16161, J$.G(16153, J$.R(16145, 'this', this, 0), 's', 0), 'state', 0), J$.R(16169, 'DESTROYED', DESTROYED, 1), 0)));
                        } catch (J$e) {
                            J$.Ex(28729, J$e);
                        } finally {
                            if (J$.Fr(28737))
                                continue jalangiLabel2691;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16193), 0));
            var executeSingleOperation = J$.X1(18721, J$.W(18713, 'executeSingleOperation', J$.T(18705, function (self, ns, cmd, queryOptions, options, onAll, callback) {
                jalangiLabel2696:
                    while (true) {
                        try {
                            J$.Fe(18577, arguments.callee, this, arguments);
                            arguments = J$.N(18585, 'arguments', arguments, 4);
                            self = J$.N(18593, 'self', self, 4);
                            ns = J$.N(18601, 'ns', ns, 4);
                            cmd = J$.N(18609, 'cmd', cmd, 4);
                            queryOptions = J$.N(18617, 'queryOptions', queryOptions, 4);
                            options = J$.N(18625, 'options', options, 4);
                            onAll = J$.N(18633, 'onAll', onAll, 4);
                            callback = J$.N(18641, 'callback', callback, 4);
                            J$.N(18649, 'query', query, 0);
                            J$.N(18657, 'connection', connection, 0);
                            J$.N(18665, 'json', json, 0);
                            J$.N(18673, 'connections', connections, 0);
                            J$.N(18681, 'total', total, 0);
                            J$.N(18689, 'error', error, 0);
                            J$.N(18697, 'i', i, 0);
                            var query = J$.X1(16305, J$.W(16297, 'query', J$.F(16289, J$.R(16233, 'Query', Query, 1), 1)(J$.G(16257, J$.G(16249, J$.R(16241, 'self', self, 0), 's', 0), 'bson', 0), J$.R(16265, 'ns', ns, 0), J$.R(16273, 'cmd', cmd, 0), J$.R(16281, 'queryOptions', queryOptions, 0)), query, 1));
                            J$.X1(16361, J$.P(16353, J$.R(16313, 'query', query, 0), 'slaveOk', J$.F(16345, J$.R(16321, 'slaveOk', slaveOk, 1), 0)(J$.G(16337, J$.R(16329, 'options', options, 0), 'readPreference', 0)), 0));
                            if (J$.X1(28745, J$.C(704, J$.B(610, '!=', J$.G(16385, J$.G(16377, J$.R(16369, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(16393, null, 25, false), 0))))
                                J$.X1(16489, J$.F(16481, J$.R(16401, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(16409, 'self', self, 0), J$.G(16425, J$.R(16417, 'self', self, 0), 's', 0), J$.T(16433, 'startOperation', 21, false), J$.T(16473, [
                                J$.R(16441, 'self', self, 0),
                                J$.R(16449, 'query', query, 0),
                                J$.F(16465, J$.R(16457, 'Date', Date, 2), 1)()
                            ], 10, false)));
                            var connection = J$.X1(16553, J$.W(16545, 'connection', J$.C(712, J$.G(16505, J$.R(16497, 'options', options, 0), 'connection', 0)) ? J$._() : J$.M(16537, J$.G(16529, J$.G(16521, J$.R(16513, 'self', self, 0), 's', 0), 'pool', 0), 'get', 0)(), connection, 1));
                            if (J$.X1(28753, J$.C(728, J$.U(618, '!', J$.C(720, J$.R(16561, 'connection', connection, 0)) ? J$.M(16577, J$.R(16569, 'connection', connection, 0), 'isConnected', 0)() : J$._())))) {
                                return J$.X1(16665, J$.Rt(16657, J$.F(16649, J$.R(16585, 'callback', callback, 0), 0)(J$.F(16641, J$.R(16593, 'MongoError', MongoError, 1), 1)(J$.F(16633, J$.R(16601, 'f', f, 1), 0)(J$.T(16609, 'no connection available to server %s', 21, false), J$.G(16625, J$.R(16617, 'self', self, 0), 'name', 0))))));
                            }
                            if (J$.X1(28761, J$.C(736, J$.M(16697, J$.G(16689, J$.G(16681, J$.R(16673, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)()))) {
                                var json = J$.X1(16729, J$.W(16721, 'json', J$.M(16713, J$.R(16705, 'connection', connection, 0), 'toJSON', 0)(), json, 1));
                                J$.X1(16865, J$.M(16857, J$.G(16753, J$.G(16745, J$.R(16737, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(16849, J$.R(16761, 'f', f, 1), 0)(J$.T(16769, 'cmd [%s] about to be executed on connection with id %s at %s:%s', 21, false), J$.M(16793, J$.R(16777, 'JSON', JSON, 2), 'stringify', 0)(J$.R(16785, 'cmd', cmd, 0)), J$.G(16809, J$.R(16801, 'json', json, 0), 'id', 0), J$.G(16825, J$.R(16817, 'json', json, 0), 'host', 0), J$.G(16841, J$.R(16833, 'json', json, 0), 'port', 0))));
                            }
                            if (J$.X1(28849, J$.C(784, J$.R(16873, 'onAll', onAll, 0)))) {
                                var connections = J$.X1(16921, J$.W(16913, 'connections', J$.M(16905, J$.G(16897, J$.G(16889, J$.R(16881, 'self', self, 0), 's', 0), 'pool', 0), 'getAll', 0)(), connections, 1));
                                var total = J$.X1(16953, J$.W(16945, 'total', J$.G(16937, J$.R(16929, 'connections', connections, 0), 'length', 0), total, 1));
                                var error = J$.X1(16977, J$.W(16969, 'error', J$.T(16961, null, 25, false), error, 1));
                                for (var i = J$.X1(17001, J$.W(16993, 'i', J$.T(16985, 0, 22, false), i, 1)); J$.X1(28833, J$.C(776, J$.B(626, '<', J$.R(17009, 'i', i, 0), J$.G(17025, J$.R(17017, 'connections', connections, 0), 'length', 0), 0))); J$.X1(28841, J$.B(650, '-', i = J$.W(17049, 'i', J$.B(642, '+', J$.U(634, '+', J$.R(17041, 'i', i, 0)), J$.T(17033, 1, 22, false), 0), i, 0), J$.T(17057, 1, 22, false), 0))) {
                                    try {
                                        J$.X1(17081, J$.M(17073, J$.R(17065, 'query', query, 0), 'incRequestId', 0)());
                                        J$.X1(17137, J$.M(17129, J$.G(17105, J$.R(17089, 'connections', connections, 0), J$.R(17097, 'i', i, 0), 4), 'write', 0)(J$.M(17121, J$.R(17113, 'query', query, 0), 'toBin', 0)()));
                                    } catch (err) {
                                        err = J$.N(17249, 'err', err, 1);
                                        J$.X1(17169, total = J$.W(17161, 'total', J$.B(658, '-', J$.R(17145, 'total', total, 0), J$.T(17153, 1, 22, false), 0), total, 0));
                                        if (J$.X1(28769, J$.C(744, J$.B(666, '==', J$.R(17177, 'total', total, 0), J$.T(17185, 0, 22, false), 0))))
                                            return J$.X1(17241, J$.Rt(17233, J$.F(17225, J$.R(17193, 'callback', callback, 0), 0)(J$.M(17217, J$.R(17201, 'MongoError', MongoError, 1), 'create', 0)(J$.R(17209, 'err', err, 0)))));
                                    }
                                    J$.X1(17761, J$.M(17753, J$.G(17273, J$.G(17265, J$.R(17257, 'self', self, 0), 's', 0), 'callbacks', 0), 'register', 0)(J$.G(17289, J$.R(17281, 'query', query, 0), 'requestId', 0), J$.T(17745, function (err, result) {
                                        jalangiLabel2693:
                                            while (true) {
                                                try {
                                                    J$.Fe(17713, arguments.callee, this, arguments);
                                                    arguments = J$.N(17721, 'arguments', arguments, 4);
                                                    err = J$.N(17729, 'err', err, 4);
                                                    result = J$.N(17737, 'result', result, 4);
                                                    if (J$.X1(28777, J$.C(752, J$.R(17297, 'err', err, 0))))
                                                        J$.X1(17321, error = J$.W(17313, 'error', J$.R(17305, 'err', err, 0), error, 0));
                                                    J$.X1(17353, total = J$.W(17345, 'total', J$.B(674, '-', J$.R(17329, 'total', total, 0), J$.T(17337, 1, 22, false), 0), total, 0));
                                                    if (J$.X1(28809, J$.C(768, J$.B(682, '==', J$.R(17361, 'total', total, 0), J$.T(17369, 0, 22, false), 0)))) {
                                                        J$.X1(17473, J$.F(17465, J$.R(17377, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(17385, 'self', self, 0), J$.G(17401, J$.R(17393, 'self', self, 0), 's', 0), J$.T(17409, 'endOperation', 21, false), J$.T(17457, [
                                                            J$.R(17417, 'self', self, 0),
                                                            J$.R(17425, 'error', error, 0),
                                                            J$.R(17433, 'result', result, 0),
                                                            J$.F(17449, J$.R(17441, 'Date', Date, 2), 1)()
                                                        ], 10, false)));
                                                        if (J$.X1(28785, J$.C(760, J$.R(17481, 'error', error, 0))))
                                                            return J$.X1(17537, J$.Rt(17529, J$.F(17521, J$.R(17489, 'callback', callback, 0), 0)(J$.M(17513, J$.R(17497, 'MongoError', MongoError, 1), 'create', 0)(J$.R(17505, 'error', error, 0)))));
                                                        try {
                                                            J$.X1(17625, J$.F(17617, J$.R(17545, 'callback', callback, 0), 0)(J$.T(17553, null, 25, false), J$.F(17609, J$.R(17561, 'CommandResult', CommandResult, 1), 1)(J$.G(17593, J$.G(17577, J$.R(17569, 'result', result, 0), 'documents', 0), J$.T(17585, 0, 22, false), 4), J$.R(17601, 'connections', connections, 0))));
                                                        } catch (err) {
                                                            err = J$.N(17705, 'err', err, 1);
                                                            J$.X1(17697, J$.M(17689, J$.R(17633, 'process', process, 2), 'nextTick', 0)(J$.T(17681, function () {
                                                                jalangiLabel2692:
                                                                    while (true) {
                                                                        try {
                                                                            J$.Fe(17665, arguments.callee, this, arguments);
                                                                            arguments = J$.N(17673, 'arguments', arguments, 4);
                                                                            throw J$.X1(17657, J$.Th(17649, J$.R(17641, 'err', err, 0)));
                                                                        } catch (J$e) {
                                                                            J$.Ex(28793, J$e);
                                                                        } finally {
                                                                            if (J$.Fr(28801))
                                                                                continue jalangiLabel2692;
                                                                            else
                                                                                return J$.Ra();
                                                                        }
                                                                    }
                                                            }, 12, false, 17665)));
                                                        }
                                                    }
                                                } catch (J$e) {
                                                    J$.Ex(28817, J$e);
                                                } finally {
                                                    if (J$.Fr(28825))
                                                        continue jalangiLabel2693;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 17713)));
                                }
                                return J$.X1(17777, J$.Rt(17769, undefined));
                            }
                            try {
                                J$.X1(17817, J$.M(17809, J$.R(17785, 'connection', connection, 0), 'write', 0)(J$.M(17801, J$.R(17793, 'query', query, 0), 'toBin', 0)()));
                            } catch (err) {
                                err = J$.N(17881, 'err', err, 1);
                                return J$.X1(17873, J$.Rt(17865, J$.F(17857, J$.R(17825, 'callback', callback, 0), 0)(J$.M(17849, J$.R(17833, 'MongoError', MongoError, 1), 'create', 0)(J$.R(17841, 'err', err, 0)))));
                            }
                            J$.X1(18569, J$.M(18561, J$.G(17905, J$.G(17897, J$.R(17889, 'self', self, 0), 's', 0), 'callbacks', 0), 'register', 0)(J$.G(17921, J$.R(17913, 'query', query, 0), 'requestId', 0), J$.T(18553, function (err, result) {
                                jalangiLabel2695:
                                    while (true) {
                                        try {
                                            J$.Fe(18521, arguments.callee, this, arguments);
                                            arguments = J$.N(18529, 'arguments', arguments, 4);
                                            err = J$.N(18537, 'err', err, 4);
                                            result = J$.N(18545, 'result', result, 4);
                                            J$.X1(18025, J$.F(18017, J$.R(17929, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(17937, 'self', self, 0), J$.G(17953, J$.R(17945, 'self', self, 0), 's', 0), J$.T(17961, 'endOperation', 21, false), J$.T(18009, [
                                                J$.R(17969, 'self', self, 0),
                                                J$.R(17977, 'err', err, 0),
                                                J$.R(17985, 'result', result, 0),
                                                J$.F(18001, J$.R(17993, 'Date', Date, 2), 1)()
                                            ], 10, false)));
                                            if (J$.X1(28857, J$.C(792, J$.R(18033, 'err', err, 0))))
                                                return J$.X1(18073, J$.Rt(18065, J$.F(18057, J$.R(18041, 'callback', callback, 0), 0)(J$.R(18049, 'err', err, 0))));
                                            if (J$.X1(28865, J$.C(824, J$.C(816, J$.C(808, J$.C(800, J$.G(18121, J$.G(18105, J$.G(18089, J$.R(18081, 'result', result, 0), 'documents', 0), J$.T(18097, 0, 22, false), 4), J$.T(18113, '$err', 21, false), 4)) ? J$._() : J$.G(18169, J$.G(18153, J$.G(18137, J$.R(18129, 'result', result, 0), 'documents', 0), J$.T(18145, 0, 22, false), 4), J$.T(18161, 'errmsg', 21, false), 4)) ? J$._() : J$.G(18217, J$.G(18201, J$.G(18185, J$.R(18177, 'result', result, 0), 'documents', 0), J$.T(18193, 0, 22, false), 4), J$.T(18209, 'err', 21, false), 4)) ? J$._() : J$.G(18265, J$.G(18249, J$.G(18233, J$.R(18225, 'result', result, 0), 'documents', 0), J$.T(18241, 0, 22, false), 4), J$.T(18257, 'code', 21, false), 4))))
                                                return J$.X1(18345, J$.Rt(18337, J$.F(18329, J$.R(18273, 'callback', callback, 0), 0)(J$.M(18321, J$.R(18281, 'MongoError', MongoError, 1), 'create', 0)(J$.G(18313, J$.G(18297, J$.R(18289, 'result', result, 0), 'documents', 0), J$.T(18305, 0, 22, false), 4)))));
                                            try {
                                                J$.X1(18433, J$.F(18425, J$.R(18353, 'callback', callback, 0), 0)(J$.T(18361, null, 25, false), J$.F(18417, J$.R(18369, 'CommandResult', CommandResult, 1), 1)(J$.G(18401, J$.G(18385, J$.R(18377, 'result', result, 0), 'documents', 0), J$.T(18393, 0, 22, false), 4), J$.R(18409, 'connection', connection, 0))));
                                            } catch (err) {
                                                err = J$.N(18513, 'err', err, 1);
                                                J$.X1(18505, J$.M(18497, J$.R(18441, 'process', process, 2), 'nextTick', 0)(J$.T(18489, function () {
                                                    jalangiLabel2694:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(18473, arguments.callee, this, arguments);
                                                                arguments = J$.N(18481, 'arguments', arguments, 4);
                                                                throw J$.X1(18465, J$.Th(18457, J$.R(18449, 'err', err, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(28873, J$e);
                                                            } finally {
                                                                if (J$.Fr(28881))
                                                                    continue jalangiLabel2694;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 18473)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(28889, J$e);
                                        } finally {
                                            if (J$.Fr(28897))
                                                continue jalangiLabel2695;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 18521)));
                        } catch (J$e) {
                            J$.Ex(28905, J$e);
                        } finally {
                            if (J$.Fr(28913))
                                continue jalangiLabel2696;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18577), executeSingleOperation, 3));
            J$.X1(22353, J$.P(22345, J$.G(18737, J$.R(18729, 'Server', Server, 1), 'prototype', 0), 'command', J$.T(22337, function (ns, cmd, options, callback) {
                jalangiLabel2699:
                    while (true) {
                        try {
                            J$.Fe(22177, arguments.callee, this, arguments);
                            arguments = J$.N(22185, 'arguments', arguments, 4);
                            ns = J$.N(22193, 'ns', ns, 4);
                            cmd = J$.N(22201, 'cmd', cmd, 4);
                            options = J$.N(22209, 'options', options, 4);
                            callback = J$.N(22217, 'callback', callback, 4);
                            J$.N(22225, 'self', self, 0);
                            J$.N(22233, 'onAll', onAll, 0);
                            J$.N(22241, 'checkKeys', checkKeys, 0);
                            J$.N(22249, 'serializeFunctions', serializeFunctions, 0);
                            J$.N(22257, 'ignoreUndefined', ignoreUndefined, 0);
                            J$.N(22265, 'queryOptions', queryOptions, 0);
                            J$.N(22273, 'queries', queries, 0);
                            J$.N(22281, 'i', i, 0);
                            J$.N(22289, 'connection', connection, 0);
                            J$.N(22297, 'json', json, 0);
                            J$.N(22305, 'canceled', canceled, 0);
                            J$.N(22313, 'operationsLeft', operationsLeft, 0);
                            J$.N(22321, 'results', results, 0);
                            J$.N(22329, 'query', query, 0);
                            if (J$.X1(28921, J$.C(832, J$.B(698, '==', J$.U(690, 'typeof', J$.R(18745, 'options', options, 0)), J$.T(18753, 'function', 21, false), 0))))
                                J$.X1(18801, (J$.X1(18793, callback = J$.W(18769, 'callback', J$.R(18761, 'options', options, 0), callback, 0)), options = J$.W(18785, 'options', J$.T(18777, {}, 11, false), options, 0)));
                            var self = J$.X1(18825, J$.W(18817, 'self', J$.R(18809, 'this', this, 0), self, 1));
                            if (J$.X1(28929, J$.C(840, J$.B(706, '==', J$.G(18849, J$.G(18841, J$.R(18833, 'this', this, 0), 's', 0), 'state', 0), J$.R(18857, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(18929, J$.Rt(18921, J$.F(18913, J$.R(18865, 'callback', callback, 0), 0)(J$.F(18905, J$.R(18873, 'MongoError', MongoError, 1), 1)(J$.F(18897, J$.R(18881, 'f', f, 1), 0)(J$.T(18889, 'topology was destroyed', 21, false))))));
                            J$.X1(18961, options = J$.W(18953, 'options', J$.C(848, J$.R(18937, 'options', options, 0)) ? J$._() : J$.T(18945, {}, 11, false), options, 0));
                            if (J$.X1(28937, J$.C(864, J$.C(856, J$.G(18977, J$.R(18969, 'options', options, 0), 'readPreference', 0)) ? J$.U(722, '!', J$.B(714, 'instanceof', J$.G(18993, J$.R(18985, 'options', options, 0), 'readPreference', 0), J$.R(19001, 'ReadPreference', ReadPreference, 1), 0)) : J$._()))) {
                                throw J$.X1(19041, J$.Th(19033, J$.F(19025, J$.R(19009, 'Error', Error, 2), 1)(J$.T(19017, 'readPreference must be an instance of ReadPreference', 21, false))));
                            }
                            if (J$.X1(28945, J$.C(872, J$.M(19073, J$.G(19065, J$.G(19057, J$.R(19049, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)())))
                                J$.X1(19225, J$.M(19217, J$.G(19097, J$.G(19089, J$.R(19081, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(19209, J$.R(19105, 'f', f, 1), 0)(J$.T(19113, 'executing command [%s] against %s', 21, false), J$.M(19185, J$.R(19121, 'JSON', JSON, 2), 'stringify', 0)(J$.T(19177, {
                                ns: J$.R(19129, 'ns', ns, 0),
                                cmd: J$.R(19137, 'cmd', cmd, 0),
                                options: J$.F(19169, J$.R(19145, 'debugOptions', debugOptions, 1), 0)(J$.R(19153, 'debugFields', debugFields, 1), J$.R(19161, 'options', options, 0))
                            }, 11, false)), J$.G(19201, J$.R(19193, 'self', self, 0), 'name', 0))));
                            if (J$.X1(28953, J$.C(888, J$.C(880, J$.U(730, '!', J$.M(19241, J$.R(19233, 'self', self, 0), 'isConnected', 0)())) ? J$.B(738, '!=', J$.G(19265, J$.G(19257, J$.R(19249, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(19273, null, 25, false), 0) : J$._()))) {
                                J$.X1(19313, callback = J$.W(19305, 'callback', J$.F(19297, J$.R(19281, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(19289, 'callback', callback, 0)), callback, 0));
                                return J$.X1(19401, J$.Rt(19393, J$.M(19385, J$.G(19337, J$.G(19329, J$.R(19321, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(19345, 'command', 21, false), J$.R(19353, 'ns', ns, 0), J$.R(19361, 'cmd', cmd, 0), J$.R(19369, 'options', options, 0), J$.R(19377, 'callback', callback, 0))));
                            }
                            if (J$.X1(28961, J$.C(896, J$.U(746, '!', J$.M(19433, J$.G(19425, J$.G(19417, J$.R(19409, 'self', self, 0), 's', 0), 'pool', 0), 'isConnected', 0)()))))
                                return J$.X1(19521, J$.Rt(19513, J$.F(19505, J$.R(19441, 'callback', callback, 0), 0)(J$.F(19497, J$.R(19449, 'MongoError', MongoError, 1), 1)(J$.F(19489, J$.R(19457, 'f', f, 1), 0)(J$.T(19465, 'no connection available to server %s', 21, false), J$.G(19481, J$.R(19473, 'self', self, 0), 'name', 0))))));
                            var onAll = J$.X1(19585, J$.W(19577, 'onAll', J$.X1(28969, J$.C(904, J$.B(762, '==', J$.U(754, 'typeof', J$.G(19537, J$.R(19529, 'options', options, 0), 'onAll', 0)), J$.T(19545, 'boolean', 21, false), 0))) ? J$.G(19561, J$.R(19553, 'options', options, 0), 'onAll', 0) : J$.T(19569, false, 23, false), onAll, 1));
                            var checkKeys = J$.X1(19649, J$.W(19641, 'checkKeys', J$.X1(28977, J$.C(912, J$.B(778, '==', J$.U(770, 'typeof', J$.G(19601, J$.R(19593, 'options', options, 0), 'checkKeys', 0)), J$.T(19609, 'boolean', 21, false), 0))) ? J$.G(19625, J$.R(19617, 'options', options, 0), 'checkKeys', 0) : J$.T(19633, false, 23, false), checkKeys, 1));
                            var serializeFunctions = J$.X1(19713, J$.W(19705, 'serializeFunctions', J$.X1(28985, J$.C(920, J$.B(794, '==', J$.U(786, 'typeof', J$.G(19665, J$.R(19657, 'options', options, 0), 'serializeFunctions', 0)), J$.T(19673, 'boolean', 21, false), 0))) ? J$.G(19689, J$.R(19681, 'options', options, 0), 'serializeFunctions', 0) : J$.T(19697, false, 23, false), serializeFunctions, 1));
                            var ignoreUndefined = J$.X1(19777, J$.W(19769, 'ignoreUndefined', J$.X1(28993, J$.C(928, J$.B(810, '==', J$.U(802, 'typeof', J$.G(19729, J$.R(19721, 'options', options, 0), 'ignoreUndefined', 0)), J$.T(19737, 'boolean', 21, false), 0))) ? J$.G(19753, J$.R(19745, 'options', options, 0), 'ignoreUndefined', 0) : J$.T(19761, false, 23, false), ignoreUndefined, 1));
                            var queryOptions = J$.X1(19825, J$.W(19817, 'queryOptions', J$.T(19809, {
                                numberToSkip: J$.T(19785, 0, 22, false),
                                numberToReturn: J$.U(818, '-', J$.T(19793, 1, 22, false)),
                                checkKeys: J$.R(19801, 'checkKeys', checkKeys, 0)
                            }, 11, false), queryOptions, 1));
                            if (J$.X1(29001, J$.C(936, J$.R(19833, 'serializeFunctions', serializeFunctions, 0))))
                                J$.X1(19865, J$.P(19857, J$.R(19841, 'queryOptions', queryOptions, 0), 'serializeFunctions', J$.R(19849, 'serializeFunctions', serializeFunctions, 0), 0));
                            if (J$.X1(29009, J$.C(944, J$.R(19873, 'ignoreUndefined', ignoreUndefined, 0))))
                                J$.X1(19905, J$.P(19897, J$.R(19881, 'queryOptions', queryOptions, 0), 'ignoreUndefined', J$.R(19889, 'ignoreUndefined', ignoreUndefined, 0), 0));
                            if (J$.X1(29017, J$.C(952, J$.U(826, '!', J$.M(19929, J$.R(19913, 'Array', Array, 2), 'isArray', 0)(J$.R(19921, 'cmd', cmd, 0)))))) {
                                return J$.X1(20017, J$.Rt(20009, J$.F(20001, J$.R(19937, 'executeSingleOperation', executeSingleOperation, 1), 0)(J$.R(19945, 'self', self, 0), J$.R(19953, 'ns', ns, 0), J$.R(19961, 'cmd', cmd, 0), J$.R(19969, 'queryOptions', queryOptions, 0), J$.R(19977, 'options', options, 0), J$.R(19985, 'onAll', onAll, 0), J$.R(19993, 'callback', callback, 0))));
                            }
                            var queries = J$.X1(20065, J$.W(20057, 'queries', J$.F(20049, J$.R(20025, 'Array', Array, 2), 1)(J$.G(20041, J$.R(20033, 'cmd', cmd, 0), 'length', 0)), queries, 1));
                            for (var i = J$.X1(20089, J$.W(20081, 'i', J$.T(20073, 0, 22, false), i, 1)); J$.X1(29025, J$.C(960, J$.B(834, '<', J$.R(20097, 'i', i, 0), J$.G(20113, J$.R(20105, 'cmd', cmd, 0), 'length', 0), 0))); J$.X1(29033, J$.B(858, '-', i = J$.W(20137, 'i', J$.B(850, '+', J$.U(842, '+', J$.R(20129, 'i', i, 0)), J$.T(20121, 1, 22, false), 0), i, 0), J$.T(20145, 1, 22, false), 0))) {
                                J$.X1(20257, J$.P(20249, J$.R(20153, 'queries', queries, 0), J$.R(20161, 'i', i, 0), J$.F(20241, J$.R(20169, 'Query', Query, 1), 1)(J$.G(20193, J$.G(20185, J$.R(20177, 'self', self, 0), 's', 0), 'bson', 0), J$.R(20201, 'ns', ns, 0), J$.G(20225, J$.R(20209, 'cmd', cmd, 0), J$.R(20217, 'i', i, 0), 4), J$.R(20233, 'queryOptions', queryOptions, 0)), 2));
                                J$.X1(20329, J$.P(20321, J$.G(20281, J$.R(20265, 'queries', queries, 0), J$.R(20273, 'i', i, 0), 4), 'slaveOk', J$.F(20313, J$.R(20289, 'slaveOk', slaveOk, 1), 0)(J$.G(20305, J$.R(20297, 'options', options, 0), 'readPreference', 0)), 0));
                            }
                            if (J$.X1(29041, J$.C(968, J$.B(866, '!=', J$.G(20353, J$.G(20345, J$.R(20337, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(20361, null, 25, false), 0))))
                                J$.X1(20457, J$.F(20449, J$.R(20369, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(20377, 'self', self, 0), J$.G(20393, J$.R(20385, 'self', self, 0), 's', 0), J$.T(20401, 'startOperation', 21, false), J$.T(20441, [
                                J$.R(20409, 'self', self, 0),
                                J$.R(20417, 'queries', queries, 0),
                                J$.F(20433, J$.R(20425, 'Date', Date, 2), 1)()
                            ], 10, false)));
                            var connection = J$.X1(20521, J$.W(20513, 'connection', J$.C(976, J$.G(20473, J$.R(20465, 'options', options, 0), 'connection', 0)) ? J$._() : J$.M(20505, J$.G(20497, J$.G(20489, J$.R(20481, 'self', self, 0), 's', 0), 'pool', 0), 'get', 0)(), connection, 1));
                            if (J$.X1(29049, J$.C(984, J$.U(874, '!', J$.M(20537, J$.R(20529, 'connection', connection, 0), 'isConnected', 0)())))) {
                                return J$.X1(20625, J$.Rt(20617, J$.F(20609, J$.R(20545, 'callback', callback, 0), 0)(J$.F(20601, J$.R(20553, 'MongoError', MongoError, 1), 1)(J$.F(20593, J$.R(20561, 'f', f, 1), 0)(J$.T(20569, 'no connection available to server %s', 21, false), J$.G(20585, J$.R(20577, 'self', self, 0), 'name', 0))))));
                            }
                            if (J$.X1(29057, J$.C(992, J$.M(20657, J$.G(20649, J$.G(20641, J$.R(20633, 'self', self, 0), 's', 0), 'logger', 0), 'isDebug', 0)()))) {
                                var json = J$.X1(20689, J$.W(20681, 'json', J$.M(20673, J$.R(20665, 'connection', connection, 0), 'toJSON', 0)(), json, 1));
                                J$.X1(20825, J$.M(20817, J$.G(20713, J$.G(20705, J$.R(20697, 'self', self, 0), 's', 0), 'logger', 0), 'debug', 0)(J$.F(20809, J$.R(20721, 'f', f, 1), 0)(J$.T(20729, 'cmd [%s] about to be executed on connection with id %s at %s:%s', 21, false), J$.M(20753, J$.R(20737, 'JSON', JSON, 2), 'stringify', 0)(J$.R(20745, 'queries', queries, 0)), J$.G(20769, J$.R(20761, 'json', json, 0), 'id', 0), J$.G(20785, J$.R(20777, 'json', json, 0), 'host', 0), J$.G(20801, J$.R(20793, 'json', json, 0), 'port', 0))));
                            }
                            var canceled = J$.X1(20849, J$.W(20841, 'canceled', J$.T(20833, false, 23, false), canceled, 1));
                            var operationsLeft = J$.X1(20881, J$.W(20873, 'operationsLeft', J$.G(20865, J$.R(20857, 'queries', queries, 0), 'length', 0), operationsLeft, 1));
                            var results = J$.X1(20905, J$.W(20897, 'results', J$.T(20889, [], 10, false), results, 1));
                            for (var i = J$.X1(20929, J$.W(20921, 'i', J$.T(20913, 0, 22, false), i, 1)); J$.X1(29145, J$.C(1064, J$.B(882, '<', J$.R(20937, 'i', i, 0), J$.G(20953, J$.R(20945, 'queries', queries, 0), 'length', 0), 0))); J$.X1(29153, J$.B(906, '-', i = J$.W(20977, 'i', J$.B(898, '+', J$.U(890, '+', J$.R(20969, 'i', i, 0)), J$.T(20961, 1, 22, false), 0), i, 0), J$.T(20985, 1, 22, false), 0))) {
                                var query = J$.X1(21025, J$.W(21017, 'query', J$.G(21009, J$.R(20993, 'queries', queries, 0), J$.R(21001, 'i', i, 0), 4), query, 1));
                                try {
                                    J$.X1(21065, J$.M(21057, J$.R(21033, 'connection', connection, 0), 'write', 0)(J$.M(21049, J$.R(21041, 'query', query, 0), 'toBin', 0)()));
                                } catch (err) {
                                    err = J$.N(21129, 'err', err, 1);
                                    return J$.X1(21121, J$.Rt(21113, J$.F(21105, J$.R(21073, 'callback', callback, 0), 0)(J$.M(21097, J$.R(21081, 'MongoError', MongoError, 1), 'create', 0)(J$.R(21089, 'err', err, 0)))));
                                }
                                J$.X1(22169, J$.M(22161, J$.G(21153, J$.G(21145, J$.R(21137, 'self', self, 0), 's', 0), 'callbacks', 0), 'register', 0)(J$.G(21169, J$.R(21161, 'query', query, 0), 'requestId', 0), J$.T(22153, function (err, result) {
                                    jalangiLabel2698:
                                        while (true) {
                                            try {
                                                J$.Fe(22105, arguments.callee, this, arguments);
                                                arguments = J$.N(22113, 'arguments', arguments, 4);
                                                err = J$.N(22121, 'err', err, 4);
                                                result = J$.N(22129, 'result', result, 4);
                                                J$.N(22137, 'commandResults', commandResults, 0);
                                                J$.N(22145, 'i', i, 0);
                                                if (J$.X1(29065, J$.C(1000, J$.R(21177, 'canceled', canceled, 0))))
                                                    return J$.X1(21193, J$.Rt(21185, undefined));
                                                J$.X1(21225, operationsLeft = J$.W(21217, 'operationsLeft', J$.B(914, '-', J$.R(21201, 'operationsLeft', operationsLeft, 0), J$.T(21209, 1, 22, false), 0), operationsLeft, 0));
                                                if (J$.X1(29073, J$.C(1008, J$.R(21233, 'err', err, 0)))) {
                                                    J$.X1(21257, canceled = J$.W(21249, 'canceled', J$.T(21241, true, 23, false), canceled, 0));
                                                    return J$.X1(21297, J$.Rt(21289, J$.F(21281, J$.R(21265, 'callback', callback, 0), 0)(J$.R(21273, 'err', err, 0))));
                                                }
                                                if (J$.X1(29081, J$.C(1040, J$.C(1032, J$.C(1024, J$.C(1016, J$.G(21345, J$.G(21329, J$.G(21313, J$.R(21305, 'result', result, 0), 'documents', 0), J$.T(21321, 0, 22, false), 4), J$.T(21337, '$err', 21, false), 4)) ? J$._() : J$.G(21393, J$.G(21377, J$.G(21361, J$.R(21353, 'result', result, 0), 'documents', 0), J$.T(21369, 0, 22, false), 4), J$.T(21385, 'errmsg', 21, false), 4)) ? J$._() : J$.G(21441, J$.G(21425, J$.G(21409, J$.R(21401, 'result', result, 0), 'documents', 0), J$.T(21417, 0, 22, false), 4), J$.T(21433, 'err', 21, false), 4)) ? J$._() : J$.G(21489, J$.G(21473, J$.G(21457, J$.R(21449, 'result', result, 0), 'documents', 0), J$.T(21465, 0, 22, false), 4), J$.T(21481, 'code', 21, false), 4)))) {
                                                    J$.X1(21513, canceled = J$.W(21505, 'canceled', J$.T(21497, true, 23, false), canceled, 0));
                                                    return J$.X1(21593, J$.Rt(21585, J$.F(21577, J$.R(21521, 'callback', callback, 0), 0)(J$.M(21569, J$.R(21529, 'MongoError', MongoError, 1), 'create', 0)(J$.G(21561, J$.G(21545, J$.R(21537, 'result', result, 0), 'documents', 0), J$.T(21553, 0, 22, false), 4)))));
                                                }
                                                J$.X1(21649, J$.M(21641, J$.R(21601, 'results', results, 0), 'push', 0)(J$.G(21633, J$.G(21617, J$.R(21609, 'result', result, 0), 'documents', 0), J$.T(21625, 0, 22, false), 4)));
                                                if (J$.X1(29121, J$.C(1056, J$.B(922, '==', J$.R(21657, 'operationsLeft', operationsLeft, 0), J$.T(21665, 0, 22, false), 0)))) {
                                                    J$.X1(21769, J$.F(21761, J$.R(21673, 'notifyStrategies', notifyStrategies, 1), 0)(J$.R(21681, 'self', self, 0), J$.G(21697, J$.R(21689, 'self', self, 0), 's', 0), J$.T(21705, 'endOperation', 21, false), J$.T(21753, [
                                                        J$.R(21713, 'self', self, 0),
                                                        J$.R(21721, 'err', err, 0),
                                                        J$.R(21729, 'result', result, 0),
                                                        J$.F(21745, J$.R(21737, 'Date', Date, 2), 1)()
                                                    ], 10, false)));
                                                    var commandResults = J$.X1(21817, J$.W(21809, 'commandResults', J$.F(21801, J$.R(21777, 'Array', Array, 2), 1)(J$.G(21793, J$.R(21785, 'results', results, 0), 'length', 0)), commandResults, 1));
                                                    for (var i = J$.X1(21841, J$.W(21833, 'i', J$.T(21825, 0, 22, false), i, 1)); J$.X1(29089, J$.C(1048, J$.B(930, '<', J$.R(21849, 'i', i, 0), J$.G(21865, J$.R(21857, 'results', results, 0), 'length', 0), 0))); J$.X1(29097, J$.B(954, '-', i = J$.W(21889, 'i', J$.B(946, '+', J$.U(938, '+', J$.R(21881, 'i', i, 0)), J$.T(21873, 1, 22, false), 0), i, 0), J$.T(21897, 1, 22, false), 0))) {
                                                        J$.X1(21977, J$.P(21969, J$.R(21905, 'commandResults', commandResults, 0), J$.R(21913, 'i', i, 0), J$.F(21961, J$.R(21921, 'CommandResult', CommandResult, 1), 1)(J$.G(21945, J$.R(21929, 'results', results, 0), J$.R(21937, 'i', i, 0), 4), J$.R(21953, 'connection', connection, 0)), 2));
                                                    }
                                                    try {
                                                        J$.X1(22017, J$.F(22009, J$.R(21985, 'callback', callback, 0), 0)(J$.T(21993, null, 25, false), J$.R(22001, 'commandResults', commandResults, 0)));
                                                    } catch (err) {
                                                        err = J$.N(22097, 'err', err, 1);
                                                        J$.X1(22089, J$.M(22081, J$.R(22025, 'process', process, 2), 'nextTick', 0)(J$.T(22073, function () {
                                                            jalangiLabel2697:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(22057, arguments.callee, this, arguments);
                                                                        arguments = J$.N(22065, 'arguments', arguments, 4);
                                                                        throw J$.X1(22049, J$.Th(22041, J$.R(22033, 'err', err, 0)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(29105, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(29113))
                                                                            continue jalangiLabel2697;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false, 22057)));
                                                    }
                                                }
                                            } catch (J$e) {
                                                J$.Ex(29129, J$e);
                                            } finally {
                                                if (J$.Fr(29137))
                                                    continue jalangiLabel2698;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 22105)));
                            }
                        } catch (J$e) {
                            J$.Ex(29161, J$e);
                        } finally {
                            if (J$.Fr(29169))
                                continue jalangiLabel2699;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 22177), 0));
            J$.X1(23065, J$.P(23057, J$.G(22369, J$.R(22361, 'Server', Server, 1), 'prototype', 0), 'insert', J$.T(23049, function (ns, ops, options, callback) {
                jalangiLabel2700:
                    while (true) {
                        try {
                            J$.Fe(22993, arguments.callee, this, arguments);
                            arguments = J$.N(23001, 'arguments', arguments, 4);
                            ns = J$.N(23009, 'ns', ns, 4);
                            ops = J$.N(23017, 'ops', ops, 4);
                            options = J$.N(23025, 'options', options, 4);
                            callback = J$.N(23033, 'callback', callback, 4);
                            J$.N(23041, 'self', self, 0);
                            if (J$.X1(29177, J$.C(1072, J$.B(970, '==', J$.U(962, 'typeof', J$.R(22377, 'options', options, 0)), J$.T(22385, 'function', 21, false), 0))))
                                J$.X1(22433, (J$.X1(22425, callback = J$.W(22401, 'callback', J$.R(22393, 'options', options, 0), callback, 0)), options = J$.W(22417, 'options', J$.T(22409, {}, 11, false), options, 0)));
                            var self = J$.X1(22457, J$.W(22449, 'self', J$.R(22441, 'this', this, 0), self, 1));
                            if (J$.X1(29185, J$.C(1080, J$.B(978, '==', J$.G(22481, J$.G(22473, J$.R(22465, 'this', this, 0), 's', 0), 'state', 0), J$.R(22489, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(22561, J$.Rt(22553, J$.F(22545, J$.R(22497, 'callback', callback, 0), 0)(J$.F(22537, J$.R(22505, 'MongoError', MongoError, 1), 1)(J$.F(22529, J$.R(22513, 'f', f, 1), 0)(J$.T(22521, 'topology was destroyed', 21, false))))));
                            if (J$.X1(29193, J$.C(1096, J$.C(1088, J$.U(986, '!', J$.M(22577, J$.R(22569, 'self', self, 0), 'isConnected', 0)())) ? J$.B(994, '!=', J$.G(22601, J$.G(22593, J$.R(22585, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(22609, null, 25, false), 0) : J$._()))) {
                                J$.X1(22649, callback = J$.W(22641, 'callback', J$.F(22633, J$.R(22617, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(22625, 'callback', callback, 0)), callback, 0));
                                return J$.X1(22737, J$.Rt(22729, J$.M(22721, J$.G(22673, J$.G(22665, J$.R(22657, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(22681, 'insert', 21, false), J$.R(22689, 'ns', ns, 0), J$.R(22697, 'ops', ops, 0), J$.R(22705, 'options', options, 0), J$.R(22713, 'callback', callback, 0))));
                            }
                            J$.X1(22801, ops = J$.W(22793, 'ops', J$.X1(29201, J$.C(1104, J$.M(22761, J$.R(22745, 'Array', Array, 2), 'isArray', 0)(J$.R(22753, 'ops', ops, 0)))) ? J$.R(22769, 'ops', ops, 0) : J$.T(22785, [J$.R(22777, 'ops', ops, 0)], 10, false), ops, 0));
                            return J$.X1(22985, J$.Rt(22977, J$.M(22969, J$.G(22825, J$.G(22817, J$.R(22809, 'self', self, 0), 's', 0), 'wireProtocolHandler', 0), 'insert', 0)(J$.R(22833, 'self', self, 0), J$.G(22857, J$.G(22849, J$.R(22841, 'self', self, 0), 's', 0), 'ismaster', 0), J$.R(22865, 'ns', ns, 0), J$.G(22889, J$.G(22881, J$.R(22873, 'self', self, 0), 's', 0), 'bson', 0), J$.G(22913, J$.G(22905, J$.R(22897, 'self', self, 0), 's', 0), 'pool', 0), J$.G(22937, J$.G(22929, J$.R(22921, 'self', self, 0), 's', 0), 'callbacks', 0), J$.R(22945, 'ops', ops, 0), J$.R(22953, 'options', options, 0), J$.R(22961, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(29209, J$e);
                        } finally {
                            if (J$.Fr(29217))
                                continue jalangiLabel2700;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 22993), 0));
            J$.X1(23777, J$.P(23769, J$.G(23081, J$.R(23073, 'Server', Server, 1), 'prototype', 0), 'update', J$.T(23761, function (ns, ops, options, callback) {
                jalangiLabel2701:
                    while (true) {
                        try {
                            J$.Fe(23705, arguments.callee, this, arguments);
                            arguments = J$.N(23713, 'arguments', arguments, 4);
                            ns = J$.N(23721, 'ns', ns, 4);
                            ops = J$.N(23729, 'ops', ops, 4);
                            options = J$.N(23737, 'options', options, 4);
                            callback = J$.N(23745, 'callback', callback, 4);
                            J$.N(23753, 'self', self, 0);
                            if (J$.X1(29225, J$.C(1112, J$.B(1010, '==', J$.U(1002, 'typeof', J$.R(23089, 'options', options, 0)), J$.T(23097, 'function', 21, false), 0))))
                                J$.X1(23145, (J$.X1(23137, callback = J$.W(23113, 'callback', J$.R(23105, 'options', options, 0), callback, 0)), options = J$.W(23129, 'options', J$.T(23121, {}, 11, false), options, 0)));
                            var self = J$.X1(23169, J$.W(23161, 'self', J$.R(23153, 'this', this, 0), self, 1));
                            if (J$.X1(29233, J$.C(1120, J$.B(1018, '==', J$.G(23193, J$.G(23185, J$.R(23177, 'this', this, 0), 's', 0), 'state', 0), J$.R(23201, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(23273, J$.Rt(23265, J$.F(23257, J$.R(23209, 'callback', callback, 0), 0)(J$.F(23249, J$.R(23217, 'MongoError', MongoError, 1), 1)(J$.F(23241, J$.R(23225, 'f', f, 1), 0)(J$.T(23233, 'topology was destroyed', 21, false))))));
                            if (J$.X1(29241, J$.C(1136, J$.C(1128, J$.U(1026, '!', J$.M(23289, J$.R(23281, 'self', self, 0), 'isConnected', 0)())) ? J$.B(1034, '!=', J$.G(23313, J$.G(23305, J$.R(23297, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(23321, null, 25, false), 0) : J$._()))) {
                                J$.X1(23361, callback = J$.W(23353, 'callback', J$.F(23345, J$.R(23329, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(23337, 'callback', callback, 0)), callback, 0));
                                return J$.X1(23449, J$.Rt(23441, J$.M(23433, J$.G(23385, J$.G(23377, J$.R(23369, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(23393, 'update', 21, false), J$.R(23401, 'ns', ns, 0), J$.R(23409, 'ops', ops, 0), J$.R(23417, 'options', options, 0), J$.R(23425, 'callback', callback, 0))));
                            }
                            J$.X1(23513, ops = J$.W(23505, 'ops', J$.X1(29249, J$.C(1144, J$.M(23473, J$.R(23457, 'Array', Array, 2), 'isArray', 0)(J$.R(23465, 'ops', ops, 0)))) ? J$.R(23481, 'ops', ops, 0) : J$.T(23497, [J$.R(23489, 'ops', ops, 0)], 10, false), ops, 0));
                            return J$.X1(23697, J$.Rt(23689, J$.M(23681, J$.G(23537, J$.G(23529, J$.R(23521, 'self', self, 0), 's', 0), 'wireProtocolHandler', 0), 'update', 0)(J$.R(23545, 'self', self, 0), J$.G(23569, J$.G(23561, J$.R(23553, 'self', self, 0), 's', 0), 'ismaster', 0), J$.R(23577, 'ns', ns, 0), J$.G(23601, J$.G(23593, J$.R(23585, 'self', self, 0), 's', 0), 'bson', 0), J$.G(23625, J$.G(23617, J$.R(23609, 'self', self, 0), 's', 0), 'pool', 0), J$.G(23649, J$.G(23641, J$.R(23633, 'self', self, 0), 's', 0), 'callbacks', 0), J$.R(23657, 'ops', ops, 0), J$.R(23665, 'options', options, 0), J$.R(23673, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(29257, J$e);
                        } finally {
                            if (J$.Fr(29265))
                                continue jalangiLabel2701;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 23705), 0));
            J$.X1(24489, J$.P(24481, J$.G(23793, J$.R(23785, 'Server', Server, 1), 'prototype', 0), 'remove', J$.T(24473, function (ns, ops, options, callback) {
                jalangiLabel2702:
                    while (true) {
                        try {
                            J$.Fe(24417, arguments.callee, this, arguments);
                            arguments = J$.N(24425, 'arguments', arguments, 4);
                            ns = J$.N(24433, 'ns', ns, 4);
                            ops = J$.N(24441, 'ops', ops, 4);
                            options = J$.N(24449, 'options', options, 4);
                            callback = J$.N(24457, 'callback', callback, 4);
                            J$.N(24465, 'self', self, 0);
                            if (J$.X1(29273, J$.C(1152, J$.B(1050, '==', J$.U(1042, 'typeof', J$.R(23801, 'options', options, 0)), J$.T(23809, 'function', 21, false), 0))))
                                J$.X1(23857, (J$.X1(23849, callback = J$.W(23825, 'callback', J$.R(23817, 'options', options, 0), callback, 0)), options = J$.W(23841, 'options', J$.T(23833, {}, 11, false), options, 0)));
                            var self = J$.X1(23881, J$.W(23873, 'self', J$.R(23865, 'this', this, 0), self, 1));
                            if (J$.X1(29281, J$.C(1160, J$.B(1058, '==', J$.G(23905, J$.G(23897, J$.R(23889, 'this', this, 0), 's', 0), 'state', 0), J$.R(23913, 'DESTROYED', DESTROYED, 1), 0))))
                                return J$.X1(23985, J$.Rt(23977, J$.F(23969, J$.R(23921, 'callback', callback, 0), 0)(J$.F(23961, J$.R(23929, 'MongoError', MongoError, 1), 1)(J$.F(23953, J$.R(23937, 'f', f, 1), 0)(J$.T(23945, 'topology was destroyed', 21, false))))));
                            if (J$.X1(29289, J$.C(1176, J$.C(1168, J$.U(1066, '!', J$.M(24001, J$.R(23993, 'self', self, 0), 'isConnected', 0)())) ? J$.B(1074, '!=', J$.G(24025, J$.G(24017, J$.R(24009, 'self', self, 0), 's', 0), 'disconnectHandler', 0), J$.T(24033, null, 25, false), 0) : J$._()))) {
                                J$.X1(24073, callback = J$.W(24065, 'callback', J$.F(24057, J$.R(24041, 'bindToCurrentDomain', bindToCurrentDomain, 1), 0)(J$.R(24049, 'callback', callback, 0)), callback, 0));
                                return J$.X1(24161, J$.Rt(24153, J$.M(24145, J$.G(24097, J$.G(24089, J$.R(24081, 'self', self, 0), 's', 0), 'disconnectHandler', 0), 'add', 0)(J$.T(24105, 'remove', 21, false), J$.R(24113, 'ns', ns, 0), J$.R(24121, 'ops', ops, 0), J$.R(24129, 'options', options, 0), J$.R(24137, 'callback', callback, 0))));
                            }
                            J$.X1(24225, ops = J$.W(24217, 'ops', J$.X1(29297, J$.C(1184, J$.M(24185, J$.R(24169, 'Array', Array, 2), 'isArray', 0)(J$.R(24177, 'ops', ops, 0)))) ? J$.R(24193, 'ops', ops, 0) : J$.T(24209, [J$.R(24201, 'ops', ops, 0)], 10, false), ops, 0));
                            return J$.X1(24409, J$.Rt(24401, J$.M(24393, J$.G(24249, J$.G(24241, J$.R(24233, 'self', self, 0), 's', 0), 'wireProtocolHandler', 0), 'remove', 0)(J$.R(24257, 'self', self, 0), J$.G(24281, J$.G(24273, J$.R(24265, 'self', self, 0), 's', 0), 'ismaster', 0), J$.R(24289, 'ns', ns, 0), J$.G(24313, J$.G(24305, J$.R(24297, 'self', self, 0), 's', 0), 'bson', 0), J$.G(24337, J$.G(24329, J$.R(24321, 'self', self, 0), 's', 0), 'pool', 0), J$.G(24361, J$.G(24353, J$.R(24345, 'self', self, 0), 's', 0), 'callbacks', 0), J$.R(24369, 'ops', ops, 0), J$.R(24377, 'options', options, 0), J$.R(24385, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(29305, J$e);
                        } finally {
                            if (J$.Fr(29313))
                                continue jalangiLabel2702;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 24417), 0));
            J$.X1(25425, J$.P(25417, J$.G(24505, J$.R(24497, 'Server', Server, 1), 'prototype', 0), 'auth', J$.T(25409, function (mechanism, db) {
                jalangiLabel2704:
                    while (true) {
                        try {
                            J$.Fe(25345, arguments.callee, this, arguments);
                            arguments = J$.N(25353, 'arguments', arguments, 4);
                            mechanism = J$.N(25361, 'mechanism', mechanism, 4);
                            db = J$.N(25369, 'db', db, 4);
                            J$.N(25377, 'self', self, 0);
                            J$.N(25385, 'args', args, 0);
                            J$.N(25393, 'callback', callback, 0);
                            J$.N(25401, 'finalArguments', finalArguments, 0);
                            var self = J$.X1(24529, J$.W(24521, 'self', J$.R(24513, 'this', this, 0), self, 1));
                            var args = J$.X1(24593, J$.W(24585, 'args', J$.M(24577, J$.G(24553, J$.G(24545, J$.R(24537, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(24561, 'arguments', arguments, 2), J$.T(24569, 2, 22, false)), args, 1));
                            var callback = J$.X1(24625, J$.W(24617, 'callback', J$.M(24609, J$.R(24601, 'args', args, 0), 'pop', 0)(), callback, 1));
                            if (J$.X1(29321, J$.C(1200, J$.C(1192, J$.B(1082, '==', J$.G(24665, J$.G(24649, J$.G(24641, J$.R(24633, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(24657, 'mechanism', mechanism, 0), 4), J$.T(24673, null, 25, false), 0)) ? J$.B(1090, '!=', J$.R(24681, 'mechanism', mechanism, 0), J$.T(24689, 'default', 21, false), 0) : J$._())))
                                throw J$.X1(24753, J$.Th(24745, J$.F(24737, J$.R(24697, 'MongoError', MongoError, 1), 1)(J$.F(24729, J$.R(24705, 'f', f, 1), 0)(J$.T(24713, 'auth provider %s does not exist', 21, false), J$.R(24721, 'mechanism', mechanism, 0)))));
                            if (J$.X1(29337, J$.C(1232, J$.C(1216, J$.C(1208, J$.B(1098, '==', J$.R(24761, 'mechanism', mechanism, 0), J$.T(24769, 'default', 21, false), 0)) ? J$.G(24793, J$.G(24785, J$.R(24777, 'self', self, 0), 's', 0), 'ismaster', 0) : J$._()) ? J$.B(1106, '>=', J$.G(24825, J$.G(24817, J$.G(24809, J$.R(24801, 'self', self, 0), 's', 0), 'ismaster', 0), 'maxWireVersion', 0), J$.T(24833, 3, 22, false), 0) : J$._()))) {
                                J$.X1(24857, mechanism = J$.W(24849, 'mechanism', J$.T(24841, 'scram-sha-1', 21, false), mechanism, 0));
                            } else if (J$.X1(29329, J$.C(1224, J$.B(1114, '==', J$.R(24865, 'mechanism', mechanism, 0), J$.T(24873, 'default', 21, false), 0)))) {
                                J$.X1(24897, mechanism = J$.W(24889, 'mechanism', J$.T(24881, 'mongocr', 21, false), mechanism, 0));
                            }
                            var finalArguments = J$.X1(25225, J$.W(25217, 'finalArguments', J$.M(25209, J$.M(24977, J$.T(24945, [
                                J$.R(24905, 'self', self, 0),
                                J$.G(24929, J$.G(24921, J$.R(24913, 'self', self, 0), 's', 0), 'pool', 0),
                                J$.R(24937, 'db', db, 0)
                            ], 10, false), 'concat', 0)(J$.M(24969, J$.R(24953, 'args', args, 0), 'slice', 0)(J$.T(24961, 0, 22, false))), 'concat', 0)(J$.T(25201, [J$.T(25193, function (err, r) {
                                    jalangiLabel2703:
                                        while (true) {
                                            try {
                                                J$.Fe(25161, arguments.callee, this, arguments);
                                                arguments = J$.N(25169, 'arguments', arguments, 4);
                                                err = J$.N(25177, 'err', err, 4);
                                                r = J$.N(25185, 'r', r, 4);
                                                if (J$.X1(29345, J$.C(1240, J$.R(24985, 'err', err, 0))))
                                                    return J$.X1(25025, J$.Rt(25017, J$.F(25009, J$.R(24993, 'callback', callback, 0), 0)(J$.R(25001, 'err', err, 0))));
                                                if (J$.X1(29353, J$.C(1248, J$.U(1122, '!', J$.R(25033, 'r', r, 0)))))
                                                    return J$.X1(25089, J$.Rt(25081, J$.F(25073, J$.R(25041, 'callback', callback, 0), 0)(J$.F(25065, J$.R(25049, 'MongoError', MongoError, 1), 1)(J$.T(25057, 'could not authenticate', 21, false)))));
                                                J$.X1(25153, J$.F(25145, J$.R(25097, 'callback', callback, 0), 0)(J$.T(25105, null, 25, false), J$.F(25137, J$.R(25113, 'Session', Session, 1), 1)(J$.T(25121, {}, 11, false), J$.R(25129, 'self', self, 0))));
                                            } catch (J$e) {
                                                J$.Ex(29361, J$e);
                                            } finally {
                                                if (J$.Fr(29369))
                                                    continue jalangiLabel2703;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 25161)], 10, false)), finalArguments, 1));
                            J$.X1(25337, J$.M(25329, J$.G(25273, J$.G(25265, J$.G(25249, J$.G(25241, J$.R(25233, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(25257, 'mechanism', mechanism, 0), 4), 'auth', 0), 'apply', 0)(J$.G(25313, J$.G(25297, J$.G(25289, J$.R(25281, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(25305, 'mechanism', mechanism, 0), 4), J$.R(25321, 'finalArguments', finalArguments, 0)));
                        } catch (J$e) {
                            J$.Ex(29377, J$e);
                        } finally {
                            if (J$.Fr(29385))
                                continue jalangiLabel2704;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 25345), 0));
            J$.X1(25657, J$.P(25649, J$.G(25441, J$.R(25433, 'Server', Server, 1), 'prototype', 0), 'addReadPreferenceStrategy', J$.T(25641, function (name, strategy) {
                jalangiLabel2705:
                    while (true) {
                        try {
                            J$.Fe(25601, arguments.callee, this, arguments);
                            arguments = J$.N(25609, 'arguments', arguments, 4);
                            name = J$.N(25617, 'name', name, 4);
                            strategy = J$.N(25625, 'strategy', strategy, 4);
                            J$.N(25633, 'self', self, 0);
                            var self = J$.X1(25465, J$.W(25457, 'self', J$.R(25449, 'this', this, 0), self, 1));
                            if (J$.X1(29393, J$.C(1256, J$.B(1130, '==', J$.G(25489, J$.G(25481, J$.R(25473, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.T(25497, null, 25, false), 0))))
                                J$.X1(25537, J$.P(25529, J$.G(25513, J$.R(25505, 'self', self, 0), 's', 0), 'readPreferenceStrategies', J$.T(25521, {}, 11, false), 0));
                            J$.X1(25593, J$.P(25585, J$.G(25561, J$.G(25553, J$.R(25545, 'self', self, 0), 's', 0), 'readPreferenceStrategies', 0), J$.R(25569, 'name', name, 0), J$.R(25577, 'strategy', strategy, 0), 2));
                        } catch (J$e) {
                            J$.Ex(29401, J$e);
                        } finally {
                            if (J$.Fr(29409))
                                continue jalangiLabel2705;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 25601), 0));
            J$.X1(25817, J$.P(25809, J$.G(25673, J$.R(25665, 'Server', Server, 1), 'prototype', 0), 'addAuthProvider', J$.T(25801, function (name, provider) {
                jalangiLabel2706:
                    while (true) {
                        try {
                            J$.Fe(25761, arguments.callee, this, arguments);
                            arguments = J$.N(25769, 'arguments', arguments, 4);
                            name = J$.N(25777, 'name', name, 4);
                            provider = J$.N(25785, 'provider', provider, 4);
                            J$.N(25793, 'self', self, 0);
                            var self = J$.X1(25697, J$.W(25689, 'self', J$.R(25681, 'this', this, 0), self, 1));
                            J$.X1(25753, J$.P(25745, J$.G(25721, J$.G(25713, J$.R(25705, 'self', self, 0), 's', 0), 'authProviders', 0), J$.R(25729, 'name', name, 0), J$.R(25737, 'provider', provider, 0), 2));
                        } catch (J$e) {
                            J$.Ex(29417, J$e);
                        } finally {
                            if (J$.Fr(29425))
                                continue jalangiLabel2706;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 25761), 0));
            J$.X1(26033, J$.P(26025, J$.G(25833, J$.R(25825, 'Server', Server, 1), 'prototype', 0), 'equals', J$.T(26017, function (server) {
                jalangiLabel2707:
                    while (true) {
                        try {
                            J$.Fe(25993, arguments.callee, this, arguments);
                            arguments = J$.N(26001, 'arguments', arguments, 4);
                            server = J$.N(26009, 'server', server, 4);
                            if (J$.X1(29433, J$.C(1264, J$.B(1146, '==', J$.U(1138, 'typeof', J$.R(25841, 'server', server, 0)), J$.T(25849, 'string', 21, false), 0))))
                                return J$.X1(25889, J$.Rt(25881, J$.B(1154, '==', J$.R(25857, 'server', server, 0), J$.G(25873, J$.R(25865, 'this', this, 0), 'name', 0), 0)));
                            if (J$.X1(29441, J$.C(1280, J$.C(1272, J$.R(25897, 'server', server, 0)) ? J$.G(25913, J$.R(25905, 'server', server, 0), 'name', 0) : J$._()))) {
                                return J$.X1(25961, J$.Rt(25953, J$.B(1162, '==', J$.G(25929, J$.R(25921, 'server', server, 0), 'name', 0), J$.G(25945, J$.R(25937, 'this', this, 0), 'name', 0), 0)));
                            }
                            return J$.X1(25985, J$.Rt(25977, J$.T(25969, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(29449, J$e);
                        } finally {
                            if (J$.Fr(29457))
                                continue jalangiLabel2707;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 25993), 0));
            J$.X1(26137, J$.P(26129, J$.G(26049, J$.R(26041, 'Server', Server, 1), 'prototype', 0), 'connections', J$.T(26121, function () {
                jalangiLabel2708:
                    while (true) {
                        try {
                            J$.Fe(26105, arguments.callee, this, arguments);
                            arguments = J$.N(26113, 'arguments', arguments, 4);
                            return J$.X1(26097, J$.Rt(26089, J$.M(26081, J$.G(26073, J$.G(26065, J$.R(26057, 'this', this, 0), 's', 0), 'pool', 0), 'getAll', 0)()));
                        } catch (J$e) {
                            J$.Ex(29465, J$e);
                        } finally {
                            if (J$.Fr(29473))
                                continue jalangiLabel2708;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26105), 0));
            J$.X1(26225, J$.P(26217, J$.G(26153, J$.R(26145, 'Server', Server, 1), 'prototype', 0), 'getServer', J$.T(26209, function (options) {
                jalangiLabel2709:
                    while (true) {
                        try {
                            J$.Fe(26185, arguments.callee, this, arguments);
                            arguments = J$.N(26193, 'arguments', arguments, 4);
                            options = J$.N(26201, 'options', options, 4);
                            return J$.X1(26177, J$.Rt(26169, J$.R(26161, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(29481, J$e);
                        } finally {
                            if (J$.Fr(29489))
                                continue jalangiLabel2709;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26185), 0));
            J$.X1(26337, J$.P(26329, J$.G(26241, J$.R(26233, 'Server', Server, 1), 'prototype', 0), 'getConnection', J$.T(26321, function (options) {
                jalangiLabel2710:
                    while (true) {
                        try {
                            J$.Fe(26297, arguments.callee, this, arguments);
                            arguments = J$.N(26305, 'arguments', arguments, 4);
                            options = J$.N(26313, 'options', options, 4);
                            return J$.X1(26289, J$.Rt(26281, J$.M(26273, J$.G(26265, J$.G(26257, J$.R(26249, 'this', this, 0), 's', 0), 'pool', 0), 'get', 0)()));
                        } catch (J$e) {
                            J$.Ex(29497, J$e);
                        } finally {
                            if (J$.Fr(29505))
                                continue jalangiLabel2710;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26297), 0));
            J$.X1(26433, J$.P(26425, J$.G(26353, J$.R(26345, 'Server', Server, 1), 'prototype', 0), 'getCallbacks', J$.T(26417, function () {
                jalangiLabel2711:
                    while (true) {
                        try {
                            J$.Fe(26401, arguments.callee, this, arguments);
                            arguments = J$.N(26409, 'arguments', arguments, 4);
                            return J$.X1(26393, J$.Rt(26385, J$.G(26377, J$.G(26369, J$.R(26361, 'this', this, 0), 's', 0), 'callbacks', 0)));
                        } catch (J$e) {
                            J$.Ex(29513, J$e);
                        } finally {
                            if (J$.Fr(29521))
                                continue jalangiLabel2711;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26401), 0));
            J$.X1(26641, J$.P(26633, J$.G(26449, J$.R(26441, 'Server', Server, 1), 'prototype', 0), 'parserType', J$.T(26625, function () {
                jalangiLabel2712:
                    while (true) {
                        try {
                            J$.Fe(26601, arguments.callee, this, arguments);
                            arguments = J$.N(26609, 'arguments', arguments, 4);
                            J$.N(26617, 's', s, 0);
                            var s = J$.X1(26481, J$.W(26473, 's', J$.G(26465, J$.R(26457, 'this', this, 0), 's', 0), s, 1));
                            if (J$.X1(29529, J$.C(1288, J$.B(1178, '!=', J$.M(26537, J$.M(26521, J$.G(26513, J$.G(26505, J$.G(26497, J$.R(26489, 's', s, 0), 'options', 0), 'bson', 0), 'serialize', 0), 'toString', 0)(), 'indexOf', 0)(J$.T(26529, '[native code]', 21, false)), J$.U(1170, '-', J$.T(26545, 1, 22, false)), 0))))
                                return J$.X1(26569, J$.Rt(26561, J$.T(26553, 'c++', 21, false)));
                            return J$.X1(26593, J$.Rt(26585, J$.T(26577, 'js', 21, false)));
                        } catch (J$e) {
                            J$.Ex(29537, J$e);
                        } finally {
                            if (J$.Fr(29545))
                                continue jalangiLabel2712;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26601), 0));
            J$.X1(26945, J$.P(26937, J$.G(26657, J$.R(26649, 'Server', Server, 1), 'prototype', 0), 'cursor', J$.T(26929, function (ns, cmd, cursorOptions) {
                jalangiLabel2713:
                    while (true) {
                        try {
                            J$.Fe(26873, arguments.callee, this, arguments);
                            arguments = J$.N(26881, 'arguments', arguments, 4);
                            ns = J$.N(26889, 'ns', ns, 4);
                            cmd = J$.N(26897, 'cmd', cmd, 4);
                            cursorOptions = J$.N(26905, 'cursorOptions', cursorOptions, 4);
                            J$.N(26913, 's', s, 0);
                            J$.N(26921, 'FinalCursor', FinalCursor, 0);
                            var s = J$.X1(26689, J$.W(26681, 's', J$.G(26673, J$.R(26665, 'this', this, 0), 's', 0), s, 1));
                            J$.X1(26721, cursorOptions = J$.W(26713, 'cursorOptions', J$.C(1296, J$.R(26697, 'cursorOptions', cursorOptions, 0)) ? J$._() : J$.T(26705, {}, 11, false), cursorOptions, 0));
                            var FinalCursor = J$.X1(26769, J$.W(26761, 'FinalCursor', J$.C(1304, J$.G(26737, J$.R(26729, 'cursorOptions', cursorOptions, 0), 'cursorFactory', 0)) ? J$._() : J$.G(26753, J$.R(26745, 's', s, 0), 'Cursor', 0), FinalCursor, 1));
                            return J$.X1(26865, J$.Rt(26857, J$.F(26849, J$.R(26777, 'FinalCursor', FinalCursor, 0), 1)(J$.G(26793, J$.R(26785, 's', s, 0), 'bson', 0), J$.R(26801, 'ns', ns, 0), J$.R(26809, 'cmd', cmd, 0), J$.R(26817, 'cursorOptions', cursorOptions, 0), J$.R(26825, 'this', this, 0), J$.G(26841, J$.R(26833, 's', s, 0), 'options', 0))));
                        } catch (J$e) {
                            J$.Ex(29553, J$e);
                        } finally {
                            if (J$.Fr(29561))
                                continue jalangiLabel2713;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 26873), 0));
            J$.X1(26977, J$.P(26969, J$.R(26953, 'module', module, 2), 'exports', J$.R(26961, 'Server', Server, 1), 0));
        } catch (J$e) {
            J$.Ex(29569, J$e);
        } finally {
            if (J$.Sr(29577)) {
                J$.L();
                continue jalangiLabel2714;
            } else {
                J$.L();
                break jalangiLabel2714;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
