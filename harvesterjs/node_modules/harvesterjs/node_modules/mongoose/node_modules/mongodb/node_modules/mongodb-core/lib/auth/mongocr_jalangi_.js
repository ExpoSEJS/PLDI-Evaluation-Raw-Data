J$.iids = {"8":[11,12,11,70],"9":[1,20,1,27],"10":[11,12,11,33],"16":[11,12,11,107],"17":[1,28,1,32],"18":[11,37,11,70],"24":[19,13,19,40],"25":[1,20,1,33],"26":[11,74,11,107],"32":[18,21,18,41],"33":[1,20,1,33],"34":[18,21,18,41],"40":[24,9,24,15],"41":[1,20,1,33],"42":[18,43,18,46],"48":[31,9,31,19],"49":[2,26,2,38],"56":[41,21,41,32],"57":[2,26,2,45],"58":[18,43,18,46],"64":[61,32,61,50],"65":[2,26,2,45],"66":[24,9,24,15],"72":[59,32,59,48],"73":[2,26,2,45],"74":[31,9,31,19],"80":[57,25,57,28],"81":[3,1,3,13],"82":[36,12,36,34],"88":[67,25,67,67],"89":[3,1,3,14],"90":[41,21,41,32],"96":[71,29,71,48],"97":[4,9,4,16],"98":[44,32,44,52],"104":[70,32,70,42],"105":[4,17,4,23],"106":[44,32,44,63],"112":[67,25,67,67],"113":[4,9,4,24],"114":[47,32,47,48],"120":[36,12,36,34],"121":[4,9,4,31],"122":[47,32,47,64],"128":[83,9,83,19],"129":[4,42,4,49],"130":[56,29,56,38],"136":[88,17,88,27],"137":[4,50,4,58],"138":[65,52,65,80],"144":[85,21,85,46],"145":[4,42,4,59],"146":[67,25,67,35],"153":[4,74,4,81],"154":[67,39,67,67],"161":[4,82,4,92],"162":[70,32,70,42],"169":[4,74,4,93],"170":[71,29,71,48],"177":[4,9,4,31],"178":[83,9,83,19],"185":[4,9,4,31],"186":[85,21,85,46],"193":[4,42,4,59],"194":[85,48,85,51],"201":[4,42,4,59],"209":[4,74,4,93],"210":[85,48,85,51],"217":[4,74,4,93],"218":[87,21,87,30],"225":[6,5,6,9],"226":[88,17,88,27],"233":[6,15,6,17],"241":[6,5,6,17],"249":[6,5,6,18],"257":[7,5,7,9],"265":[7,21,7,29],"273":[7,5,7,29],"281":[7,5,7,30],"289":[8,5,8,9],"297":[8,21,8,29],"305":[8,5,8,29],"313":[8,5,8,30],"321":[5,19,9,2],"329":[5,19,9,2],"337":[5,19,9,2],"345":[5,19,9,2],"353":[5,19,9,2],"361":[5,19,9,2],"369":[5,19,9,2],"377":[5,19,9,2],"385":[10,1,10,12],"393":[10,1,10,22],"401":[11,12,11,19],"409":[11,12,11,22],"417":[11,26,11,30],"425":[11,26,11,33],"433":[11,37,11,44],"441":[11,37,11,53],"449":[11,57,11,61],"457":[11,57,11,70],"465":[11,74,11,81],"473":[11,74,11,90],"481":[11,94,11,98],"489":[11,94,11,107],"497":[11,12,11,107],"505":[11,5,11,108],"513":[10,31,12,2],"521":[10,31,12,2],"529":[10,31,12,2],"537":[10,31,12,2],"545":[10,1,12,2],"553":[10,1,12,3],"561":[14,5,14,9],"569":[14,22,14,24],"577":[14,5,14,24],"585":[14,5,14,25],"593":[13,15,15,2],"601":[13,15,15,2],"609":[13,15,15,2],"617":[13,15,15,2],"625":[13,15,15,2],"633":[17,17,17,22],"641":[17,17,17,22],"649":[17,17,17,22],"657":[18,18,18,19],"665":[18,18,18,19],"673":[18,18,18,19],"681":[18,21,18,22],"689":[18,25,18,34],"697":[18,25,18,41],"713":[18,43,18,44],"721":[18,43,18,46],"737":[19,13,19,22],"745":[19,23,19,24],"753":[19,13,19,25],"761":[19,32,19,39],"769":[19,13,19,40],"771":[19,13,19,31],"777":[20,21,20,25],"785":[20,21,20,25],"793":[20,13,20,26],"801":[24,10,24,15],"809":[25,9,25,18],"817":[25,24,25,31],"825":[25,9,25,32],"827":[25,9,25,23],"833":[25,9,25,33],"841":[16,22,26,2],"849":[16,22,26,2],"857":[16,22,26,2],"865":[16,22,26,2],"873":[16,22,26,2],"881":[16,22,26,2],"889":[16,22,26,2],"897":[16,22,26,2],"905":[16,22,26,2],"913":[27,1,27,8],"921":[27,1,27,18],"929":[28,16,28,20],"937":[28,16,28,20],"945":[28,16,28,20],"953":[29,23,29,27],"961":[29,23,29,36],"963":[29,23,29,34],"969":[29,23,29,36],"977":[29,23,29,36],"985":[30,17,30,28],"993":[30,17,30,35],"1001":[30,17,30,35],"1009":[30,17,30,35],"1017":[31,9,31,14],"1025":[31,18,31,19],"1033":[32,16,32,24],"1041":[32,25,32,29],"1049":[32,31,32,35],"1057":[32,16,32,36],"1065":[32,16,32,36],"1073":[32,9,32,37],"1081":[33,36,33,37],"1089":[33,36,33,37],"1097":[33,36,33,37],"1105":[34,28,34,33],"1113":[34,28,34,33],"1121":[34,28,34,33],"1129":[35,23,35,27],"1137":[35,23,35,27],"1145":[35,23,35,27],"1153":[36,12,36,23],"1161":[36,12,36,30],"1169":[36,33,36,34],"1177":[38,13,38,19],"1185":[38,28,38,29],"1193":[38,30,38,39],"1201":[38,41,38,43],"1209":[38,28,38,44],"1217":[38,58,38,59],"1225":[38,46,38,61],"1233":[38,77,38,87],"1241":[38,63,38,89],"1249":[39,29,39,33],"1257":[39,29,39,33],"1265":[39,29,39,33],"1273":[40,27,40,31],"1281":[40,27,40,31],"1289":[40,27,40,31],"1297":[41,21,41,24],"1305":[41,28,41,32],"1313":[42,29,42,30],"1321":[42,29,42,37],"1329":[42,29,42,43],"1337":[42,29,42,43],"1345":[42,21,42,44],"1353":[43,31,43,37],"1361":[43,49,43,54],"1369":[43,31,43,55],"1371":[43,31,43,48],"1377":[43,31,43,55],"1385":[43,31,43,55],"1393":[44,21,44,24],"1401":[44,32,44,40],"1409":[44,43,44,52],"1417":[44,55,44,63],"1425":[44,21,44,64],"1427":[44,21,44,31],"1433":[44,21,44,65],"1441":[45,41,45,44],"1449":[45,52,45,57],"1457":[45,41,45,58],"1459":[45,41,45,51],"1465":[45,41,45,58],"1473":[45,41,45,58],"1481":[46,27,46,33],"1489":[46,45,46,50],"1497":[46,27,46,51],"1499":[46,27,46,44],"1505":[46,27,46,51],"1513":[46,21,46,52],"1521":[47,21,47,24],"1529":[47,32,47,37],"1537":[47,40,47,48],"1545":[47,51,47,64],"1553":[47,21,47,65],"1555":[47,21,47,31],"1561":[47,21,47,66],"1569":[48,27,48,30],"1577":[48,38,48,43],"1585":[48,27,48,44],"1587":[48,27,48,37],"1593":[48,27,48,44],"1601":[48,21,48,45],"1609":[50,17,50,23],"1617":[50,32,50,33],"1625":[50,34,50,43],"1633":[50,45,50,47],"1641":[50,32,50,48],"1649":[51,35,51,36],"1657":[52,27,52,35],"1665":[53,28,53,33],"1673":[54,26,54,29],"1681":[50,50,55,18],"1689":[55,34,55,44],"1697":[55,20,55,46],"1705":[56,29,56,34],"1713":[56,37,56,38],"1721":[56,29,56,38],"1729":[56,21,56,39],"1737":[57,25,57,28],"1745":[58,39,58,42],"1753":[58,39,58,42],"1761":[58,25,58,43],"1769":[59,32,59,33],"1777":[59,32,59,40],"1785":[59,41,59,47],"1793":[59,32,59,48],"1801":[60,39,60,40],"1809":[60,39,60,47],"1817":[60,39,60,47],"1825":[60,25,60,48],"1833":[61,32,61,33],"1841":[61,32,61,40],"1849":[61,41,61,49],"1857":[61,32,61,50],"1865":[62,39,62,40],"1873":[62,39,62,47],"1881":[62,39,62,47],"1889":[62,25,62,48],"1897":[64,44,64,48],"1905":[64,44,64,48],"1913":[64,25,64,49],"1921":[65,52,65,76],"1929":[65,79,65,80],"1937":[65,52,65,80],"1945":[65,25,65,81],"1953":[67,25,67,30],"1961":[67,34,67,35],"1969":[67,39,67,63],"1977":[67,66,67,67],"1985":[68,25,68,39],"1993":[68,40,68,44],"2001":[68,40,68,54],"2009":[68,60,68,71],"2017":[68,72,68,74],"2025":[68,76,68,84],"2033":[68,86,68,94],"2041":[68,56,68,95],"2049":[68,25,68,96],"2057":[68,25,68,97],"2065":[69,25,69,33],"2073":[69,34,69,38],"2081":[69,40,69,44],"2089":[69,25,69,45],"2097":[69,25,69,46],"2105":[70,32,70,37],"2113":[70,41,70,42],"2121":[71,29,71,40],"2129":[71,44,71,48],"2137":[72,47,72,57],"2145":[72,58,72,59],"2153":[72,60,72,98],"2161":[72,58,72,99],"2169":[72,43,72,100],"2177":[72,43,72,100],"2185":[72,29,72,101],"2193":[73,25,73,33],"2201":[73,34,73,45],"2209":[73,47,73,52],"2217":[73,25,73,53],"2225":[73,25,73,54],"2233":[55,48,75,18],"2241":[55,48,75,18],"2249":[55,48,75,18],"2257":[55,48,75,18],"2265":[55,48,75,18],"2273":[50,17,75,19],"2275":[50,17,50,31],"2281":[50,17,75,20],"2289":[38,91,76,14],"2297":[38,91,76,14],"2305":[38,91,76,14],"2313":[38,91,76,14],"2321":[38,91,76,14],"2329":[38,91,76,14],"2337":[38,91,76,14],"2345":[38,91,76,14],"2353":[38,91,76,14],"2361":[38,13,76,15],"2363":[38,13,38,27],"2369":[38,13,76,16],"2377":[37,30,77,10],"2385":[37,30,77,10],"2393":[37,30,77,10],"2401":[37,30,77,10],"2409":[37,30,77,10],"2417":[37,30,77,10],"2425":[78,9,78,23],"2433":[78,24,78,35],"2441":[78,24,78,43],"2443":[78,24,78,41],"2449":[78,9,78,44],"2457":[78,9,78,45],"2465":[27,26,80,2],"2473":[27,26,80,2],"2481":[27,26,80,2],"2489":[27,26,80,2],"2497":[27,26,80,2],"2505":[27,26,80,2],"2513":[27,26,80,2],"2521":[27,26,80,2],"2529":[27,26,80,2],"2537":[27,26,80,2],"2545":[27,26,80,2],"2553":[27,26,80,2],"2561":[27,26,80,2],"2569":[27,26,80,2],"2577":[27,26,80,2],"2585":[27,26,80,2],"2593":[27,1,80,2],"2601":[27,1,80,3],"2609":[81,1,81,8],"2617":[81,1,81,18],"2625":[82,17,82,21],"2633":[82,17,82,31],"2641":[82,17,82,38],"2649":[82,17,82,38],"2657":[82,17,82,38],"2665":[83,9,83,14],"2673":[83,18,83,19],"2681":[84,16,84,24],"2689":[84,25,84,29],"2697":[84,31,84,35],"2705":[84,16,84,36],"2713":[84,16,84,36],"2721":[84,9,84,37],"2729":[85,18,85,19],"2737":[85,18,85,19],"2745":[85,18,85,19],"2753":[85,21,85,22],"2761":[85,25,85,29],"2769":[85,25,85,39],"2777":[85,25,85,46],"2793":[85,48,85,49],"2801":[85,48,85,51],"2817":[86,9,86,13],"2825":[86,19,86,25],"2833":[86,27,86,31],"2841":[86,33,86,37],"2849":[86,33,86,47],"2857":[86,48,86,49],"2865":[86,33,86,50],"2873":[86,33,86,53],"2881":[86,55,86,59],"2889":[86,55,86,69],"2897":[86,70,86,71],"2905":[86,55,86,72],"2913":[86,55,86,81],"2921":[86,83,86,87],"2929":[86,83,86,97],"2937":[86,98,86,99],"2945":[86,83,86,100],"2953":[86,83,86,109],"2961":[87,21,87,26],"2969":[87,29,87,30],"2977":[87,21,87,30],"2985":[87,13,87,31],"2993":[88,17,88,22],"3001":[88,26,88,27],"3009":[89,17,89,25],"3017":[89,26,89,30],"3025":[89,32,89,36],"3033":[89,17,89,37],"3041":[89,17,89,38],"3049":[86,111,91,10],"3057":[86,111,91,10],"3065":[86,111,91,10],"3073":[86,111,91,10],"3081":[86,111,91,10],"3089":[86,9,91,11],"3091":[86,9,86,18],"3097":[86,9,91,12],"3105":[81,36,93,2],"3113":[81,36,93,2],"3121":[81,36,93,2],"3129":[81,36,93,2],"3137":[81,36,93,2],"3145":[81,36,93,2],"3153":[81,36,93,2],"3161":[81,36,93,2],"3169":[81,1,93,2],"3177":[81,1,93,3],"3185":[94,1,94,7],"3193":[94,18,94,25],"3201":[94,1,94,25],"3209":[94,1,94,26],"3217":[1,1,94,26],"3225":[1,1,94,26],"3233":[1,1,94,26],"3241":[1,1,94,26],"3249":[1,1,94,26],"3257":[1,1,94,26],"3265":[1,1,94,26],"3273":[1,1,94,26],"3281":[1,1,94,26],"3289":[5,19,9,2],"3297":[5,19,9,2],"3305":[10,31,12,2],"3313":[10,31,12,2],"3321":[13,15,15,2],"3329":[13,15,15,2],"3337":[19,9,22,10],"3345":[18,5,23,6],"3353":[18,5,23,6],"3361":[24,5,25,33],"3369":[16,22,26,2],"3377":[16,22,26,2],"3385":[31,5,32,37],"3393":[41,17,49,18],"3401":[61,28,66,22],"3409":[59,28,66,22],"3417":[57,21,66,22],"3425":[71,25,72,101],"3433":[70,28,74,22],"3441":[67,21,74,22],"3449":[55,48,75,18],"3457":[55,48,75,18],"3465":[38,91,76,14],"3473":[38,91,76,14],"3481":[37,30,77,10],"3489":[37,30,77,10],"3497":[36,5,79,6],"3505":[27,26,80,2],"3513":[27,26,80,2],"3521":[83,5,84,37],"3529":[88,13,90,14],"3537":[86,111,91,10],"3545":[86,111,91,10],"3553":[85,5,92,6],"3561":[85,5,92,6],"3569":[81,36,93,2],"3577":[81,36,93,2],"3585":[1,1,94,26],"3593":[1,1,94,26],"nBranches":36,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/auth/mongocr.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/auth/mongocr_jalangi_.js","code":"\"use strict\";\n\nvar f = require('util').format\n  , crypto = require('crypto')\n  , MongoError = require('../error');\n\nvar AuthSession = function(db, username, password) {\n  this.db = db;\n  this.username = username;\n  this.password = password;\n}\n\nAuthSession.prototype.equal = function(session) {\n  return session.db == this.db \n    && session.username == this.username\n    && session.password == this.password;  \n}\n\n/**\n * Creates a new MongoCR authentication mechanism\n * @class\n * @return {MongoCR} A cursor instance\n */\nvar MongoCR = function() {\n  this.authStore = [];\n}\n\n// Add to store only if it does not exist\nvar addAuthSession = function(authStore, session) {\n  var found = false;\n\n  for(var i = 0; i < authStore.length; i++) {\n    if(authStore[i].equal(session)) {\n      found = true;\n      break;\n    }\n  }\n\n  if(!found) authStore.push(session);\n}\n\n/**\n * Authenticate\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {string} db Name of the database\n * @param {string} username Username\n * @param {string} password Password\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nMongoCR.prototype.auth = function(server, pool, db, username, password, callback) {\n  var self = this;\n  // Get all the connections\n  var connections = pool.getAll();\n  // Total connections\n  var count = connections.length;\n  if(count == 0) return callback(null, null);\n\n  // Valid connections\n  var numberOfValidConnections = 0;\n  var credentialsValid = false;\n  var errorObject = null;\n\n  // For each connection we need to authenticate\n  while(connections.length > 0) {    \n    // Execute MongoCR\n    var executeMongoCR = function(connection) {\n      // Let's start the process\n      server.command(f(\"%s.$cmd\", db)\n        , { getnonce: 1 }\n        , { connection: connection }, function(err, r) {\n          var nonce = null;\n          var key = null;\n          \n          // Adjust the number of connections left\n          // Get nonce\n          if(err == null) {\n            nonce = r.result.nonce;\n            // Use node md5 generator\n            var md5 = crypto.createHash('md5');\n            // Generate keys used for authentication\n            md5.update(username + \":mongo:\" + password);\n            var hash_password = md5.digest('hex');\n            // Final key\n            md5 = crypto.createHash('md5');\n            md5.update(nonce + username + hash_password);\n            key = md5.digest('hex');\n          }\n\n          // Execute command\n          server.command(f(\"%s.$cmd\", db)\n            , { authenticate: 1, user: username, nonce: nonce, key:key}\n            , { connection: connection }, function(err, r) {\n              count = count - 1;\n\n              // If we have an error\n              if(err) {\n                errorObject = err;\n              } else if(r.result['$err']) {\n                errorObject = r.result;\n              } else if(r.result['errmsg']) {\n                errorObject = r.result;\n              } else {\n                credentialsValid = true;\n                numberOfValidConnections = numberOfValidConnections + 1;\n              }\n\n              // We have authenticated all connections\n              if(count == 0 && numberOfValidConnections > 0) {\n                // Store the auth details\n                addAuthSession(self.authStore, new AuthSession(db, username, password));\n                // Return correct authentication\n                callback(null, true);\n              } else if(count == 0) {\n                if(errorObject == null) errorObject = new MongoError(f(\"failed to authenticate using mongocr\"));\n                callback(errorObject, false);\n              }\n          });\n      });\n    }\n\n    // Get the connection\n    executeMongoCR(connections.shift());\n  }\n}\n\n/**\n * Re authenticate pool\n * @method\n * @param {{Server}|{ReplSet}|{Mongos}} server Topology the authentication method is being called on\n * @param {Pool} pool Connection pool for this topology\n * @param {authResultCallback} callback The callback to return the result from the authentication\n * @return {object}\n */\nMongoCR.prototype.reauthenticate = function(server, pool, callback) {\n  var count = this.authStore.length;\n  if(count == 0) return callback(null, null);\n  // Iterate over all the auth details stored\n  for(var i = 0; i < this.authStore.length; i++) {\n    this.auth(server, pool, this.authStore[i].db, this.authStore[i].username, this.authStore[i].password, function(err, r) {\n      count = count - 1;\n      // Done re-authenticating\n      if(count == 0) {\n        callback(null, null);\n      }\n    });\n  }\n}\n\n/**\n * This is a result from a authentication strategy\n *\n * @callback authResultCallback\n * @param {error} error An error object. Set to null if no error present\n * @param {boolean} result The result of the authentication process\n */\n\nmodule.exports = MongoCR;"};
jalangiLabel3144:
    while (true) {
        try {
            J$.Se(3217, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/auth/mongocr_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/auth/mongocr.js');
            J$.N(3225, '__secret__S$', __secret__S$, 0);
            J$.N(3233, '__secret__traits__', __secret__traits__, 0);
            J$.N(3241, 'f', f, 0);
            J$.N(3249, 'crypto', crypto, 0);
            J$.N(3257, 'MongoError', MongoError, 0);
            J$.N(3265, 'AuthSession', AuthSession, 0);
            J$.N(3273, 'MongoCR', MongoCR, 0);
            J$.N(3281, 'addAuthSession', addAuthSession, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var f = J$.X1(185, J$.W(177, 'f', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'format', 0), f, 3)), crypto = J$.X1(201, J$.W(193, 'crypto', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'crypto', 21, false)), crypto, 3)), MongoError = J$.X1(217, J$.W(209, 'MongoError', J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, '../error', 21, false)), MongoError, 3));
            var AuthSession = J$.X1(377, J$.W(369, 'AuthSession', J$.T(361, function (db, username, password) {
                jalangiLabel3134:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            db = J$.N(337, 'db', db, 4);
                            username = J$.N(345, 'username', username, 4);
                            password = J$.N(353, 'password', password, 4);
                            J$.X1(249, J$.P(241, J$.R(225, 'this', this, 0), 'db', J$.R(233, 'db', db, 0), 0));
                            J$.X1(281, J$.P(273, J$.R(257, 'this', this, 0), 'username', J$.R(265, 'username', username, 0), 0));
                            J$.X1(313, J$.P(305, J$.R(289, 'this', this, 0), 'password', J$.R(297, 'password', password, 0), 0));
                        } catch (J$e) {
                            J$.Ex(3289, J$e);
                        } finally {
                            if (J$.Fr(3297))
                                continue jalangiLabel3134;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 321), AuthSession, 3));
            J$.X1(553, J$.P(545, J$.G(393, J$.R(385, 'AuthSession', AuthSession, 1), 'prototype', 0), 'equal', J$.T(537, function (session) {
                jalangiLabel3135:
                    while (true) {
                        try {
                            J$.Fe(513, arguments.callee, this, arguments);
                            arguments = J$.N(521, 'arguments', arguments, 4);
                            session = J$.N(529, 'session', session, 4);
                            return J$.X1(505, J$.Rt(497, J$.C(16, J$.C(8, J$.B(10, '==', J$.G(409, J$.R(401, 'session', session, 0), 'db', 0), J$.G(425, J$.R(417, 'this', this, 0), 'db', 0), 0)) ? J$.B(18, '==', J$.G(441, J$.R(433, 'session', session, 0), 'username', 0), J$.G(457, J$.R(449, 'this', this, 0), 'username', 0), 0) : J$._()) ? J$.B(26, '==', J$.G(473, J$.R(465, 'session', session, 0), 'password', 0), J$.G(489, J$.R(481, 'this', this, 0), 'password', 0), 0) : J$._()));
                        } catch (J$e) {
                            J$.Ex(3305, J$e);
                        } finally {
                            if (J$.Fr(3313))
                                continue jalangiLabel3135;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 513), 0));
            var MongoCR = J$.X1(625, J$.W(617, 'MongoCR', J$.T(609, function () {
                jalangiLabel3136:
                    while (true) {
                        try {
                            J$.Fe(593, arguments.callee, this, arguments);
                            arguments = J$.N(601, 'arguments', arguments, 4);
                            J$.X1(585, J$.P(577, J$.R(561, 'this', this, 0), 'authStore', J$.T(569, [], 10, false), 0));
                        } catch (J$e) {
                            J$.Ex(3321, J$e);
                        } finally {
                            if (J$.Fr(3329))
                                continue jalangiLabel3136;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 593), MongoCR, 3));
            var addAuthSession = J$.X1(905, J$.W(897, 'addAuthSession', J$.T(889, function (authStore, session) {
                jalangiLabel3137:
                    while (true) {
                        try {
                            J$.Fe(841, arguments.callee, this, arguments);
                            arguments = J$.N(849, 'arguments', arguments, 4);
                            authStore = J$.N(857, 'authStore', authStore, 4);
                            session = J$.N(865, 'session', session, 4);
                            J$.N(873, 'found', found, 0);
                            J$.N(881, 'i', i, 0);
                            var found = J$.X1(649, J$.W(641, 'found', J$.T(633, false, 23, false), found, 1));
                            for (var i = J$.X1(673, J$.W(665, 'i', J$.T(657, 0, 22, false), i, 1)); J$.X1(3345, J$.C(32, J$.B(34, '<', J$.R(681, 'i', i, 0), J$.G(697, J$.R(689, 'authStore', authStore, 0), 'length', 0), 0))); J$.X1(3353, J$.B(58, '-', i = J$.W(721, 'i', J$.B(50, '+', J$.U(42, '+', J$.R(713, 'i', i, 0)), J$.T(705, 1, 22, false), 0), i, 0), J$.T(729, 1, 22, false), 0))) {
                                if (J$.X1(3337, J$.C(24, J$.M(769, J$.G(753, J$.R(737, 'authStore', authStore, 0), J$.R(745, 'i', i, 0), 4), 'equal', 0)(J$.R(761, 'session', session, 0))))) {
                                    J$.X1(793, found = J$.W(785, 'found', J$.T(777, true, 23, false), found, 0));
                                    break;
                                }
                            }
                            if (J$.X1(3361, J$.C(40, J$.U(66, '!', J$.R(801, 'found', found, 0)))))
                                J$.X1(833, J$.M(825, J$.R(809, 'authStore', authStore, 0), 'push', 0)(J$.R(817, 'session', session, 0)));
                        } catch (J$e) {
                            J$.Ex(3369, J$e);
                        } finally {
                            if (J$.Fr(3377))
                                continue jalangiLabel3137;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 841), addAuthSession, 3));
            J$.X1(2601, J$.P(2593, J$.G(921, J$.R(913, 'MongoCR', MongoCR, 1), 'prototype', 0), 'auth', J$.T(2585, function (server, pool, db, username, password, callback) {
                jalangiLabel3141:
                    while (true) {
                        try {
                            J$.Fe(2465, arguments.callee, this, arguments);
                            arguments = J$.N(2473, 'arguments', arguments, 4);
                            server = J$.N(2481, 'server', server, 4);
                            pool = J$.N(2489, 'pool', pool, 4);
                            db = J$.N(2497, 'db', db, 4);
                            username = J$.N(2505, 'username', username, 4);
                            password = J$.N(2513, 'password', password, 4);
                            callback = J$.N(2521, 'callback', callback, 4);
                            J$.N(2529, 'self', self, 0);
                            J$.N(2537, 'connections', connections, 0);
                            J$.N(2545, 'count', count, 0);
                            J$.N(2553, 'numberOfValidConnections', numberOfValidConnections, 0);
                            J$.N(2561, 'credentialsValid', credentialsValid, 0);
                            J$.N(2569, 'errorObject', errorObject, 0);
                            J$.N(2577, 'executeMongoCR', executeMongoCR, 0);
                            var self = J$.X1(945, J$.W(937, 'self', J$.R(929, 'this', this, 0), self, 1));
                            var connections = J$.X1(977, J$.W(969, 'connections', J$.M(961, J$.R(953, 'pool', pool, 0), 'getAll', 0)(), connections, 1));
                            var count = J$.X1(1009, J$.W(1001, 'count', J$.G(993, J$.R(985, 'connections', connections, 0), 'length', 0), count, 1));
                            if (J$.X1(3385, J$.C(48, J$.B(74, '==', J$.R(1017, 'count', count, 0), J$.T(1025, 0, 22, false), 0))))
                                return J$.X1(1073, J$.Rt(1065, J$.F(1057, J$.R(1033, 'callback', callback, 0), 0)(J$.T(1041, null, 25, false), J$.T(1049, null, 25, false))));
                            var numberOfValidConnections = J$.X1(1097, J$.W(1089, 'numberOfValidConnections', J$.T(1081, 0, 22, false), numberOfValidConnections, 1));
                            var credentialsValid = J$.X1(1121, J$.W(1113, 'credentialsValid', J$.T(1105, false, 23, false), credentialsValid, 1));
                            var errorObject = J$.X1(1145, J$.W(1137, 'errorObject', J$.T(1129, null, 25, false), errorObject, 1));
                            while (J$.X1(3497, J$.C(120, J$.B(82, '>', J$.G(1161, J$.R(1153, 'connections', connections, 0), 'length', 0), J$.T(1169, 0, 22, false), 0)))) {
                                var executeMongoCR = J$.X1(2417, J$.W(2409, 'executeMongoCR', J$.T(2401, function (connection) {
                                    jalangiLabel3140:
                                        while (true) {
                                            try {
                                                J$.Fe(2377, arguments.callee, this, arguments);
                                                arguments = J$.N(2385, 'arguments', arguments, 4);
                                                connection = J$.N(2393, 'connection', connection, 4);
                                                J$.X1(2369, J$.M(2361, J$.R(1177, 'server', server, 0), 'command', 0)(J$.F(1209, J$.R(1185, 'f', f, 1), 0)(J$.T(1193, '%s.$cmd', 21, false), J$.R(1201, 'db', db, 0)), J$.T(1225, {
                                                    getnonce: J$.T(1217, 1, 22, false)
                                                }, 11, false), J$.T(1241, {
                                                    connection: J$.R(1233, 'connection', connection, 0)
                                                }, 11, false), J$.T(2353, function (err, r) {
                                                    jalangiLabel3139:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2289, arguments.callee, this, arguments);
                                                                arguments = J$.N(2297, 'arguments', arguments, 4);
                                                                err = J$.N(2305, 'err', err, 4);
                                                                r = J$.N(2313, 'r', r, 4);
                                                                J$.N(2321, 'nonce', nonce, 0);
                                                                J$.N(2329, 'key', key, 0);
                                                                J$.N(2337, 'md5', md5, 0);
                                                                J$.N(2345, 'hash_password', hash_password, 0);
                                                                var nonce = J$.X1(1265, J$.W(1257, 'nonce', J$.T(1249, null, 25, false), nonce, 1));
                                                                var key = J$.X1(1289, J$.W(1281, 'key', J$.T(1273, null, 25, false), key, 1));
                                                                if (J$.X1(3393, J$.C(56, J$.B(90, '==', J$.R(1297, 'err', err, 0), J$.T(1305, null, 25, false), 0)))) {
                                                                    J$.X1(1345, nonce = J$.W(1337, 'nonce', J$.G(1329, J$.G(1321, J$.R(1313, 'r', r, 0), 'result', 0), 'nonce', 0), nonce, 0));
                                                                    var md5 = J$.X1(1385, J$.W(1377, 'md5', J$.M(1369, J$.R(1353, 'crypto', crypto, 1), 'createHash', 0)(J$.T(1361, 'md5', 21, false)), md5, 1));
                                                                    J$.X1(1433, J$.M(1425, J$.R(1393, 'md5', md5, 0), 'update', 0)(J$.B(106, '+', J$.B(98, '+', J$.R(1401, 'username', username, 0), J$.T(1409, ':mongo:', 21, false), 0), J$.R(1417, 'password', password, 0), 0)));
                                                                    var hash_password = J$.X1(1473, J$.W(1465, 'hash_password', J$.M(1457, J$.R(1441, 'md5', md5, 0), 'digest', 0)(J$.T(1449, 'hex', 21, false)), hash_password, 1));
                                                                    J$.X1(1513, md5 = J$.W(1505, 'md5', J$.M(1497, J$.R(1481, 'crypto', crypto, 1), 'createHash', 0)(J$.T(1489, 'md5', 21, false)), md5, 0));
                                                                    J$.X1(1561, J$.M(1553, J$.R(1521, 'md5', md5, 0), 'update', 0)(J$.B(122, '+', J$.B(114, '+', J$.R(1529, 'nonce', nonce, 0), J$.R(1537, 'username', username, 0), 0), J$.R(1545, 'hash_password', hash_password, 0), 0)));
                                                                    J$.X1(1601, key = J$.W(1593, 'key', J$.M(1585, J$.R(1569, 'md5', md5, 0), 'digest', 0)(J$.T(1577, 'hex', 21, false)), key, 0));
                                                                }
                                                                J$.X1(2281, J$.M(2273, J$.R(1609, 'server', server, 0), 'command', 0)(J$.F(1641, J$.R(1617, 'f', f, 1), 0)(J$.T(1625, '%s.$cmd', 21, false), J$.R(1633, 'db', db, 0)), J$.T(1681, {
                                                                    authenticate: J$.T(1649, 1, 22, false),
                                                                    user: J$.R(1657, 'username', username, 0),
                                                                    nonce: J$.R(1665, 'nonce', nonce, 0),
                                                                    key: J$.R(1673, 'key', key, 0)
                                                                }, 11, false), J$.T(1697, {
                                                                    connection: J$.R(1689, 'connection', connection, 0)
                                                                }, 11, false), J$.T(2265, function (err, r) {
                                                                    jalangiLabel3138:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(2233, arguments.callee, this, arguments);
                                                                                arguments = J$.N(2241, 'arguments', arguments, 4);
                                                                                err = J$.N(2249, 'err', err, 4);
                                                                                r = J$.N(2257, 'r', r, 4);
                                                                                J$.X1(1729, count = J$.W(1721, 'count', J$.B(130, '-', J$.R(1705, 'count', count, 0), J$.T(1713, 1, 22, false), 0), count, 0));
                                                                                if (J$.X1(3417, J$.C(80, J$.R(1737, 'err', err, 0)))) {
                                                                                    J$.X1(1761, errorObject = J$.W(1753, 'errorObject', J$.R(1745, 'err', err, 0), errorObject, 0));
                                                                                } else if (J$.X1(3409, J$.C(72, J$.G(1793, J$.G(1777, J$.R(1769, 'r', r, 0), 'result', 0), J$.T(1785, '$err', 21, false), 4)))) {
                                                                                    J$.X1(1825, errorObject = J$.W(1817, 'errorObject', J$.G(1809, J$.R(1801, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                                } else if (J$.X1(3401, J$.C(64, J$.G(1857, J$.G(1841, J$.R(1833, 'r', r, 0), 'result', 0), J$.T(1849, 'errmsg', 21, false), 4)))) {
                                                                                    J$.X1(1889, errorObject = J$.W(1881, 'errorObject', J$.G(1873, J$.R(1865, 'r', r, 0), 'result', 0), errorObject, 0));
                                                                                } else {
                                                                                    J$.X1(1913, credentialsValid = J$.W(1905, 'credentialsValid', J$.T(1897, true, 23, false), credentialsValid, 0));
                                                                                    J$.X1(1945, numberOfValidConnections = J$.W(1937, 'numberOfValidConnections', J$.B(138, '+', J$.R(1921, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1929, 1, 22, false), 0), numberOfValidConnections, 0));
                                                                                }
                                                                                if (J$.X1(3441, J$.C(112, J$.C(88, J$.B(146, '==', J$.R(1953, 'count', count, 0), J$.T(1961, 0, 22, false), 0)) ? J$.B(154, '>', J$.R(1969, 'numberOfValidConnections', numberOfValidConnections, 0), J$.T(1977, 0, 22, false), 0) : J$._()))) {
                                                                                    J$.X1(2057, J$.F(2049, J$.R(1985, 'addAuthSession', addAuthSession, 1), 0)(J$.G(2001, J$.R(1993, 'self', self, 0), 'authStore', 0), J$.F(2041, J$.R(2009, 'AuthSession', AuthSession, 1), 1)(J$.R(2017, 'db', db, 0), J$.R(2025, 'username', username, 0), J$.R(2033, 'password', password, 0))));
                                                                                    J$.X1(2097, J$.F(2089, J$.R(2065, 'callback', callback, 0), 0)(J$.T(2073, null, 25, false), J$.T(2081, true, 23, false)));
                                                                                } else if (J$.X1(3433, J$.C(104, J$.B(162, '==', J$.R(2105, 'count', count, 0), J$.T(2113, 0, 22, false), 0)))) {
                                                                                    if (J$.X1(3425, J$.C(96, J$.B(170, '==', J$.R(2121, 'errorObject', errorObject, 0), J$.T(2129, null, 25, false), 0))))
                                                                                        J$.X1(2185, errorObject = J$.W(2177, 'errorObject', J$.F(2169, J$.R(2137, 'MongoError', MongoError, 1), 1)(J$.F(2161, J$.R(2145, 'f', f, 1), 0)(J$.T(2153, 'failed to authenticate using mongocr', 21, false))), errorObject, 0));
                                                                                    J$.X1(2225, J$.F(2217, J$.R(2193, 'callback', callback, 0), 0)(J$.R(2201, 'errorObject', errorObject, 0), J$.T(2209, false, 23, false)));
                                                                                }
                                                                            } catch (J$e) {
                                                                                J$.Ex(3449, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(3457))
                                                                                    continue jalangiLabel3138;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 2233)));
                                                            } catch (J$e) {
                                                                J$.Ex(3465, J$e);
                                                            } finally {
                                                                if (J$.Fr(3473))
                                                                    continue jalangiLabel3139;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 2289)));
                                            } catch (J$e) {
                                                J$.Ex(3481, J$e);
                                            } finally {
                                                if (J$.Fr(3489))
                                                    continue jalangiLabel3140;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2377), executeMongoCR, 1));
                                J$.X1(2457, J$.F(2449, J$.R(2425, 'executeMongoCR', executeMongoCR, 0), 0)(J$.M(2441, J$.R(2433, 'connections', connections, 0), 'shift', 0)()));
                            }
                        } catch (J$e) {
                            J$.Ex(3505, J$e);
                        } finally {
                            if (J$.Fr(3513))
                                continue jalangiLabel3141;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2465), 0));
            J$.X1(3177, J$.P(3169, J$.G(2617, J$.R(2609, 'MongoCR', MongoCR, 1), 'prototype', 0), 'reauthenticate', J$.T(3161, function (server, pool, callback) {
                jalangiLabel3143:
                    while (true) {
                        try {
                            J$.Fe(3105, arguments.callee, this, arguments);
                            arguments = J$.N(3113, 'arguments', arguments, 4);
                            server = J$.N(3121, 'server', server, 4);
                            pool = J$.N(3129, 'pool', pool, 4);
                            callback = J$.N(3137, 'callback', callback, 4);
                            J$.N(3145, 'count', count, 0);
                            J$.N(3153, 'i', i, 0);
                            var count = J$.X1(2657, J$.W(2649, 'count', J$.G(2641, J$.G(2633, J$.R(2625, 'this', this, 0), 'authStore', 0), 'length', 0), count, 1));
                            if (J$.X1(3521, J$.C(128, J$.B(178, '==', J$.R(2665, 'count', count, 0), J$.T(2673, 0, 22, false), 0))))
                                return J$.X1(2721, J$.Rt(2713, J$.F(2705, J$.R(2681, 'callback', callback, 0), 0)(J$.T(2689, null, 25, false), J$.T(2697, null, 25, false))));
                            for (var i = J$.X1(2745, J$.W(2737, 'i', J$.T(2729, 0, 22, false), i, 1)); J$.X1(3553, J$.C(144, J$.B(186, '<', J$.R(2753, 'i', i, 0), J$.G(2777, J$.G(2769, J$.R(2761, 'this', this, 0), 'authStore', 0), 'length', 0), 0))); J$.X1(3561, J$.B(210, '-', i = J$.W(2801, 'i', J$.B(202, '+', J$.U(194, '+', J$.R(2793, 'i', i, 0)), J$.T(2785, 1, 22, false), 0), i, 0), J$.T(2809, 1, 22, false), 0))) {
                                J$.X1(3097, J$.M(3089, J$.R(2817, 'this', this, 0), 'auth', 0)(J$.R(2825, 'server', server, 0), J$.R(2833, 'pool', pool, 0), J$.G(2873, J$.G(2865, J$.G(2849, J$.R(2841, 'this', this, 0), 'authStore', 0), J$.R(2857, 'i', i, 0), 4), 'db', 0), J$.G(2913, J$.G(2905, J$.G(2889, J$.R(2881, 'this', this, 0), 'authStore', 0), J$.R(2897, 'i', i, 0), 4), 'username', 0), J$.G(2953, J$.G(2945, J$.G(2929, J$.R(2921, 'this', this, 0), 'authStore', 0), J$.R(2937, 'i', i, 0), 4), 'password', 0), J$.T(3081, function (err, r) {
                                    jalangiLabel3142:
                                        while (true) {
                                            try {
                                                J$.Fe(3049, arguments.callee, this, arguments);
                                                arguments = J$.N(3057, 'arguments', arguments, 4);
                                                err = J$.N(3065, 'err', err, 4);
                                                r = J$.N(3073, 'r', r, 4);
                                                J$.X1(2985, count = J$.W(2977, 'count', J$.B(218, '-', J$.R(2961, 'count', count, 0), J$.T(2969, 1, 22, false), 0), count, 0));
                                                if (J$.X1(3529, J$.C(136, J$.B(226, '==', J$.R(2993, 'count', count, 0), J$.T(3001, 0, 22, false), 0)))) {
                                                    J$.X1(3041, J$.F(3033, J$.R(3009, 'callback', callback, 0), 0)(J$.T(3017, null, 25, false), J$.T(3025, null, 25, false)));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(3537, J$e);
                                            } finally {
                                                if (J$.Fr(3545))
                                                    continue jalangiLabel3142;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 3049)));
                            }
                        } catch (J$e) {
                            J$.Ex(3569, J$e);
                        } finally {
                            if (J$.Fr(3577))
                                continue jalangiLabel3143;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3105), 0));
            J$.X1(3209, J$.P(3201, J$.R(3185, 'module', module, 2), 'exports', J$.R(3193, 'MongoCR', MongoCR, 1), 0));
        } catch (J$e) {
            J$.Ex(3585, J$e);
        } finally {
            if (J$.Sr(3593)) {
                J$.L();
                continue jalangiLabel3144;
            } else {
                J$.L();
                break jalangiLabel3144;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
