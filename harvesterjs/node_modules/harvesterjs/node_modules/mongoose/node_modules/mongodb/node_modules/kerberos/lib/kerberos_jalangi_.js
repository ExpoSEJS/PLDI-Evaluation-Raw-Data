J$.iids = {"8":[11,9,11,39],"9":[1,20,1,27],"10":[11,9,11,25],"16":[18,9,18,39],"17":[1,28,1,32],"18":[11,9,11,39],"24":[25,9,25,39],"25":[1,20,1,33],"26":[18,9,18,25],"32":[35,9,35,53],"33":[1,20,1,33],"34":[18,9,18,39],"40":[40,9,40,51],"41":[1,20,1,33],"42":[25,9,25,25],"48":[43,9,43,39],"49":[2,26,2,38],"50":[25,9,25,39],"56":[69,9,69,55],"57":[2,26,2,45],"58":[35,9,35,38],"64":[69,9,69,55],"65":[2,26,2,45],"66":[35,9,35,53],"72":[85,5,85,33],"73":[2,26,2,45],"74":[40,9,40,38],"81":[3,16,3,23],"82":[40,9,40,51],"89":[3,24,3,51],"90":[43,9,43,24],"97":[3,16,3,52],"98":[43,9,43,39],"105":[3,71,3,79],"106":[47,31,47,54],"113":[3,71,3,88],"114":[47,30,47,54],"121":[3,16,3,52],"122":[69,9,69,25],"129":[3,16,3,52],"130":[69,9,69,37],"137":[3,71,3,88],"138":[69,41,69,55],"145":[3,71,3,88],"153":[5,5,5,9],"161":[5,33,5,47],"169":[5,29,5,49],"177":[5,5,5,49],"185":[5,5,5,50],"193":[4,16,6,2],"201":[4,16,6,2],"209":[4,16,6,2],"217":[4,16,6,2],"225":[4,16,6,2],"233":[7,1,7,9],"241":[7,1,7,19],"249":[8,12,8,16],"257":[8,12,8,33],"265":[8,52,8,55],"273":[8,57,8,62],"281":[8,64,8,72],"289":[8,12,8,73],"291":[8,12,8,51],"297":[8,12,8,73],"305":[8,5,8,74],"313":[7,40,9,2],"321":[7,40,9,2],"329":[7,40,9,2],"337":[7,40,9,2],"345":[7,40,9,2],"353":[7,40,9,2],"361":[7,1,9,2],"369":[7,1,9,3],"377":[10,1,10,9],"385":[10,1,10,19],"393":[11,16,11,25],"401":[11,29,11,39],"409":[12,20,12,29],"417":[12,20,12,29],"425":[12,9,12,30],"433":[13,21,13,23],"441":[13,21,13,23],"449":[13,9,13,24],"457":[15,12,15,16],"465":[15,12,15,33],"473":[15,52,15,59],"481":[15,61,15,70],"489":[15,72,15,80],"497":[15,12,15,81],"499":[15,12,15,51],"505":[15,12,15,81],"513":[15,5,15,82],"521":[10,40,16,2],"529":[10,40,16,2],"537":[10,40,16,2],"545":[10,40,16,2],"553":[10,40,16,2],"561":[10,40,16,2],"569":[10,1,16,2],"577":[10,1,16,3],"585":[17,1,17,9],"593":[17,1,17,19],"601":[18,16,18,25],"609":[18,29,18,39],"617":[19,20,19,29],"625":[19,20,19,29],"633":[19,9,19,30],"641":[20,21,20,23],"649":[20,21,20,23],"657":[20,9,20,24],"665":[22,12,22,16],"673":[22,12,22,33],"681":[22,54,22,61],"689":[22,63,22,72],"697":[22,74,22,82],"705":[22,12,22,83],"707":[22,12,22,53],"713":[22,12,22,83],"721":[22,5,22,84],"729":[17,42,23,2],"737":[17,42,23,2],"745":[17,42,23,2],"753":[17,42,23,2],"761":[17,42,23,2],"769":[17,42,23,2],"777":[17,1,23,2],"785":[17,1,23,3],"793":[24,1,24,9],"801":[24,1,24,19],"809":[25,16,25,25],"817":[25,29,25,39],"825":[26,20,26,29],"833":[26,20,26,29],"841":[26,9,26,30],"849":[27,21,27,23],"857":[27,21,27,23],"865":[27,9,27,24],"873":[29,12,29,16],"881":[29,12,29,33],"889":[29,52,29,59],"897":[29,61,29,70],"905":[29,72,29,81],"913":[29,83,29,91],"921":[29,12,29,92],"923":[29,12,29,51],"929":[29,12,29,92],"937":[29,5,29,93],"945":[24,40,30,2],"953":[24,40,30,2],"961":[24,40,30,2],"969":[24,40,30,2],"977":[24,40,30,2],"985":[24,40,30,2],"993":[24,40,30,2],"1001":[24,1,30,2],"1009":[24,1,30,3],"1017":[31,1,31,9],"1025":[31,1,31,19],"1033":[32,12,32,16],"1041":[32,12,32,33],"1049":[32,53,32,60],"1057":[32,62,32,70],"1065":[32,12,32,71],"1067":[32,12,32,52],"1073":[32,12,32,71],"1081":[32,5,32,72],"1089":[31,41,33,2],"1097":[31,41,33,2],"1105":[31,41,33,2],"1113":[31,41,33,2],"1121":[31,41,33,2],"1129":[31,1,33,2],"1137":[31,1,33,3],"1145":[34,1,34,9],"1153":[34,1,34,19],"1161":[35,16,35,38],"1169":[35,43,35,53],"1177":[36,20,36,42],"1185":[36,20,36,42],"1193":[36,9,36,43],"1201":[37,34,37,39],"1209":[37,34,37,39],"1217":[37,9,37,40],"1225":[38,20,38,24],"1233":[38,20,38,24],"1241":[38,9,38,25],"1249":[40,16,40,38],"1257":[40,43,40,51],"1265":[41,19,41,24],"1273":[41,25,41,111],"1281":[41,15,41,112],"1289":[41,15,41,112],"1297":[41,9,41,113],"1305":[43,16,43,24],"1313":[43,29,43,39],"1321":[44,20,44,28],"1329":[44,20,44,28],"1337":[44,9,44,29],"1345":[45,20,45,24],"1353":[45,20,45,24],"1361":[45,9,45,25],"1369":[47,32,47,54],"1377":[47,30,47,54],"1385":[47,5,47,55],"1393":[48,12,48,16],"1401":[48,12,48,33],"1409":[48,52,48,59],"1417":[48,61,48,83],"1425":[48,85,48,93],"1433":[48,95,48,103],"1441":[48,12,48,104],"1443":[48,12,48,51],"1449":[48,12,48,104],"1457":[48,5,48,105],"1465":[34,40,49,2],"1473":[34,40,49,2],"1481":[34,40,49,2],"1489":[34,40,49,2],"1497":[34,40,49,2],"1505":[34,40,49,2],"1513":[34,40,49,2],"1521":[34,1,49,2],"1529":[34,1,49,3],"1537":[50,1,50,9],"1545":[50,1,50,19],"1553":[51,12,51,16],"1561":[51,12,51,33],"1569":[51,53,51,60],"1577":[51,62,51,70],"1585":[51,12,51,71],"1587":[51,12,51,52],"1593":[51,12,51,71],"1601":[51,5,51,72],"1609":[50,41,52,2],"1617":[50,41,52,2],"1625":[50,41,52,2],"1633":[50,41,52,2],"1641":[50,41,52,2],"1649":[50,1,52,2],"1657":[50,1,52,3],"1665":[53,1,53,9],"1673":[53,1,53,19],"1681":[54,12,54,16],"1689":[54,12,54,33],"1697":[54,52,54,59],"1705":[54,61,54,69],"1713":[54,71,54,79],"1721":[54,12,54,80],"1723":[54,12,54,51],"1729":[54,12,54,80],"1737":[54,5,54,81],"1745":[53,40,55,2],"1753":[53,40,55,2],"1761":[53,40,55,2],"1769":[53,40,55,2],"1777":[53,40,55,2],"1785":[53,40,55,2],"1793":[53,1,55,2],"1801":[53,1,55,3],"1809":[56,1,56,9],"1817":[56,1,56,19],"1825":[57,12,57,16],"1833":[57,12,57,33],"1841":[57,62,57,71],"1849":[57,73,57,81],"1857":[57,83,57,89],"1865":[57,12,57,90],"1867":[57,12,57,61],"1873":[57,12,57,90],"1881":[57,5,57,91],"1889":[56,50,58,2],"1897":[56,50,58,2],"1905":[56,50,58,2],"1913":[56,50,58,2],"1921":[56,50,58,2],"1929":[56,50,58,2],"1937":[56,1,58,2],"1945":[56,1,58,3],"1953":[59,1,59,9],"1961":[59,1,59,19],"1969":[60,12,60,16],"1977":[60,12,60,33],"1985":[60,57,60,66],"1993":[60,68,60,77],"2001":[60,12,60,78],"2003":[60,12,60,56],"2009":[60,12,60,78],"2017":[60,5,60,79],"2025":[59,45,61,2],"2033":[59,45,61,2],"2041":[59,45,61,2],"2049":[59,45,61,2],"2057":[59,45,61,2],"2065":[59,1,61,2],"2073":[59,1,61,3],"2081":[62,1,62,9],"2089":[62,1,62,19],"2097":[63,12,63,16],"2105":[63,12,63,33],"2113":[63,49,63,58],"2121":[63,12,63,59],"2123":[63,12,63,48],"2129":[63,12,63,59],"2137":[63,5,63,60],"2145":[62,37,64,2],"2153":[62,37,64,2],"2161":[62,37,64,2],"2169":[62,37,64,2],"2177":[62,1,64,2],"2185":[62,1,64,3],"2193":[65,1,65,9],"2201":[65,1,65,19],"2209":[66,12,66,16],"2217":[66,12,66,33],"2225":[66,49,66,58],"2233":[66,12,66,59],"2235":[66,12,66,48],"2241":[66,12,66,59],"2249":[66,5,66,60],"2257":[65,37,67,2],"2265":[65,37,67,2],"2273":[65,37,67,2],"2281":[65,37,67,2],"2289":[65,1,67,2],"2297":[65,1,67,3],"2305":[68,1,68,9],"2313":[68,1,68,19],"2321":[69,16,69,25],"2329":[69,29,69,37],"2337":[69,41,69,50],"2345":[69,54,69,55],"2353":[70,19,70,24],"2361":[70,25,70,50],"2369":[70,15,70,51],"2377":[70,15,70,51],"2385":[70,9,70,52],"2393":[71,12,71,16],"2401":[71,12,71,33],"2409":[71,56,71,65],"2417":[71,12,71,66],"2419":[71,12,71,55],"2425":[71,12,71,66],"2433":[71,5,71,67],"2441":[68,44,72,2],"2449":[68,44,72,2],"2457":[68,44,72,2],"2465":[68,44,72,2],"2473":[68,1,72,2],"2481":[68,1,72,3],"2489":[73,1,73,9],"2497":[73,30,73,31],"2505":[73,1,73,31],"2513":[73,1,73,32],"2521":[74,1,74,9],"2529":[74,30,74,31],"2537":[74,1,74,31],"2545":[74,1,74,32],"2553":[75,1,75,9],"2561":[75,29,75,30],"2569":[75,1,75,30],"2577":[75,1,75,31],"2585":[76,1,76,9],"2593":[76,30,76,31],"2601":[76,1,76,31],"2609":[76,1,76,32],"2617":[77,1,77,9],"2625":[77,30,77,31],"2633":[77,1,77,31],"2641":[77,1,77,32],"2649":[78,1,78,9],"2657":[78,32,78,33],"2665":[78,1,78,33],"2673":[78,1,78,34],"2681":[79,1,79,9],"2689":[79,28,79,30],"2697":[79,1,79,30],"2705":[79,1,79,31],"2713":[80,1,80,9],"2721":[80,29,80,31],"2729":[80,1,80,31],"2737":[80,1,80,32],"2745":[81,1,81,9],"2753":[81,28,81,30],"2761":[81,1,81,30],"2769":[81,1,81,31],"2777":[82,1,82,9],"2785":[82,34,82,37],"2793":[82,1,82,37],"2801":[82,1,82,38],"2809":[83,1,83,9],"2817":[83,29,83,32],"2825":[83,1,83,32],"2833":[83,1,83,33],"2841":[84,1,84,8],"2849":[84,20,84,28],"2857":[84,1,84,28],"2865":[84,1,84,29],"2873":[85,5,85,13],"2881":[85,5,85,33],"2889":[86,5,86,12],"2897":[87,30,87,37],"2905":[87,38,87,77],"2913":[87,30,87,78],"2921":[87,30,87,98],"2929":[88,26,88,33],"2937":[88,34,88,69],"2945":[88,26,88,70],"2953":[88,26,88,86],"2961":[89,25,89,32],"2969":[89,33,89,67],"2977":[89,25,89,68],"2985":[89,25,89,83],"2993":[90,35,90,42],"3001":[90,43,90,88],"3009":[90,35,90,89],"3017":[90,35,90,114],"3025":[86,20,91,6],"3033":[86,5,91,6],"3041":[86,5,91,7],"3049":[1,1,92,2],"3057":[1,1,92,2],"3065":[1,1,92,2],"3073":[1,1,92,2],"3081":[1,1,92,2],"3089":[1,1,92,2],"3097":[4,16,6,2],"3105":[4,16,6,2],"3113":[7,40,9,2],"3121":[7,40,9,2],"3129":[11,5,14,6],"3137":[10,40,16,2],"3145":[10,40,16,2],"3153":[18,5,21,6],"3161":[17,42,23,2],"3169":[17,42,23,2],"3177":[25,5,28,6],"3185":[24,40,30,2],"3193":[24,40,30,2],"3201":[31,41,33,2],"3209":[31,41,33,2],"3217":[35,5,39,6],"3225":[40,5,42,6],"3233":[43,5,46,6],"3241":[34,40,49,2],"3249":[34,40,49,2],"3257":[50,41,52,2],"3265":[50,41,52,2],"3273":[53,40,55,2],"3281":[53,40,55,2],"3289":[56,50,58,2],"3297":[56,50,58,2],"3305":[59,45,61,2],"3313":[59,45,61,2],"3321":[62,37,64,2],"3329":[62,37,64,2],"3337":[65,37,67,2],"3345":[65,37,67,2],"3353":[69,5,70,52],"3361":[68,44,72,2],"3369":[68,44,72,2],"3377":[85,1,92,2],"3385":[1,1,92,2],"3393":[1,1,92,2],"nBranches":18,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos_jalangi_.js","code":"var kerberos = require('../build/Release/kerberos')\n  , KerberosNative = kerberos.Kerberos;\n\nvar Kerberos = function() {\n  this._native_kerberos = new KerberosNative(); \n}\n\n// callback takes two arguments, an error string if defined and a new context\n// uri should be given as service@host.  Services are not always defined\n// in a straightforward way.  Use 'HTTP' for SPNEGO / Negotiate authentication. \nKerberos.prototype.authGSSClientInit = function(uri, flags, callback) {\n  return this._native_kerberos.authGSSClientInit(uri, flags, callback);\n}\n\n// This will obtain credentials using a credentials cache. To override the default\n// location (posible /tmp/krb5cc_nnnnnn, where nnnn is your numeric uid) use \n// the environment variable KRB5CNAME. \n// The credentials (suitable for using in an 'Authenticate: ' header, when prefixed\n// with 'Negotiate ') will be available as context.response inside the callback\n// if no error is indicated.\n// callback takes one argument, an error string if defined\nKerberos.prototype.authGSSClientStep = function(context, challenge, callback) {\n  if(typeof challenge == 'function') {\n    callback = challenge;\n    challenge = '';\n  }\n\n  return this._native_kerberos.authGSSClientStep(context, challenge, callback);\n}\n\nKerberos.prototype.authGSSClientUnwrap = function(context, challenge, callback) {\n  if(typeof challenge == 'function') {\n    callback = challenge;\n    challenge = '';\n  }\n\n  return this._native_kerberos.authGSSClientUnwrap(context, challenge, callback);\n}\n\nKerberos.prototype.authGSSClientWrap = function(context, challenge, user_name, callback) {\n  if(typeof user_name == 'function') {\n    callback = user_name;\n    user_name = '';\n  }\n\n  return this._native_kerberos.authGSSClientWrap(context, challenge, user_name, callback);\n}\n\n// free memory used by a context created using authGSSClientInit.\n// callback takes one argument, an error string if defined.\nKerberos.prototype.authGSSClientClean = function(context, callback) {\n  return this._native_kerberos.authGSSClientClean(context, callback);\n}\n\n// The server will obtain credentials using a keytab.  To override the \n// default location (probably /etc/krb5.keytab) set the KRB5_KTNAME\n// environment variable.\n// The service name should be in the form service, or service@host.name\n// e.g. for HTTP, use \"HTTP\" or \"HTTP@my.host.name\". See gss_import_name\n// for GSS_C_NT_HOSTBASED_SERVICE.\n//\n// a boolean turns on \"constrained_delegation\". this enables acquisition of S4U2Proxy \n// credentials which will be stored in a credentials cache during the authGSSServerStep\n// method. this parameter is optional.\n//\n// when \"constrained_delegation\" is enabled, a username can (optionally) be provided and\n// S4U2Self protocol transition will be initiated. In this case, we will not\n// require any \"auth\" data during the authGSSServerStep. This parameter is optional\n// but constrained_delegation MUST be enabled for this to work. When S4U2Self is\n// used, the username will be assumed to have been already authenticated, and no\n// actual authentication will be performed. This is basically a way to \"bootstrap\"\n// kerberos credentials (which can then be delegated with S4U2Proxy) for a user\n// authenticated externally.\n//\n// callback takes two arguments, an error string if defined and a new context\n//\nKerberos.prototype.authGSSServerInit = function(service, constrained_delegation, username, callback) {\n  if(typeof(constrained_delegation) === 'function') {\n\t  callback = constrained_delegation;\n\t  constrained_delegation = false;\n\t  username = null;\n  }\n\n  if (typeof(constrained_delegation) === 'string') {\n\t  throw new Error(\"S4U2Self protocol transation is not possible without enabling constrained delegation\");\n  }\n\n  if (typeof(username) === 'function') {\n\t  callback = username;\n\t  username = null;\n  }\n\n  constrained_delegation = !!constrained_delegation;\n  \n  return this._native_kerberos.authGSSServerInit(service, constrained_delegation, username, callback);\n};\n\n//callback takes one argument, an error string if defined.\nKerberos.prototype.authGSSServerClean = function(context, callback) {\n  return this._native_kerberos.authGSSServerClean(context, callback);\n};\n\n// authData should be the base64 encoded authentication data obtained\n// from client, e.g., in the Authorization header (without the leading \n// \"Negotiate \" string) during SPNEGO authentication.  The authenticated user \n// is available in context.username after successful authentication.\n// callback takes one argument, an error string if defined.\n//\n// Note: when S4U2Self protocol transition was requested in the authGSSServerInit\n// no actual authentication will be performed and authData will be ignored.\n//\nKerberos.prototype.authGSSServerStep = function(context, authData, callback) {\n  return this._native_kerberos.authGSSServerStep(context, authData, callback);\n};\n\nKerberos.prototype.acquireAlternateCredentials = function(user_name, password, domain) {\n  return this._native_kerberos.acquireAlternateCredentials(user_name, password, domain); \n}\n\nKerberos.prototype.prepareOutboundPackage = function(principal, inputdata) {\n  return this._native_kerberos.prepareOutboundPackage(principal, inputdata); \n}\n\nKerberos.prototype.decryptMessage = function(challenge) {\n  return this._native_kerberos.decryptMessage(challenge);\n}\n\nKerberos.prototype.encryptMessage = function(challenge) {\n  return this._native_kerberos.encryptMessage(challenge); \n}\n\nKerberos.prototype.queryContextAttribute = function(attribute) {\n  if(typeof attribute != 'number' && attribute != 0x00) throw new Error(\"Attribute not supported\");\n  return this._native_kerberos.queryContextAttribute(attribute);\n}\n\n// Some useful result codes\nKerberos.AUTH_GSS_CONTINUE     = 0;\nKerberos.AUTH_GSS_COMPLETE     = 1;\n     \n// Some useful gss flags \nKerberos.GSS_C_DELEG_FLAG      = 1;\nKerberos.GSS_C_MUTUAL_FLAG     = 2;\nKerberos.GSS_C_REPLAY_FLAG     = 4;\nKerberos.GSS_C_SEQUENCE_FLAG   = 8;\nKerberos.GSS_C_CONF_FLAG       = 16; \nKerberos.GSS_C_INTEG_FLAG      = 32;\nKerberos.GSS_C_ANON_FLAG       = 64;\nKerberos.GSS_C_PROT_READY_FLAG = 128; \nKerberos.GSS_C_TRANS_FLAG      = 256;\n\n// Export Kerberos class\nexports.Kerberos = Kerberos;\n\n// If we have SSPI (windows)\nif(kerberos.SecurityCredentials) {\n  // Put all SSPI classes in it's own namespace\n  exports.SSIP = {\n      SecurityCredentials: require('./win32/wrappers/security_credentials').SecurityCredentials\n    , SecurityContext: require('./win32/wrappers/security_context').SecurityContext\n    , SecurityBuffer: require('./win32/wrappers/security_buffer').SecurityBuffer\n    , SecurityBufferDescriptor: require('./win32/wrappers/security_buffer_descriptor').SecurityBufferDescriptor\n  }\n}\n"};
jalangiLabel3237:
    while (true) {
        try {
            J$.Se(3049, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/kerberos/lib/kerberos.js');
            J$.N(3057, '__secret__S$', __secret__S$, 0);
            J$.N(3065, '__secret__traits__', __secret__traits__, 0);
            J$.N(3073, 'kerberos', kerberos, 0);
            J$.N(3081, 'KerberosNative', KerberosNative, 0);
            J$.N(3089, 'Kerberos', Kerberos, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var kerberos = J$.X1(129, J$.W(121, 'kerberos', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../build/Release/kerberos', 21, false)), kerberos, 3)), KerberosNative = J$.X1(145, J$.W(137, 'KerberosNative', J$.G(113, J$.R(105, 'kerberos', kerberos, 1), 'Kerberos', 0), KerberosNative, 3));
            var Kerberos = J$.X1(225, J$.W(217, 'Kerberos', J$.T(209, function () {
                jalangiLabel3223:
                    while (true) {
                        try {
                            J$.Fe(193, arguments.callee, this, arguments);
                            arguments = J$.N(201, 'arguments', arguments, 4);
                            J$.X1(185, J$.P(177, J$.R(153, 'this', this, 0), '_native_kerberos', J$.F(169, J$.R(161, 'KerberosNative', KerberosNative, 1), 1)(), 0));
                        } catch (J$e) {
                            J$.Ex(3097, J$e);
                        } finally {
                            if (J$.Fr(3105))
                                continue jalangiLabel3223;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 193), Kerberos, 3));
            J$.X1(369, J$.P(361, J$.G(241, J$.R(233, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSClientInit', J$.T(353, function (uri, flags, callback) {
                jalangiLabel3224:
                    while (true) {
                        try {
                            J$.Fe(313, arguments.callee, this, arguments);
                            arguments = J$.N(321, 'arguments', arguments, 4);
                            uri = J$.N(329, 'uri', uri, 4);
                            flags = J$.N(337, 'flags', flags, 4);
                            callback = J$.N(345, 'callback', callback, 4);
                            return J$.X1(305, J$.Rt(297, J$.M(289, J$.G(257, J$.R(249, 'this', this, 0), '_native_kerberos', 0), 'authGSSClientInit', 0)(J$.R(265, 'uri', uri, 0), J$.R(273, 'flags', flags, 0), J$.R(281, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3113, J$e);
                        } finally {
                            if (J$.Fr(3121))
                                continue jalangiLabel3224;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 313), 0));
            J$.X1(577, J$.P(569, J$.G(385, J$.R(377, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSClientStep', J$.T(561, function (context, challenge, callback) {
                jalangiLabel3225:
                    while (true) {
                        try {
                            J$.Fe(521, arguments.callee, this, arguments);
                            arguments = J$.N(529, 'arguments', arguments, 4);
                            context = J$.N(537, 'context', context, 4);
                            challenge = J$.N(545, 'challenge', challenge, 4);
                            callback = J$.N(553, 'callback', callback, 4);
                            if (J$.X1(3129, J$.C(8, J$.B(18, '==', J$.U(10, 'typeof', J$.R(393, 'challenge', challenge, 0)), J$.T(401, 'function', 21, false), 0)))) {
                                J$.X1(425, callback = J$.W(417, 'callback', J$.R(409, 'challenge', challenge, 0), callback, 0));
                                J$.X1(449, challenge = J$.W(441, 'challenge', J$.T(433, '', 21, false), challenge, 0));
                            }
                            return J$.X1(513, J$.Rt(505, J$.M(497, J$.G(465, J$.R(457, 'this', this, 0), '_native_kerberos', 0), 'authGSSClientStep', 0)(J$.R(473, 'context', context, 0), J$.R(481, 'challenge', challenge, 0), J$.R(489, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3137, J$e);
                        } finally {
                            if (J$.Fr(3145))
                                continue jalangiLabel3225;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 521), 0));
            J$.X1(785, J$.P(777, J$.G(593, J$.R(585, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSClientUnwrap', J$.T(769, function (context, challenge, callback) {
                jalangiLabel3226:
                    while (true) {
                        try {
                            J$.Fe(729, arguments.callee, this, arguments);
                            arguments = J$.N(737, 'arguments', arguments, 4);
                            context = J$.N(745, 'context', context, 4);
                            challenge = J$.N(753, 'challenge', challenge, 4);
                            callback = J$.N(761, 'callback', callback, 4);
                            if (J$.X1(3153, J$.C(16, J$.B(34, '==', J$.U(26, 'typeof', J$.R(601, 'challenge', challenge, 0)), J$.T(609, 'function', 21, false), 0)))) {
                                J$.X1(633, callback = J$.W(625, 'callback', J$.R(617, 'challenge', challenge, 0), callback, 0));
                                J$.X1(657, challenge = J$.W(649, 'challenge', J$.T(641, '', 21, false), challenge, 0));
                            }
                            return J$.X1(721, J$.Rt(713, J$.M(705, J$.G(673, J$.R(665, 'this', this, 0), '_native_kerberos', 0), 'authGSSClientUnwrap', 0)(J$.R(681, 'context', context, 0), J$.R(689, 'challenge', challenge, 0), J$.R(697, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3161, J$e);
                        } finally {
                            if (J$.Fr(3169))
                                continue jalangiLabel3226;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 729), 0));
            J$.X1(1009, J$.P(1001, J$.G(801, J$.R(793, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSClientWrap', J$.T(993, function (context, challenge, user_name, callback) {
                jalangiLabel3227:
                    while (true) {
                        try {
                            J$.Fe(945, arguments.callee, this, arguments);
                            arguments = J$.N(953, 'arguments', arguments, 4);
                            context = J$.N(961, 'context', context, 4);
                            challenge = J$.N(969, 'challenge', challenge, 4);
                            user_name = J$.N(977, 'user_name', user_name, 4);
                            callback = J$.N(985, 'callback', callback, 4);
                            if (J$.X1(3177, J$.C(24, J$.B(50, '==', J$.U(42, 'typeof', J$.R(809, 'user_name', user_name, 0)), J$.T(817, 'function', 21, false), 0)))) {
                                J$.X1(841, callback = J$.W(833, 'callback', J$.R(825, 'user_name', user_name, 0), callback, 0));
                                J$.X1(865, user_name = J$.W(857, 'user_name', J$.T(849, '', 21, false), user_name, 0));
                            }
                            return J$.X1(937, J$.Rt(929, J$.M(921, J$.G(881, J$.R(873, 'this', this, 0), '_native_kerberos', 0), 'authGSSClientWrap', 0)(J$.R(889, 'context', context, 0), J$.R(897, 'challenge', challenge, 0), J$.R(905, 'user_name', user_name, 0), J$.R(913, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3185, J$e);
                        } finally {
                            if (J$.Fr(3193))
                                continue jalangiLabel3227;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 945), 0));
            J$.X1(1137, J$.P(1129, J$.G(1025, J$.R(1017, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSClientClean', J$.T(1121, function (context, callback) {
                jalangiLabel3228:
                    while (true) {
                        try {
                            J$.Fe(1089, arguments.callee, this, arguments);
                            arguments = J$.N(1097, 'arguments', arguments, 4);
                            context = J$.N(1105, 'context', context, 4);
                            callback = J$.N(1113, 'callback', callback, 4);
                            return J$.X1(1081, J$.Rt(1073, J$.M(1065, J$.G(1041, J$.R(1033, 'this', this, 0), '_native_kerberos', 0), 'authGSSClientClean', 0)(J$.R(1049, 'context', context, 0), J$.R(1057, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3201, J$e);
                        } finally {
                            if (J$.Fr(3209))
                                continue jalangiLabel3228;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1089), 0));
            J$.X1(1529, J$.P(1521, J$.G(1153, J$.R(1145, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSServerInit', J$.T(1513, function (service, constrained_delegation, username, callback) {
                jalangiLabel3229:
                    while (true) {
                        try {
                            J$.Fe(1465, arguments.callee, this, arguments);
                            arguments = J$.N(1473, 'arguments', arguments, 4);
                            service = J$.N(1481, 'service', service, 4);
                            constrained_delegation = J$.N(1489, 'constrained_delegation', constrained_delegation, 4);
                            username = J$.N(1497, 'username', username, 4);
                            callback = J$.N(1505, 'callback', callback, 4);
                            if (J$.X1(3217, J$.C(32, J$.B(66, '===', J$.U(58, 'typeof', J$.R(1161, 'constrained_delegation', constrained_delegation, 0)), J$.T(1169, 'function', 21, false), 0)))) {
                                J$.X1(1193, callback = J$.W(1185, 'callback', J$.R(1177, 'constrained_delegation', constrained_delegation, 0), callback, 0));
                                J$.X1(1217, constrained_delegation = J$.W(1209, 'constrained_delegation', J$.T(1201, false, 23, false), constrained_delegation, 0));
                                J$.X1(1241, username = J$.W(1233, 'username', J$.T(1225, null, 25, false), username, 0));
                            }
                            if (J$.X1(3225, J$.C(40, J$.B(82, '===', J$.U(74, 'typeof', J$.R(1249, 'constrained_delegation', constrained_delegation, 0)), J$.T(1257, 'string', 21, false), 0)))) {
                                throw J$.X1(1297, J$.Th(1289, J$.F(1281, J$.R(1265, 'Error', Error, 2), 1)(J$.T(1273, 'S4U2Self protocol transation is not possible without enabling constrained delegation', 21, false))));
                            }
                            if (J$.X1(3233, J$.C(48, J$.B(98, '===', J$.U(90, 'typeof', J$.R(1305, 'username', username, 0)), J$.T(1313, 'function', 21, false), 0)))) {
                                J$.X1(1337, callback = J$.W(1329, 'callback', J$.R(1321, 'username', username, 0), callback, 0));
                                J$.X1(1361, username = J$.W(1353, 'username', J$.T(1345, null, 25, false), username, 0));
                            }
                            J$.X1(1385, constrained_delegation = J$.W(1377, 'constrained_delegation', J$.U(114, '!', J$.U(106, '!', J$.R(1369, 'constrained_delegation', constrained_delegation, 0))), constrained_delegation, 0));
                            return J$.X1(1457, J$.Rt(1449, J$.M(1441, J$.G(1401, J$.R(1393, 'this', this, 0), '_native_kerberos', 0), 'authGSSServerInit', 0)(J$.R(1409, 'service', service, 0), J$.R(1417, 'constrained_delegation', constrained_delegation, 0), J$.R(1425, 'username', username, 0), J$.R(1433, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3241, J$e);
                        } finally {
                            if (J$.Fr(3249))
                                continue jalangiLabel3229;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1465), 0));
            J$.X1(1657, J$.P(1649, J$.G(1545, J$.R(1537, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSServerClean', J$.T(1641, function (context, callback) {
                jalangiLabel3230:
                    while (true) {
                        try {
                            J$.Fe(1609, arguments.callee, this, arguments);
                            arguments = J$.N(1617, 'arguments', arguments, 4);
                            context = J$.N(1625, 'context', context, 4);
                            callback = J$.N(1633, 'callback', callback, 4);
                            return J$.X1(1601, J$.Rt(1593, J$.M(1585, J$.G(1561, J$.R(1553, 'this', this, 0), '_native_kerberos', 0), 'authGSSServerClean', 0)(J$.R(1569, 'context', context, 0), J$.R(1577, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3257, J$e);
                        } finally {
                            if (J$.Fr(3265))
                                continue jalangiLabel3230;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1609), 0));
            J$.X1(1801, J$.P(1793, J$.G(1673, J$.R(1665, 'Kerberos', Kerberos, 1), 'prototype', 0), 'authGSSServerStep', J$.T(1785, function (context, authData, callback) {
                jalangiLabel3231:
                    while (true) {
                        try {
                            J$.Fe(1745, arguments.callee, this, arguments);
                            arguments = J$.N(1753, 'arguments', arguments, 4);
                            context = J$.N(1761, 'context', context, 4);
                            authData = J$.N(1769, 'authData', authData, 4);
                            callback = J$.N(1777, 'callback', callback, 4);
                            return J$.X1(1737, J$.Rt(1729, J$.M(1721, J$.G(1689, J$.R(1681, 'this', this, 0), '_native_kerberos', 0), 'authGSSServerStep', 0)(J$.R(1697, 'context', context, 0), J$.R(1705, 'authData', authData, 0), J$.R(1713, 'callback', callback, 0))));
                        } catch (J$e) {
                            J$.Ex(3273, J$e);
                        } finally {
                            if (J$.Fr(3281))
                                continue jalangiLabel3231;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1745), 0));
            J$.X1(1945, J$.P(1937, J$.G(1817, J$.R(1809, 'Kerberos', Kerberos, 1), 'prototype', 0), 'acquireAlternateCredentials', J$.T(1929, function (user_name, password, domain) {
                jalangiLabel3232:
                    while (true) {
                        try {
                            J$.Fe(1889, arguments.callee, this, arguments);
                            arguments = J$.N(1897, 'arguments', arguments, 4);
                            user_name = J$.N(1905, 'user_name', user_name, 4);
                            password = J$.N(1913, 'password', password, 4);
                            domain = J$.N(1921, 'domain', domain, 4);
                            return J$.X1(1881, J$.Rt(1873, J$.M(1865, J$.G(1833, J$.R(1825, 'this', this, 0), '_native_kerberos', 0), 'acquireAlternateCredentials', 0)(J$.R(1841, 'user_name', user_name, 0), J$.R(1849, 'password', password, 0), J$.R(1857, 'domain', domain, 0))));
                        } catch (J$e) {
                            J$.Ex(3289, J$e);
                        } finally {
                            if (J$.Fr(3297))
                                continue jalangiLabel3232;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1889), 0));
            J$.X1(2073, J$.P(2065, J$.G(1961, J$.R(1953, 'Kerberos', Kerberos, 1), 'prototype', 0), 'prepareOutboundPackage', J$.T(2057, function (principal, inputdata) {
                jalangiLabel3233:
                    while (true) {
                        try {
                            J$.Fe(2025, arguments.callee, this, arguments);
                            arguments = J$.N(2033, 'arguments', arguments, 4);
                            principal = J$.N(2041, 'principal', principal, 4);
                            inputdata = J$.N(2049, 'inputdata', inputdata, 4);
                            return J$.X1(2017, J$.Rt(2009, J$.M(2001, J$.G(1977, J$.R(1969, 'this', this, 0), '_native_kerberos', 0), 'prepareOutboundPackage', 0)(J$.R(1985, 'principal', principal, 0), J$.R(1993, 'inputdata', inputdata, 0))));
                        } catch (J$e) {
                            J$.Ex(3305, J$e);
                        } finally {
                            if (J$.Fr(3313))
                                continue jalangiLabel3233;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2025), 0));
            J$.X1(2185, J$.P(2177, J$.G(2089, J$.R(2081, 'Kerberos', Kerberos, 1), 'prototype', 0), 'decryptMessage', J$.T(2169, function (challenge) {
                jalangiLabel3234:
                    while (true) {
                        try {
                            J$.Fe(2145, arguments.callee, this, arguments);
                            arguments = J$.N(2153, 'arguments', arguments, 4);
                            challenge = J$.N(2161, 'challenge', challenge, 4);
                            return J$.X1(2137, J$.Rt(2129, J$.M(2121, J$.G(2105, J$.R(2097, 'this', this, 0), '_native_kerberos', 0), 'decryptMessage', 0)(J$.R(2113, 'challenge', challenge, 0))));
                        } catch (J$e) {
                            J$.Ex(3321, J$e);
                        } finally {
                            if (J$.Fr(3329))
                                continue jalangiLabel3234;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2145), 0));
            J$.X1(2297, J$.P(2289, J$.G(2201, J$.R(2193, 'Kerberos', Kerberos, 1), 'prototype', 0), 'encryptMessage', J$.T(2281, function (challenge) {
                jalangiLabel3235:
                    while (true) {
                        try {
                            J$.Fe(2257, arguments.callee, this, arguments);
                            arguments = J$.N(2265, 'arguments', arguments, 4);
                            challenge = J$.N(2273, 'challenge', challenge, 4);
                            return J$.X1(2249, J$.Rt(2241, J$.M(2233, J$.G(2217, J$.R(2209, 'this', this, 0), '_native_kerberos', 0), 'encryptMessage', 0)(J$.R(2225, 'challenge', challenge, 0))));
                        } catch (J$e) {
                            J$.Ex(3337, J$e);
                        } finally {
                            if (J$.Fr(3345))
                                continue jalangiLabel3235;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2257), 0));
            J$.X1(2481, J$.P(2473, J$.G(2313, J$.R(2305, 'Kerberos', Kerberos, 1), 'prototype', 0), 'queryContextAttribute', J$.T(2465, function (attribute) {
                jalangiLabel3236:
                    while (true) {
                        try {
                            J$.Fe(2441, arguments.callee, this, arguments);
                            arguments = J$.N(2449, 'arguments', arguments, 4);
                            attribute = J$.N(2457, 'attribute', attribute, 4);
                            if (J$.X1(3353, J$.C(64, J$.C(56, J$.B(130, '!=', J$.U(122, 'typeof', J$.R(2321, 'attribute', attribute, 0)), J$.T(2329, 'number', 21, false), 0)) ? J$.B(138, '!=', J$.R(2337, 'attribute', attribute, 0), J$.T(2345, 0, 22, false), 0) : J$._())))
                                throw J$.X1(2385, J$.Th(2377, J$.F(2369, J$.R(2353, 'Error', Error, 2), 1)(J$.T(2361, 'Attribute not supported', 21, false))));
                            return J$.X1(2433, J$.Rt(2425, J$.M(2417, J$.G(2401, J$.R(2393, 'this', this, 0), '_native_kerberos', 0), 'queryContextAttribute', 0)(J$.R(2409, 'attribute', attribute, 0))));
                        } catch (J$e) {
                            J$.Ex(3361, J$e);
                        } finally {
                            if (J$.Fr(3369))
                                continue jalangiLabel3236;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2441), 0));
            J$.X1(2513, J$.P(2505, J$.R(2489, 'Kerberos', Kerberos, 1), 'AUTH_GSS_CONTINUE', J$.T(2497, 0, 22, false), 0));
            J$.X1(2545, J$.P(2537, J$.R(2521, 'Kerberos', Kerberos, 1), 'AUTH_GSS_COMPLETE', J$.T(2529, 1, 22, false), 0));
            J$.X1(2577, J$.P(2569, J$.R(2553, 'Kerberos', Kerberos, 1), 'GSS_C_DELEG_FLAG', J$.T(2561, 1, 22, false), 0));
            J$.X1(2609, J$.P(2601, J$.R(2585, 'Kerberos', Kerberos, 1), 'GSS_C_MUTUAL_FLAG', J$.T(2593, 2, 22, false), 0));
            J$.X1(2641, J$.P(2633, J$.R(2617, 'Kerberos', Kerberos, 1), 'GSS_C_REPLAY_FLAG', J$.T(2625, 4, 22, false), 0));
            J$.X1(2673, J$.P(2665, J$.R(2649, 'Kerberos', Kerberos, 1), 'GSS_C_SEQUENCE_FLAG', J$.T(2657, 8, 22, false), 0));
            J$.X1(2705, J$.P(2697, J$.R(2681, 'Kerberos', Kerberos, 1), 'GSS_C_CONF_FLAG', J$.T(2689, 16, 22, false), 0));
            J$.X1(2737, J$.P(2729, J$.R(2713, 'Kerberos', Kerberos, 1), 'GSS_C_INTEG_FLAG', J$.T(2721, 32, 22, false), 0));
            J$.X1(2769, J$.P(2761, J$.R(2745, 'Kerberos', Kerberos, 1), 'GSS_C_ANON_FLAG', J$.T(2753, 64, 22, false), 0));
            J$.X1(2801, J$.P(2793, J$.R(2777, 'Kerberos', Kerberos, 1), 'GSS_C_PROT_READY_FLAG', J$.T(2785, 128, 22, false), 0));
            J$.X1(2833, J$.P(2825, J$.R(2809, 'Kerberos', Kerberos, 1), 'GSS_C_TRANS_FLAG', J$.T(2817, 256, 22, false), 0));
            J$.X1(2865, J$.P(2857, J$.R(2841, 'exports', exports, 2), 'Kerberos', J$.R(2849, 'Kerberos', Kerberos, 1), 0));
            if (J$.X1(3377, J$.C(72, J$.G(2881, J$.R(2873, 'kerberos', kerberos, 1), 'SecurityCredentials', 0)))) {
                J$.X1(3041, J$.P(3033, J$.R(2889, 'exports', exports, 2), 'SSIP', J$.T(3025, {
                    SecurityCredentials: J$.G(2921, J$.F(2913, J$.R(2897, 'require', require, 2), 0)(J$.T(2905, './win32/wrappers/security_credentials', 21, false)), 'SecurityCredentials', 0),
                    SecurityContext: J$.G(2953, J$.F(2945, J$.R(2929, 'require', require, 2), 0)(J$.T(2937, './win32/wrappers/security_context', 21, false)), 'SecurityContext', 0),
                    SecurityBuffer: J$.G(2985, J$.F(2977, J$.R(2961, 'require', require, 2), 0)(J$.T(2969, './win32/wrappers/security_buffer', 21, false)), 'SecurityBuffer', 0),
                    SecurityBufferDescriptor: J$.G(3017, J$.F(3009, J$.R(2993, 'require', require, 2), 0)(J$.T(3001, './win32/wrappers/security_buffer_descriptor', 21, false)), 'SecurityBufferDescriptor', 0)
                }, 11, false), 0));
            }
        } catch (J$e) {
            J$.Ex(3385, J$e);
        } finally {
            if (J$.Sr(3393)) {
                J$.L();
                continue jalangiLabel3237;
            } else {
                J$.L();
                break jalangiLabel3237;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
