J$.iids = {"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,13],"89":[3,1,3,14],"97":[4,16,4,23],"105":[4,24,4,30],"113":[4,16,4,31],"121":[4,16,4,40],"129":[4,46,4,53],"137":[4,54,4,60],"145":[4,46,4,61],"153":[4,46,4,68],"161":[4,85,4,92],"169":[4,93,4,101],"177":[4,85,4,102],"185":[4,85,4,115],"193":[4,16,4,40],"201":[4,16,4,40],"209":[4,46,4,68],"217":[4,46,4,68],"225":[4,85,4,115],"233":[4,85,4,115],"241":[6,5,6,9],"249":[6,20,6,27],"257":[6,5,6,27],"265":[6,5,6,28],"273":[7,5,7,9],"281":[7,21,7,29],"289":[7,5,7,29],"297":[7,5,7,30],"305":[8,5,8,17],"313":[8,23,8,27],"321":[8,5,8,28],"323":[8,5,8,22],"329":[8,5,8,29],"337":[5,15,9,2],"345":[5,15,9,2],"353":[5,15,9,2],"361":[5,15,9,2],"369":[5,15,9,2],"377":[5,15,9,2],"385":[5,15,9,2],"393":[10,1,10,9],"401":[10,10,10,17],"409":[10,19,10,31],"417":[10,1,10,32],"425":[10,1,10,33],"433":[11,1,11,8],"441":[11,1,11,18],"449":[12,5,12,9],"457":[12,5,12,18],"465":[12,27,12,29],"473":[12,31,12,34],"481":[12,36,12,43],"489":[12,45,12,53],"497":[12,5,12,54],"499":[12,5,12,26],"505":[12,5,12,55],"513":[11,29,13,2],"521":[11,29,13,2],"529":[11,29,13,2],"537":[11,29,13,2],"545":[11,29,13,2],"553":[11,29,13,2],"561":[11,29,13,2],"569":[11,1,13,2],"577":[11,1,13,3],"585":[14,1,14,8],"593":[14,1,14,18],"601":[15,5,15,9],"609":[15,5,15,18],"617":[15,26,15,28],"625":[15,30,15,33],"633":[15,35,15,42],"641":[15,44,15,52],"649":[15,5,15,53],"651":[15,5,15,25],"657":[15,5,15,54],"665":[14,28,16,2],"673":[14,28,16,2],"681":[14,28,16,2],"689":[14,28,16,2],"697":[14,28,16,2],"705":[14,28,16,2],"713":[14,28,16,2],"721":[14,1,16,2],"729":[14,1,16,3],"737":[17,1,17,8],"745":[17,1,17,18],"753":[18,5,18,9],"761":[18,5,18,18],"769":[18,26,18,28],"777":[18,30,18,33],"785":[18,35,18,42],"793":[18,44,18,52],"801":[18,5,18,53],"803":[18,5,18,25],"809":[18,5,18,54],"817":[17,28,19,2],"825":[17,28,19,2],"833":[17,28,19,2],"841":[17,28,19,2],"849":[17,28,19,2],"857":[17,28,19,2],"865":[17,28,19,2],"873":[17,1,19,2],"881":[17,1,19,3],"889":[20,1,20,8],"897":[20,1,20,18],"905":[21,5,21,9],"913":[21,5,21,18],"921":[21,26,21,28],"929":[21,30,21,33],"937":[21,35,21,42],"945":[21,44,21,52],"953":[21,5,21,53],"955":[21,5,21,25],"961":[21,5,21,54],"969":[20,28,22,2],"977":[20,28,22,2],"985":[20,28,22,2],"993":[20,28,22,2],"1001":[20,28,22,2],"1009":[20,28,22,2],"1017":[20,28,22,2],"1025":[20,1,22,2],"1033":[20,1,22,3],"1041":[23,1,23,8],"1049":[23,1,23,18],"1057":[24,12,24,16],"1065":[24,12,24,25],"1073":[24,33,24,35],"1081":[24,37,24,40],"1089":[24,42,24,49],"1097":[24,12,24,50],"1099":[24,12,24,32],"1105":[24,12,24,50],"1113":[24,5,24,51],"1121":[23,28,25,2],"1129":[23,28,25,2],"1137":[23,28,25,2],"1145":[23,28,25,2],"1153":[23,28,25,2],"1161":[23,28,25,2],"1169":[23,1,25,2],"1177":[23,1,25,3],"1185":[26,1,26,7],"1193":[26,18,26,25],"1201":[26,1,26,25],"1209":[26,1,26,26],"1217":[1,1,26,26],"1225":[1,1,26,26],"1233":[1,1,26,26],"1241":[1,1,26,26],"1249":[1,1,26,26],"1257":[1,1,26,26],"1265":[1,1,26,26],"1273":[5,15,9,2],"1281":[5,15,9,2],"1289":[11,29,13,2],"1297":[11,29,13,2],"1305":[14,28,16,2],"1313":[14,28,16,2],"1321":[17,28,19,2],"1329":[17,28,19,2],"1337":[20,28,22,2],"1345":[20,28,22,2],"1353":[23,28,25,2],"1361":[23,28,25,2],"1369":[1,1,26,26],"1377":[1,1,26,26],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/session.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/session_jalangi_.js","code":"\"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , EventEmitter = require('events').EventEmitter;\n\n/**\n * Creates a new Authentication Session\n * @class\n * @param {object} [options] Options for the session\n * @param {{Server}|{ReplSet}|{Mongos}} topology The topology instance underpinning the session\n */\nvar Session = function(options, topology) {\n  this.options = options;\n  this.topology = topology;\n  \n  // Add event listener\n  EventEmitter.call(this);\n}\n\ninherits(Session, EventEmitter);\n\n/**\n * Execute a command\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {object} cmd The command hash\n * @param {object} [options.readPreference] Specify read preference if command supports it\n * @param {object} [options.connection] Specify connection object to execute command against\n * @param {opResultCallback} callback A callback function\n */\nSession.prototype.command = function(ns, cmd, options, callback) {\n  this.topology.command(ns, cmd, options, callback);\n}\n\n/**\n * Insert one or more documents\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of documents to insert\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {opResultCallback} callback A callback function\n */\nSession.prototype.insert = function(ns, ops, options, callback) {\n  this.topology.insert(ns, ops, options, callback);\n}\n\n/**\n * Perform one or more update operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of updates\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {opResultCallback} callback A callback function\n */\nSession.prototype.update = function(ns, ops, options, callback) {\n  this.topology.update(ns, ops, options, callback);\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {array} ops An array of removes\n * @param {boolean} [options.ordered=true] Execute in order or out of order\n * @param {object} [options.writeConcern={}] Write concern for the operation\n * @param {opResultCallback} callback A callback function\n */\nSession.prototype.remove = function(ns, ops, options, callback) {\n  this.topology.remove(ns, ops, options, callback);\n}\n\n/**\n * Perform one or more remove operations\n * @method\n * @param {string} ns The MongoDB fully qualified namespace (ex: db1.collection1)\n * @param {{object}|{Long}} cmd Can be either a command returning a cursor or a cursorId\n * @param {object} [options.batchSize=0] Batchsize for the operation\n * @param {array} [options.documents=[]] Initial documents list for cursor\n * @param {boolean} [options.tailable=false] Tailable flag set\n * @param {boolean} [options.oplogReply=false] oplogReply flag set\n * @param {boolean} [options.awaitdata=false] awaitdata flag set\n * @param {boolean} [options.exhaust=false] exhaust flag set\n * @param {boolean} [options.partial=false] partial flag set\n * @param {opResultCallback} callback A callback function\n */\nSession.prototype.cursor = function(ns, cmd, options) {\n  return this.topology.cursor(ns, cmd, options);\n}  \n\nmodule.exports = Session;"};
jalangiLabel3133:
    while (true) {
        try {
            J$.Se(1217, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/session_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/node_modules/mongodb-core/lib/topologies/session.js');
            J$.N(1225, '__secret__S$', __secret__S$, 0);
            J$.N(1233, '__secret__traits__', __secret__traits__, 0);
            J$.N(1241, 'inherits', inherits, 0);
            J$.N(1249, 'f', f, 0);
            J$.N(1257, 'EventEmitter', EventEmitter, 0);
            J$.N(1265, 'Session', Session, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(201, J$.W(193, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(217, J$.W(209, 'f', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'util', 21, false)), 'format', 0), f, 3)), EventEmitter = J$.X1(233, J$.W(225, 'EventEmitter', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3));
            var Session = J$.X1(385, J$.W(377, 'Session', J$.T(369, function (options, topology) {
                jalangiLabel3127:
                    while (true) {
                        try {
                            J$.Fe(337, arguments.callee, this, arguments);
                            arguments = J$.N(345, 'arguments', arguments, 4);
                            options = J$.N(353, 'options', options, 4);
                            topology = J$.N(361, 'topology', topology, 4);
                            J$.X1(265, J$.P(257, J$.R(241, 'this', this, 0), 'options', J$.R(249, 'options', options, 0), 0));
                            J$.X1(297, J$.P(289, J$.R(273, 'this', this, 0), 'topology', J$.R(281, 'topology', topology, 0), 0));
                            J$.X1(329, J$.M(321, J$.R(305, 'EventEmitter', EventEmitter, 1), 'call', 0)(J$.R(313, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1273, J$e);
                        } finally {
                            if (J$.Fr(1281))
                                continue jalangiLabel3127;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 337), Session, 3));
            J$.X1(425, J$.F(417, J$.R(393, 'inherits', inherits, 1), 0)(J$.R(401, 'Session', Session, 1), J$.R(409, 'EventEmitter', EventEmitter, 1)));
            J$.X1(577, J$.P(569, J$.G(441, J$.R(433, 'Session', Session, 1), 'prototype', 0), 'command', J$.T(561, function (ns, cmd, options, callback) {
                jalangiLabel3128:
                    while (true) {
                        try {
                            J$.Fe(513, arguments.callee, this, arguments);
                            arguments = J$.N(521, 'arguments', arguments, 4);
                            ns = J$.N(529, 'ns', ns, 4);
                            cmd = J$.N(537, 'cmd', cmd, 4);
                            options = J$.N(545, 'options', options, 4);
                            callback = J$.N(553, 'callback', callback, 4);
                            J$.X1(505, J$.M(497, J$.G(457, J$.R(449, 'this', this, 0), 'topology', 0), 'command', 0)(J$.R(465, 'ns', ns, 0), J$.R(473, 'cmd', cmd, 0), J$.R(481, 'options', options, 0), J$.R(489, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(1289, J$e);
                        } finally {
                            if (J$.Fr(1297))
                                continue jalangiLabel3128;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 513), 0));
            J$.X1(729, J$.P(721, J$.G(593, J$.R(585, 'Session', Session, 1), 'prototype', 0), 'insert', J$.T(713, function (ns, ops, options, callback) {
                jalangiLabel3129:
                    while (true) {
                        try {
                            J$.Fe(665, arguments.callee, this, arguments);
                            arguments = J$.N(673, 'arguments', arguments, 4);
                            ns = J$.N(681, 'ns', ns, 4);
                            ops = J$.N(689, 'ops', ops, 4);
                            options = J$.N(697, 'options', options, 4);
                            callback = J$.N(705, 'callback', callback, 4);
                            J$.X1(657, J$.M(649, J$.G(609, J$.R(601, 'this', this, 0), 'topology', 0), 'insert', 0)(J$.R(617, 'ns', ns, 0), J$.R(625, 'ops', ops, 0), J$.R(633, 'options', options, 0), J$.R(641, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(1305, J$e);
                        } finally {
                            if (J$.Fr(1313))
                                continue jalangiLabel3129;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 665), 0));
            J$.X1(881, J$.P(873, J$.G(745, J$.R(737, 'Session', Session, 1), 'prototype', 0), 'update', J$.T(865, function (ns, ops, options, callback) {
                jalangiLabel3130:
                    while (true) {
                        try {
                            J$.Fe(817, arguments.callee, this, arguments);
                            arguments = J$.N(825, 'arguments', arguments, 4);
                            ns = J$.N(833, 'ns', ns, 4);
                            ops = J$.N(841, 'ops', ops, 4);
                            options = J$.N(849, 'options', options, 4);
                            callback = J$.N(857, 'callback', callback, 4);
                            J$.X1(809, J$.M(801, J$.G(761, J$.R(753, 'this', this, 0), 'topology', 0), 'update', 0)(J$.R(769, 'ns', ns, 0), J$.R(777, 'ops', ops, 0), J$.R(785, 'options', options, 0), J$.R(793, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(1321, J$e);
                        } finally {
                            if (J$.Fr(1329))
                                continue jalangiLabel3130;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 817), 0));
            J$.X1(1033, J$.P(1025, J$.G(897, J$.R(889, 'Session', Session, 1), 'prototype', 0), 'remove', J$.T(1017, function (ns, ops, options, callback) {
                jalangiLabel3131:
                    while (true) {
                        try {
                            J$.Fe(969, arguments.callee, this, arguments);
                            arguments = J$.N(977, 'arguments', arguments, 4);
                            ns = J$.N(985, 'ns', ns, 4);
                            ops = J$.N(993, 'ops', ops, 4);
                            options = J$.N(1001, 'options', options, 4);
                            callback = J$.N(1009, 'callback', callback, 4);
                            J$.X1(961, J$.M(953, J$.G(913, J$.R(905, 'this', this, 0), 'topology', 0), 'remove', 0)(J$.R(921, 'ns', ns, 0), J$.R(929, 'ops', ops, 0), J$.R(937, 'options', options, 0), J$.R(945, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(1337, J$e);
                        } finally {
                            if (J$.Fr(1345))
                                continue jalangiLabel3131;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 969), 0));
            J$.X1(1177, J$.P(1169, J$.G(1049, J$.R(1041, 'Session', Session, 1), 'prototype', 0), 'cursor', J$.T(1161, function (ns, cmd, options) {
                jalangiLabel3132:
                    while (true) {
                        try {
                            J$.Fe(1121, arguments.callee, this, arguments);
                            arguments = J$.N(1129, 'arguments', arguments, 4);
                            ns = J$.N(1137, 'ns', ns, 4);
                            cmd = J$.N(1145, 'cmd', cmd, 4);
                            options = J$.N(1153, 'options', options, 4);
                            return J$.X1(1113, J$.Rt(1105, J$.M(1097, J$.G(1065, J$.R(1057, 'this', this, 0), 'topology', 0), 'cursor', 0)(J$.R(1073, 'ns', ns, 0), J$.R(1081, 'cmd', cmd, 0), J$.R(1089, 'options', options, 0))));
                        } catch (J$e) {
                            J$.Ex(1353, J$e);
                        } finally {
                            if (J$.Fr(1361))
                                continue jalangiLabel3132;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1121), 0));
            J$.X1(1209, J$.P(1201, J$.R(1185, 'module', module, 2), 'exports', J$.R(1193, 'Session', Session, 1), 0));
        } catch (J$e) {
            J$.Ex(1369, J$e);
        } finally {
            if (J$.Sr(1377)) {
                J$.L();
                continue jalangiLabel3133;
            } else {
                J$.L();
                break jalangiLabel3133;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
