J$.iids = {"8":[4,477,4,542],"9":[1,20,1,27],"10":[26,9,26,24],"16":[22,27,22,55],"17":[1,28,1,32],"18":[27,26,27,47],"24":[23,33,23,69],"25":[1,20,1,33],"26":[27,26,27,61],"32":[27,26,27,61],"33":[1,20,1,33],"34":[45,20,45,58],"40":[26,9,26,24],"41":[1,20,1,33],"42":[57,9,57,24],"48":[62,21,62,25],"49":[2,26,2,38],"50":[57,9,57,38],"56":[58,13,58,30],"57":[2,26,2,45],"58":[62,21,62,25],"64":[57,9,57,38],"65":[2,26,2,45],"66":[74,21,74,50],"72":[74,21,74,67],"73":[2,26,2,45],"74":[78,21,78,25],"80":[74,21,74,67],"81":[3,1,3,13],"82":[92,9,92,24],"88":[76,21,76,24],"89":[3,1,3,14],"90":[92,9,92,38],"96":[78,21,78,25],"97":[4,16,4,23],"98":[119,9,119,38],"104":[70,13,70,30],"105":[4,24,4,30],"106":[119,42,119,69],"112":[93,13,93,30],"113":[4,16,4,31],"114":[133,9,133,38],"120":[92,9,92,38],"121":[4,16,4,40],"122":[133,42,133,69],"128":[102,13,102,30],"129":[4,46,4,53],"130":[147,9,147,38],"136":[108,17,108,20],"137":[4,54,4,60],"138":[147,42,147,69],"144":[119,9,119,69],"145":[4,46,4,61],"146":[161,9,161,38],"152":[119,9,119,86],"153":[4,46,4,68],"154":[161,42,161,69],"160":[119,9,119,86],"161":[4,80,4,87],"162":[175,9,175,38],"168":[133,9,133,69],"169":[4,88,4,97],"170":[175,42,175,69],"176":[133,9,133,86],"177":[4,80,4,98],"178":[189,9,189,38],"184":[133,9,133,86],"185":[4,80,4,106],"186":[189,42,189,69],"192":[147,9,147,69],"193":[4,128,4,135],"194":[203,9,203,38],"200":[147,9,147,86],"201":[4,136,4,145],"202":[203,42,203,69],"208":[147,9,147,86],"209":[4,128,4,146],"210":[217,9,217,38],"216":[161,9,161,69],"217":[4,128,4,164],"218":[217,42,217,69],"224":[161,9,161,86],"225":[4,189,4,196],"226":[231,9,231,38],"232":[161,9,161,86],"233":[4,197,4,206],"234":[231,42,231,69],"240":[175,9,175,69],"241":[4,189,4,207],"242":[236,34,236,36],"248":[175,9,175,86],"249":[4,189,4,228],"250":[236,9,236,36],"256":[175,9,175,86],"257":[4,247,4,254],"258":[242,9,242,35],"264":[189,9,189,69],"265":[4,255,4,264],"266":[252,9,252,38],"272":[189,9,189,86],"273":[4,247,4,265],"274":[252,42,252,69],"280":[189,9,189,86],"281":[4,247,4,280],"282":[257,32,257,34],"288":[203,9,203,69],"289":[4,291,4,298],"290":[257,9,257,34],"296":[203,9,203,86],"297":[4,299,4,313],"298":[262,9,262,21],"304":[203,9,203,86],"305":[4,291,4,314],"306":[262,9,262,34],"312":[217,9,217,69],"313":[4,291,4,321],"314":[276,9,276,38],"320":[217,9,217,86],"321":[4,338,4,345],"322":[276,42,276,69],"328":[217,9,217,86],"329":[4,346,4,354],"330":[281,9,281,23],"336":[231,9,231,69],"337":[4,338,4,355],"338":[288,9,288,27],"344":[231,9,231,86],"345":[4,338,4,368],"346":[298,9,298,38],"352":[231,9,231,86],"353":[4,387,4,394],"354":[298,42,298,69],"360":[236,9,236,36],"361":[4,395,4,414],"362":[312,9,312,21],"368":[242,9,242,35],"369":[4,387,4,415],"370":[312,9,312,33],"376":[252,9,252,69],"377":[4,430,4,437],"378":[317,9,317,38],"384":[252,9,252,86],"385":[4,438,4,452],"386":[317,42,317,69],"392":[252,9,252,86],"393":[4,430,4,453],"394":[337,9,337,38],"400":[257,9,257,34],"401":[4,430,4,464],"402":[337,42,337,69],"408":[262,9,262,34],"409":[4,477,4,484],"410":[356,9,356,38],"416":[276,9,276,69],"417":[4,485,4,493],"418":[356,42,356,69],"424":[276,9,276,86],"425":[4,477,4,494],"426":[368,17,368,30],"432":[276,9,276,86],"433":[4,477,4,503],"434":[370,24,370,38],"440":[281,9,281,23],"441":[4,507,4,514],"442":[371,28,371,30],"448":[288,9,288,27],"449":[4,515,4,532],"450":[372,24,372,33],"456":[298,9,298,69],"457":[4,507,4,533],"458":[372,45,372,47],"464":[298,9,298,86],"465":[4,507,4,542],"466":[372,37,372,47],"472":[298,9,298,86],"473":[4,553,4,560],"474":[380,9,380,26],"480":[312,9,312,33],"481":[4,561,4,573],"482":[401,9,401,38],"488":[317,9,317,69],"489":[4,553,4,574],"490":[406,9,406,21],"496":[317,9,317,86],"497":[4,589,4,596],"498":[406,9,406,33],"504":[317,9,317,86],"505":[4,597,4,611],"506":[426,9,426,36],"512":[337,9,337,69],"513":[4,589,4,612],"514":[426,40,426,69],"520":[337,9,337,86],"521":[4,589,4,619],"522":[431,9,431,21],"528":[337,9,337,86],"529":[4,627,4,634],"530":[431,9,431,33],"536":[351,9,351,32],"537":[4,635,4,649],"538":[451,9,451,36],"544":[356,9,356,69],"545":[4,627,4,650],"546":[451,40,451,69],"552":[356,9,356,86],"553":[4,627,4,655],"554":[456,9,456,21],"560":[356,9,356,86],"561":[4,627,4,659],"562":[456,9,456,33],"568":[362,9,362,56],"569":[4,669,4,676],"570":[472,9,472,38],"576":[372,24,372,47],"577":[4,677,4,691],"578":[477,9,477,36],"584":[372,24,372,47],"585":[4,669,4,692],"586":[485,36,485,70],"592":[370,24,370,38],"593":[4,669,4,698],"594":[487,36,487,69],"600":[368,17,368,30],"601":[4,721,4,728],"602":[488,45,488,78],"608":[362,9,362,56],"609":[4,729,4,743],"610":[490,21,490,55],"616":[380,9,380,26],"617":[4,721,4,744],"618":[506,9,506,34],"624":[396,9,396,32],"625":[4,721,4,759],"626":[526,9,526,18],"632":[401,9,401,55],"633":[4,16,4,40],"634":[533,9,533,38],"640":[401,9,401,55],"641":[4,16,4,40],"642":[539,9,539,36],"648":[406,9,406,33],"649":[4,46,4,68],"650":[542,9,542,33],"656":[421,9,421,32],"657":[4,46,4,68],"658":[550,17,550,29],"664":[426,9,426,69],"665":[4,80,4,106],"666":[554,17,554,62],"672":[426,9,426,86],"673":[4,80,4,106],"674":[566,13,566,24],"680":[426,9,426,86],"681":[4,128,4,164],"682":[570,13,570,24],"688":[431,9,431,33],"689":[4,128,4,164],"690":[583,9,583,36],"696":[446,9,446,32],"697":[4,189,4,228],"698":[588,9,588,36],"704":[451,9,451,69],"705":[4,189,4,228],"706":[607,9,607,24],"712":[451,9,451,86],"713":[4,247,4,280],"714":[607,9,607,38],"720":[451,9,451,86],"721":[4,247,4,280],"722":[625,17,625,28],"728":[456,9,456,33],"729":[4,291,4,321],"730":[630,17,630,41],"736":[472,42,472,70],"737":[4,291,4,321],"738":[632,42,632,70],"744":[472,9,472,70],"745":[4,338,4,368],"746":[632,42,632,84],"752":[472,9,472,70],"753":[4,338,4,368],"754":[648,9,648,33],"760":[477,9,477,55],"761":[4,387,4,415],"762":[653,9,653,20],"768":[477,9,477,55],"769":[4,387,4,415],"770":[653,9,653,34],"776":[485,13,485,32],"777":[4,430,4,464],"778":[656,9,656,24],"784":[485,13,485,70],"785":[4,430,4,464],"786":[656,9,656,38],"792":[485,13,485,70],"793":[4,477,4,542],"794":[667,9,667,30],"800":[487,13,487,32],"801":[4,477,4,542],"802":[667,9,667,44],"808":[487,13,487,69],"809":[4,553,4,574],"810":[672,13,672,37],"816":[490,21,490,55],"817":[4,553,4,574],"818":[672,13,672,49],"824":[487,13,487,69],"825":[4,589,4,619],"826":[674,13,674,38],"832":[496,13,496,16],"833":[4,589,4,619],"834":[674,13,674,50],"840":[506,9,506,34],"841":[4,627,4,659],"842":[679,35,679,48],"848":[526,9,526,18],"849":[4,627,4,659],"850":[682,9,682,30],"856":[531,9,531,26],"857":[4,669,4,698],"858":[682,9,682,42],"864":[533,9,533,55],"865":[4,669,4,698],"866":[684,16,684,39],"872":[533,9,533,55],"873":[4,721,4,759],"874":[684,16,684,51],"880":[539,9,539,36],"881":[4,721,4,759],"882":[698,25,698,27],"888":[543,16,543,41],"889":[6,5,6,15],"890":[704,13,704,41],"896":[548,17,548,20],"897":[7,5,7,18],"898":[719,9,719,24],"904":[550,17,550,29],"905":[8,5,8,22],"906":[719,9,719,38],"912":[554,17,554,62],"913":[9,5,9,16],"914":[768,9,768,24],"920":[542,9,542,33],"921":[10,5,10,14],"922":[768,9,768,38],"928":[562,13,562,16],"929":[11,5,11,14],"930":[784,9,784,38],"936":[566,13,566,24],"937":[5,13,12,2],"938":[789,17,789,31],"944":[570,13,570,36],"945":[5,13,12,2],"946":[791,44,791,78],"952":[570,13,570,36],"953":[5,13,12,2],"954":[797,13,797,50],"960":[583,9,583,36],"961":[14,5,14,22],"962":[797,13,797,64],"968":[588,9,588,36],"969":[15,5,15,28],"970":[797,68,797,82],"976":[602,9,602,32],"977":[13,14,16,2],"978":[800,44,800,82],"984":[607,9,607,38],"985":[13,14,16,2],"986":[800,44,800,96],"992":[611,17,611,20],"993":[13,14,16,2],"994":[800,100,800,114],"1000":[623,17,623,20],"1001":[18,5,18,15],"1002":[809,13,809,18],"1008":[625,17,625,28],"1009":[18,22,18,26],"1010":[809,22,809,29],"1016":[632,21,632,84],"1017":[18,28,18,33],"1018":[814,13,814,25],"1024":[632,21,632,84],"1025":[18,28,18,43],"1026":[822,35,822,47],"1032":[630,17,630,41],"1033":[18,28,18,49],"1040":[648,9,648,33],"1041":[18,55,18,64],"1048":[653,9,653,34],"1049":[18,66,18,67],"1056":[655,12,655,22],"1057":[18,28,18,68],"1059":[18,28,18,54],"1064":[656,9,656,38],"1065":[18,5,18,69],"1067":[18,5,18,21],"1072":[660,17,660,20],"1073":[18,5,18,70],"1080":[667,9,667,44],"1081":[19,16,19,20],"1088":[672,13,672,49],"1089":[19,16,19,20],"1096":[674,13,674,50],"1097":[19,16,19,20],"1104":[671,9,671,23],"1105":[20,17,20,23],"1112":[684,16,684,51],"1113":[20,17,20,28],"1120":[682,9,682,42],"1121":[20,17,20,28],"1128":[690,9,690,18],"1129":[20,17,20,28],"1136":[692,9,692,19],"1137":[21,25,21,27],"1144":[694,9,694,28],"1145":[21,25,21,27],"1152":[702,13,702,16],"1153":[21,25,21,27],"1160":[704,46,704,99],"1161":[22,27,22,34],"1168":[704,46,704,130],"1169":[22,27,22,50],"1176":[704,13,704,131],"1177":[22,54,22,55],"1184":[704,13,704,131],"1185":[22,27,22,55],"1192":[719,9,719,38],"1193":[22,27,22,55],"1200":[749,9,749,12],"1201":[23,33,23,40],"1208":[757,28,757,41],"1209":[23,33,23,62],"1216":[768,9,768,38],"1217":[23,66,23,69],"1224":[772,17,772,20],"1225":[23,33,23,69],"1232":[784,9,784,55],"1233":[23,33,23,69],"1240":[784,9,784,55],"1241":[24,34,24,49],"1248":[789,17,789,31],"1249":[24,34,24,49],"1256":[791,17,791,78],"1257":[24,34,24,49],"1264":[791,17,791,78],"1265":[25,26,25,33],"1272":[788,13,788,16],"1273":[25,26,25,48],"1280":[797,13,797,82],"1281":[25,26,25,48],"1288":[797,13,797,82],"1289":[25,26,25,48],"1296":[800,13,800,96],"1297":[26,10,26,24],"1304":[800,13,800,114],"1305":[27,33,27,39],"1312":[800,13,800,114],"1313":[27,33,27,47],"1320":[809,13,809,29],"1321":[27,51,27,61],"1328":[809,13,809,29],"1329":[27,64,27,70],"1336":[812,18,812,33],"1337":[27,64,27,78],"1344":[814,13,814,25],"1345":[27,81,27,88],"1353":[27,89,27,102],"1361":[27,81,27,103],"1369":[27,81,27,111],"1377":[27,26,27,111],"1385":[27,9,27,112],"1393":[29,5,29,13],"1401":[29,19,29,23],"1409":[29,39,29,43],"1417":[29,25,29,45],"1425":[29,5,29,46],"1427":[29,5,29,18],"1433":[29,5,29,47],"1441":[30,5,30,9],"1449":[31,26,31,41],"1457":[32,32,32,53],"1465":[33,33,33,55],"1473":[34,16,34,21],"1481":[35,24,35,37],"1489":[36,15,36,19],"1497":[37,13,37,15],"1505":[38,14,38,17],"1513":[39,18,39,25],"1521":[40,19,40,27],"1529":[41,26,41,41],"1537":[42,25,42,39],"1545":[43,21,43,25],"1553":[30,14,44,6],"1561":[30,5,44,6],"1569":[30,5,44,7],"1577":[45,5,45,9],"1585":[45,20,45,24],"1593":[45,20,45,26],"1601":[45,20,45,34],"1609":[45,20,45,50],"1617":[45,54,45,58],"1625":[45,5,45,58],"1633":[45,5,45,59],"1641":[46,5,46,9],"1649":[46,22,46,26],"1657":[46,22,46,28],"1665":[46,22,46,32],"1673":[46,22,46,37],"1681":[46,5,46,37],"1689":[46,5,46,38],"1697":[47,5,47,9],"1705":[47,27,47,31],"1713":[47,27,47,33],"1721":[47,27,47,41],"1729":[47,27,47,56],"1737":[47,5,47,56],"1745":[47,5,47,57],"1753":[17,14,48,2],"1761":[17,14,48,2],"1769":[17,14,48,2],"1777":[17,14,48,2],"1785":[17,14,48,2],"1793":[17,14,48,2],"1801":[17,14,48,2],"1809":[17,14,48,2],"1817":[17,14,48,2],"1825":[17,14,48,2],"1833":[17,14,48,2],"1841":[17,14,48,2],"1849":[17,14,48,2],"1857":[17,14,48,2],"1865":[17,14,48,2],"1873":[17,14,48,2],"1881":[17,14,48,2],"1889":[17,14,48,2],"1897":[49,1,49,9],"1905":[49,10,49,16],"1913":[49,18,49,26],"1921":[49,1,49,27],"1929":[49,1,49,28],"1937":[50,1,50,11],"1945":[50,1,50,21],"1953":[50,30,50,40],"1961":[50,30,50,50],"1969":[50,30,50,55],"1977":[50,1,50,55],"1985":[50,1,50,56],"1993":[51,18,51,28],"2001":[51,18,51,38],"2009":[52,5,52,11],"2017":[52,5,52,21],"2025":[52,22,52,26],"2033":[52,30,52,40],"2041":[52,30,52,50],"2049":[52,51,52,55],"2057":[52,30,52,56],"2065":[52,5,52,56],"2073":[52,5,52,57],"2081":[51,18,51,38],"2089":[51,1,53,2],"2097":[51,1,53,2],"2105":[54,14,54,20],"2113":[54,34,54,40],"2121":[54,41,54,49],"2129":[54,51,54,57],"2137":[54,59,54,63],"2145":[54,30,54,64],"2153":[54,14,54,64],"2161":[54,14,54,64],"2169":[54,14,54,64],"2177":[55,1,55,7],"2185":[55,1,55,17],"2193":[56,16,56,20],"2201":[56,16,56,20],"2209":[56,16,56,20],"2217":[57,16,57,24],"2225":[57,28,57,38],"2233":[58,13,58,17],"2241":[58,13,58,19],"2249":[58,13,58,30],"2257":[59,20,59,28],"2265":[59,29,59,33],"2273":[59,35,59,39],"2281":[59,20,59,40],"2289":[59,20,59,40],"2297":[59,13,59,41],"2305":[61,20,61,30],"2313":[61,31,61,35],"2321":[62,22,62,25],"2329":[63,28,63,36],"2337":[63,37,63,41],"2345":[63,43,63,48],"2353":[63,28,63,49],"2361":[63,28,63,49],"2369":[63,21,63,50],"2377":[64,17,64,21],"2385":[64,17,64,23],"2393":[64,37,64,40],"2401":[64,17,64,40],"2409":[64,17,64,41],"2417":[65,17,65,25],"2425":[65,26,65,30],"2433":[65,32,65,36],"2441":[65,17,65,37],"2449":[65,17,65,38],"2457":[61,37,66,14],"2465":[61,37,66,14],"2473":[61,37,66,14],"2481":[61,37,66,14],"2489":[61,37,66,14],"2497":[61,20,66,15],"2505":[61,20,66,15],"2513":[61,13,66,16],"2521":[69,16,69,20],"2529":[69,16,69,22],"2537":[70,13,70,17],"2545":[70,13,70,19],"2553":[70,13,70,30],"2561":[71,13,71,20],"2569":[71,21,71,25],"2577":[71,13,71,26],"2585":[71,13,71,27],"2593":[73,13,73,23],"2601":[73,24,73,28],"2609":[74,21,74,25],"2617":[74,21,74,27],"2625":[74,21,74,33],"2633":[74,37,74,43],"2641":[74,37,74,50],"2649":[74,54,74,58],"2657":[74,54,74,67],"2659":[74,54,74,65],"2665":[75,28,75,35],"2673":[75,36,75,41],"2681":[75,28,75,42],"2689":[75,28,75,42],"2697":[75,21,75,43],"2705":[76,21,76,24],"2713":[77,28,77,34],"2721":[77,35,77,38],"2729":[77,28,77,39],"2737":[77,28,77,39],"2745":[77,21,77,40],"2753":[78,22,78,25],"2761":[79,28,79,35],"2769":[79,36,79,41],"2777":[79,28,79,42],"2785":[79,28,79,42],"2793":[79,21,79,43],"2801":[80,17,80,21],"2809":[80,17,80,23],"2817":[80,37,80,40],"2825":[80,17,80,40],"2833":[80,17,80,41],"2841":[81,17,81,24],"2849":[81,25,81,29],"2857":[81,17,81,30],"2865":[81,17,81,31],"2873":[73,30,82,14],"2881":[73,30,82,14],"2889":[73,30,82,14],"2897":[73,30,82,14],"2905":[73,30,82,14],"2913":[73,13,82,15],"2921":[73,13,82,16],"2929":[69,38,84,6],"2937":[69,38,84,6],"2945":[69,38,84,6],"2953":[69,38,84,6],"2961":[69,38,84,6],"2969":[69,12,84,7],"2971":[69,16,69,37],"2977":[69,12,84,7],"2985":[69,5,84,8],"2993":[55,28,85,2],"3001":[55,28,85,2],"3009":[55,28,85,2],"3017":[55,28,85,2],"3025":[55,28,85,2],"3033":[55,1,85,2],"3041":[55,1,85,3],"3049":[86,1,86,7],"3057":[86,20,86,29],"3065":[87,15,87,19],"3073":[88,14,88,18],"3081":[86,31,89,2],"3089":[86,1,89,3],"3091":[86,1,86,19],"3097":[86,1,89,4],"3105":[90,1,90,7],"3113":[90,1,90,17],"3121":[91,16,91,20],"3129":[91,16,91,20],"3137":[91,16,91,20],"3145":[92,16,92,24],"3153":[92,28,92,38],"3161":[93,13,93,17],"3169":[93,13,93,19],"3177":[93,13,93,30],"3185":[94,23,94,27],"3193":[94,23,94,29],"3201":[94,23,94,40],"3209":[94,23,94,40],"3217":[94,23,94,40],"3225":[95,13,95,17],"3233":[95,13,95,19],"3241":[95,33,95,37],"3249":[95,13,95,37],"3257":[95,13,95,38],"3265":[96,20,96,28],"3273":[96,29,96,33],"3281":[96,35,96,38],"3289":[96,20,96,39],"3297":[96,20,96,39],"3305":[96,13,96,40],"3313":[98,16,98,26],"3321":[98,27,98,31],"3329":[98,33,98,41],"3337":[98,16,98,42],"3345":[98,16,98,42],"3353":[98,9,98,43],"3361":[101,16,101,20],"3369":[101,16,101,22],"3377":[102,13,102,17],"3385":[102,13,102,19],"3393":[102,13,102,30],"3401":[103,23,103,27],"3409":[103,23,103,29],"3417":[103,23,103,40],"3425":[103,23,103,40],"3433":[103,23,103,40],"3441":[104,13,104,17],"3449":[104,13,104,19],"3457":[104,33,104,37],"3465":[104,13,104,37],"3473":[104,13,104,38],"3481":[105,20,105,27],"3489":[105,28,105,31],"3497":[105,20,105,32],"3505":[105,20,105,32],"3513":[105,13,105,33],"3521":[107,9,107,19],"3529":[107,20,107,24],"3537":[108,17,108,20],"3545":[109,24,109,30],"3553":[109,31,109,34],"3561":[109,24,109,35],"3569":[109,24,109,35],"3577":[109,17,109,36],"3585":[110,13,110,20],"3593":[110,21,110,22],"3601":[110,13,110,23],"3609":[110,13,110,24],"3617":[107,26,111,10],"3625":[107,26,111,10],"3633":[107,26,111,10],"3641":[107,26,111,10],"3649":[107,26,111,10],"3657":[107,9,111,11],"3665":[107,9,111,12],"3673":[101,38,112,6],"3681":[101,38,112,6],"3689":[101,38,112,6],"3697":[101,38,112,6],"3705":[101,38,112,6],"3713":[101,38,112,6],"3721":[101,12,112,7],"3723":[101,16,101,37],"3729":[101,12,112,7],"3737":[101,5,112,8],"3745":[90,25,113,2],"3753":[90,25,113,2],"3761":[90,25,113,2],"3769":[90,25,113,2],"3777":[90,25,113,2],"3785":[90,25,113,2],"3793":[90,1,113,2],"3801":[90,1,113,3],"3809":[114,1,114,7],"3817":[114,20,114,26],"3825":[115,15,115,19],"3833":[116,14,116,18],"3841":[114,28,117,2],"3849":[114,1,117,3],"3851":[114,1,114,19],"3857":[114,1,117,4],"3865":[118,1,118,7],"3873":[118,1,118,17],"3881":[119,9,119,13],"3889":[119,9,119,15],"3897":[119,9,119,21],"3905":[119,25,119,31],"3913":[119,25,119,38],"3921":[119,42,119,46],"3929":[119,42,119,48],"3937":[119,42,119,54],"3945":[119,58,119,64],"3953":[119,58,119,69],"3961":[119,73,119,77],"3969":[119,73,119,86],"3971":[119,73,119,84],"3977":[120,15,120,25],"3985":[121,22,121,40],"3993":[122,21,122,25],"4001":[120,33,123,10],"4009":[120,15,123,11],"4011":[120,15,120,32],"4017":[120,15,123,11],"4025":[120,9,123,12],"4033":[124,5,124,9],"4041":[124,5,124,11],"4049":[124,5,124,15],"4057":[124,24,124,30],"4065":[124,5,124,30],"4073":[124,5,124,31],"4081":[125,12,125,16],"4089":[125,12,125,16],"4097":[125,5,125,17],"4105":[118,27,126,2],"4113":[118,27,126,2],"4121":[118,27,126,2],"4129":[118,27,126,2],"4137":[118,1,126,2],"4145":[118,1,126,3],"4153":[127,1,127,7],"4161":[127,20,127,28],"4169":[128,15,128,20],"4177":[129,14,129,19],"4185":[130,15,130,21],"4193":[130,14,130,22],"4201":[127,30,131,2],"4209":[127,1,131,3],"4211":[127,1,127,19],"4217":[127,1,131,4],"4225":[132,1,132,7],"4233":[132,1,132,17],"4241":[133,9,133,13],"4249":[133,9,133,15],"4257":[133,9,133,21],"4265":[133,25,133,31],"4273":[133,25,133,38],"4281":[133,42,133,46],"4289":[133,42,133,48],"4297":[133,42,133,54],"4305":[133,58,133,64],"4313":[133,58,133,69],"4321":[133,73,133,77],"4329":[133,73,133,86],"4331":[133,73,133,84],"4337":[134,15,134,25],"4345":[135,22,135,40],"4353":[136,21,136,25],"4361":[134,33,137,10],"4369":[134,15,137,11],"4371":[134,15,134,32],"4377":[134,15,137,11],"4385":[134,9,137,12],"4393":[138,5,138,9],"4401":[138,5,138,11],"4409":[138,5,138,15],"4417":[138,26,138,33],"4425":[138,5,138,33],"4433":[138,5,138,34],"4441":[139,12,139,16],"4449":[139,12,139,16],"4457":[139,5,139,17],"4465":[132,28,140,2],"4473":[132,28,140,2],"4481":[132,28,140,2],"4489":[132,28,140,2],"4497":[132,1,140,2],"4505":[132,1,140,3],"4513":[141,1,141,7],"4521":[141,20,141,29],"4529":[142,15,142,20],"4537":[143,14,143,19],"4545":[144,15,144,21],"4553":[144,14,144,22],"4561":[141,31,145,2],"4569":[141,1,145,3],"4571":[141,1,141,19],"4577":[141,1,145,4],"4585":[146,1,146,7],"4593":[146,1,146,17],"4601":[147,9,147,13],"4609":[147,9,147,15],"4617":[147,9,147,21],"4625":[147,25,147,31],"4633":[147,25,147,38],"4641":[147,42,147,46],"4649":[147,42,147,48],"4657":[147,42,147,54],"4665":[147,58,147,64],"4673":[147,58,147,69],"4681":[147,73,147,77],"4689":[147,73,147,86],"4691":[147,73,147,84],"4697":[148,15,148,25],"4705":[149,22,149,40],"4713":[150,21,150,25],"4721":[148,33,151,10],"4729":[148,15,151,11],"4731":[148,15,148,32],"4737":[148,15,151,11],"4745":[148,9,151,12],"4753":[152,5,152,9],"4761":[152,5,152,11],"4769":[152,5,152,15],"4777":[152,23,152,27],"4785":[152,5,152,27],"4793":[152,5,152,28],"4801":[153,12,153,16],"4809":[153,12,153,16],"4817":[153,5,153,17],"4825":[146,25,154,2],"4833":[146,25,154,2],"4841":[146,25,154,2],"4849":[146,25,154,2],"4857":[146,1,154,2],"4865":[146,1,154,3],"4873":[155,1,155,7],"4881":[155,20,155,26],"4889":[156,15,156,20],"4897":[157,14,157,19],"4905":[158,15,158,21],"4913":[158,14,158,22],"4921":[155,28,159,2],"4929":[155,1,159,3],"4931":[155,1,155,19],"4937":[155,1,159,4],"4945":[160,1,160,7],"4953":[160,1,160,17],"4961":[161,9,161,13],"4969":[161,9,161,15],"4977":[161,9,161,21],"4985":[161,25,161,31],"4993":[161,25,161,38],"5001":[161,42,161,46],"5009":[161,42,161,48],"5017":[161,42,161,54],"5025":[161,58,161,64],"5033":[161,58,161,69],"5041":[161,73,161,77],"5049":[161,73,161,86],"5051":[161,73,161,84],"5057":[162,15,162,25],"5065":[163,22,163,40],"5073":[164,21,164,25],"5081":[162,33,165,10],"5089":[162,15,165,11],"5091":[162,15,162,32],"5097":[162,15,165,11],"5105":[162,9,165,12],"5113":[166,5,166,9],"5121":[166,5,166,11],"5129":[166,5,166,15],"5137":[166,22,166,25],"5145":[166,5,166,25],"5153":[166,5,166,26],"5161":[167,12,167,16],"5169":[167,12,167,16],"5177":[167,5,167,17],"5185":[160,24,168,2],"5193":[160,24,168,2],"5201":[160,24,168,2],"5209":[160,24,168,2],"5217":[160,1,168,2],"5225":[160,1,168,3],"5233":[169,1,169,7],"5241":[169,20,169,25],"5249":[170,15,170,20],"5257":[171,14,171,19],"5265":[172,15,172,21],"5273":[172,14,172,22],"5281":[169,27,173,2],"5289":[169,1,173,3],"5291":[169,1,169,19],"5297":[169,1,173,4],"5305":[174,1,174,7],"5313":[174,1,174,17],"5321":[175,9,175,13],"5329":[175,9,175,15],"5337":[175,9,175,21],"5345":[175,25,175,31],"5353":[175,25,175,38],"5361":[175,42,175,46],"5369":[175,42,175,48],"5377":[175,42,175,54],"5385":[175,58,175,64],"5393":[175,58,175,69],"5401":[175,73,175,77],"5409":[175,73,175,86],"5411":[175,73,175,84],"5417":[176,15,176,25],"5425":[177,22,177,40],"5433":[178,21,178,25],"5441":[176,33,179,10],"5449":[176,15,179,11],"5451":[176,15,176,32],"5457":[176,15,179,11],"5465":[176,9,179,12],"5473":[180,5,180,9],"5481":[180,5,180,11],"5489":[180,5,180,15],"5497":[180,22,180,25],"5505":[180,5,180,25],"5513":[180,5,180,26],"5521":[181,12,181,16],"5529":[181,12,181,16],"5537":[181,5,181,17],"5545":[174,24,182,2],"5553":[174,24,182,2],"5561":[174,24,182,2],"5569":[174,24,182,2],"5577":[174,1,182,2],"5585":[174,1,182,3],"5593":[183,1,183,7],"5601":[183,20,183,25],"5609":[184,15,184,20],"5617":[185,14,185,19],"5625":[186,15,186,21],"5633":[186,14,186,22],"5641":[183,27,187,2],"5649":[183,1,187,3],"5651":[183,1,183,19],"5657":[183,1,187,4],"5665":[188,1,188,7],"5673":[188,1,188,17],"5681":[189,9,189,13],"5689":[189,9,189,15],"5697":[189,9,189,21],"5705":[189,25,189,31],"5713":[189,25,189,38],"5721":[189,42,189,46],"5729":[189,42,189,48],"5737":[189,42,189,54],"5745":[189,58,189,64],"5753":[189,58,189,69],"5761":[189,73,189,77],"5769":[189,73,189,86],"5771":[189,73,189,84],"5777":[190,15,190,25],"5785":[191,22,191,40],"5793":[192,21,192,25],"5801":[190,33,193,10],"5809":[190,15,193,11],"5811":[190,15,190,32],"5817":[190,15,193,11],"5825":[190,9,193,12],"5833":[194,5,194,9],"5841":[194,5,194,11],"5849":[194,5,194,15],"5857":[194,28,194,33],"5865":[194,5,194,33],"5873":[194,5,194,34],"5881":[195,12,195,16],"5889":[195,12,195,16],"5897":[195,5,195,17],"5905":[188,30,196,2],"5913":[188,30,196,2],"5921":[188,30,196,2],"5929":[188,30,196,2],"5937":[188,1,196,2],"5945":[188,1,196,3],"5953":[197,1,197,7],"5961":[197,20,197,31],"5969":[198,15,198,20],"5977":[199,14,199,19],"5985":[200,15,200,21],"5993":[200,14,200,22],"6001":[197,33,201,2],"6009":[197,1,201,3],"6011":[197,1,197,19],"6017":[197,1,201,4],"6025":[202,1,202,7],"6033":[202,1,202,17],"6041":[203,9,203,13],"6049":[203,9,203,15],"6057":[203,9,203,21],"6065":[203,25,203,31],"6073":[203,25,203,38],"6081":[203,42,203,46],"6089":[203,42,203,48],"6097":[203,42,203,54],"6105":[203,58,203,64],"6113":[203,58,203,69],"6121":[203,73,203,77],"6129":[203,73,203,86],"6131":[203,73,203,84],"6137":[204,15,204,25],"6145":[205,22,205,40],"6153":[206,21,206,25],"6161":[204,33,207,10],"6169":[204,15,207,11],"6171":[204,15,204,32],"6177":[204,15,207,11],"6185":[204,9,207,12],"6193":[208,5,208,9],"6201":[208,5,208,11],"6209":[208,5,208,15],"6217":[208,30,208,35],"6225":[208,5,208,35],"6233":[208,5,208,36],"6241":[209,12,209,16],"6249":[209,12,209,16],"6257":[209,5,209,17],"6265":[202,33,210,2],"6273":[202,33,210,2],"6281":[202,33,210,2],"6289":[202,33,210,2],"6297":[202,1,210,2],"6305":[202,1,210,3],"6313":[211,1,211,7],"6321":[211,20,211,34],"6329":[212,15,212,20],"6337":[213,14,213,19],"6345":[214,15,214,21],"6353":[214,14,214,22],"6361":[211,36,215,2],"6369":[211,1,215,3],"6371":[211,1,211,19],"6377":[211,1,215,4],"6385":[216,1,216,7],"6393":[216,1,216,17],"6401":[217,9,217,13],"6409":[217,9,217,15],"6417":[217,9,217,21],"6425":[217,25,217,31],"6433":[217,25,217,38],"6441":[217,42,217,46],"6449":[217,42,217,48],"6457":[217,42,217,54],"6465":[217,58,217,64],"6473":[217,58,217,69],"6481":[217,73,217,77],"6489":[217,73,217,86],"6491":[217,73,217,84],"6497":[218,15,218,25],"6505":[219,22,219,40],"6513":[220,21,220,25],"6521":[218,33,221,10],"6529":[218,15,221,11],"6531":[218,15,218,32],"6537":[218,15,221,11],"6545":[218,9,221,12],"6553":[222,5,222,9],"6561":[222,5,222,11],"6569":[222,5,222,15],"6577":[222,27,222,32],"6585":[222,5,222,32],"6593":[222,5,222,33],"6601":[223,12,223,16],"6609":[223,12,223,16],"6617":[223,5,223,17],"6625":[216,29,224,2],"6633":[216,29,224,2],"6641":[216,29,224,2],"6649":[216,29,224,2],"6657":[216,1,224,2],"6665":[216,1,224,3],"6673":[225,1,225,7],"6681":[225,20,225,30],"6689":[226,15,226,20],"6697":[227,14,227,19],"6705":[228,15,228,21],"6713":[228,14,228,22],"6721":[225,32,229,2],"6729":[225,1,229,3],"6731":[225,1,225,19],"6737":[225,1,229,4],"6745":[230,1,230,7],"6753":[230,1,230,17],"6761":[231,9,231,13],"6769":[231,9,231,15],"6777":[231,9,231,21],"6785":[231,25,231,31],"6793":[231,25,231,38],"6801":[231,42,231,46],"6809":[231,42,231,48],"6817":[231,42,231,54],"6825":[231,58,231,64],"6833":[231,58,231,69],"6841":[231,73,231,77],"6849":[231,73,231,86],"6851":[231,73,231,84],"6857":[232,15,232,25],"6865":[233,22,233,40],"6873":[234,21,234,25],"6881":[232,33,235,10],"6889":[232,15,235,11],"6891":[232,15,232,32],"6897":[232,15,235,11],"6905":[232,9,235,12],"6913":[236,9,236,15],"6921":[236,24,236,29],"6929":[236,9,236,30],"6931":[236,9,236,23],"6937":[236,35,236,36],"6945":[237,15,237,25],"6953":[238,22,238,23],"6961":[238,24,238,61],"6969":[238,63,238,68],"6977":[238,70,238,76],"6985":[238,22,238,77],"6993":[239,21,239,25],"7001":[237,33,240,10],"7009":[237,15,240,11],"7011":[237,15,237,32],"7017":[237,15,240,11],"7025":[237,9,240,12],"7033":[241,5,241,9],"7041":[241,5,241,11],"7049":[241,12,241,17],"7057":[241,21,241,26],"7065":[241,5,241,26],"7073":[241,5,241,27],"7081":[242,9,242,14],"7089":[242,18,242,35],"7097":[243,9,243,13],"7105":[243,9,243,15],"7113":[243,41,243,46],"7121":[243,9,243,46],"7129":[243,9,243,47],"7137":[244,12,244,16],"7145":[244,12,244,16],"7153":[244,5,244,17],"7161":[230,36,245,2],"7169":[230,36,245,2],"7177":[230,36,245,2],"7185":[230,36,245,2],"7193":[230,36,245,2],"7201":[230,1,245,2],"7209":[230,1,245,3],"7217":[246,1,246,7],"7225":[246,20,246,37],"7233":[247,15,247,20],"7241":[248,14,248,19],"7249":[249,15,249,21],"7257":[249,14,249,22],"7265":[246,39,250,2],"7273":[246,1,250,3],"7275":[246,1,246,19],"7281":[246,1,250,4],"7289":[251,1,251,7],"7297":[251,1,251,17],"7305":[252,9,252,13],"7313":[252,9,252,15],"7321":[252,9,252,21],"7329":[252,25,252,31],"7337":[252,25,252,38],"7345":[252,42,252,46],"7353":[252,42,252,48],"7361":[252,42,252,54],"7369":[252,58,252,64],"7377":[252,58,252,69],"7385":[252,73,252,77],"7393":[252,73,252,86],"7395":[252,73,252,84],"7401":[253,15,253,25],"7409":[254,22,254,40],"7417":[255,21,255,25],"7425":[253,33,256,10],"7433":[253,15,256,11],"7435":[253,15,253,32],"7441":[253,15,256,11],"7449":[253,9,256,12],"7457":[257,9,257,14],"7465":[257,23,257,27],"7473":[257,9,257,28],"7475":[257,9,257,22],"7481":[257,33,257,34],"7489":[258,15,258,25],"7497":[259,22,259,23],"7505":[259,24,259,57],"7513":[259,59,259,63],"7521":[259,65,259,70],"7529":[259,22,259,71],"7537":[260,21,260,25],"7545":[258,33,261,10],"7553":[258,15,261,11],"7555":[258,15,258,32],"7561":[258,15,261,11],"7569":[258,9,261,12],"7577":[262,16,262,21],"7585":[262,25,262,34],"7593":[263,15,263,25],"7601":[264,22,264,23],"7609":[264,24,264,57],"7617":[264,59,264,63],"7625":[264,22,264,64],"7633":[265,21,265,25],"7641":[263,33,266,10],"7649":[263,15,266,11],"7651":[263,15,263,32],"7657":[263,15,266,11],"7665":[263,9,266,12],"7673":[267,5,267,9],"7681":[267,5,267,11],"7689":[267,5,267,15],"7697":[267,16,267,20],"7705":[267,24,267,29],"7713":[267,5,267,29],"7721":[267,5,267,30],"7729":[268,12,268,16],"7737":[268,12,268,16],"7745":[268,5,268,17],"7753":[251,34,269,2],"7761":[251,34,269,2],"7769":[251,34,269,2],"7777":[251,34,269,2],"7785":[251,34,269,2],"7793":[251,1,269,2],"7801":[251,1,269,3],"7809":[270,1,270,7],"7817":[270,20,270,35],"7825":[271,15,271,20],"7833":[272,14,272,19],"7841":[273,15,273,21],"7849":[273,14,273,22],"7857":[270,37,274,2],"7865":[270,1,274,3],"7867":[270,1,270,19],"7873":[270,1,274,4],"7881":[275,1,275,7],"7889":[275,1,275,17],"7897":[276,9,276,13],"7905":[276,9,276,15],"7913":[276,9,276,21],"7921":[276,25,276,31],"7929":[276,25,276,38],"7937":[276,42,276,46],"7945":[276,42,276,48],"7953":[276,42,276,54],"7961":[276,58,276,64],"7969":[276,58,276,69],"7977":[276,73,276,77],"7985":[276,73,276,86],"7987":[276,73,276,84],"7993":[277,15,277,25],"8001":[278,22,278,40],"8009":[279,21,279,25],"8017":[277,33,280,10],"8025":[277,15,280,11],"8027":[277,15,277,32],"8033":[277,15,280,11],"8041":[277,9,280,12],"8049":[281,9,281,13],"8057":[281,14,281,15],"8065":[281,9,281,16],"8073":[281,20,281,23],"8081":[282,15,282,25],"8089":[283,22,283,23],"8097":[283,24,283,58],"8105":[283,22,283,59],"8113":[284,21,284,25],"8121":[282,33,285,10],"8129":[282,15,285,11],"8131":[282,15,282,32],"8137":[282,15,285,11],"8145":[282,9,285,12],"8153":[286,17,286,21],"8161":[286,29,286,30],"8169":[286,17,286,31],"8171":[286,17,286,28],"8177":[286,17,286,31],"8185":[286,17,286,31],"8193":[287,5,287,9],"8201":[287,5,287,11],"8209":[287,5,287,15],"8217":[287,16,287,21],"8225":[287,25,287,30],"8233":[287,5,287,30],"8241":[287,5,287,31],"8249":[288,9,288,14],"8257":[288,18,288,27],"8265":[289,9,289,13],"8273":[289,9,289,15],"8281":[289,9,289,19],"8289":[289,27,289,31],"8297":[289,27,289,33],"8305":[289,27,289,37],"8313":[289,38,289,43],"8321":[289,27,289,44],"8329":[289,9,289,44],"8337":[289,9,289,45],"8345":[290,12,290,16],"8353":[290,12,290,16],"8361":[290,5,290,17],"8369":[275,37,291,2],"8377":[275,37,291,2],"8385":[275,37,291,2],"8393":[275,37,291,2],"8401":[275,37,291,2],"8409":[275,37,291,2],"8417":[275,1,291,2],"8425":[275,1,291,3],"8433":[292,1,292,7],"8441":[292,20,292,38],"8449":[293,15,293,20],"8457":[294,14,294,19],"8465":[295,15,295,21],"8473":[295,14,295,22],"8481":[292,40,296,2],"8489":[292,1,296,3],"8491":[292,1,292,19],"8497":[292,1,296,4],"8505":[297,1,297,7],"8513":[297,1,297,17],"8521":[298,9,298,13],"8529":[298,9,298,15],"8537":[298,9,298,21],"8545":[298,25,298,31],"8553":[298,25,298,38],"8561":[298,42,298,46],"8569":[298,42,298,48],"8577":[298,42,298,54],"8585":[298,58,298,64],"8593":[298,58,298,69],"8601":[298,73,298,77],"8609":[298,73,298,86],"8611":[298,73,298,84],"8617":[299,15,299,25],"8625":[300,22,300,40],"8633":[301,21,301,25],"8641":[299,33,302,10],"8649":[299,15,302,11],"8651":[299,15,299,32],"8657":[299,15,302,11],"8665":[299,9,302,12],"8673":[303,5,303,9],"8681":[303,5,303,11],"8689":[303,5,303,15],"8697":[303,26,303,31],"8705":[303,5,303,31],"8713":[303,5,303,32],"8721":[304,12,304,16],"8729":[304,12,304,16],"8737":[304,5,304,17],"8745":[297,28,305,2],"8753":[297,28,305,2],"8761":[297,28,305,2],"8769":[297,28,305,2],"8777":[297,1,305,2],"8785":[297,1,305,3],"8793":[306,1,306,7],"8801":[306,20,306,29],"8809":[307,15,307,20],"8817":[308,14,308,19],"8825":[309,15,309,21],"8833":[309,14,309,22],"8841":[306,31,310,2],"8849":[306,1,310,3],"8851":[306,1,306,19],"8857":[306,1,310,4],"8865":[311,1,311,7],"8873":[311,1,311,17],"8881":[312,16,312,21],"8889":[312,25,312,33],"8897":[313,15,313,25],"8905":[314,22,314,50],"8913":[315,21,315,25],"8921":[313,33,316,10],"8929":[313,15,316,11],"8931":[313,15,313,32],"8937":[313,15,316,11],"8945":[313,9,316,12],"8953":[317,9,317,13],"8961":[317,9,317,15],"8969":[317,9,317,21],"8977":[317,25,317,31],"8985":[317,25,317,38],"8993":[317,42,317,46],"9001":[317,42,317,48],"9009":[317,42,317,54],"9017":[317,58,317,64],"9025":[317,58,317,69],"9033":[317,73,317,77],"9041":[317,73,317,86],"9043":[317,73,317,84],"9049":[318,15,318,25],"9057":[319,22,319,40],"9065":[320,21,320,25],"9073":[318,33,321,10],"9081":[318,15,321,11],"9083":[318,15,318,32],"9089":[318,15,321,11],"9097":[318,9,321,12],"9105":[322,5,322,9],"9113":[322,5,322,11],"9121":[322,5,322,15],"9129":[322,28,322,33],"9137":[322,5,322,33],"9145":[322,5,322,34],"9153":[323,12,323,16],"9161":[323,12,323,16],"9169":[323,5,323,17],"9177":[311,30,324,2],"9185":[311,30,324,2],"9193":[311,30,324,2],"9201":[311,30,324,2],"9209":[311,1,324,2],"9217":[311,1,324,3],"9225":[325,1,325,7],"9233":[325,20,325,31],"9241":[326,15,326,20],"9249":[327,14,327,19],"9257":[328,15,328,21],"9265":[328,14,328,22],"9273":[325,33,329,2],"9281":[325,1,329,3],"9283":[325,1,325,19],"9289":[325,1,329,4],"9297":[330,1,330,7],"9305":[330,1,330,17],"9313":[330,30,330,36],"9321":[330,30,330,46],"9329":[330,30,330,56],"9337":[330,1,330,56],"9345":[330,1,330,57],"9353":[331,1,331,7],"9361":[331,20,331,31],"9369":[332,15,332,20],"9377":[333,14,333,19],"9385":[334,15,334,21],"9393":[334,14,334,22],"9401":[331,33,335,2],"9409":[331,1,335,3],"9411":[331,1,331,19],"9417":[331,1,335,4],"9425":[336,1,336,7],"9433":[336,1,336,17],"9441":[337,9,337,13],"9449":[337,9,337,15],"9457":[337,9,337,21],"9465":[337,25,337,31],"9473":[337,25,337,38],"9481":[337,42,337,46],"9489":[337,42,337,48],"9497":[337,42,337,54],"9505":[337,58,337,64],"9513":[337,58,337,69],"9521":[337,73,337,77],"9529":[337,73,337,86],"9531":[337,73,337,84],"9537":[338,15,338,25],"9545":[339,22,339,40],"9553":[340,21,340,25],"9561":[338,33,341,10],"9569":[338,15,341,11],"9571":[338,15,338,32],"9577":[338,15,341,11],"9585":[338,9,341,12],"9593":[342,5,342,9],"9601":[342,5,342,11],"9609":[342,5,342,15],"9617":[342,25,342,30],"9625":[342,5,342,30],"9633":[342,5,342,31],"9641":[343,12,343,16],"9649":[343,12,343,16],"9657":[343,5,343,17],"9665":[336,28,344,2],"9673":[336,28,344,2],"9681":[336,28,344,2],"9689":[336,28,344,2],"9697":[336,1,344,2],"9705":[336,1,344,3],"9713":[345,1,345,7],"9721":[345,20,345,29],"9729":[346,15,346,20],"9737":[347,14,347,19],"9745":[348,15,348,21],"9753":[348,14,348,22],"9761":[345,31,349,2],"9769":[345,1,349,3],"9771":[345,1,345,19],"9777":[345,1,349,4],"9785":[350,1,350,7],"9793":[350,1,350,17],"9801":[351,9,351,13],"9809":[351,9,351,15],"9817":[351,9,351,23],"9825":[351,9,351,32],"9833":[352,15,352,25],"9841":[353,22,353,64],"9849":[354,21,354,25],"9857":[352,33,355,10],"9865":[352,15,355,11],"9867":[352,15,352,32],"9873":[352,15,355,11],"9881":[352,9,355,12],"9889":[356,9,356,13],"9897":[356,9,356,15],"9905":[356,9,356,21],"9913":[356,25,356,31],"9921":[356,25,356,38],"9929":[356,42,356,46],"9937":[356,42,356,48],"9945":[356,42,356,54],"9953":[356,58,356,64],"9961":[356,58,356,69],"9969":[356,73,356,77],"9977":[356,73,356,86],"9979":[356,73,356,84],"9985":[357,15,357,25],"9993":[358,22,358,40],"10001":[359,21,359,25],"10009":[357,33,360,10],"10017":[357,15,360,11],"10019":[357,15,357,32],"10025":[357,15,360,11],"10033":[357,9,360,12],"10041":[361,17,361,26],"10049":[361,17,361,26],"10057":[361,17,361,26],"10065":[362,9,362,14],"10073":[362,23,362,28],"10081":[362,9,362,29],"10083":[362,9,362,22],"10089":[362,33,362,38],"10097":[362,47,362,52],"10105":[362,53,362,54],"10113":[362,47,362,55],"10121":[362,33,362,56],"10123":[362,33,362,46],"10129":[363,21,363,24],"10137":[363,25,363,30],"10145":[365,17,365,18],"10153":[365,19,365,20],"10161":[365,17,365,21],"10169":[366,17,366,21],"10177":[364,25,367,14],"10185":[364,25,367,14],"10193":[364,25,367,14],"10201":[368,17,368,18],"10209":[368,19,368,20],"10217":[368,17,368,21],"10225":[368,25,368,30],"10233":[369,17,369,22],"10241":[369,23,369,24],"10249":[369,28,369,29],"10257":[369,17,369,29],"10265":[369,17,369,30],"10273":[370,24,370,25],"10281":[370,26,370,27],"10289":[370,24,370,28],"10297":[370,32,370,38],"10305":[371,17,371,22],"10313":[371,23,371,24],"10321":[371,29,371,30],"10329":[371,17,371,30],"10337":[371,17,371,31],"10345":[372,24,372,25],"10353":[372,26,372,27],"10361":[372,24,372,28],"10369":[372,32,372,33],"10377":[372,37,372,38],"10385":[372,39,372,40],"10393":[372,37,372,41],"10401":[372,46,372,47],"10409":[373,17,373,22],"10417":[373,23,373,24],"10425":[373,28,373,29],"10433":[373,30,373,31],"10441":[373,28,373,32],"10449":[373,17,373,32],"10457":[373,17,373,33],"10465":[375,27,375,37],"10473":[375,38,375,165],"10481":[375,23,375,166],"10489":[375,23,375,166],"10497":[375,17,375,167],"10505":[377,20,377,25],"10513":[377,20,377,25],"10521":[377,13,377,26],"10529":[363,35,378,10],"10537":[363,35,378,10],"10545":[363,35,378,10],"10553":[363,35,378,10],"10561":[363,35,378,10],"10569":[363,25,378,11],"10571":[363,25,363,34],"10577":[363,17,378,12],"10585":[363,17,378,12],"10593":[363,9,378,13],"10601":[380,9,380,18],"10609":[380,22,380,26],"10617":[382,17,382,26],"10625":[383,17,383,26],"10633":[381,18,384,14],"10641":[381,17,384,15],"10649":[381,17,384,15],"10657":[381,9,384,16],"10665":[386,5,386,9],"10673":[386,5,386,11],"10681":[386,5,386,15],"10689":[386,23,386,28],"10697":[386,5,386,28],"10705":[386,5,386,29],"10713":[387,5,387,9],"10721":[387,22,387,27],"10729":[387,5,387,27],"10737":[387,5,387,28],"10745":[388,12,388,16],"10753":[388,12,388,16],"10761":[388,5,388,17],"10769":[350,25,389,2],"10777":[350,25,389,2],"10785":[350,25,389,2],"10793":[350,25,389,2],"10801":[350,25,389,2],"10809":[350,25,389,2],"10817":[350,1,389,2],"10825":[350,1,389,3],"10833":[390,1,390,7],"10841":[390,20,390,26],"10849":[391,15,391,20],"10857":[392,14,392,19],"10865":[393,15,393,21],"10873":[393,14,393,22],"10881":[390,28,394,2],"10889":[390,1,394,3],"10891":[390,1,390,19],"10897":[390,1,394,4],"10905":[395,1,395,7],"10913":[395,1,395,17],"10921":[396,9,396,13],"10929":[396,9,396,15],"10937":[396,9,396,23],"10945":[396,9,396,32],"10953":[397,15,397,25],"10961":[398,22,398,66],"10969":[399,21,399,25],"10977":[397,33,400,10],"10985":[397,15,400,11],"10987":[397,15,397,32],"10993":[397,15,400,11],"11001":[397,9,400,12],"11009":[401,9,401,13],"11017":[401,9,401,15],"11025":[401,9,401,21],"11033":[401,25,401,31],"11041":[401,25,401,38],"11049":[401,42,401,46],"11057":[401,42,401,55],"11059":[401,42,401,53],"11065":[402,15,402,25],"11073":[403,22,403,40],"11081":[404,21,404,25],"11089":[402,33,405,10],"11097":[402,15,405,11],"11099":[402,15,402,32],"11105":[402,15,405,11],"11113":[402,9,405,12],"11121":[406,16,406,21],"11129":[406,25,406,33],"11137":[407,15,407,25],"11145":[408,22,408,53],"11153":[409,21,409,25],"11161":[407,33,410,10],"11169":[407,15,410,11],"11171":[407,15,407,32],"11177":[407,15,410,11],"11185":[407,9,410,12],"11193":[411,5,411,9],"11201":[411,5,411,11],"11209":[411,5,411,15],"11217":[411,28,411,33],"11225":[411,5,411,33],"11233":[411,5,411,34],"11241":[412,5,412,9],"11249":[412,29,412,34],"11257":[412,5,412,35],"11259":[412,5,412,28],"11265":[412,5,412,36],"11273":[413,12,413,16],"11281":[413,12,413,16],"11289":[413,5,413,17],"11297":[395,30,414,2],"11305":[395,30,414,2],"11313":[395,30,414,2],"11321":[395,30,414,2],"11329":[395,1,414,2],"11337":[395,1,414,3],"11345":[415,1,415,7],"11353":[415,20,415,31],"11361":[416,15,416,20],"11369":[417,14,417,19],"11377":[418,15,418,21],"11385":[418,14,418,22],"11393":[415,33,419,2],"11401":[415,1,419,3],"11403":[415,1,415,19],"11409":[415,1,419,4],"11417":[420,1,420,7],"11425":[420,1,420,17],"11433":[421,9,421,13],"11441":[421,9,421,15],"11449":[421,9,421,23],"11457":[421,9,421,32],"11465":[422,15,422,25],"11473":[423,22,423,62],"11481":[424,21,424,25],"11489":[422,33,425,10],"11497":[422,15,425,11],"11499":[422,15,422,32],"11505":[422,15,425,11],"11513":[422,9,425,12],"11521":[426,9,426,13],"11529":[426,9,426,15],"11537":[426,9,426,21],"11545":[426,25,426,31],"11553":[426,25,426,36],"11561":[426,40,426,44],"11569":[426,40,426,46],"11577":[426,40,426,52],"11585":[426,56,426,62],"11593":[426,56,426,69],"11601":[426,73,426,77],"11609":[426,73,426,86],"11611":[426,73,426,84],"11617":[427,15,427,25],"11625":[428,22,428,40],"11633":[429,21,429,25],"11641":[427,33,430,10],"11649":[427,15,430,11],"11651":[427,15,427,32],"11657":[427,15,430,11],"11665":[427,9,430,12],"11673":[431,16,431,21],"11681":[431,25,431,33],"11689":[432,15,432,25],"11697":[433,22,433,49],"11705":[434,21,434,25],"11713":[432,33,435,10],"11721":[432,15,435,11],"11723":[432,15,432,32],"11729":[432,15,435,11],"11737":[432,9,435,12],"11745":[436,5,436,9],"11753":[436,5,436,11],"11761":[436,5,436,15],"11769":[436,24,436,29],"11777":[436,5,436,29],"11785":[436,5,436,30],"11793":[437,5,437,9],"11801":[437,25,437,30],"11809":[437,5,437,31],"11811":[437,5,437,24],"11817":[437,5,437,32],"11825":[438,12,438,16],"11833":[438,12,438,16],"11841":[438,5,438,17],"11849":[420,26,439,2],"11857":[420,26,439,2],"11865":[420,26,439,2],"11873":[420,26,439,2],"11881":[420,1,439,2],"11889":[420,1,439,3],"11897":[440,1,440,7],"11905":[440,20,440,27],"11913":[441,15,441,20],"11921":[442,14,442,19],"11929":[443,15,443,21],"11937":[443,14,443,22],"11945":[440,29,444,2],"11953":[440,1,444,3],"11955":[440,1,440,19],"11961":[440,1,444,4],"11969":[445,1,445,7],"11977":[445,1,445,17],"11985":[446,9,446,13],"11993":[446,9,446,15],"12001":[446,9,446,23],"12009":[446,9,446,32],"12017":[447,15,447,25],"12025":[448,22,448,61],"12033":[449,21,449,25],"12041":[447,33,450,10],"12049":[447,15,450,11],"12051":[447,15,447,32],"12057":[447,15,450,11],"12065":[447,9,450,12],"12073":[451,9,451,13],"12081":[451,9,451,15],"12089":[451,9,451,21],"12097":[451,25,451,31],"12105":[451,25,451,36],"12113":[451,40,451,44],"12121":[451,40,451,46],"12129":[451,40,451,52],"12137":[451,56,451,62],"12145":[451,56,451,69],"12153":[451,73,451,77],"12161":[451,73,451,86],"12163":[451,73,451,84],"12169":[452,15,452,25],"12177":[453,22,453,40],"12185":[454,21,454,25],"12193":[452,33,455,10],"12201":[452,15,455,11],"12203":[452,15,452,32],"12209":[452,15,455,11],"12217":[452,9,455,12],"12225":[456,16,456,21],"12233":[456,25,456,33],"12241":[457,15,457,25],"12249":[458,22,458,48],"12257":[459,21,459,25],"12265":[457,33,460,10],"12273":[457,15,460,11],"12275":[457,15,457,32],"12281":[457,15,460,11],"12289":[457,9,460,12],"12297":[461,5,461,9],"12305":[461,5,461,11],"12313":[461,5,461,15],"12321":[461,23,461,28],"12329":[461,5,461,28],"12337":[461,5,461,29],"12345":[462,5,462,9],"12353":[462,24,462,29],"12361":[462,5,462,30],"12363":[462,5,462,23],"12369":[462,5,462,31],"12377":[463,12,463,16],"12385":[463,12,463,16],"12393":[463,5,463,17],"12401":[445,25,464,2],"12409":[445,25,464,2],"12417":[445,25,464,2],"12425":[445,25,464,2],"12433":[445,1,464,2],"12441":[445,1,464,3],"12449":[465,1,465,7],"12457":[465,20,465,26],"12465":[466,15,466,20],"12473":[467,14,467,19],"12481":[468,15,468,21],"12489":[468,14,468,22],"12497":[465,28,469,2],"12505":[465,1,469,3],"12507":[465,1,465,19],"12513":[465,1,469,4],"12521":[470,1,470,7],"12529":[470,1,470,17],"12537":[470,31,470,37],"12545":[470,31,470,47],"12553":[470,31,470,52],"12561":[470,1,470,52],"12569":[470,1,470,53],"12577":[472,9,472,13],"12585":[472,9,472,15],"12593":[472,9,472,21],"12601":[472,25,472,31],"12609":[472,25,472,38],"12617":[472,42,472,46],"12625":[472,42,472,53],"12633":[472,57,472,61],"12641":[472,57,472,70],"12643":[472,57,472,68],"12649":[473,16,473,30],"12657":[473,31,473,39],"12665":[473,41,473,51],"12673":[474,22,474,40],"12681":[475,21,475,25],"12689":[473,59,476,10],"12697":[473,41,476,11],"12699":[473,41,473,58],"12705":[473,16,476,12],"12713":[473,16,476,12],"12721":[473,9,476,13],"12729":[477,9,477,13],"12737":[477,9,477,15],"12745":[477,9,477,21],"12753":[477,25,477,31],"12761":[477,25,477,36],"12769":[477,40,477,44],"12777":[477,40,477,46],"12785":[477,40,477,50],"12793":[477,40,477,55],"12801":[479,13,479,17],"12809":[479,13,479,19],"12817":[479,13,479,23],"12825":[479,31,479,51],"12833":[479,52,479,56],"12841":[479,52,479,58],"12849":[479,52,479,62],"12857":[479,52,479,67],"12865":[479,31,479,68],"12873":[479,13,479,68],"12881":[479,13,479,69],"12889":[481,20,481,34],"12897":[481,35,481,43],"12905":[481,45,481,48],"12913":[481,20,481,49],"12921":[481,20,481,49],"12929":[481,13,481,50],"12937":[480,11,482,10],"12945":[484,5,484,9],"12953":[485,13,485,16],"12961":[485,20,485,23],"12969":[485,20,485,32],"12977":[485,36,485,40],"12985":[485,36,485,42],"12993":[485,36,485,65],"13001":[485,69,485,70],"13009":[486,20,486,28],"13017":[486,29,486,32],"13025":[486,20,486,33],"13033":[486,20,486,33],"13041":[486,13,486,34],"13049":[487,13,487,16],"13057":[487,20,487,23],"13065":[487,20,487,32],"13073":[487,36,487,40],"13081":[487,36,487,42],"13089":[487,36,487,65],"13097":[487,68,487,69],"13105":[488,13,488,17],"13113":[488,13,488,19],"13121":[488,45,488,49],"13129":[488,45,488,51],"13137":[488,45,488,74],"13145":[488,77,488,78],"13153":[488,13,488,78],"13161":[488,13,488,79],"13169":[489,20,489,30],"13177":[490,21,490,25],"13185":[490,21,490,37],"13193":[490,21,490,50],"13201":[490,54,490,55],"13209":[491,21,491,25],"13217":[491,21,491,34],"13219":[491,21,491,32],"13225":[491,21,491,35],"13233":[492,17,492,21],"13241":[492,33,492,41],"13249":[492,17,492,42],"13251":[492,17,492,32],"13257":[492,17,492,43],"13265":[489,31,493,14],"13273":[489,31,493,14],"13281":[489,31,493,14],"13289":[493,16,493,20],"13297":[493,16,493,22],"13305":[493,16,493,44],"13313":[489,20,493,45],"13321":[489,20,493,45],"13329":[489,13,493,46],"13337":[495,9,495,13],"13345":[495,9,495,15],"13353":[495,24,495,30],"13361":[495,24,495,35],"13369":[495,9,495,35],"13377":[495,9,495,36],"13385":[496,13,496,16],"13393":[497,20,497,34],"13401":[497,35,497,43],"13409":[497,45,497,48],"13417":[497,20,497,49],"13425":[497,20,497,49],"13433":[497,13,497,50],"13441":[498,9,498,23],"13449":[498,24,498,32],"13457":[498,34,498,38],"13465":[498,40,498,43],"13473":[498,9,498,44],"13481":[498,9,498,45],"13489":[484,16,499,6],"13497":[484,16,499,6],"13505":[484,16,499,6],"13513":[484,16,499,6],"13521":[484,16,499,6],"13529":[484,5,499,7],"13531":[484,5,484,15],"13537":[484,5,499,8],"13545":[471,18,500,2],"13553":[471,18,500,2],"13561":[471,18,500,2],"13569":[471,18,500,2],"13577":[471,18,500,2],"13585":[471,18,500,2],"13593":[471,18,500,2],"13601":[501,1,501,7],"13609":[501,20,501,32],"13617":[502,15,502,19],"13625":[503,14,503,18],"13633":[501,34,504,2],"13641":[501,1,504,3],"13643":[501,1,501,19],"13649":[501,1,504,4],"13657":[506,9,506,13],"13665":[506,9,506,29],"13667":[506,9,506,27],"13673":[506,33,506,34],"13681":[507,9,507,16],"13689":[507,9,507,16],"13697":[508,5,508,9],"13705":[508,16,508,24],"13713":[508,5,508,25],"13715":[508,5,508,15],"13721":[508,5,508,26],"13729":[509,12,509,16],"13737":[509,12,509,16],"13745":[509,5,509,17],"13753":[505,12,510,2],"13761":[505,12,510,2],"13769":[505,12,510,2],"13777":[505,12,510,2],"13785":[505,12,510,2],"13793":[505,12,510,2],"13801":[505,12,510,2],"13809":[511,1,511,7],"13817":[511,1,511,17],"13825":[511,25,511,31],"13833":[511,25,511,41],"13841":[511,25,511,52],"13849":[511,1,511,52],"13857":[511,1,511,53],"13865":[512,1,512,7],"13873":[512,20,512,26],"13881":[513,15,513,19],"13889":[514,14,514,18],"13897":[512,28,515,2],"13905":[512,1,515,3],"13907":[512,1,512,19],"13913":[512,1,515,4],"13921":[516,1,516,7],"13929":[516,1,516,17],"13937":[517,5,517,9],"13945":[517,5,517,18],"13947":[517,5,517,16],"13953":[517,5,517,19],"13961":[518,5,518,9],"13969":[518,5,518,11],"13977":[518,20,518,26],"13985":[518,20,518,31],"13993":[518,5,518,31],"14001":[518,5,518,32],"14009":[519,5,519,10],"14017":[519,11,519,15],"14025":[519,17,519,25],"14033":[519,5,519,26],"14041":[519,5,519,27],"14049":[516,25,520,2],"14057":[516,25,520,2],"14065":[516,25,520,2],"14073":[516,25,520,2],"14081":[516,1,520,2],"14089":[516,1,520,3],"14097":[521,1,521,7],"14105":[521,20,521,26],"14113":[522,15,522,19],"14121":[523,14,523,19],"14129":[521,28,524,2],"14137":[521,1,524,3],"14139":[521,1,521,19],"14145":[521,1,524,4],"14153":[526,10,526,18],"14161":[527,15,527,25],"14169":[528,22,528,45],"14177":[529,21,529,25],"14185":[527,33,530,10],"14193":[527,15,530,11],"14195":[527,15,527,32],"14201":[527,15,530,11],"14209":[527,9,530,12],"14217":[531,9,531,13],"14225":[531,9,531,26],"14227":[531,9,531,24],"14233":[532,9,532,16],"14241":[532,9,532,16],"14249":[533,9,533,13],"14257":[533,9,533,15],"14265":[533,9,533,21],"14273":[533,25,533,31],"14281":[533,25,533,38],"14289":[533,42,533,46],"14297":[533,42,533,55],"14299":[533,42,533,53],"14305":[534,16,534,30],"14313":[534,31,534,39],"14321":[534,41,534,51],"14329":[535,22,535,40],"14337":[536,21,536,25],"14345":[534,59,537,10],"14353":[534,41,537,11],"14355":[534,41,534,58],"14361":[534,16,537,12],"14369":[534,16,537,12],"14377":[534,9,537,13],"14385":[539,9,539,13],"14393":[539,9,539,15],"14401":[539,9,539,21],"14409":[539,25,539,31],"14417":[539,25,539,36],"14425":[540,9,540,13],"14433":[540,9,540,15],"14441":[540,24,540,30],"14449":[540,24,540,35],"14457":[540,9,540,35],"14465":[540,9,540,36],"14473":[541,14,541,18],"14481":[541,14,541,18],"14489":[541,14,541,18],"14497":[542,9,542,13],"14505":[542,9,542,29],"14507":[542,9,542,27],"14513":[542,32,542,33],"14521":[543,21,543,25],"14529":[543,26,543,30],"14537":[543,32,543,40],"14545":[543,21,543,41],"14553":[543,21,543,41],"14561":[544,13,544,15],"14569":[544,16,544,20],"14577":[544,22,544,30],"14585":[544,13,544,31],"14593":[544,13,544,32],"14601":[545,9,545,14],"14609":[545,15,545,19],"14617":[545,21,545,29],"14625":[545,9,545,30],"14633":[545,9,545,31],"14641":[547,9,547,13],"14649":[548,17,548,20],"14657":[549,24,549,38],"14665":[549,39,549,47],"14673":[549,49,549,52],"14681":[549,24,549,53],"14689":[549,24,549,53],"14697":[549,17,549,54],"14705":[550,17,550,21],"14713":[550,25,550,29],"14721":[551,17,551,21],"14729":[551,17,551,23],"14737":[551,32,551,38],"14745":[551,32,551,45],"14753":[551,17,551,45],"14761":[551,17,551,46],"14769":[552,24,552,38],"14777":[552,39,552,47],"14785":[552,49,552,53],"14793":[552,55,552,59],"14801":[552,24,552,60],"14809":[552,24,552,60],"14817":[552,17,552,61],"14825":[554,17,554,31],"14833":[554,32,554,40],"14841":[554,42,554,46],"14849":[554,48,554,52],"14857":[554,17,554,53],"14865":[554,57,554,62],"14873":[555,17,555,24],"14881":[555,17,555,24],"14889":[556,13,556,18],"14897":[556,19,556,23],"14905":[556,25,556,33],"14913":[556,13,556,34],"14921":[556,13,556,35],"14929":[547,19,557,10],"14937":[547,19,557,10],"14945":[547,19,557,10],"14953":[547,19,557,10],"14961":[547,19,557,10],"14969":[547,9,557,11],"14971":[547,9,547,18],"14977":[547,9,557,12],"14985":[525,13,559,2],"14993":[525,13,559,2],"15001":[525,13,559,2],"15009":[525,13,559,2],"15017":[525,13,559,2],"15025":[525,13,559,2],"15033":[525,13,559,2],"15041":[525,13,559,2],"15049":[560,1,560,7],"15057":[560,1,560,17],"15065":[561,5,561,9],"15073":[562,13,562,16],"15081":[563,13,563,21],"15089":[563,22,563,25],"15097":[563,13,563,26],"15105":[563,13,563,27],"15113":[564,20,564,25],"15121":[564,20,564,25],"15129":[564,13,564,26],"15137":[566,13,566,16],"15145":[566,20,566,24],"15153":[567,13,567,21],"15161":[567,22,567,25],"15169":[567,13,567,26],"15177":[567,13,567,27],"15185":[568,20,568,24],"15193":[568,20,568,24],"15201":[568,13,568,25],"15209":[570,13,570,16],"15217":[570,20,570,24],"15225":[570,28,570,36],"15233":[571,36,571,44],"15241":[571,36,571,44],"15249":[571,36,571,44],"15257":[572,24,572,28],"15265":[572,24,572,28],"15273":[572,13,572,29],"15281":[573,13,573,29],"15289":[573,30,573,34],"15297":[573,13,573,35],"15305":[573,13,573,36],"15313":[574,20,574,25],"15321":[574,20,574,25],"15329":[574,13,574,26],"15337":[561,15,576,6],"15345":[561,15,576,6],"15353":[561,15,576,6],"15361":[561,15,576,6],"15369":[561,15,576,6],"15377":[561,15,576,6],"15385":[561,5,576,7],"15387":[561,5,561,14],"15393":[561,5,576,8],"15401":[560,28,577,2],"15409":[560,28,577,2],"15417":[560,28,577,2],"15425":[560,28,577,2],"15433":[560,28,577,2],"15441":[560,1,577,2],"15449":[560,1,577,3],"15457":[578,1,578,7],"15465":[578,20,578,29],"15473":[579,15,579,19],"15481":[580,14,580,19],"15489":[578,31,581,2],"15497":[578,1,581,3],"15499":[578,1,578,19],"15505":[578,1,581,4],"15513":[582,1,582,7],"15521":[582,1,582,17],"15529":[583,9,583,13],"15537":[583,9,583,15],"15545":[583,9,583,21],"15553":[583,25,583,31],"15561":[583,25,583,36],"15569":[584,15,584,25],"15577":[585,22,585,90],"15585":[586,21,586,25],"15593":[584,33,587,10],"15601":[584,15,587,11],"15603":[584,15,584,32],"15609":[584,15,587,11],"15617":[584,9,587,12],"15625":[588,9,588,10],"15633":[588,22,588,36],"15641":[589,9,589,13],"15649":[589,9,589,15],"15657":[589,9,589,23],"15665":[589,45,589,63],"15673":[589,64,589,65],"15681":[589,64,589,70],"15689":[589,72,589,73],"15697":[589,72,589,78],"15705":[589,41,589,79],"15713":[589,9,589,79],"15721":[589,9,589,80],"15729":[591,9,591,13],"15737":[591,9,591,15],"15745":[591,9,591,23],"15753":[591,45,591,63],"15761":[591,64,591,65],"15769":[591,41,591,66],"15777":[591,9,591,66],"15785":[591,9,591,67],"15793":[593,12,593,16],"15801":[593,12,593,16],"15809":[593,5,593,17],"15817":[582,38,594,2],"15825":[582,38,594,2],"15833":[582,38,594,2],"15841":[582,38,594,2],"15849":[582,1,594,2],"15857":[582,1,594,3],"15865":[595,1,595,7],"15873":[595,20,595,39],"15881":[596,15,596,20],"15889":[597,14,597,19],"15897":[598,15,598,21],"15905":[598,14,598,22],"15913":[595,41,599,2],"15921":[595,1,599,3],"15923":[595,1,595,19],"15929":[595,1,599,4],"15937":[600,1,600,7],"15945":[600,1,600,17],"15953":[601,16,601,20],"15961":[601,16,601,20],"15969":[601,16,601,20],"15977":[602,9,602,13],"15985":[602,9,602,15],"15993":[602,9,602,23],"16001":[602,9,602,32],"16009":[603,15,603,25],"16017":[604,22,604,68],"16025":[605,21,605,25],"16033":[603,33,606,10],"16041":[603,15,606,11],"16043":[603,15,603,32],"16049":[603,15,606,11],"16057":[603,9,606,12],"16065":[607,16,607,24],"16073":[607,28,607,38],"16081":[608,16,608,23],"16089":[608,24,608,28],"16097":[608,30,608,38],"16105":[608,16,608,39],"16113":[608,16,608,39],"16121":[608,9,608,40],"16129":[609,16,609,20],"16137":[609,16,609,22],"16145":[610,9,610,16],"16153":[610,17,610,21],"16161":[611,17,611,20],"16169":[612,24,612,30],"16177":[612,31,612,34],"16185":[612,24,612,35],"16193":[612,24,612,35],"16201":[612,17,612,36],"16209":[613,13,613,20],"16217":[613,21,613,22],"16225":[613,13,613,23],"16233":[613,13,613,24],"16241":[610,23,614,10],"16249":[610,23,614,10],"16257":[610,23,614,10],"16265":[610,23,614,10],"16273":[610,23,614,10],"16281":[610,9,614,11],"16289":[610,9,614,12],"16297":[609,38,615,6],"16305":[609,38,615,6],"16313":[609,38,615,6],"16321":[609,38,615,6],"16329":[609,38,615,6],"16337":[609,12,615,7],"16339":[609,16,609,37],"16345":[609,12,615,7],"16353":[609,5,615,8],"16361":[600,28,616,2],"16369":[600,28,616,2],"16377":[600,28,616,2],"16385":[600,28,616,2],"16393":[600,28,616,2],"16401":[600,1,616,2],"16409":[600,1,616,3],"16417":[618,17,618,19],"16425":[618,17,618,19],"16433":[618,17,618,19],"16441":[619,5,619,9],"16449":[619,5,619,18],"16451":[619,5,619,16],"16457":[619,5,619,19],"16465":[620,5,620,9],"16473":[620,5,620,11],"16481":[620,20,620,26],"16489":[620,20,620,31],"16497":[620,5,620,31],"16505":[620,5,620,32],"16513":[622,9,622,13],"16521":[623,17,623,20],"16529":[624,24,624,38],"16537":[624,39,624,47],"16545":[624,49,624,52],"16553":[624,24,624,53],"16561":[624,24,624,53],"16569":[624,17,624,54],"16577":[625,17,625,20],"16585":[625,24,625,28],"16593":[626,17,626,21],"16601":[626,17,626,23],"16609":[626,32,626,38],"16617":[626,32,626,45],"16625":[626,17,626,45],"16633":[626,17,626,46],"16641":[627,24,627,38],"16649":[627,39,627,47],"16657":[627,49,627,53],"16665":[627,55,627,60],"16673":[627,24,627,61],"16681":[627,24,627,61],"16689":[627,17,627,62],"16697":[629,13,629,18],"16705":[629,24,629,27],"16713":[629,13,629,28],"16715":[629,13,629,23],"16721":[629,13,629,29],"16729":[630,17,630,21],"16737":[630,17,630,37],"16739":[630,17,630,35],"16745":[630,40,630,41],"16753":[631,28,631,32],"16761":[631,55,631,59],"16769":[631,55,631,75],"16771":[631,55,631,73],"16777":[631,28,631,76],"16779":[631,28,631,54],"16785":[631,28,631,76],"16793":[631,28,631,76],"16801":[632,21,632,25],"16809":[632,21,632,27],"16817":[632,21,632,38],"16825":[632,49,632,53],"16833":[632,49,632,55],"16841":[632,49,632,66],"16849":[632,49,632,70],"16857":[632,74,632,84],"16865":[633,28,633,32],"16873":[633,37,633,41],"16881":[633,37,633,43],"16889":[633,37,633,54],"16897":[633,37,633,58],"16905":[633,28,633,59],"16907":[633,28,633,36],"16913":[633,28,633,59],"16921":[633,21,633,60],"16929":[635,25,635,30],"16937":[635,38,635,42],"16945":[635,25,635,43],"16947":[635,25,635,37],"16953":[635,25,635,43],"16961":[635,17,635,44],"16969":[637,13,637,22],"16977":[637,13,637,24],"16985":[637,13,637,25],"16993":[622,20,638,10],"17001":[622,20,638,10],"17009":[622,20,638,10],"17017":[622,20,638,10],"17025":[622,20,638,10],"17033":[622,20,638,10],"17041":[622,9,638,11],"17043":[622,9,622,19],"17049":[622,9,638,12],"17057":[621,21,639,6],"17065":[621,21,639,6],"17073":[621,21,639,6],"17081":[621,21,639,6],"17089":[621,21,639,6],"17097":[640,5,640,14],"17105":[640,5,640,16],"17113":[640,5,640,17],"17121":[617,15,641,2],"17129":[617,15,641,2],"17137":[617,15,641,2],"17145":[617,15,641,2],"17153":[617,15,641,2],"17161":[617,15,641,2],"17169":[617,15,641,2],"17177":[617,15,641,2],"17185":[617,15,641,2],"17193":[642,1,642,7],"17201":[642,20,642,29],"17209":[643,15,643,19],"17217":[644,14,644,18],"17225":[642,31,645,2],"17233":[642,1,645,3],"17235":[642,1,642,19],"17241":[642,1,645,4],"17249":[646,1,646,7],"17257":[646,1,646,17],"17265":[647,16,647,20],"17273":[647,16,647,20],"17281":[647,16,647,20],"17289":[648,9,648,13],"17297":[648,9,648,15],"17305":[648,9,648,19],"17313":[648,9,648,25],"17321":[648,29,648,33],"17329":[649,15,649,25],"17337":[650,22,650,64],"17345":[651,21,651,25],"17353":[649,33,652,10],"17361":[649,15,652,11],"17363":[649,15,649,32],"17369":[649,15,652,11],"17377":[649,9,652,12],"17385":[653,16,653,20],"17393":[653,24,653,34],"17401":[654,20,654,24],"17409":[654,20,654,24],"17417":[654,33,654,35],"17425":[654,33,654,35],"17433":[654,9,654,24],"17441":[654,9,654,36],"17449":[655,12,655,16],"17457":[655,20,655,22],"17465":[655,12,655,22],"17473":[655,5,655,23],"17481":[656,16,656,24],"17489":[656,28,656,38],"17497":[657,16,657,21],"17505":[657,22,657,26],"17513":[657,28,657,42],"17521":[657,44,657,48],"17529":[657,50,657,58],"17537":[657,16,657,59],"17545":[657,16,657,59],"17553":[657,9,657,60],"17561":[658,16,658,20],"17569":[658,16,658,22],"17577":[659,9,659,14],"17585":[659,15,659,19],"17593":[659,21,659,35],"17601":[659,37,659,41],"17609":[660,17,660,20],"17617":[661,24,661,30],"17625":[661,31,661,34],"17633":[661,24,661,35],"17641":[661,24,661,35],"17649":[661,17,661,36],"17657":[662,13,662,20],"17665":[662,21,662,22],"17673":[662,13,662,23],"17681":[662,13,662,24],"17689":[659,43,663,10],"17697":[659,43,663,10],"17705":[659,43,663,10],"17713":[659,43,663,10],"17721":[659,43,663,10],"17729":[659,9,663,11],"17737":[659,9,663,12],"17745":[658,38,664,6],"17753":[658,38,664,6],"17761":[658,38,664,6],"17769":[658,38,664,6],"17777":[658,38,664,6],"17785":[658,12,664,7],"17787":[658,16,658,37],"17793":[658,12,664,7],"17801":[658,5,664,8],"17809":[646,26,665,2],"17817":[646,26,665,2],"17825":[646,26,665,2],"17833":[646,26,665,2],"17841":[646,26,665,2],"17849":[646,26,665,2],"17857":[646,26,665,2],"17865":[646,1,665,2],"17873":[646,1,665,3],"17881":[667,16,667,30],"17889":[667,34,667,44],"17897":[668,20,668,34],"17905":[668,20,668,34],"17913":[668,9,668,35],"17921":[669,26,669,30],"17929":[669,26,669,30],"17937":[669,9,669,31],"17945":[671,9,671,23],"17953":[672,20,672,24],"17961":[672,20,672,37],"17963":[672,20,672,35],"17969":[672,41,672,49],"17977":[673,13,673,17],"17985":[673,25,673,29],"17993":[673,25,673,42],"17995":[673,25,673,40],"18001":[673,13,673,42],"18009":[673,13,673,43],"18017":[674,20,674,24],"18025":[674,20,674,38],"18027":[674,20,674,36],"18033":[674,42,674,50],"18041":[675,13,675,17],"18049":[675,26,675,30],"18057":[675,26,675,44],"18059":[675,26,675,42],"18065":[675,13,675,44],"18073":[675,13,675,45],"18081":[677,21,677,25],"18089":[677,21,677,27],"18097":[677,21,677,30],"18105":[677,39,677,42],"18113":[677,21,677,43],"18115":[677,21,677,38],"18121":[677,21,677,43],"18129":[677,21,677,43],"18137":[679,18,679,22],"18145":[679,18,679,24],"18153":[679,18,679,27],"18161":[679,35,679,44],"18169":[679,47,679,48],"18177":[679,18,679,49],"18179":[679,18,679,34],"18185":[680,18,680,22],"18193":[680,18,680,24],"18201":[680,18,680,28],"18209":[680,18,680,34],"18217":[678,19,681,6],"18225":[678,19,681,6],"18233":[678,19,681,6],"18241":[682,16,682,20],"18249":[682,16,682,30],"18257":[682,34,682,42],"18265":[683,9,683,16],"18273":[683,29,683,33],"18281":[683,29,683,43],"18289":[683,9,683,43],"18297":[683,9,683,44],"18305":[684,23,684,27],"18313":[684,23,684,29],"18321":[684,23,684,39],"18329":[684,43,684,51],"18337":[685,9,685,16],"18345":[685,29,685,33],"18353":[685,29,685,35],"18361":[685,29,685,45],"18369":[685,9,685,45],"18377":[685,9,685,46],"18385":[687,18,687,22],"18393":[687,18,687,24],"18401":[687,18,687,33],"18409":[687,44,687,48],"18417":[687,18,687,49],"18419":[687,18,687,43],"18425":[687,18,687,49],"18433":[687,18,687,49],"18441":[688,22,688,26],"18449":[688,22,688,28],"18457":[688,22,688,37],"18465":[688,52,688,56],"18473":[688,22,688,57],"18475":[688,22,688,51],"18481":[688,22,688,57],"18489":[688,22,688,57],"18497":[689,21,689,27],"18505":[689,21,689,42],"18507":[689,21,689,40],"18513":[689,21,689,42],"18521":[689,21,689,42],"18529":[690,9,690,13],"18537":[690,9,690,18],"18545":[691,9,691,16],"18553":[691,24,691,28],"18561":[691,24,691,33],"18569":[691,9,691,33],"18577":[691,9,691,34],"18585":[692,9,692,13],"18593":[692,9,692,19],"18601":[693,9,693,16],"18609":[693,25,693,29],"18617":[693,25,693,35],"18625":[693,9,693,35],"18633":[693,9,693,36],"18641":[694,9,694,13],"18649":[694,9,694,15],"18657":[694,9,694,23],"18665":[694,9,694,28],"18673":[695,9,695,16],"18681":[695,24,695,28],"18689":[695,24,695,30],"18697":[695,24,695,38],"18705":[695,24,695,43],"18713":[695,9,695,43],"18721":[695,9,695,44],"18729":[696,21,696,26],"18737":[696,27,696,31],"18745":[696,27,696,33],"18753":[696,27,696,38],"18761":[696,40,696,41],"18769":[696,42,696,51],"18777":[696,53,696,57],"18785":[696,53,696,59],"18793":[696,53,696,62],"18801":[696,70,696,71],"18809":[696,73,696,82],"18817":[696,53,696,83],"18819":[696,53,696,69],"18825":[696,40,696,84],"18833":[696,86,696,93],"18841":[697,23,697,24],"18849":[698,26,698,27],"18857":[699,20,699,25],"18865":[696,95,700,6],"18873":[696,17,700,7],"18881":[696,17,700,7],"18889":[696,17,700,7],"18897":[701,5,701,14],"18905":[701,24,701,29],"18913":[701,24,701,39],"18921":[702,13,702,16],"18929":[703,20,703,34],"18937":[703,35,703,43],"18945":[703,45,703,48],"18953":[703,20,703,49],"18961":[703,20,703,49],"18969":[703,13,703,50],"18977":[704,13,704,19],"18985":[704,13,704,29],"18993":[704,13,704,36],"19001":[704,40,704,41],"19009":[704,46,704,52],"19017":[704,46,704,62],"19025":[704,63,704,64],"19033":[704,46,704,65],"19041":[704,46,704,72],"19049":[704,76,704,82],"19057":[704,76,704,92],"19065":[704,93,704,94],"19073":[704,76,704,95],"19081":[704,76,704,99],"19089":[704,103,704,109],"19097":[704,103,704,119],"19105":[704,120,704,121],"19113":[704,103,704,122],"19121":[704,123,704,129],"19129":[704,103,704,130],"19137":[705,20,705,34],"19145":[705,35,705,43],"19153":[705,45,705,55],"19161":[705,63,705,69],"19169":[705,63,705,79],"19177":[705,80,705,81],"19185":[705,63,705,82],"19193":[705,45,705,83],"19195":[705,45,705,62],"19201":[705,20,705,84],"19209":[705,20,705,84],"19217":[705,13,705,85],"19225":[707,9,707,23],"19233":[707,24,707,32],"19241":[707,34,707,38],"19249":[707,40,707,46],"19257":[707,40,707,56],"19265":[707,57,707,58],"19273":[707,40,707,59],"19281":[707,40,707,61],"19289":[707,9,707,62],"19297":[707,9,707,63],"19305":[701,41,708,6],"19313":[701,41,708,6],"19321":[701,41,708,6],"19329":[701,41,708,6],"19337":[701,41,708,6],"19345":[701,5,708,7],"19347":[701,5,701,23],"19353":[701,5,708,8],"19361":[709,5,709,15],"19369":[709,22,709,27],"19377":[709,22,709,35],"19379":[709,22,709,33],"19385":[709,5,709,36],"19387":[709,5,709,21],"19393":[709,5,709,37],"19401":[666,13,710,2],"19409":[666,13,710,2],"19417":[666,13,710,2],"19425":[666,13,710,2],"19433":[666,13,710,2],"19441":[666,13,710,2],"19449":[666,13,710,2],"19457":[666,13,710,2],"19465":[666,13,710,2],"19473":[666,13,710,2],"19481":[666,13,710,2],"19489":[666,13,710,2],"19497":[666,13,710,2],"19505":[666,13,710,2],"19513":[666,13,710,2],"19521":[711,1,711,7],"19529":[711,20,711,27],"19537":[712,15,712,19],"19545":[713,14,713,18],"19553":[711,29,714,2],"19561":[711,1,714,3],"19563":[711,1,711,19],"19569":[711,1,714,4],"19577":[715,1,715,7],"19585":[715,1,715,17],"19593":[716,5,716,9],"19601":[716,5,716,11],"19609":[716,20,716,26],"19617":[716,20,716,33],"19625":[716,5,716,33],"19633":[716,5,716,34],"19641":[717,5,717,9],"19649":[717,5,717,16],"19651":[717,5,717,14],"19657":[717,5,717,17],"19665":[718,5,718,9],"19673":[718,15,718,22],"19681":[718,5,718,23],"19683":[718,5,718,14],"19689":[718,5,718,24],"19697":[719,16,719,24],"19705":[719,28,719,38],"19713":[720,16,720,30],"19721":[720,31,720,39],"19729":[720,41,720,45],"19737":[720,47,720,51],"19745":[720,16,720,52],"19753":[720,16,720,52],"19761":[720,9,720,53],"19769":[721,16,721,20],"19777":[721,16,721,22],"19785":[722,9,722,16],"19793":[722,9,722,18],"19801":[722,9,722,19],"19809":[721,38,723,6],"19817":[721,38,723,6],"19825":[721,38,723,6],"19833":[721,38,723,6],"19841":[721,38,723,6],"19849":[721,12,723,7],"19851":[721,16,721,37],"19857":[721,12,723,7],"19865":[721,5,723,8],"19873":[715,26,724,2],"19881":[715,26,724,2],"19889":[715,26,724,2],"19897":[715,26,724,2],"19905":[715,1,724,2],"19913":[715,1,724,3],"19921":[725,1,725,7],"19929":[725,20,725,27],"19937":[726,15,726,19],"19945":[727,14,727,18],"19953":[725,29,728,2],"19961":[725,1,728,3],"19963":[725,1,725,19],"19969":[725,1,728,4],"19977":[729,1,729,7],"19985":[729,1,729,17],"19993":[730,5,730,9],"20001":[730,5,730,21],"20009":[730,42,730,51],"20017":[730,35,730,53],"20025":[730,5,730,53],"20033":[730,5,730,54],"20041":[731,12,731,16],"20049":[731,12,731,16],"20057":[731,5,731,17],"20065":[729,24,732,2],"20073":[729,24,732,2],"20081":[729,24,732,2],"20089":[729,24,732,2],"20097":[729,1,732,2],"20105":[729,1,732,3],"20113":[733,1,733,7],"20121":[733,20,733,25],"20129":[734,15,734,20],"20137":[735,14,735,19],"20145":[736,15,736,21],"20153":[736,14,736,22],"20161":[733,27,737,2],"20169":[733,1,737,3],"20171":[733,1,733,19],"20177":[733,1,737,4],"20185":[738,1,738,7],"20193":[738,1,738,17],"20201":[739,12,739,16],"20209":[739,12,739,25],"20211":[739,12,739,23],"20217":[739,12,739,25],"20225":[739,5,739,26],"20233":[738,29,740,2],"20241":[738,29,740,2],"20249":[738,29,740,2],"20257":[738,1,740,2],"20265":[738,1,740,3],"20273":[741,1,741,7],"20281":[741,20,741,30],"20289":[742,15,742,20],"20297":[743,14,743,19],"20305":[744,15,744,22],"20313":[744,14,744,23],"20321":[741,32,745,2],"20329":[741,1,745,3],"20331":[741,1,741,19],"20337":[741,1,745,4],"20345":[746,1,746,7],"20353":[746,1,746,17],"20361":[747,5,747,9],"20369":[747,5,747,17],"20371":[747,5,747,15],"20377":[747,5,747,18],"20385":[748,5,748,9],"20393":[748,5,748,17],"20395":[748,5,748,15],"20401":[748,5,748,18],"20409":[749,9,749,12],"20417":[750,9,750,13],"20425":[750,19,750,26],"20433":[750,28,750,31],"20441":[750,9,750,32],"20443":[750,9,750,18],"20449":[750,9,750,33],"20457":[746,28,751,2],"20465":[746,28,751,2],"20473":[746,28,751,2],"20481":[746,28,751,2],"20489":[746,1,751,2],"20497":[746,1,751,3],"20505":[752,1,752,7],"20513":[752,20,752,29],"20521":[753,15,753,20],"20529":[754,14,754,19],"20537":[752,31,755,2],"20545":[752,1,755,3],"20547":[752,1,752,19],"20553":[752,1,755,4],"20561":[756,1,756,7],"20569":[756,1,756,17],"20577":[757,5,757,9],"20585":[757,5,757,11],"20593":[757,28,757,35],"20601":[757,39,757,41],"20609":[757,5,757,41],"20617":[757,5,757,42],"20625":[758,12,758,16],"20633":[758,12,758,16],"20641":[758,5,758,17],"20649":[756,27,759,2],"20657":[756,27,759,2],"20665":[756,27,759,2],"20673":[756,27,759,2],"20681":[756,1,759,2],"20689":[756,1,759,3],"20697":[760,1,760,7],"20705":[760,20,760,28],"20713":[761,15,761,20],"20721":[762,14,762,19],"20729":[763,15,763,21],"20737":[763,14,763,22],"20745":[760,30,764,2],"20753":[760,1,764,3],"20755":[760,1,760,19],"20761":[760,1,764,4],"20769":[765,1,765,7],"20777":[765,1,765,17],"20785":[766,16,766,20],"20793":[766,16,766,20],"20801":[766,16,766,20],"20809":[767,5,767,9],"20817":[767,5,767,11],"20825":[767,5,767,15],"20833":[767,26,767,30],"20841":[767,5,767,30],"20849":[767,5,767,31],"20857":[768,16,768,24],"20865":[768,28,768,38],"20873":[769,16,769,20],"20881":[769,27,769,35],"20889":[769,16,769,36],"20891":[769,16,769,26],"20897":[769,16,769,36],"20905":[769,9,769,37],"20913":[770,16,770,20],"20921":[770,16,770,22],"20929":[771,9,771,13],"20937":[772,17,772,20],"20945":[773,24,773,30],"20953":[773,31,773,34],"20961":[773,24,773,35],"20969":[773,24,773,35],"20977":[773,17,773,36],"20985":[774,13,774,20],"20993":[774,21,774,22],"21001":[774,13,774,23],"21009":[774,13,774,24],"21017":[771,20,775,10],"21025":[771,20,775,10],"21033":[771,20,775,10],"21041":[771,20,775,10],"21049":[771,20,775,10],"21057":[771,9,775,11],"21059":[771,9,771,19],"21065":[771,9,775,12],"21073":[770,38,776,6],"21081":[770,38,776,6],"21089":[770,38,776,6],"21097":[770,38,776,6],"21105":[770,38,776,6],"21113":[770,12,776,7],"21115":[770,16,770,37],"21121":[770,12,776,7],"21129":[770,5,776,8],"21137":[765,28,777,2],"21145":[765,28,777,2],"21153":[765,28,777,2],"21161":[765,28,777,2],"21169":[765,28,777,2],"21177":[765,1,777,2],"21185":[765,1,777,3],"21193":[778,1,778,7],"21201":[778,20,778,29],"21209":[779,15,779,19],"21217":[780,14,780,18],"21225":[778,31,781,2],"21233":[778,1,781,3],"21235":[778,1,778,19],"21241":[778,1,781,4],"21249":[782,1,782,7],"21257":[782,1,782,17],"21265":[783,16,783,20],"21273":[783,16,783,20],"21281":[783,16,783,20],"21289":[784,9,784,13],"21297":[784,9,784,15],"21305":[784,9,784,21],"21313":[784,25,784,31],"21321":[784,25,784,38],"21329":[784,42,784,46],"21337":[784,42,784,55],"21339":[784,42,784,53],"21345":[785,16,785,20],"21353":[785,26,785,30],"21361":[785,16,785,31],"21363":[785,16,785,25],"21369":[785,16,785,31],"21377":[785,9,785,32],"21385":[787,5,787,9],"21393":[788,13,788,16],"21401":[789,18,789,22],"21409":[789,18,789,31],"21411":[789,18,789,29],"21417":[790,17,790,21],"21425":[790,17,790,29],"21427":[790,17,790,27],"21433":[790,17,790,30],"21441":[791,17,791,21],"21449":[791,32,791,39],"21457":[791,17,791,40],"21459":[791,17,791,31],"21465":[791,44,791,48],"21473":[791,59,791,66],"21481":[791,44,791,67],"21483":[791,44,791,58],"21489":[791,44,791,74],"21497":[791,77,791,78],"21505":[792,17,792,21],"21513":[792,27,792,34],"21521":[792,36,792,39],"21529":[792,17,792,40],"21531":[792,17,792,26],"21537":[792,17,792,41],"21545":[794,13,794,17],"21553":[794,23,794,28],"21561":[794,13,794,29],"21563":[794,13,794,22],"21569":[794,13,794,30],"21577":[795,20,795,24],"21585":[795,30,795,38],"21593":[795,20,795,39],"21595":[795,20,795,29],"21601":[795,20,795,39],"21609":[795,13,795,40],"21617":[797,20,797,24],"21625":[797,20,797,26],"21633":[797,20,797,40],"21641":[797,20,797,50],"21649":[797,54,797,64],"21657":[797,68,797,74],"21665":[797,78,797,82],"21673":[798,20,798,24],"21681":[798,30,798,34],"21689":[798,30,798,36],"21697":[798,30,798,50],"21705":[798,61,798,67],"21713":[798,30,798,68],"21715":[798,30,798,60],"21721":[798,20,798,69],"21723":[798,20,798,29],"21729":[798,20,798,69],"21737":[798,13,798,70],"21745":[800,13,800,17],"21753":[800,13,800,29],"21761":[800,13,800,40],"21769":[800,51,800,55],"21777":[800,51,800,67],"21785":[800,51,800,78],"21793":[800,51,800,82],"21801":[800,86,800,96],"21809":[800,100,800,106],"21817":[800,110,800,114],"21825":[801,20,801,24],"21833":[801,30,801,34],"21841":[801,30,801,46],"21849":[801,30,801,57],"21857":[801,62,801,68],"21865":[801,30,801,69],"21867":[801,30,801,61],"21873":[801,20,801,70],"21875":[801,20,801,29],"21881":[801,20,801,70],"21889":[801,13,801,71],"21897":[803,9,803,13],"21905":[803,19,803,25],"21913":[803,9,803,26],"21915":[803,9,803,18],"21921":[803,9,803,27],"21929":[787,21,804,6],"21937":[787,21,804,6],"21945":[787,21,804,6],"21953":[787,21,804,6],"21961":[787,21,804,6],"21969":[787,5,804,7],"21971":[787,5,787,20],"21977":[787,5,804,8],"21985":[782,26,805,2],"21993":[782,26,805,2],"22001":[782,26,805,2],"22009":[782,26,805,2],"22017":[782,26,805,2],"22025":[782,1,805,2],"22033":[782,1,805,3],"22041":[806,1,806,7],"22049":[806,23,806,29],"22057":[806,23,806,39],"22065":[806,41,806,52],"22073":[807,17,807,21],"22081":[809,14,809,18],"22089":[809,23,809,27],"22097":[809,23,809,29],"22105":[810,20,810,24],"22113":[810,20,810,24],"22121":[810,13,810,25],"22129":[812,18,812,22],"22137":[812,18,812,24],"22145":[812,18,812,27],"22153":[812,31,812,33],"22161":[812,18,812,33],"22169":[812,18,812,33],"22177":[813,24,813,26],"22185":[813,35,813,38],"22193":[813,24,813,39],"22195":[813,24,813,34],"22201":[813,24,813,39],"22209":[813,24,813,39],"22217":[814,13,814,21],"22225":[814,24,814,25],"22233":[816,27,816,31],"22241":[816,27,816,33],"22249":[816,27,816,36],"22257":[817,29,817,31],"22265":[815,20,818,14],"22273":[815,20,818,14],"22281":[815,13,818,15],"22289":[821,23,821,25],"22297":[821,33,821,34],"22305":[821,36,821,44],"22313":[821,23,821,45],"22315":[821,23,821,32],"22321":[822,25,822,27],"22329":[822,35,822,43],"22337":[822,46,822,47],"22345":[822,25,822,48],"22347":[822,25,822,34],"22353":[820,16,823,10],"22361":[820,16,823,10],"22369":[820,9,823,11],"22377":[808,10,824,6],"22385":[808,10,824,6],"22393":[808,10,824,6],"22401":[808,10,824,6],"22409":[808,10,824,6],"22417":[806,54,825,2],"22425":[806,1,825,3],"22427":[806,1,806,22],"22433":[806,1,825,4],"22441":[826,1,826,7],"22449":[826,15,826,16],"22457":[826,1,826,16],"22465":[826,1,826,17],"22473":[827,1,827,7],"22481":[827,15,827,16],"22489":[827,1,827,16],"22497":[827,1,827,17],"22505":[828,1,828,7],"22513":[828,17,828,18],"22521":[828,1,828,18],"22529":[828,1,828,19],"22537":[829,1,829,7],"22545":[829,19,829,20],"22553":[829,1,829,20],"22561":[829,1,829,21],"22569":[830,1,830,7],"22577":[830,18,830,24],"22585":[830,1,830,24],"22593":[830,1,830,25],"22601":[1,1,830,25],"22609":[1,1,830,25],"22617":[1,1,830,25],"22625":[1,1,830,25],"22633":[1,1,830,25],"22641":[1,1,830,25],"22649":[1,1,830,25],"22657":[1,1,830,25],"22665":[1,1,830,25],"22673":[1,1,830,25],"22681":[1,1,830,25],"22689":[1,1,830,25],"22697":[1,1,830,25],"22705":[1,1,830,25],"22713":[1,1,830,25],"22721":[1,1,830,25],"22729":[1,1,830,25],"22737":[1,1,830,25],"22745":[1,1,830,25],"22753":[1,1,830,25],"22761":[1,1,830,25],"22769":[1,1,830,25],"22777":[1,1,830,25],"22785":[1,1,830,25],"22793":[1,1,830,25],"22801":[1,1,830,25],"22809":[1,1,830,25],"22817":[1,1,830,25],"22825":[1,1,830,25],"22833":[27,26,27,111],"22841":[26,5,28,6],"22849":[17,14,48,2],"22857":[17,14,48,2],"22865":[62,17,63,50],"22873":[61,37,66,14],"22881":[61,37,66,14],"22889":[58,9,67,10],"22897":[57,5,68,6],"22905":[74,17,75,43],"22913":[76,17,77,40],"22921":[78,17,79,43],"22929":[73,30,82,14],"22937":[73,30,82,14],"22945":[70,9,83,10],"22953":[69,38,84,6],"22961":[69,38,84,6],"22969":[55,28,85,2],"22977":[55,28,85,2],"22985":[93,9,97,10],"22993":[92,5,99,6],"23001":[102,9,106,10],"23009":[108,13,109,36],"23017":[107,26,111,10],"23025":[107,26,111,10],"23033":[101,38,112,6],"23041":[101,38,112,6],"23049":[90,25,113,2],"23057":[90,25,113,2],"23065":[119,5,123,12],"23073":[118,27,126,2],"23081":[118,27,126,2],"23089":[133,5,137,12],"23097":[132,28,140,2],"23105":[132,28,140,2],"23113":[147,5,151,12],"23121":[146,25,154,2],"23129":[146,25,154,2],"23137":[161,5,165,12],"23145":[160,24,168,2],"23153":[160,24,168,2],"23161":[175,5,179,12],"23169":[174,24,182,2],"23177":[174,24,182,2],"23185":[189,5,193,12],"23193":[188,30,196,2],"23201":[188,30,196,2],"23209":[203,5,207,12],"23217":[202,33,210,2],"23225":[202,33,210,2],"23233":[217,5,221,12],"23241":[216,29,224,2],"23249":[216,29,224,2],"23257":[231,5,235,12],"23265":[236,5,240,12],"23273":[242,5,243,47],"23281":[230,36,245,2],"23289":[230,36,245,2],"23297":[252,5,256,12],"23305":[257,5,261,12],"23313":[262,5,266,12],"23321":[251,34,269,2],"23329":[251,34,269,2],"23337":[276,5,280,12],"23345":[281,5,285,12],"23353":[288,5,289,45],"23361":[275,37,291,2],"23369":[275,37,291,2],"23377":[298,5,302,12],"23385":[297,28,305,2],"23393":[297,28,305,2],"23401":[312,5,316,12],"23409":[317,5,321,12],"23417":[311,30,324,2],"23425":[311,30,324,2],"23433":[337,5,341,12],"23441":[336,28,344,2],"23449":[336,28,344,2],"23457":[351,5,355,12],"23465":[356,5,360,12],"23473":[372,20,376,14],"23481":[370,20,376,14],"23489":[368,13,376,14],"23497":[363,35,378,10],"23505":[363,35,378,10],"23513":[362,5,379,6],"23521":[380,5,385,6],"23529":[350,25,389,2],"23537":[350,25,389,2],"23545":[396,5,400,12],"23553":[401,5,405,12],"23561":[406,5,410,12],"23569":[395,30,414,2],"23577":[395,30,414,2],"23585":[421,5,425,12],"23593":[426,5,430,12],"23601":[431,5,435,12],"23609":[420,26,439,2],"23617":[420,26,439,2],"23625":[446,5,450,12],"23633":[451,5,455,12],"23641":[456,5,460,12],"23649":[445,25,464,2],"23657":[445,25,464,2],"23665":[472,5,476,13],"23673":[477,5,483,6],"23681":[485,9,486,34],"23689":[490,17,491,35],"23697":[489,31,493,14],"23705":[489,31,493,14],"23713":[487,9,494,10],"23721":[496,9,497,50],"23729":[484,16,499,6],"23737":[484,16,499,6],"23745":[471,18,500,2],"23753":[471,18,500,2],"23761":[506,5,507,16],"23769":[505,12,510,2],"23777":[505,12,510,2],"23785":[516,25,520,2],"23793":[516,25,520,2],"23801":[526,5,530,12],"23809":[531,5,532,16],"23817":[533,5,538,6],"23825":[539,5,540,36],"23833":[543,9,544,32],"23841":[548,13,549,54],"23849":[550,13,553,14],"23857":[554,13,555,24],"23865":[547,19,557,10],"23873":[547,19,557,10],"23881":[542,5,558,6],"23889":[525,13,559,2],"23897":[525,13,559,2],"23905":[562,9,565,10],"23913":[566,9,569,10],"23921":[570,9,575,10],"23929":[561,15,576,6],"23937":[561,15,576,6],"23945":[560,28,577,2],"23953":[560,28,577,2],"23961":[583,5,587,12],"23969":[588,5,592,6],"23977":[582,38,594,2],"23985":[582,38,594,2],"23993":[602,5,606,12],"24001":[607,5,608,40],"24009":[611,13,612,36],"24017":[610,23,614,10],"24025":[610,23,614,10],"24033":[609,38,615,6],"24041":[609,38,615,6],"24049":[600,28,616,2],"24057":[600,28,616,2],"24065":[623,13,624,54],"24073":[625,13,628,14],"24081":[632,17,634,18],"24089":[630,13,636,14],"24097":[622,20,638,10],"24105":[622,20,638,10],"24113":[621,21,639,6],"24121":[621,21,639,6],"24129":[617,15,641,2],"24137":[617,15,641,2],"24145":[648,5,652,12],"24153":[653,5,654,36],"24161":[656,5,657,60],"24169":[660,13,661,36],"24177":[659,43,663,10],"24185":[659,43,663,10],"24193":[658,38,664,6],"24201":[658,38,664,6],"24209":[646,26,665,2],"24217":[646,26,665,2],"24225":[667,5,670,6],"24233":[672,9,673,43],"24241":[674,9,675,45],"24249":[671,5,676,6],"24257":[684,12,686,6],"24265":[682,5,686,6],"24273":[690,5,691,34],"24281":[692,5,693,36],"24289":[694,5,695,44],"24297":[702,9,703,50],"24305":[704,9,706,10],"24313":[701,41,708,6],"24321":[701,41,708,6],"24329":[666,13,710,2],"24337":[666,13,710,2],"24345":[719,5,720,53],"24353":[721,38,723,6],"24361":[721,38,723,6],"24369":[715,26,724,2],"24377":[715,26,724,2],"24385":[729,24,732,2],"24393":[729,24,732,2],"24401":[738,29,740,2],"24409":[738,29,740,2],"24417":[749,5,750,33],"24425":[746,28,751,2],"24433":[746,28,751,2],"24441":[756,27,759,2],"24449":[756,27,759,2],"24457":[768,5,769,37],"24465":[772,13,773,36],"24473":[771,20,775,10],"24481":[771,20,775,10],"24489":[770,38,776,6],"24497":[770,38,776,6],"24505":[765,28,777,2],"24513":[765,28,777,2],"24521":[784,5,786,6],"24529":[789,13,790,30],"24537":[791,13,793,14],"24545":[788,9,796,10],"24553":[797,9,799,10],"24561":[800,9,802,10],"24569":[787,21,804,6],"24577":[787,21,804,6],"24585":[782,26,805,2],"24593":[782,26,805,2],"24601":[809,9,811,10],"24609":[814,9,819,10],"24617":[808,10,824,6],"24625":[808,10,824,6],"24633":[1,1,830,25],"24641":[1,1,830,25],"nBranches":336,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/lib/cursor.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/lib/cursor_jalangi_.js","code":"\"use strict\";\n\nvar inherits = require('util').inherits\n  , f = require('util').format\n  , toError = require('./utils').toError\n  , getSingleProperty = require('./utils').getSingleProperty\n  , formattedOrderClause = require('./utils').formattedOrderClause\n  , handleCallback = require('./utils').handleCallback\n  , Logger = require('mongodb-core').Logger\n  , EventEmitter = require('events').EventEmitter\n  , ReadPreference = require('./read_preference')\n  , MongoError = require('mongodb-core').MongoError\n  , Readable = require('stream').Readable || require('readable-stream').Readable\n  , Define = require('./metadata')\n  , CoreCursor = require('mongodb-core').Cursor\n  , Map = require('mongodb-core').BSON.Map\n  , Query = require('mongodb-core').Query\n  , CoreReadPreference = require('mongodb-core').ReadPreference;\n\n/**\n * @fileOverview The **Cursor** class is an internal class that embodies a cursor on MongoDB\n * allowing for iteration over the results returned from the underlying query. It supports\n * one by one document iteration, conversion to an array or can be iterated as a Node 0.10.X\n * or higher stream\n *\n * **CURSORS Cannot directly be instantiated**\n * @example\n * var MongoClient = require('mongodb').MongoClient,\n *   test = require('assert');\n * // Connection url\n * var url = 'mongodb://localhost:27017/test';\n * // Connect using MongoClient\n * MongoClient.connect(url, function(err, db) {\n *   // Create a collection we want to drop later\n *   var col = db.collection('createIndexExample1');\n *   // Insert a bunch of documents\n *   col.insert([{a:1, b:1}\n *     , {a:2, b:2}, {a:3, b:3}\n *     , {a:4, b:4}], {w:1}, function(err, result) {\n *     test.equal(null, err);\n *\n *     // Show that duplicate records got dropped\n *     col.find({}).toArray(function(err, items) {\n *       test.equal(null, err);\n *       test.equal(4, items.length);\n *       db.close();\n *     });\n *   });\n * });\n */\n\n/**\n * Namespace provided by the mongodb-core and node.js\n * @external CoreCursor\n * @external Readable\n */\n\n// Flags allowed for cursor\nvar flags = ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'];\nvar fields = ['numberOfRetries', 'tailableRetryInterval'];\n\n/**\n * Creates a new Cursor instance (INTERNAL TYPE, do not instantiate directly)\n * @class Cursor\n * @extends external:CoreCursor\n * @extends external:Readable\n * @property {string} sortValue Cursor query sort setting.\n * @property {boolean} timeout Is Cursor able to time out.\n * @property {ReadPreference} readPreference Get cursor ReadPreference.\n * @fires Cursor#data\n * @fires Cursor#end\n * @fires Cursor#close\n * @fires Cursor#readable\n * @return {Cursor} a Cursor instance.\n * @example\n * Cursor cursor options.\n * \n * collection.find({}).project({a:1})                             // Create a projection of field a \n * collection.find({}).skip(1).limit(10)                          // Skip 1 and limit 10\n * collection.find({}).batchSize(5)                               // Set batchSize on cursor to 5\n * collection.find({}).filter({a:1})                              // Set query on the cursor\n * collection.find({}).comment('add a comment')                   // Add a comment to the query, allowing to correlate queries\n * collection.find({}).addCursorFlag('tailable', true)            // Set cursor as tailable\n * collection.find({}).addCursorFlag('oplogReplay', true)         // Set cursor as oplogReplay\n * collection.find({}).addCursorFlag('noCursorTimeout', true)     // Set cursor as noCursorTimeout\n * collection.find({}).addCursorFlag('awaitData', true)           // Set cursor as awaitData\n * collection.find({}).addCursorFlag('exhaust', true)             // Set cursor as exhaust\n * collection.find({}).addCursorFlag('partial', true)             // Set cursor as partial\n * collection.find({}).addQueryModifier('$orderby', {a:1})        // Set $orderby {a:1}\n * collection.find({}).max(10)                                    // Set the cursor maxScan\n * collection.find({}).maxScan(10)                                // Set the cursor maxScan\n * collection.find({}).maxTimeMS(1000)                            // Set the cursor maxTimeMS\n * collection.find({}).min(100)                                   // Set the cursor min\n * collection.find({}).returnKey(10)                              // Set the cursor returnKey\n * collection.find({}).setReadPreference(ReadPreference.PRIMARY)  // Set the cursor readPreference\n * collection.find({}).showRecordId(true)                         // Set the cursor showRecordId\n * collection.find({}).snapshot(true)                             // Set the cursor snapshot\n * collection.find({}).sort([['a', 1]])                           // Sets the sort order of the cursor query\n * collection.find({}).hint('a_1')                                // Set the cursor hint\n *\n * All options are chainable, so one can do the following.\n *\n * collection.find({}).maxTimeMS(1000).maxScan(100).skip(1).toArray(..)\n */\nvar Cursor = function(bson, ns, cmd, options, topology, topologyOptions) {\n  CoreCursor.apply(this, Array.prototype.slice.call(arguments, 0));\n  var self = this;\n  var state = Cursor.INIT;\n  var streamOptions = {};\n\n  // Tailable cursor options\n  var numberOfRetries = options.numberOfRetries || 5;\n  var tailableRetryInterval = options.tailableRetryInterval || 500;\n  var currentNumberOfRetries = numberOfRetries;\n\n  // Get the promiseLibrary\n  var promiseLibrary = options.promiseLibrary;\n\n  // No promise library selected fall back\n  if(!promiseLibrary) {\n    promiseLibrary = typeof global.Promise == 'function' ?\n      global.Promise : require('es6-promise').Promise;\n  }\n\n  // Set up\n  Readable.call(this, {objectMode: true});\n\n  // Internal cursor state\n  this.s = {\n    // Tailable cursor options\n      numberOfRetries: numberOfRetries\n    , tailableRetryInterval: tailableRetryInterval\n    , currentNumberOfRetries: currentNumberOfRetries\n    // State\n    , state: state\n    // Stream options\n    , streamOptions: streamOptions\n    // BSON\n    , bson: bson\n    // Namespace\n    , ns: ns\n    // Command\n    , cmd: cmd\n    // Options\n    , options: options\n    // Topology\n    , topology: topology\n    // Topology options\n    , topologyOptions: topologyOptions\n    // Promise library\n    , promiseLibrary: promiseLibrary\n    // Current doc\n    , currentDoc: null\n  }\n\n  // Legacy fields\n  this.timeout = self.s.options.noCursorTimeout == true;\n  this.sortValue = self.s.cmd.sort;\n  this.readPreference = self.s.options.readPreference;\n}\n\n/**\n * Cursor stream data event, fired for each document in the cursor.\n *\n * @event Cursor#data\n * @type {object}\n */\n\n/**\n * Cursor stream end event\n *\n * @event Cursor#end\n * @type {null}\n */\n\n/**\n * Cursor stream close event\n *\n * @event Cursor#close\n * @type {null}\n */\n\n/**\n * Cursor stream readable event\n *\n * @event Cursor#readable\n * @type {null}\n */\n\n// Inherit from Readable\ninherits(Cursor, Readable);\n\n// Map core cursor _next method so we can apply mapping\nCoreCursor.prototype._next = CoreCursor.prototype.next;\n\nfor(var name in CoreCursor.prototype) {\n  Cursor.prototype[name] = CoreCursor.prototype[name];\n}\n\nvar define = Cursor.define = new Define('Cursor', Cursor, true);\n\n/**\n * Check if there is any document still available in the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.hasNext = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') {\n    if(self.s.currentDoc){\n      return callback(null, true);\n    } else {\n      return nextObject(self, function(err, doc) {\n        if(!doc) return callback(null, false);\n        self.s.currentDoc = doc;\n        callback(null, true);\n      });\n    }\n  }\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    if(self.s.currentDoc){\n      resolve(true);\n    } else {\n      nextObject(self, function(err, doc) {\n        if(self.s.state == Cursor.CLOSED || self.isDead()) return resolve(false);\n        if(err) return reject(err);\n        if(!doc) return resolve(false);\n        self.s.currentDoc = doc;\n        resolve(true);\n      });\n    }\n  });\n}\n\ndefine.classMethod('hasNext', {callback: true, promise:true});\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.next = function(callback) {\n  var self = this;\n\n  // Execute using callback\n  if(typeof callback == 'function') {\n    // Return the currentDoc if someone called hasNext first\n    if(self.s.currentDoc) {\n      var doc = self.s.currentDoc;\n      self.s.currentDoc = null;\n      return callback(null, doc);\n    }\n\n    // Return the next object\n    return nextObject(self, callback)\n  };\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    // Return the currentDoc if someone called hasNext first\n    if(self.s.currentDoc) {\n      var doc = self.s.currentDoc;\n      self.s.currentDoc = null;\n      return resolve(doc);\n    }\n\n    nextObject(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('next', {callback: true, promise:true});\n\n/**\n * Set the cursor query\n * @method\n * @param {object} filter The filter object used for the cursor.\n * @return {Cursor}\n */\nCursor.prototype.filter = function(filter) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.query = filter;\n  return this;\n}\n\ndefine.classMethod('filter', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor maxScan\n * @method\n * @param {object} maxScan Constrains the query to only scan the specified number of documents when fulfilling the query\n * @return {Cursor}\n */\nCursor.prototype.maxScan = function(maxScan) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.maxScan = maxScan;\n  return this;\n}\n\ndefine.classMethod('maxScan', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor hint\n * @method\n * @param {object} hint If specified, then the query system will only consider plans using the hinted index.\n * @return {Cursor}\n */\nCursor.prototype.hint = function(hint) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.hint = hint;\n  return this;\n}\n\ndefine.classMethod('hint', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor min\n * @method\n * @param {object} min Specify a $min value to specify the inclusive lower bound for a specific index in order to constrain the results of find(). The $min specifies the lower bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.min = function(min) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.min = min;\n  return this;\n}\n\ndefine.classMethod('min', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor max\n * @method\n * @param {object} max Specify a $max value to specify the exclusive upper bound for a specific index in order to constrain the results of find(). The $max specifies the upper bound for all keys of a specific index in order.\n * @return {Cursor}\n */\nCursor.prototype.max = function(max) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.max = max;\n  return this;\n}\n\ndefine.classMethod('max', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor returnKey\n * @method\n * @param {object} returnKey Only return the index field or fields for the results of the query. If $returnKey is set to true and the query does not use an index to perform the read operation, the returned documents will not contain any fields. Use one of the following forms:\n * @return {Cursor}\n */\nCursor.prototype.returnKey = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.returnKey = value;\n  return this;\n}\n\ndefine.classMethod('returnKey', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor showRecordId\n * @method\n * @param {object} showRecordId The $showDiskLoc option has now been deprecated and replaced with the showRecordId field. $showDiskLoc will still be accepted for OP_QUERY stye find.\n * @return {Cursor}\n */\nCursor.prototype.showRecordId = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.showDiskLoc = value;\n  return this;\n}\n\ndefine.classMethod('showRecordId', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the cursor snapshot\n * @method\n * @param {object} snapshot The $snapshot operator prevents the cursor from returning a document more than once because an intervening write operation results in a move of the document.\n * @return {Cursor}\n */\nCursor.prototype.snapshot = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.snapshot = value;\n  return this;\n}\n\ndefine.classMethod('snapshot', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set a node.js specific cursor option\n * @method\n * @param {string} field The cursor option to set ['numberOfRetries', 'tailableRetryInterval'].\n * @param {object} value The field value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setCursorOption = function(field, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(fields.indexOf(field) == -1) throw MongoError.create({message: f(\"option %s not a supported option %s\", field, fields), driver:true });\n  this.s[field] = value;\n  if(field == 'numberOfRetries')\n    this.s.currentNumberOfRetries = value;\n  return this;\n}\n\ndefine.classMethod('setCursorOption', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Add a cursor flag to the cursor\n * @method\n * @param {string} flag The flag to set, must be one of following ['tailable', 'oplogReplay', 'noCursorTimeout', 'awaitData', 'exhaust', 'partial'].\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addCursorFlag = function(flag, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(flags.indexOf(flag) == -1) throw MongoError.create({message: f(\"flag %s not a supported flag %s\", flag, flags), driver:true });\n  if(typeof value != 'boolean') throw MongoError.create({message: f(\"flag %s must be a boolean value\", flag), driver:true});\n  this.s.cmd[flag] = value;\n  return this;\n}\n\ndefine.classMethod('addCursorFlag', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Add a query modifier to the cursor query\n * @method\n * @param {string} name The query modifier (must start with $, such as $orderby etc)\n * @param {boolean} value The flag boolean value.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.addQueryModifier = function(name, value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(name[0] != '$') throw MongoError.create({message: f(\"%s is not a valid query modifier\"), driver:true});\n  // Strip of the $\n  var field = name.substr(1);\n  // Set on the command\n  this.s.cmd[field] = value;\n  // Deal with the special case for sort\n  if(field == 'orderby') this.s.cmd.sort = this.s.cmd[field];\n  return this;\n}\n\ndefine.classMethod('addQueryModifier', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Add a comment to the cursor query allowing for tracking the comment in the log.\n * @method\n * @param {string} value The comment attached to this query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.comment = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.comment = value;\n  return this;\n}\n\ndefine.classMethod('comment', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set a maxTimeMS on the cursor query, allowing for hard timeout limits on queries (Only supported on MongoDB 2.6 or higher)\n * @method\n * @param {number} value Number of milliseconds to wait before aborting the query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.maxTimeMS = function(value) {\n  if(typeof value != 'number') throw MongoError.create({message: \"maxTimeMS must be a number\", driver:true});\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.maxTimeMS = value;\n  return this;\n}\n\ndefine.classMethod('maxTimeMS', {callback: false, promise:false, returns: [Cursor]});\n\nCursor.prototype.maxTimeMs = Cursor.prototype.maxTimeMS;\n\ndefine.classMethod('maxTimeMs', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Sets a field projection for the query.\n * @method\n * @param {object} value The field projection object.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.project = function(value) {\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  this.s.cmd.fields = value;\n  return this;\n}\n\ndefine.classMethod('project', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Sets the sort order of the cursor query.\n * @method\n * @param {(string|array|object)} keyOrList The key or keys set for the sort.\n * @param {number} [direction] The direction of the sorting (1 or -1).\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.sort = function(keyOrList, direction) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support sorting\", driver:true});\n  if(this.s.state == Cursor.CLOSED || this.s.state == Cursor.OPEN || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  var order = keyOrList;\n\n  // We have an array of arrays, we need to preserve the order of the sort\n  // so we will us a Map\n  if(Array.isArray(order) && Array.isArray(order[0])) {\n    // console.log(\"------------------------------------------------\")\n    // console.dir(order)\n    // console.dir(order)\n    order = new Map(order.map(function(x) {\n      // console.dir(\"--------------------------------------- x\")\n      // console.dir(x)\n      var value = [x[0], null];\n      if(x[1] == 'asc') {\n        value[1] = 1;\n      } else if(x[1] == 'desc') {\n        value[1] = -1;\n      } else if(x[1] == 1 || x[1] == -1) {\n        value[1] = x[1];\n      } else {\n        throw new MongoError(\"Illegal sort clause, must be of the form [['field1', '(ascending|descending)'], ['field2', '(ascending|descending)']]\");\n      }\n\n      return value;\n    }));\n\n    // console.log(\"=============================== MAP\")\n    // console.dir(order)\n  }\n\n  if(direction != null) {\n    order = [[keyOrList, direction]];\n  }\n\n  this.s.cmd.sort = order;\n  this.sortValue = order;\n  return this;\n}\n\ndefine.classMethod('sort', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the batch size for the cursor.\n * @method\n * @param {number} value The batchSize for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.batchSize = function(value) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support batchSize\", driver:true});\n  if(this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(typeof value != 'number') throw MongoError.create({message: \"batchSize requires an integer\", driver:true});\n  this.s.cmd.batchSize = value;\n  this.setCursorBatchSize(value);\n  return this;\n}\n\ndefine.classMethod('batchSize', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the limit for the cursor.\n * @method\n * @param {number} value The limit for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.limit = function(value) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support limit\", driver:true});\n  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(typeof value != 'number') throw MongoError.create({message: \"limit requires an integer\", driver:true});\n  this.s.cmd.limit = value;\n  // this.cursorLimit = value;\n  this.setCursorLimit(value);\n  return this;\n}\n\ndefine.classMethod('limit', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Set the skip for the cursor.\n * @method\n * @param {number} value The skip for the cursor query.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.skip = function(value) {\n  if(this.s.options.tailable) throw MongoError.create({message: \"Tailable cursor doesn't support skip\", driver:true});\n  if(this.s.state == Cursor.OPEN || this.s.state == Cursor.CLOSED || this.isDead()) throw MongoError.create({message: \"Cursor is closed\", driver:true});\n  if(typeof value != 'number') throw MongoError.create({message: \"skip requires an integer\", driver:true});\n  this.s.cmd.skip = value;\n  this.setCursorSkip(value);\n  return this;\n}\n\ndefine.classMethod('skip', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * The callback format for results\n * @callback Cursor~resultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {(object|null|boolean)} result The result object if the command was executed successfully.\n */\n\n/**\n * Clone the cursor\n * @function external:CoreCursor#clone\n * @return {Cursor}\n */\n\n/**\n * Resets the cursor\n * @function external:CoreCursor#rewind\n * @return {null}\n */\n\n/**\n * Get the next available document from the cursor, returns null if no more documents are available.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @deprecated\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.nextObject = Cursor.prototype.next;\n\nvar nextObject = function(self, callback) {\n  if(self.s.state == Cursor.CLOSED || self.isDead && self.isDead()) return handleCallback(callback, MongoError.create({message: \"Cursor is closed\", driver:true}));\n  if(self.s.state == Cursor.INIT && self.s.cmd.sort) {\n    try {\n      self.s.cmd.sort = formattedOrderClause(self.s.cmd.sort);\n    } catch(err) {\n      return handleCallback(callback, err);\n    }\n  }\n\n  // Get the next object\n  self._next(function(err, doc) {\n    if(err && err.tailable && self.s.currentNumberOfRetries == 0) return callback(err);\n    if(err && err.tailable && self.s.currentNumberOfRetries > 0) {\n      self.s.currentNumberOfRetries = self.s.currentNumberOfRetries - 1;\n\n      return setTimeout(function() {\n        // Rewind the cursor only when it has not actually read any documents yet\n        if(self.cursorState.currentLimit == 0) self.rewind();\n        // Read the next document, forcing a re-issue of query if no cursorId exists\n        self.nextObject(callback);\n      }, self.s.tailableRetryInterval);\n    }\n\n    self.s.state = Cursor.OPEN;\n    if(err) return handleCallback(callback, err);\n    handleCallback(callback, null, doc);\n  });\n}\n\ndefine.classMethod('nextObject', {callback: true, promise:true});\n\n// Trampoline emptying the number of retrieved items\n// without incurring a nextTick operation\nvar loop = function(self, callback) {\n  // No more items we are done\n  if(self.bufferedCount() == 0) return;\n  // Get the next document\n  self._next(callback);\n  // Loop\n  return loop;\n}\n\nCursor.prototype.next = Cursor.prototype.nextObject;\n\ndefine.classMethod('next', {callback: true, promise:true});\n\n/**\n * Iterates over all the documents for this cursor. As with **{cursor.toArray}**,\n * not all of the elements will be iterated if this cursor had been previouly accessed.\n * In that case, **{cursor.rewind}** can be used to reset the cursor. However, unlike\n * **{cursor.toArray}**, the cursor will only hold a maximum of batch size elements\n * at any given time if batch size is specified. Otherwise, the caller is responsible\n * for making sure that the entire result can fit the memory.\n * @method\n * @deprecated\n * @param {Cursor~resultCallback} callback The result callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.each = function(callback) {\n  // Rewind cursor state\n  this.rewind();\n  // Set current cursor to INIT\n  this.s.state = Cursor.INIT;\n  // Run the query\n  _each(this, callback);\n};\n\ndefine.classMethod('each', {callback: true, promise:false});\n\n// Run the each loop\nvar _each = function(self, callback) {\n  if(!callback) throw MongoError.create({message: 'callback is mandatory', driver:true});\n  if(self.isNotified()) return;\n  if(self.s.state == Cursor.CLOSED || self.isDead()) {\n    return handleCallback(callback, MongoError.create({message: \"Cursor is closed\", driver:true}));\n  }\n\n  if(self.s.state == Cursor.INIT) self.s.state = Cursor.OPEN;\n\n  // Define function to avoid global scope escape\n  var fn = null;\n  // Trampoline all the entries\n  if(self.bufferedCount() > 0) {\n    while(fn = loop(self, callback)) fn(self, callback);\n    _each(self, callback);\n  } else {\n    self.next(function(err, item) {\n      if(err) return handleCallback(callback, err);\n      if(item == null) {\n        self.s.state = Cursor.CLOSED;\n        return handleCallback(callback, null, null);\n      }\n\n      if(handleCallback(callback, null, item) == false) return;\n      _each(self, callback);\n    })\n  }\n}\n\n/**\n * The callback format for the forEach iterator method\n * @callback Cursor~iteratorCallback\n * @param {Object} doc An emitted document for the iterator\n */\n\n/**\n * The callback error format for the forEach iterator method\n * @callback Cursor~endCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n */\n\n/**\n * Iterates over all the documents for this cursor using the iterator, callback pattern.\n * @method\n * @param {Cursor~iteratorCallback} iterator The iteration callback.\n * @param {Cursor~endCallback} callback The end callback.\n * @throws {MongoError}\n * @return {null}\n */\nCursor.prototype.forEach = function(iterator, callback) {\n  this.each(function(err, doc){\n    if(err) { callback(err); return false; }\n    if(doc != null) { iterator(doc); return true; }\n    if(doc == null && callback) {\n      var internalCallback = callback;\n      callback = null;\n      internalCallback(null);\n      return false;\n    }\n  });\n}\n\ndefine.classMethod('forEach', {callback: true, promise:false});\n\n/**\n * Set the ReadPreference for the cursor.\n * @method\n * @param {(string|ReadPreference)} readPreference The new read preference for the cursor.\n * @throws {MongoError}\n * @return {Cursor}\n */\nCursor.prototype.setReadPreference = function(r) {\n  if(this.s.state != Cursor.INIT) throw MongoError.create({message: 'cannot change cursor readPreference after cursor has been accessed', driver:true});\n  if(r instanceof ReadPreference) {\n    this.s.options.readPreference = new CoreReadPreference(r.mode, r.tags);\n  } else {\n    this.s.options.readPreference = new CoreReadPreference(r);\n  }\n\n  return this;\n}\n\ndefine.classMethod('setReadPreference', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * The callback format for results\n * @callback Cursor~toArrayResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {object[]} documents All the documents the satisfy the cursor.\n */\n\n/**\n * Returns an array of documents. The caller is responsible for making sure that there\n * is enough memory to store the results. Note that the array only contain partial\n * results when this cursor had been previouly accessed. In that case,\n * cursor.rewind() can be used to reset the cursor.\n * @method\n * @param {Cursor~toArrayResultCallback} [callback] The result callback.\n * @throws {MongoError}\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.toArray = function(callback) {\n  var self = this;\n  if(self.s.options.tailable) throw MongoError.create({message: 'Tailable cursor cannot be converted to array', driver:true});\n\n  // Execute using callback\n  if(typeof callback == 'function') return toArray(self, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    toArray(self, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\nvar toArray = function(self, callback) {\n  var items = [];\n\n  // Reset cursor\n  self.rewind();\n  self.s.state = Cursor.INIT;\n\n  // Fetch all the documents\n  var fetchDocs = function() {\n    self._next(function(err, doc) {\n      if(err) return handleCallback(callback, err);\n      if(doc == null) {\n        self.s.state = Cursor.CLOSED;\n        return handleCallback(callback, null, items);\n      }\n\n      // Add doc to items\n      items.push(doc)\n\n      // Get all buffered objects\n      if(self.bufferedCount() > 0) {\n        var docs = self.readBufferedDocuments(self.bufferedCount())\n\n        // Transform the doc if transform method added\n        if(self.s.transforms && typeof self.s.transforms.doc == 'function') {\n          docs = docs.map(self.s.transforms.doc);\n        }\n\n        items = items.concat(docs);\n      }\n\n      // Attempt a fetch\n      fetchDocs();\n    })\n  }\n\n  fetchDocs();\n}\n\ndefine.classMethod('toArray', {callback: true, promise:true});\n\n/**\n * The callback format for results\n * @callback Cursor~countResultCallback\n * @param {MongoError} error An error instance representing the error during the execution.\n * @param {number} count The count of documents.\n */\n\n/**\n * Get the count of documents for this cursor\n * @method\n * @param {boolean} applySkipLimit Should the count command apply limit and skip settings on the cursor or in the passed in options.\n * @param {object} [options=null] Optional settings.\n * @param {number} [options.skip=null] The number of documents to skip.\n * @param {number} [options.limit=null] The maximum amounts to count before aborting.\n * @param {number} [options.maxTimeMS=null] Number of miliseconds to wait before aborting the query.\n * @param {string} [options.hint=null] An index name hint for the query.\n * @param {(ReadPreference|string)} [options.readPreference=null] The preferred read preference (ReadPreference.PRIMARY, ReadPreference.PRIMARY_PREFERRED, ReadPreference.SECONDARY, ReadPreference.SECONDARY_PREFERRED, ReadPreference.NEAREST).\n * @param {Cursor~countResultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.count = function(applySkipLimit, opts, callback) {\n  var self = this;\n  if(self.s.cmd.query == null) throw MongoError.create({message: \"count can only be used with find command\", driver:true});\n  if(typeof opts == 'function') callback = opts, opts = {};\n  opts = opts || {};\n\n  // Execute using callback\n  if(typeof callback == 'function') return count(self, applySkipLimit, opts, callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    count(self, applySkipLimit, opts, function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n};\n\nvar count = function(self, applySkipLimit, opts, callback) {\n  if(typeof applySkipLimit == 'function') {\n    callback = applySkipLimit;\n    applySkipLimit = true;\n  }\n\n  if(applySkipLimit) {\n    if(typeof self.cursorSkip() == 'number') opts.skip = self.cursorSkip();\n    if(typeof self.cursorLimit() == 'number') opts.limit = self.cursorLimit();\n  }\n\n  // Command\n  var delimiter = self.s.ns.indexOf('.');\n\n  var command = {\n    'count': self.s.ns.substr(delimiter+1), 'query': self.s.cmd.query\n  }\n\n  if(typeof opts.maxTimeMS == 'number') {\n    command.maxTimeMS = opts.maxTimeMS;\n  } else if(typeof self.s.maxTimeMS == 'number') {\n    command.maxTimeMS = self.s.maxTimeMS;\n  }\n\n  // Get a server\n  var server = self.s.topology.getServer(opts);\n  // Get a connection\n  var connection = self.s.topology.getConnection(opts);\n  // Get the callbacks\n  var callbacks = server.getCallbacks();\n\n  // Merge in any options\n  if(opts.skip) command.skip = opts.skip;\n  if(opts.limit) command.limit = opts.limit;\n  if(self.s.options.hint) command.hint = self.s.options.hint;\n\n  // Build Query object\n  var query = new Query(self.s.bson, f(\"%s.$cmd\", self.s.ns.substr(0, delimiter)), command, {\n      numberToSkip: 0, numberToReturn: -1\n    , checkKeys: false\n  });\n\n  // Set up callback\n  callbacks.register(query.requestId, function(err, result) {\n    if(err) return handleCallback(callback, err);\n    if(result.documents.length == 1\n      && (result.documents[0].errmsg\n      || result.documents[0].err\n      || result.documents[0]['$err'])) {\n      return handleCallback(callback, MongoError.create(result.documents[0]));\n    }\n    handleCallback(callback, null, result.documents[0].n);\n  });\n\n  // Write the initial command out\n  connection.write(query.toBin());\n}\n\ndefine.classMethod('count', {callback: true, promise:true});\n\n/**\n * Close the cursor, sending a KillCursor command and emitting close.\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.close = function(callback) {\n  this.s.state = Cursor.CLOSED;\n  // Kill the cursor\n  this.kill();\n  // Emit the close event for the cursor\n  this.emit('close');\n  // Callback if provided\n  if(typeof callback == 'function') return handleCallback(callback, null, this);\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    resolve();\n  });\n}\n\ndefine.classMethod('close', {callback: true, promise:true});\n\n/**\n * Map all documents using the provided function\n * @method\n * @param {function} [transform] The mapping transformation method.\n * @return {null}\n */\nCursor.prototype.map = function(transform) {\n  this.cursorState.transforms = { doc: transform };\n  return this;\n}\n\ndefine.classMethod('map', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Is the cursor closed\n * @method\n * @return {boolean}\n */\nCursor.prototype.isClosed = function() {\n  return this.isDead();\n}\n\ndefine.classMethod('isClosed', {callback: false, promise:false, returns: [Boolean]});\n\nCursor.prototype.destroy = function(err) {\n  this.pause();\n  this.close();\n  if(err) this.emit('error', err);\n}\n\ndefine.classMethod('destroy', {callback: false, promise:false});\n\n/**\n * Return a modified Readable stream including a possible transform method.\n * @method\n * @param {object} [options=null] Optional settings.\n * @param {function} [options.transform=null] A transformation method applied to each document emitted by the stream.\n * @return {Cursor}\n */\nCursor.prototype.stream = function(options) {\n  this.s.streamOptions = options || {};\n  return this;\n}\n\ndefine.classMethod('stream', {callback: false, promise:false, returns: [Cursor]});\n\n/**\n * Execute the explain for the cursor\n * @method\n * @param {Cursor~resultCallback} [callback] The result callback.\n * @return {Promise} returns Promise if no callback passed\n */\nCursor.prototype.explain = function(callback) {\n  var self = this;\n  this.s.cmd.explain = true;\n\n  // Execute using callback\n  if(typeof callback == 'function') return this._next(callback);\n\n  // Return a Promise\n  return new this.s.promiseLibrary(function(resolve, reject) {\n    self._next(function(err, r) {\n      if(err) return reject(err);\n      resolve(r);\n    });\n  });\n}\n\ndefine.classMethod('explain', {callback: true, promise:true});\n\nCursor.prototype._read = function(n) {\n  var self = this;\n  if(self.s.state == Cursor.CLOSED || self.isDead()) {\n    return self.push(null);\n  }\n\n  // Get the next item\n  self.nextObject(function(err, result) {\n    if(err) {\n      if(!self.isDead()) self.close();\n      if(self.listeners('error') && self.listeners('error').length > 0) {\n        self.emit('error', err);\n      }\n\n      // Emit end event\n      self.emit('end');\n      return self.emit('finish');\n    }\n\n    // If we provided a transformation method\n    if(typeof self.s.streamOptions.transform == 'function' && result != null) {\n      return self.push(self.s.streamOptions.transform(result));\n    }\n\n    // If we provided a map function\n    if(self.cursorState.transforms && typeof self.cursorState.transforms.doc == 'function' && result != null) {\n      return self.push(self.cursorState.transforms.doc(result));\n    }\n\n    // Return the result\n    self.push(result);\n  });\n}\n\nObject.defineProperty(Cursor.prototype, 'namespace', {\n  enumerable: true,\n  get: function() {\n    if (!this || !this.s) {\n      return null;\n    }\n\n    // TODO: refactor this logic into core\n    var ns = this.s.ns || '';\n    var firstDot = ns.indexOf('.');\n    if (firstDot < 0) {\n      return {\n        database: this.s.ns,\n        collection: ''\n      };\n    }\n    return {\n      database: ns.substr(0, firstDot),\n      collection: ns.substr(firstDot + 1)\n    };\n  }\n});\n\n/**\n * The read() method pulls some data out of the internal buffer and returns it. If there is no data available, then it will return null.\n * @function external:Readable#read\n * @param {number} size Optional argument to specify how much data to read.\n * @return {(String | Buffer | null)}\n */\n\n/**\n * Call this function to cause the stream to return strings of the specified encoding instead of Buffer objects.\n * @function external:Readable#setEncoding\n * @param {string} encoding The encoding to use.\n * @return {null}\n */\n\n/**\n * This method will cause the readable stream to resume emitting data events.\n * @function external:Readable#resume\n * @return {null}\n */\n\n/**\n * This method will cause a stream in flowing-mode to stop emitting data events. Any data that becomes available will remain in the internal buffer.\n * @function external:Readable#pause\n * @return {null}\n */\n\n/**\n * This method pulls all the data out of a readable stream, and writes it to the supplied destination, automatically managing the flow so that the destination is not overwhelmed by a fast readable stream.\n * @function external:Readable#pipe\n * @param {Writable} destination The destination for writing data\n * @param {object} [options] Pipe options\n * @return {null}\n */\n\n/**\n * This method will remove the hooks set up for a previous pipe() call.\n * @function external:Readable#unpipe\n * @param {Writable} [destination] The destination for writing data\n * @return {null}\n */\n\n/**\n * This is useful in certain cases where a stream is being consumed by a parser, which needs to \"un-consume\" some data that it has optimistically pulled out of the source, so that the stream can be passed on to some other party.\n * @function external:Readable#unshift\n * @param {(Buffer|string)} chunk Chunk of data to unshift onto the read queue.\n * @return {null}\n */\n\n/**\n * Versions of Node prior to v0.10 had streams that did not implement the entire Streams API as it is today. (See \"Compatibility\" below for more information.)\n * @function external:Readable#wrap\n * @param {Stream} stream An \"old style\" readable stream.\n * @return {null}\n */\n\nCursor.INIT = 0;\nCursor.OPEN = 1;\nCursor.CLOSED = 2;\nCursor.GET_MORE = 3;\n\nmodule.exports = Cursor;\n"};
jalangiLabel3592:
    while (true) {
        try {
            J$.Se(22601, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/lib/cursor_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/mongodb/lib/cursor.js');
            J$.N(22609, '__secret__S$', __secret__S$, 0);
            J$.N(22617, '__secret__traits__', __secret__traits__, 0);
            J$.N(22625, 'inherits', inherits, 0);
            J$.N(22633, 'f', f, 0);
            J$.N(22641, 'toError', toError, 0);
            J$.N(22649, 'getSingleProperty', getSingleProperty, 0);
            J$.N(22657, 'formattedOrderClause', formattedOrderClause, 0);
            J$.N(22665, 'handleCallback', handleCallback, 0);
            J$.N(22673, 'Logger', Logger, 0);
            J$.N(22681, 'EventEmitter', EventEmitter, 0);
            J$.N(22689, 'ReadPreference', ReadPreference, 0);
            J$.N(22697, 'MongoError', MongoError, 0);
            J$.N(22705, 'Readable', Readable, 0);
            J$.N(22713, 'Define', Define, 0);
            J$.N(22721, 'CoreCursor', CoreCursor, 0);
            J$.N(22729, 'Map', Map, 0);
            J$.N(22737, 'Query', Query, 0);
            J$.N(22745, 'CoreReadPreference', CoreReadPreference, 0);
            J$.N(22753, 'flags', flags, 0);
            J$.N(22761, 'fields', fields, 0);
            J$.N(22769, 'Cursor', Cursor, 0);
            J$.N(22777, 'name', name, 0);
            J$.N(22785, 'define', define, 0);
            J$.N(22793, 'nextObject', nextObject, 0);
            J$.N(22801, 'loop', loop, 0);
            J$.N(22809, '_each', _each, 0);
            J$.N(22817, 'toArray', toArray, 0);
            J$.N(22825, 'count', count, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var inherits = J$.X1(641, J$.W(633, 'inherits', J$.G(121, J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, 'util', 21, false)), 'inherits', 0), inherits, 3)), f = J$.X1(657, J$.W(649, 'f', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'util', 21, false)), 'format', 0), f, 3)), toError = J$.X1(673, J$.W(665, 'toError', J$.G(185, J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, './utils', 21, false)), 'toError', 0), toError, 3)), getSingleProperty = J$.X1(689, J$.W(681, 'getSingleProperty', J$.G(217, J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, './utils', 21, false)), 'getSingleProperty', 0), getSingleProperty, 3)), formattedOrderClause = J$.X1(705, J$.W(697, 'formattedOrderClause', J$.G(249, J$.F(241, J$.R(225, 'require', require, 2), 0)(J$.T(233, './utils', 21, false)), 'formattedOrderClause', 0), formattedOrderClause, 3)), handleCallback = J$.X1(721, J$.W(713, 'handleCallback', J$.G(281, J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, './utils', 21, false)), 'handleCallback', 0), handleCallback, 3)), Logger = J$.X1(737, J$.W(729, 'Logger', J$.G(313, J$.F(305, J$.R(289, 'require', require, 2), 0)(J$.T(297, 'mongodb-core', 21, false)), 'Logger', 0), Logger, 3)), EventEmitter = J$.X1(753, J$.W(745, 'EventEmitter', J$.G(345, J$.F(337, J$.R(321, 'require', require, 2), 0)(J$.T(329, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3)), ReadPreference = J$.X1(769, J$.W(761, 'ReadPreference', J$.F(369, J$.R(353, 'require', require, 2), 0)(J$.T(361, './read_preference', 21, false)), ReadPreference, 3)), MongoError = J$.X1(785, J$.W(777, 'MongoError', J$.G(401, J$.F(393, J$.R(377, 'require', require, 2), 0)(J$.T(385, 'mongodb-core', 21, false)), 'MongoError', 0), MongoError, 3)), Readable = J$.X1(801, J$.W(793, 'Readable', J$.C(8, J$.G(433, J$.F(425, J$.R(409, 'require', require, 2), 0)(J$.T(417, 'stream', 21, false)), 'Readable', 0)) ? J$._() : J$.G(465, J$.F(457, J$.R(441, 'require', require, 2), 0)(J$.T(449, 'readable-stream', 21, false)), 'Readable', 0), Readable, 3)), Define = J$.X1(817, J$.W(809, 'Define', J$.F(489, J$.R(473, 'require', require, 2), 0)(J$.T(481, './metadata', 21, false)), Define, 3)), CoreCursor = J$.X1(833, J$.W(825, 'CoreCursor', J$.G(521, J$.F(513, J$.R(497, 'require', require, 2), 0)(J$.T(505, 'mongodb-core', 21, false)), 'Cursor', 0), CoreCursor, 3)), Map = J$.X1(849, J$.W(841, 'Map', J$.G(561, J$.G(553, J$.F(545, J$.R(529, 'require', require, 2), 0)(J$.T(537, 'mongodb-core', 21, false)), 'BSON', 0), 'Map', 0), Map, 3)), Query = J$.X1(865, J$.W(857, 'Query', J$.G(593, J$.F(585, J$.R(569, 'require', require, 2), 0)(J$.T(577, 'mongodb-core', 21, false)), 'Query', 0), Query, 3)), CoreReadPreference = J$.X1(881, J$.W(873, 'CoreReadPreference', J$.G(625, J$.F(617, J$.R(601, 'require', require, 2), 0)(J$.T(609, 'mongodb-core', 21, false)), 'ReadPreference', 0), CoreReadPreference, 3));
            var flags = J$.X1(953, J$.W(945, 'flags', J$.T(937, [
                J$.T(889, 'tailable', 21, false),
                J$.T(897, 'oplogReplay', 21, false),
                J$.T(905, 'noCursorTimeout', 21, false),
                J$.T(913, 'awaitData', 21, false),
                J$.T(921, 'exhaust', 21, false),
                J$.T(929, 'partial', 21, false)
            ], 10, false), flags, 3));
            var fields = J$.X1(993, J$.W(985, 'fields', J$.T(977, [
                J$.T(961, 'numberOfRetries', 21, false),
                J$.T(969, 'tailableRetryInterval', 21, false)
            ], 10, false), fields, 3));
            var Cursor = J$.X1(1889, J$.W(1881, 'Cursor', J$.T(1873, function (bson, ns, cmd, options, topology, topologyOptions) {
                jalangiLabel3532:
                    while (true) {
                        try {
                            J$.Fe(1753, arguments.callee, this, arguments);
                            arguments = J$.N(1761, 'arguments', arguments, 4);
                            bson = J$.N(1769, 'bson', bson, 4);
                            ns = J$.N(1777, 'ns', ns, 4);
                            cmd = J$.N(1785, 'cmd', cmd, 4);
                            options = J$.N(1793, 'options', options, 4);
                            topology = J$.N(1801, 'topology', topology, 4);
                            topologyOptions = J$.N(1809, 'topologyOptions', topologyOptions, 4);
                            J$.N(1817, 'self', self, 0);
                            J$.N(1825, 'state', state, 0);
                            J$.N(1833, 'streamOptions', streamOptions, 0);
                            J$.N(1841, 'numberOfRetries', numberOfRetries, 0);
                            J$.N(1849, 'tailableRetryInterval', tailableRetryInterval, 0);
                            J$.N(1857, 'currentNumberOfRetries', currentNumberOfRetries, 0);
                            J$.N(1865, 'promiseLibrary', promiseLibrary, 0);
                            J$.X1(1073, J$.M(1065, J$.R(1001, 'CoreCursor', CoreCursor, 1), 'apply', 0)(J$.R(1009, 'this', this, 0), J$.M(1057, J$.G(1033, J$.G(1025, J$.R(1017, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(1041, 'arguments', arguments, 2), J$.T(1049, 0, 22, false))));
                            var self = J$.X1(1097, J$.W(1089, 'self', J$.R(1081, 'this', this, 0), self, 1));
                            var state = J$.X1(1129, J$.W(1121, 'state', J$.G(1113, J$.R(1105, 'Cursor', Cursor, 1), 'INIT', 0), state, 1));
                            var streamOptions = J$.X1(1153, J$.W(1145, 'streamOptions', J$.T(1137, {}, 11, false), streamOptions, 1));
                            var numberOfRetries = J$.X1(1193, J$.W(1185, 'numberOfRetries', J$.C(16, J$.G(1169, J$.R(1161, 'options', options, 0), 'numberOfRetries', 0)) ? J$._() : J$.T(1177, 5, 22, false), numberOfRetries, 1));
                            var tailableRetryInterval = J$.X1(1233, J$.W(1225, 'tailableRetryInterval', J$.C(24, J$.G(1209, J$.R(1201, 'options', options, 0), 'tailableRetryInterval', 0)) ? J$._() : J$.T(1217, 500, 22, false), tailableRetryInterval, 1));
                            var currentNumberOfRetries = J$.X1(1257, J$.W(1249, 'currentNumberOfRetries', J$.R(1241, 'numberOfRetries', numberOfRetries, 0), currentNumberOfRetries, 1));
                            var promiseLibrary = J$.X1(1289, J$.W(1281, 'promiseLibrary', J$.G(1273, J$.R(1265, 'options', options, 0), 'promiseLibrary', 0), promiseLibrary, 1));
                            if (J$.X1(22841, J$.C(40, J$.U(10, '!', J$.R(1297, 'promiseLibrary', promiseLibrary, 0))))) {
                                J$.X1(1385, promiseLibrary = J$.W(1377, 'promiseLibrary', J$.X1(22833, J$.C(32, J$.B(26, '==', J$.U(18, 'typeof', J$.G(1313, J$.R(1305, 'global', global, 2), 'Promise', 0)), J$.T(1321, 'function', 21, false), 0))) ? J$.G(1337, J$.R(1329, 'global', global, 2), 'Promise', 0) : J$.G(1369, J$.F(1361, J$.R(1345, 'require', require, 2), 0)(J$.T(1353, 'es6-promise', 21, false)), 'Promise', 0), promiseLibrary, 0));
                            }
                            J$.X1(1433, J$.M(1425, J$.R(1393, 'Readable', Readable, 1), 'call', 0)(J$.R(1401, 'this', this, 0), J$.T(1417, {
                                objectMode: J$.T(1409, true, 23, false)
                            }, 11, false)));
                            J$.X1(1569, J$.P(1561, J$.R(1441, 'this', this, 0), 's', J$.T(1553, {
                                numberOfRetries: J$.R(1449, 'numberOfRetries', numberOfRetries, 0),
                                tailableRetryInterval: J$.R(1457, 'tailableRetryInterval', tailableRetryInterval, 0),
                                currentNumberOfRetries: J$.R(1465, 'currentNumberOfRetries', currentNumberOfRetries, 0),
                                state: J$.R(1473, 'state', state, 0),
                                streamOptions: J$.R(1481, 'streamOptions', streamOptions, 0),
                                bson: J$.R(1489, 'bson', bson, 0),
                                ns: J$.R(1497, 'ns', ns, 0),
                                cmd: J$.R(1505, 'cmd', cmd, 0),
                                options: J$.R(1513, 'options', options, 0),
                                topology: J$.R(1521, 'topology', topology, 0),
                                topologyOptions: J$.R(1529, 'topologyOptions', topologyOptions, 0),
                                promiseLibrary: J$.R(1537, 'promiseLibrary', promiseLibrary, 0),
                                currentDoc: J$.T(1545, null, 25, false)
                            }, 11, false), 0));
                            J$.X1(1633, J$.P(1625, J$.R(1577, 'this', this, 0), 'timeout', J$.B(34, '==', J$.G(1609, J$.G(1601, J$.G(1593, J$.R(1585, 'self', self, 0), 's', 0), 'options', 0), 'noCursorTimeout', 0), J$.T(1617, true, 23, false), 0), 0));
                            J$.X1(1689, J$.P(1681, J$.R(1641, 'this', this, 0), 'sortValue', J$.G(1673, J$.G(1665, J$.G(1657, J$.R(1649, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', 0), 0));
                            J$.X1(1745, J$.P(1737, J$.R(1697, 'this', this, 0), 'readPreference', J$.G(1729, J$.G(1721, J$.G(1713, J$.R(1705, 'self', self, 0), 's', 0), 'options', 0), 'readPreference', 0), 0));
                        } catch (J$e) {
                            J$.Ex(22849, J$e);
                        } finally {
                            if (J$.Fr(22857))
                                continue jalangiLabel3532;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1753), Cursor, 3));
            J$.X1(1929, J$.F(1921, J$.R(1897, 'inherits', inherits, 1), 0)(J$.R(1905, 'Cursor', Cursor, 1), J$.R(1913, 'Readable', Readable, 1)));
            J$.X1(1985, J$.P(1977, J$.G(1945, J$.R(1937, 'CoreCursor', CoreCursor, 1), 'prototype', 0), '_next', J$.G(1969, J$.G(1961, J$.R(1953, 'CoreCursor', CoreCursor, 1), 'prototype', 0), 'next', 0), 0));
            for (J$._tm_p in J$.H(2081, J$.G(2001, J$.R(1993, 'CoreCursor', CoreCursor, 1), 'prototype', 0))) {
                var name = J$.X1(2097, J$.W(2089, 'name', J$._tm_p, name, 3));
                {
                    {
                        J$.X1(2073, J$.P(2065, J$.G(2017, J$.R(2009, 'Cursor', Cursor, 1), 'prototype', 0), J$.R(2025, 'name', name, 1), J$.G(2057, J$.G(2041, J$.R(2033, 'CoreCursor', CoreCursor, 1), 'prototype', 0), J$.R(2049, 'name', name, 1), 4), 2));
                    }
                }
            }
            var define = J$.X1(2169, J$.W(2161, 'define', J$.P(2153, J$.R(2105, 'Cursor', Cursor, 1), 'define', J$.F(2145, J$.R(2113, 'Define', Define, 1), 1)(J$.T(2121, 'Cursor', 21, false), J$.R(2129, 'Cursor', Cursor, 1), J$.T(2137, true, 23, false)), 0), define, 3));
            J$.X1(3041, J$.P(3033, J$.G(2185, J$.R(2177, 'Cursor', Cursor, 1), 'prototype', 0), 'hasNext', J$.T(3025, function (callback) {
                jalangiLabel3536:
                    while (true) {
                        try {
                            J$.Fe(2993, arguments.callee, this, arguments);
                            arguments = J$.N(3001, 'arguments', arguments, 4);
                            callback = J$.N(3009, 'callback', callback, 4);
                            J$.N(3017, 'self', self, 0);
                            var self = J$.X1(2209, J$.W(2201, 'self', J$.R(2193, 'this', this, 0), self, 1));
                            if (J$.X1(22897, J$.C(64, J$.B(50, '==', J$.U(42, 'typeof', J$.R(2217, 'callback', callback, 0)), J$.T(2225, 'function', 21, false), 0)))) {
                                if (J$.X1(22889, J$.C(56, J$.G(2249, J$.G(2241, J$.R(2233, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                    return J$.X1(2297, J$.Rt(2289, J$.F(2281, J$.R(2257, 'callback', callback, 0), 0)(J$.T(2265, null, 25, false), J$.T(2273, true, 23, false))));
                                } else {
                                    return J$.X1(2513, J$.Rt(2505, J$.F(2497, J$.R(2305, 'nextObject', nextObject, 1), 0)(J$.R(2313, 'self', self, 0), J$.T(2489, function (err, doc) {
                                        jalangiLabel3533:
                                            while (true) {
                                                try {
                                                    J$.Fe(2457, arguments.callee, this, arguments);
                                                    arguments = J$.N(2465, 'arguments', arguments, 4);
                                                    err = J$.N(2473, 'err', err, 4);
                                                    doc = J$.N(2481, 'doc', doc, 4);
                                                    if (J$.X1(22865, J$.C(48, J$.U(58, '!', J$.R(2321, 'doc', doc, 0)))))
                                                        return J$.X1(2369, J$.Rt(2361, J$.F(2353, J$.R(2329, 'callback', callback, 0), 0)(J$.T(2337, null, 25, false), J$.T(2345, false, 23, false))));
                                                    J$.X1(2409, J$.P(2401, J$.G(2385, J$.R(2377, 'self', self, 0), 's', 0), 'currentDoc', J$.R(2393, 'doc', doc, 0), 0));
                                                    J$.X1(2449, J$.F(2441, J$.R(2417, 'callback', callback, 0), 0)(J$.T(2425, null, 25, false), J$.T(2433, true, 23, false)));
                                                } catch (J$e) {
                                                    J$.Ex(22873, J$e);
                                                } finally {
                                                    if (J$.Fr(22881))
                                                        continue jalangiLabel3533;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 2457))));
                                }
                            }
                            return J$.X1(2985, J$.Rt(2977, J$.M(2969, J$.G(2529, J$.R(2521, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(2961, function (resolve, reject) {
                                jalangiLabel3535:
                                    while (true) {
                                        try {
                                            J$.Fe(2929, arguments.callee, this, arguments);
                                            arguments = J$.N(2937, 'arguments', arguments, 4);
                                            resolve = J$.N(2945, 'resolve', resolve, 4);
                                            reject = J$.N(2953, 'reject', reject, 4);
                                            if (J$.X1(22945, J$.C(104, J$.G(2553, J$.G(2545, J$.R(2537, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                                J$.X1(2585, J$.F(2577, J$.R(2561, 'resolve', resolve, 0), 0)(J$.T(2569, true, 23, false)));
                                            } else {
                                                J$.X1(2921, J$.F(2913, J$.R(2593, 'nextObject', nextObject, 1), 0)(J$.R(2601, 'self', self, 0), J$.T(2905, function (err, doc) {
                                                    jalangiLabel3534:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(2873, arguments.callee, this, arguments);
                                                                arguments = J$.N(2881, 'arguments', arguments, 4);
                                                                err = J$.N(2889, 'err', err, 4);
                                                                doc = J$.N(2897, 'doc', doc, 4);
                                                                if (J$.X1(22905, J$.C(80, J$.C(72, J$.B(66, '==', J$.G(2625, J$.G(2617, J$.R(2609, 'self', self, 0), 's', 0), 'state', 0), J$.G(2641, J$.R(2633, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(2657, J$.R(2649, 'self', self, 0), 'isDead', 0)())))
                                                                    return J$.X1(2697, J$.Rt(2689, J$.F(2681, J$.R(2665, 'resolve', resolve, 0), 0)(J$.T(2673, false, 23, false))));
                                                                if (J$.X1(22913, J$.C(88, J$.R(2705, 'err', err, 0))))
                                                                    return J$.X1(2745, J$.Rt(2737, J$.F(2729, J$.R(2713, 'reject', reject, 0), 0)(J$.R(2721, 'err', err, 0))));
                                                                if (J$.X1(22921, J$.C(96, J$.U(74, '!', J$.R(2753, 'doc', doc, 0)))))
                                                                    return J$.X1(2793, J$.Rt(2785, J$.F(2777, J$.R(2761, 'resolve', resolve, 0), 0)(J$.T(2769, false, 23, false))));
                                                                J$.X1(2833, J$.P(2825, J$.G(2809, J$.R(2801, 'self', self, 0), 's', 0), 'currentDoc', J$.R(2817, 'doc', doc, 0), 0));
                                                                J$.X1(2865, J$.F(2857, J$.R(2841, 'resolve', resolve, 0), 0)(J$.T(2849, true, 23, false)));
                                                            } catch (J$e) {
                                                                J$.Ex(22929, J$e);
                                                            } finally {
                                                                if (J$.Fr(22937))
                                                                    continue jalangiLabel3534;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 2873)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(22953, J$e);
                                        } finally {
                                            if (J$.Fr(22961))
                                                continue jalangiLabel3535;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2929))));
                        } catch (J$e) {
                            J$.Ex(22969, J$e);
                        } finally {
                            if (J$.Fr(22977))
                                continue jalangiLabel3536;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2993), 0));
            J$.X1(3097, J$.M(3089, J$.R(3049, 'define', define, 1), 'classMethod', 0)(J$.T(3057, 'hasNext', 21, false), J$.T(3081, {
                callback: J$.T(3065, true, 23, false),
                promise: J$.T(3073, true, 23, false)
            }, 11, false)));
            J$.X1(3801, J$.P(3793, J$.G(3113, J$.R(3105, 'Cursor', Cursor, 1), 'prototype', 0), 'next', J$.T(3785, function (callback) {
                jalangiLabel3539:
                    while (true) {
                        try {
                            J$.Fe(3745, arguments.callee, this, arguments);
                            arguments = J$.N(3753, 'arguments', arguments, 4);
                            callback = J$.N(3761, 'callback', callback, 4);
                            J$.N(3769, 'self', self, 0);
                            J$.N(3777, 'doc', doc, 0);
                            var self = J$.X1(3137, J$.W(3129, 'self', J$.R(3121, 'this', this, 0), self, 1));
                            if (J$.X1(22993, J$.C(120, J$.B(90, '==', J$.U(82, 'typeof', J$.R(3145, 'callback', callback, 0)), J$.T(3153, 'function', 21, false), 0)))) {
                                if (J$.X1(22985, J$.C(112, J$.G(3177, J$.G(3169, J$.R(3161, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                    var doc = J$.X1(3217, J$.W(3209, 'doc', J$.G(3201, J$.G(3193, J$.R(3185, 'self', self, 0), 's', 0), 'currentDoc', 0), doc, 1));
                                    J$.X1(3257, J$.P(3249, J$.G(3233, J$.R(3225, 'self', self, 0), 's', 0), 'currentDoc', J$.T(3241, null, 25, false), 0));
                                    return J$.X1(3305, J$.Rt(3297, J$.F(3289, J$.R(3265, 'callback', callback, 0), 0)(J$.T(3273, null, 25, false), J$.R(3281, 'doc', doc, 0))));
                                }
                                return J$.X1(3353, J$.Rt(3345, J$.F(3337, J$.R(3313, 'nextObject', nextObject, 1), 0)(J$.R(3321, 'self', self, 0), J$.R(3329, 'callback', callback, 0))));
                            }
                            ;
                            return J$.X1(3737, J$.Rt(3729, J$.M(3721, J$.G(3369, J$.R(3361, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(3713, function (resolve, reject) {
                                jalangiLabel3538:
                                    while (true) {
                                        try {
                                            J$.Fe(3673, arguments.callee, this, arguments);
                                            arguments = J$.N(3681, 'arguments', arguments, 4);
                                            resolve = J$.N(3689, 'resolve', resolve, 4);
                                            reject = J$.N(3697, 'reject', reject, 4);
                                            J$.N(3705, 'doc', doc, 0);
                                            if (J$.X1(23001, J$.C(128, J$.G(3393, J$.G(3385, J$.R(3377, 'self', self, 0), 's', 0), 'currentDoc', 0)))) {
                                                var doc = J$.X1(3433, J$.W(3425, 'doc', J$.G(3417, J$.G(3409, J$.R(3401, 'self', self, 0), 's', 0), 'currentDoc', 0), doc, 1));
                                                J$.X1(3473, J$.P(3465, J$.G(3449, J$.R(3441, 'self', self, 0), 's', 0), 'currentDoc', J$.T(3457, null, 25, false), 0));
                                                return J$.X1(3513, J$.Rt(3505, J$.F(3497, J$.R(3481, 'resolve', resolve, 0), 0)(J$.R(3489, 'doc', doc, 0))));
                                            }
                                            J$.X1(3665, J$.F(3657, J$.R(3521, 'nextObject', nextObject, 1), 0)(J$.R(3529, 'self', self, 0), J$.T(3649, function (err, r) {
                                                jalangiLabel3537:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(3617, arguments.callee, this, arguments);
                                                            arguments = J$.N(3625, 'arguments', arguments, 4);
                                                            err = J$.N(3633, 'err', err, 4);
                                                            r = J$.N(3641, 'r', r, 4);
                                                            if (J$.X1(23009, J$.C(136, J$.R(3537, 'err', err, 0))))
                                                                return J$.X1(3577, J$.Rt(3569, J$.F(3561, J$.R(3545, 'reject', reject, 0), 0)(J$.R(3553, 'err', err, 0))));
                                                            J$.X1(3609, J$.F(3601, J$.R(3585, 'resolve', resolve, 0), 0)(J$.R(3593, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(23017, J$e);
                                                        } finally {
                                                            if (J$.Fr(23025))
                                                                continue jalangiLabel3537;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 3617)));
                                        } catch (J$e) {
                                            J$.Ex(23033, J$e);
                                        } finally {
                                            if (J$.Fr(23041))
                                                continue jalangiLabel3538;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3673))));
                        } catch (J$e) {
                            J$.Ex(23049, J$e);
                        } finally {
                            if (J$.Fr(23057))
                                continue jalangiLabel3539;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3745), 0));
            J$.X1(3857, J$.M(3849, J$.R(3809, 'define', define, 1), 'classMethod', 0)(J$.T(3817, 'next', 21, false), J$.T(3841, {
                callback: J$.T(3825, true, 23, false),
                promise: J$.T(3833, true, 23, false)
            }, 11, false)));
            J$.X1(4145, J$.P(4137, J$.G(3873, J$.R(3865, 'Cursor', Cursor, 1), 'prototype', 0), 'filter', J$.T(4129, function (filter) {
                jalangiLabel3540:
                    while (true) {
                        try {
                            J$.Fe(4105, arguments.callee, this, arguments);
                            arguments = J$.N(4113, 'arguments', arguments, 4);
                            filter = J$.N(4121, 'filter', filter, 4);
                            if (J$.X1(23065, J$.C(160, J$.C(152, J$.C(144, J$.B(98, '==', J$.G(3897, J$.G(3889, J$.R(3881, 'this', this, 0), 's', 0), 'state', 0), J$.G(3913, J$.R(3905, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(106, '==', J$.G(3937, J$.G(3929, J$.R(3921, 'this', this, 0), 's', 0), 'state', 0), J$.G(3953, J$.R(3945, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(3969, J$.R(3961, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(4025, J$.Th(4017, J$.M(4009, J$.R(3977, 'MongoError', MongoError, 1), 'create', 0)(J$.T(4001, {
                                message: J$.T(3985, 'Cursor is closed', 21, false),
                                driver: J$.T(3993, true, 23, false)
                            }, 11, false))));
                            J$.X1(4073, J$.P(4065, J$.G(4049, J$.G(4041, J$.R(4033, 'this', this, 0), 's', 0), 'cmd', 0), 'query', J$.R(4057, 'filter', filter, 0), 0));
                            return J$.X1(4097, J$.Rt(4089, J$.R(4081, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23073, J$e);
                        } finally {
                            if (J$.Fr(23081))
                                continue jalangiLabel3540;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4105), 0));
            J$.X1(4217, J$.M(4209, J$.R(4153, 'define', define, 1), 'classMethod', 0)(J$.T(4161, 'filter', 21, false), J$.T(4201, {
                callback: J$.T(4169, false, 23, false),
                promise: J$.T(4177, false, 23, false),
                returns: J$.T(4193, [J$.R(4185, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(4505, J$.P(4497, J$.G(4233, J$.R(4225, 'Cursor', Cursor, 1), 'prototype', 0), 'maxScan', J$.T(4489, function (maxScan) {
                jalangiLabel3541:
                    while (true) {
                        try {
                            J$.Fe(4465, arguments.callee, this, arguments);
                            arguments = J$.N(4473, 'arguments', arguments, 4);
                            maxScan = J$.N(4481, 'maxScan', maxScan, 4);
                            if (J$.X1(23089, J$.C(184, J$.C(176, J$.C(168, J$.B(114, '==', J$.G(4257, J$.G(4249, J$.R(4241, 'this', this, 0), 's', 0), 'state', 0), J$.G(4273, J$.R(4265, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(122, '==', J$.G(4297, J$.G(4289, J$.R(4281, 'this', this, 0), 's', 0), 'state', 0), J$.G(4313, J$.R(4305, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(4329, J$.R(4321, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(4385, J$.Th(4377, J$.M(4369, J$.R(4337, 'MongoError', MongoError, 1), 'create', 0)(J$.T(4361, {
                                message: J$.T(4345, 'Cursor is closed', 21, false),
                                driver: J$.T(4353, true, 23, false)
                            }, 11, false))));
                            J$.X1(4433, J$.P(4425, J$.G(4409, J$.G(4401, J$.R(4393, 'this', this, 0), 's', 0), 'cmd', 0), 'maxScan', J$.R(4417, 'maxScan', maxScan, 0), 0));
                            return J$.X1(4457, J$.Rt(4449, J$.R(4441, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23097, J$e);
                        } finally {
                            if (J$.Fr(23105))
                                continue jalangiLabel3541;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4465), 0));
            J$.X1(4577, J$.M(4569, J$.R(4513, 'define', define, 1), 'classMethod', 0)(J$.T(4521, 'maxScan', 21, false), J$.T(4561, {
                callback: J$.T(4529, false, 23, false),
                promise: J$.T(4537, false, 23, false),
                returns: J$.T(4553, [J$.R(4545, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(4865, J$.P(4857, J$.G(4593, J$.R(4585, 'Cursor', Cursor, 1), 'prototype', 0), 'hint', J$.T(4849, function (hint) {
                jalangiLabel3542:
                    while (true) {
                        try {
                            J$.Fe(4825, arguments.callee, this, arguments);
                            arguments = J$.N(4833, 'arguments', arguments, 4);
                            hint = J$.N(4841, 'hint', hint, 4);
                            if (J$.X1(23113, J$.C(208, J$.C(200, J$.C(192, J$.B(130, '==', J$.G(4617, J$.G(4609, J$.R(4601, 'this', this, 0), 's', 0), 'state', 0), J$.G(4633, J$.R(4625, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(138, '==', J$.G(4657, J$.G(4649, J$.R(4641, 'this', this, 0), 's', 0), 'state', 0), J$.G(4673, J$.R(4665, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(4689, J$.R(4681, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(4745, J$.Th(4737, J$.M(4729, J$.R(4697, 'MongoError', MongoError, 1), 'create', 0)(J$.T(4721, {
                                message: J$.T(4705, 'Cursor is closed', 21, false),
                                driver: J$.T(4713, true, 23, false)
                            }, 11, false))));
                            J$.X1(4793, J$.P(4785, J$.G(4769, J$.G(4761, J$.R(4753, 'this', this, 0), 's', 0), 'cmd', 0), 'hint', J$.R(4777, 'hint', hint, 0), 0));
                            return J$.X1(4817, J$.Rt(4809, J$.R(4801, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23121, J$e);
                        } finally {
                            if (J$.Fr(23129))
                                continue jalangiLabel3542;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4825), 0));
            J$.X1(4937, J$.M(4929, J$.R(4873, 'define', define, 1), 'classMethod', 0)(J$.T(4881, 'hint', 21, false), J$.T(4921, {
                callback: J$.T(4889, false, 23, false),
                promise: J$.T(4897, false, 23, false),
                returns: J$.T(4913, [J$.R(4905, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(5225, J$.P(5217, J$.G(4953, J$.R(4945, 'Cursor', Cursor, 1), 'prototype', 0), 'min', J$.T(5209, function (min) {
                jalangiLabel3543:
                    while (true) {
                        try {
                            J$.Fe(5185, arguments.callee, this, arguments);
                            arguments = J$.N(5193, 'arguments', arguments, 4);
                            min = J$.N(5201, 'min', min, 4);
                            if (J$.X1(23137, J$.C(232, J$.C(224, J$.C(216, J$.B(146, '==', J$.G(4977, J$.G(4969, J$.R(4961, 'this', this, 0), 's', 0), 'state', 0), J$.G(4993, J$.R(4985, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(154, '==', J$.G(5017, J$.G(5009, J$.R(5001, 'this', this, 0), 's', 0), 'state', 0), J$.G(5033, J$.R(5025, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(5049, J$.R(5041, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(5105, J$.Th(5097, J$.M(5089, J$.R(5057, 'MongoError', MongoError, 1), 'create', 0)(J$.T(5081, {
                                message: J$.T(5065, 'Cursor is closed', 21, false),
                                driver: J$.T(5073, true, 23, false)
                            }, 11, false))));
                            J$.X1(5153, J$.P(5145, J$.G(5129, J$.G(5121, J$.R(5113, 'this', this, 0), 's', 0), 'cmd', 0), 'min', J$.R(5137, 'min', min, 0), 0));
                            return J$.X1(5177, J$.Rt(5169, J$.R(5161, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23145, J$e);
                        } finally {
                            if (J$.Fr(23153))
                                continue jalangiLabel3543;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5185), 0));
            J$.X1(5297, J$.M(5289, J$.R(5233, 'define', define, 1), 'classMethod', 0)(J$.T(5241, 'min', 21, false), J$.T(5281, {
                callback: J$.T(5249, false, 23, false),
                promise: J$.T(5257, false, 23, false),
                returns: J$.T(5273, [J$.R(5265, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(5585, J$.P(5577, J$.G(5313, J$.R(5305, 'Cursor', Cursor, 1), 'prototype', 0), 'max', J$.T(5569, function (max) {
                jalangiLabel3544:
                    while (true) {
                        try {
                            J$.Fe(5545, arguments.callee, this, arguments);
                            arguments = J$.N(5553, 'arguments', arguments, 4);
                            max = J$.N(5561, 'max', max, 4);
                            if (J$.X1(23161, J$.C(256, J$.C(248, J$.C(240, J$.B(162, '==', J$.G(5337, J$.G(5329, J$.R(5321, 'this', this, 0), 's', 0), 'state', 0), J$.G(5353, J$.R(5345, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(170, '==', J$.G(5377, J$.G(5369, J$.R(5361, 'this', this, 0), 's', 0), 'state', 0), J$.G(5393, J$.R(5385, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(5409, J$.R(5401, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(5465, J$.Th(5457, J$.M(5449, J$.R(5417, 'MongoError', MongoError, 1), 'create', 0)(J$.T(5441, {
                                message: J$.T(5425, 'Cursor is closed', 21, false),
                                driver: J$.T(5433, true, 23, false)
                            }, 11, false))));
                            J$.X1(5513, J$.P(5505, J$.G(5489, J$.G(5481, J$.R(5473, 'this', this, 0), 's', 0), 'cmd', 0), 'max', J$.R(5497, 'max', max, 0), 0));
                            return J$.X1(5537, J$.Rt(5529, J$.R(5521, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23169, J$e);
                        } finally {
                            if (J$.Fr(23177))
                                continue jalangiLabel3544;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5545), 0));
            J$.X1(5657, J$.M(5649, J$.R(5593, 'define', define, 1), 'classMethod', 0)(J$.T(5601, 'max', 21, false), J$.T(5641, {
                callback: J$.T(5609, false, 23, false),
                promise: J$.T(5617, false, 23, false),
                returns: J$.T(5633, [J$.R(5625, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(5945, J$.P(5937, J$.G(5673, J$.R(5665, 'Cursor', Cursor, 1), 'prototype', 0), 'returnKey', J$.T(5929, function (value) {
                jalangiLabel3545:
                    while (true) {
                        try {
                            J$.Fe(5905, arguments.callee, this, arguments);
                            arguments = J$.N(5913, 'arguments', arguments, 4);
                            value = J$.N(5921, 'value', value, 4);
                            if (J$.X1(23185, J$.C(280, J$.C(272, J$.C(264, J$.B(178, '==', J$.G(5697, J$.G(5689, J$.R(5681, 'this', this, 0), 's', 0), 'state', 0), J$.G(5713, J$.R(5705, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(186, '==', J$.G(5737, J$.G(5729, J$.R(5721, 'this', this, 0), 's', 0), 'state', 0), J$.G(5753, J$.R(5745, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(5769, J$.R(5761, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(5825, J$.Th(5817, J$.M(5809, J$.R(5777, 'MongoError', MongoError, 1), 'create', 0)(J$.T(5801, {
                                message: J$.T(5785, 'Cursor is closed', 21, false),
                                driver: J$.T(5793, true, 23, false)
                            }, 11, false))));
                            J$.X1(5873, J$.P(5865, J$.G(5849, J$.G(5841, J$.R(5833, 'this', this, 0), 's', 0), 'cmd', 0), 'returnKey', J$.R(5857, 'value', value, 0), 0));
                            return J$.X1(5897, J$.Rt(5889, J$.R(5881, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23193, J$e);
                        } finally {
                            if (J$.Fr(23201))
                                continue jalangiLabel3545;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5905), 0));
            J$.X1(6017, J$.M(6009, J$.R(5953, 'define', define, 1), 'classMethod', 0)(J$.T(5961, 'returnKey', 21, false), J$.T(6001, {
                callback: J$.T(5969, false, 23, false),
                promise: J$.T(5977, false, 23, false),
                returns: J$.T(5993, [J$.R(5985, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(6305, J$.P(6297, J$.G(6033, J$.R(6025, 'Cursor', Cursor, 1), 'prototype', 0), 'showRecordId', J$.T(6289, function (value) {
                jalangiLabel3546:
                    while (true) {
                        try {
                            J$.Fe(6265, arguments.callee, this, arguments);
                            arguments = J$.N(6273, 'arguments', arguments, 4);
                            value = J$.N(6281, 'value', value, 4);
                            if (J$.X1(23209, J$.C(304, J$.C(296, J$.C(288, J$.B(194, '==', J$.G(6057, J$.G(6049, J$.R(6041, 'this', this, 0), 's', 0), 'state', 0), J$.G(6073, J$.R(6065, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(202, '==', J$.G(6097, J$.G(6089, J$.R(6081, 'this', this, 0), 's', 0), 'state', 0), J$.G(6113, J$.R(6105, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(6129, J$.R(6121, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(6185, J$.Th(6177, J$.M(6169, J$.R(6137, 'MongoError', MongoError, 1), 'create', 0)(J$.T(6161, {
                                message: J$.T(6145, 'Cursor is closed', 21, false),
                                driver: J$.T(6153, true, 23, false)
                            }, 11, false))));
                            J$.X1(6233, J$.P(6225, J$.G(6209, J$.G(6201, J$.R(6193, 'this', this, 0), 's', 0), 'cmd', 0), 'showDiskLoc', J$.R(6217, 'value', value, 0), 0));
                            return J$.X1(6257, J$.Rt(6249, J$.R(6241, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23217, J$e);
                        } finally {
                            if (J$.Fr(23225))
                                continue jalangiLabel3546;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6265), 0));
            J$.X1(6377, J$.M(6369, J$.R(6313, 'define', define, 1), 'classMethod', 0)(J$.T(6321, 'showRecordId', 21, false), J$.T(6361, {
                callback: J$.T(6329, false, 23, false),
                promise: J$.T(6337, false, 23, false),
                returns: J$.T(6353, [J$.R(6345, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(6665, J$.P(6657, J$.G(6393, J$.R(6385, 'Cursor', Cursor, 1), 'prototype', 0), 'snapshot', J$.T(6649, function (value) {
                jalangiLabel3547:
                    while (true) {
                        try {
                            J$.Fe(6625, arguments.callee, this, arguments);
                            arguments = J$.N(6633, 'arguments', arguments, 4);
                            value = J$.N(6641, 'value', value, 4);
                            if (J$.X1(23233, J$.C(328, J$.C(320, J$.C(312, J$.B(210, '==', J$.G(6417, J$.G(6409, J$.R(6401, 'this', this, 0), 's', 0), 'state', 0), J$.G(6433, J$.R(6425, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(218, '==', J$.G(6457, J$.G(6449, J$.R(6441, 'this', this, 0), 's', 0), 'state', 0), J$.G(6473, J$.R(6465, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(6489, J$.R(6481, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(6545, J$.Th(6537, J$.M(6529, J$.R(6497, 'MongoError', MongoError, 1), 'create', 0)(J$.T(6521, {
                                message: J$.T(6505, 'Cursor is closed', 21, false),
                                driver: J$.T(6513, true, 23, false)
                            }, 11, false))));
                            J$.X1(6593, J$.P(6585, J$.G(6569, J$.G(6561, J$.R(6553, 'this', this, 0), 's', 0), 'cmd', 0), 'snapshot', J$.R(6577, 'value', value, 0), 0));
                            return J$.X1(6617, J$.Rt(6609, J$.R(6601, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23241, J$e);
                        } finally {
                            if (J$.Fr(23249))
                                continue jalangiLabel3547;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6625), 0));
            J$.X1(6737, J$.M(6729, J$.R(6673, 'define', define, 1), 'classMethod', 0)(J$.T(6681, 'snapshot', 21, false), J$.T(6721, {
                callback: J$.T(6689, false, 23, false),
                promise: J$.T(6697, false, 23, false),
                returns: J$.T(6713, [J$.R(6705, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(7209, J$.P(7201, J$.G(6753, J$.R(6745, 'Cursor', Cursor, 1), 'prototype', 0), 'setCursorOption', J$.T(7193, function (field, value) {
                jalangiLabel3548:
                    while (true) {
                        try {
                            J$.Fe(7161, arguments.callee, this, arguments);
                            arguments = J$.N(7169, 'arguments', arguments, 4);
                            field = J$.N(7177, 'field', field, 4);
                            value = J$.N(7185, 'value', value, 4);
                            if (J$.X1(23257, J$.C(352, J$.C(344, J$.C(336, J$.B(226, '==', J$.G(6777, J$.G(6769, J$.R(6761, 'this', this, 0), 's', 0), 'state', 0), J$.G(6793, J$.R(6785, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(234, '==', J$.G(6817, J$.G(6809, J$.R(6801, 'this', this, 0), 's', 0), 'state', 0), J$.G(6833, J$.R(6825, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(6849, J$.R(6841, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(6905, J$.Th(6897, J$.M(6889, J$.R(6857, 'MongoError', MongoError, 1), 'create', 0)(J$.T(6881, {
                                message: J$.T(6865, 'Cursor is closed', 21, false),
                                driver: J$.T(6873, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23265, J$.C(360, J$.B(250, '==', J$.M(6929, J$.R(6913, 'fields', fields, 1), 'indexOf', 0)(J$.R(6921, 'field', field, 0)), J$.U(242, '-', J$.T(6937, 1, 22, false)), 0))))
                                throw J$.X1(7025, J$.Th(7017, J$.M(7009, J$.R(6945, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7001, {
                                message: J$.F(6985, J$.R(6953, 'f', f, 1), 0)(J$.T(6961, 'option %s not a supported option %s', 21, false), J$.R(6969, 'field', field, 0), J$.R(6977, 'fields', fields, 1)),
                                driver: J$.T(6993, true, 23, false)
                            }, 11, false))));
                            J$.X1(7073, J$.P(7065, J$.G(7041, J$.R(7033, 'this', this, 0), 's', 0), J$.R(7049, 'field', field, 0), J$.R(7057, 'value', value, 0), 2));
                            if (J$.X1(23273, J$.C(368, J$.B(258, '==', J$.R(7081, 'field', field, 0), J$.T(7089, 'numberOfRetries', 21, false), 0))))
                                J$.X1(7129, J$.P(7121, J$.G(7105, J$.R(7097, 'this', this, 0), 's', 0), 'currentNumberOfRetries', J$.R(7113, 'value', value, 0), 0));
                            return J$.X1(7153, J$.Rt(7145, J$.R(7137, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23281, J$e);
                        } finally {
                            if (J$.Fr(23289))
                                continue jalangiLabel3548;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7161), 0));
            J$.X1(7281, J$.M(7273, J$.R(7217, 'define', define, 1), 'classMethod', 0)(J$.T(7225, 'setCursorOption', 21, false), J$.T(7265, {
                callback: J$.T(7233, false, 23, false),
                promise: J$.T(7241, false, 23, false),
                returns: J$.T(7257, [J$.R(7249, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(7801, J$.P(7793, J$.G(7297, J$.R(7289, 'Cursor', Cursor, 1), 'prototype', 0), 'addCursorFlag', J$.T(7785, function (flag, value) {
                jalangiLabel3549:
                    while (true) {
                        try {
                            J$.Fe(7753, arguments.callee, this, arguments);
                            arguments = J$.N(7761, 'arguments', arguments, 4);
                            flag = J$.N(7769, 'flag', flag, 4);
                            value = J$.N(7777, 'value', value, 4);
                            if (J$.X1(23297, J$.C(392, J$.C(384, J$.C(376, J$.B(266, '==', J$.G(7321, J$.G(7313, J$.R(7305, 'this', this, 0), 's', 0), 'state', 0), J$.G(7337, J$.R(7329, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(274, '==', J$.G(7361, J$.G(7353, J$.R(7345, 'this', this, 0), 's', 0), 'state', 0), J$.G(7377, J$.R(7369, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(7393, J$.R(7385, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(7449, J$.Th(7441, J$.M(7433, J$.R(7401, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7425, {
                                message: J$.T(7409, 'Cursor is closed', 21, false),
                                driver: J$.T(7417, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23305, J$.C(400, J$.B(290, '==', J$.M(7473, J$.R(7457, 'flags', flags, 1), 'indexOf', 0)(J$.R(7465, 'flag', flag, 0)), J$.U(282, '-', J$.T(7481, 1, 22, false)), 0))))
                                throw J$.X1(7569, J$.Th(7561, J$.M(7553, J$.R(7489, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7545, {
                                message: J$.F(7529, J$.R(7497, 'f', f, 1), 0)(J$.T(7505, 'flag %s not a supported flag %s', 21, false), J$.R(7513, 'flag', flag, 0), J$.R(7521, 'flags', flags, 1)),
                                driver: J$.T(7537, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23313, J$.C(408, J$.B(306, '!=', J$.U(298, 'typeof', J$.R(7577, 'value', value, 0)), J$.T(7585, 'boolean', 21, false), 0))))
                                throw J$.X1(7665, J$.Th(7657, J$.M(7649, J$.R(7593, 'MongoError', MongoError, 1), 'create', 0)(J$.T(7641, {
                                message: J$.F(7625, J$.R(7601, 'f', f, 1), 0)(J$.T(7609, 'flag %s must be a boolean value', 21, false), J$.R(7617, 'flag', flag, 0)),
                                driver: J$.T(7633, true, 23, false)
                            }, 11, false))));
                            J$.X1(7721, J$.P(7713, J$.G(7689, J$.G(7681, J$.R(7673, 'this', this, 0), 's', 0), 'cmd', 0), J$.R(7697, 'flag', flag, 0), J$.R(7705, 'value', value, 0), 2));
                            return J$.X1(7745, J$.Rt(7737, J$.R(7729, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23321, J$e);
                        } finally {
                            if (J$.Fr(23329))
                                continue jalangiLabel3549;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7753), 0));
            J$.X1(7873, J$.M(7865, J$.R(7809, 'define', define, 1), 'classMethod', 0)(J$.T(7817, 'addCursorFlag', 21, false), J$.T(7857, {
                callback: J$.T(7825, false, 23, false),
                promise: J$.T(7833, false, 23, false),
                returns: J$.T(7849, [J$.R(7841, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(8425, J$.P(8417, J$.G(7889, J$.R(7881, 'Cursor', Cursor, 1), 'prototype', 0), 'addQueryModifier', J$.T(8409, function (name, value) {
                jalangiLabel3550:
                    while (true) {
                        try {
                            J$.Fe(8369, arguments.callee, this, arguments);
                            arguments = J$.N(8377, 'arguments', arguments, 4);
                            name = J$.N(8385, 'name', name, 4);
                            value = J$.N(8393, 'value', value, 4);
                            J$.N(8401, 'field', field, 0);
                            if (J$.X1(23337, J$.C(432, J$.C(424, J$.C(416, J$.B(314, '==', J$.G(7913, J$.G(7905, J$.R(7897, 'this', this, 0), 's', 0), 'state', 0), J$.G(7929, J$.R(7921, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(322, '==', J$.G(7953, J$.G(7945, J$.R(7937, 'this', this, 0), 's', 0), 'state', 0), J$.G(7969, J$.R(7961, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(7985, J$.R(7977, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(8041, J$.Th(8033, J$.M(8025, J$.R(7993, 'MongoError', MongoError, 1), 'create', 0)(J$.T(8017, {
                                message: J$.T(8001, 'Cursor is closed', 21, false),
                                driver: J$.T(8009, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23345, J$.C(440, J$.B(330, '!=', J$.G(8065, J$.R(8049, 'name', name, 0), J$.T(8057, 0, 22, false), 4), J$.T(8073, '$', 21, false), 0))))
                                throw J$.X1(8145, J$.Th(8137, J$.M(8129, J$.R(8081, 'MongoError', MongoError, 1), 'create', 0)(J$.T(8121, {
                                message: J$.F(8105, J$.R(8089, 'f', f, 1), 0)(J$.T(8097, '%s is not a valid query modifier', 21, false)),
                                driver: J$.T(8113, true, 23, false)
                            }, 11, false))));
                            var field = J$.X1(8185, J$.W(8177, 'field', J$.M(8169, J$.R(8153, 'name', name, 0), 'substr', 0)(J$.T(8161, 1, 22, false)), field, 1));
                            J$.X1(8241, J$.P(8233, J$.G(8209, J$.G(8201, J$.R(8193, 'this', this, 0), 's', 0), 'cmd', 0), J$.R(8217, 'field', field, 0), J$.R(8225, 'value', value, 0), 2));
                            if (J$.X1(23353, J$.C(448, J$.B(338, '==', J$.R(8249, 'field', field, 0), J$.T(8257, 'orderby', 21, false), 0))))
                                J$.X1(8337, J$.P(8329, J$.G(8281, J$.G(8273, J$.R(8265, 'this', this, 0), 's', 0), 'cmd', 0), 'sort', J$.G(8321, J$.G(8305, J$.G(8297, J$.R(8289, 'this', this, 0), 's', 0), 'cmd', 0), J$.R(8313, 'field', field, 0), 4), 0));
                            return J$.X1(8361, J$.Rt(8353, J$.R(8345, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23361, J$e);
                        } finally {
                            if (J$.Fr(23369))
                                continue jalangiLabel3550;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8369), 0));
            J$.X1(8497, J$.M(8489, J$.R(8433, 'define', define, 1), 'classMethod', 0)(J$.T(8441, 'addQueryModifier', 21, false), J$.T(8481, {
                callback: J$.T(8449, false, 23, false),
                promise: J$.T(8457, false, 23, false),
                returns: J$.T(8473, [J$.R(8465, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(8785, J$.P(8777, J$.G(8513, J$.R(8505, 'Cursor', Cursor, 1), 'prototype', 0), 'comment', J$.T(8769, function (value) {
                jalangiLabel3551:
                    while (true) {
                        try {
                            J$.Fe(8745, arguments.callee, this, arguments);
                            arguments = J$.N(8753, 'arguments', arguments, 4);
                            value = J$.N(8761, 'value', value, 4);
                            if (J$.X1(23377, J$.C(472, J$.C(464, J$.C(456, J$.B(346, '==', J$.G(8537, J$.G(8529, J$.R(8521, 'this', this, 0), 's', 0), 'state', 0), J$.G(8553, J$.R(8545, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(354, '==', J$.G(8577, J$.G(8569, J$.R(8561, 'this', this, 0), 's', 0), 'state', 0), J$.G(8593, J$.R(8585, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(8609, J$.R(8601, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(8665, J$.Th(8657, J$.M(8649, J$.R(8617, 'MongoError', MongoError, 1), 'create', 0)(J$.T(8641, {
                                message: J$.T(8625, 'Cursor is closed', 21, false),
                                driver: J$.T(8633, true, 23, false)
                            }, 11, false))));
                            J$.X1(8713, J$.P(8705, J$.G(8689, J$.G(8681, J$.R(8673, 'this', this, 0), 's', 0), 'cmd', 0), 'comment', J$.R(8697, 'value', value, 0), 0));
                            return J$.X1(8737, J$.Rt(8729, J$.R(8721, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23385, J$e);
                        } finally {
                            if (J$.Fr(23393))
                                continue jalangiLabel3551;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 8745), 0));
            J$.X1(8857, J$.M(8849, J$.R(8793, 'define', define, 1), 'classMethod', 0)(J$.T(8801, 'comment', 21, false), J$.T(8841, {
                callback: J$.T(8809, false, 23, false),
                promise: J$.T(8817, false, 23, false),
                returns: J$.T(8833, [J$.R(8825, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(9217, J$.P(9209, J$.G(8873, J$.R(8865, 'Cursor', Cursor, 1), 'prototype', 0), 'maxTimeMS', J$.T(9201, function (value) {
                jalangiLabel3552:
                    while (true) {
                        try {
                            J$.Fe(9177, arguments.callee, this, arguments);
                            arguments = J$.N(9185, 'arguments', arguments, 4);
                            value = J$.N(9193, 'value', value, 4);
                            if (J$.X1(23401, J$.C(480, J$.B(370, '!=', J$.U(362, 'typeof', J$.R(8881, 'value', value, 0)), J$.T(8889, 'number', 21, false), 0))))
                                throw J$.X1(8945, J$.Th(8937, J$.M(8929, J$.R(8897, 'MongoError', MongoError, 1), 'create', 0)(J$.T(8921, {
                                message: J$.T(8905, 'maxTimeMS must be a number', 21, false),
                                driver: J$.T(8913, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23409, J$.C(504, J$.C(496, J$.C(488, J$.B(378, '==', J$.G(8969, J$.G(8961, J$.R(8953, 'this', this, 0), 's', 0), 'state', 0), J$.G(8985, J$.R(8977, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(386, '==', J$.G(9009, J$.G(9001, J$.R(8993, 'this', this, 0), 's', 0), 'state', 0), J$.G(9025, J$.R(9017, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(9041, J$.R(9033, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(9097, J$.Th(9089, J$.M(9081, J$.R(9049, 'MongoError', MongoError, 1), 'create', 0)(J$.T(9073, {
                                message: J$.T(9057, 'Cursor is closed', 21, false),
                                driver: J$.T(9065, true, 23, false)
                            }, 11, false))));
                            J$.X1(9145, J$.P(9137, J$.G(9121, J$.G(9113, J$.R(9105, 'this', this, 0), 's', 0), 'cmd', 0), 'maxTimeMS', J$.R(9129, 'value', value, 0), 0));
                            return J$.X1(9169, J$.Rt(9161, J$.R(9153, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23417, J$e);
                        } finally {
                            if (J$.Fr(23425))
                                continue jalangiLabel3552;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9177), 0));
            J$.X1(9289, J$.M(9281, J$.R(9225, 'define', define, 1), 'classMethod', 0)(J$.T(9233, 'maxTimeMS', 21, false), J$.T(9273, {
                callback: J$.T(9241, false, 23, false),
                promise: J$.T(9249, false, 23, false),
                returns: J$.T(9265, [J$.R(9257, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(9345, J$.P(9337, J$.G(9305, J$.R(9297, 'Cursor', Cursor, 1), 'prototype', 0), 'maxTimeMs', J$.G(9329, J$.G(9321, J$.R(9313, 'Cursor', Cursor, 1), 'prototype', 0), 'maxTimeMS', 0), 0));
            J$.X1(9417, J$.M(9409, J$.R(9353, 'define', define, 1), 'classMethod', 0)(J$.T(9361, 'maxTimeMs', 21, false), J$.T(9401, {
                callback: J$.T(9369, false, 23, false),
                promise: J$.T(9377, false, 23, false),
                returns: J$.T(9393, [J$.R(9385, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(9705, J$.P(9697, J$.G(9433, J$.R(9425, 'Cursor', Cursor, 1), 'prototype', 0), 'project', J$.T(9689, function (value) {
                jalangiLabel3553:
                    while (true) {
                        try {
                            J$.Fe(9665, arguments.callee, this, arguments);
                            arguments = J$.N(9673, 'arguments', arguments, 4);
                            value = J$.N(9681, 'value', value, 4);
                            if (J$.X1(23433, J$.C(528, J$.C(520, J$.C(512, J$.B(394, '==', J$.G(9457, J$.G(9449, J$.R(9441, 'this', this, 0), 's', 0), 'state', 0), J$.G(9473, J$.R(9465, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(402, '==', J$.G(9497, J$.G(9489, J$.R(9481, 'this', this, 0), 's', 0), 'state', 0), J$.G(9513, J$.R(9505, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(9529, J$.R(9521, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(9585, J$.Th(9577, J$.M(9569, J$.R(9537, 'MongoError', MongoError, 1), 'create', 0)(J$.T(9561, {
                                message: J$.T(9545, 'Cursor is closed', 21, false),
                                driver: J$.T(9553, true, 23, false)
                            }, 11, false))));
                            J$.X1(9633, J$.P(9625, J$.G(9609, J$.G(9601, J$.R(9593, 'this', this, 0), 's', 0), 'cmd', 0), 'fields', J$.R(9617, 'value', value, 0), 0));
                            return J$.X1(9657, J$.Rt(9649, J$.R(9641, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23441, J$e);
                        } finally {
                            if (J$.Fr(23449))
                                continue jalangiLabel3553;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9665), 0));
            J$.X1(9777, J$.M(9769, J$.R(9713, 'define', define, 1), 'classMethod', 0)(J$.T(9721, 'project', 21, false), J$.T(9761, {
                callback: J$.T(9729, false, 23, false),
                promise: J$.T(9737, false, 23, false),
                returns: J$.T(9753, [J$.R(9745, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(10825, J$.P(10817, J$.G(9793, J$.R(9785, 'Cursor', Cursor, 1), 'prototype', 0), 'sort', J$.T(10809, function (keyOrList, direction) {
                jalangiLabel3555:
                    while (true) {
                        try {
                            J$.Fe(10769, arguments.callee, this, arguments);
                            arguments = J$.N(10777, 'arguments', arguments, 4);
                            keyOrList = J$.N(10785, 'keyOrList', keyOrList, 4);
                            direction = J$.N(10793, 'direction', direction, 4);
                            J$.N(10801, 'order', order, 0);
                            if (J$.X1(23457, J$.C(536, J$.G(9825, J$.G(9817, J$.G(9809, J$.R(9801, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(9881, J$.Th(9873, J$.M(9865, J$.R(9833, 'MongoError', MongoError, 1), 'create', 0)(J$.T(9857, {
                                message: J$.T(9841, 'Tailable cursor doesn\'t support sorting', 21, false),
                                driver: J$.T(9849, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23465, J$.C(560, J$.C(552, J$.C(544, J$.B(410, '==', J$.G(9905, J$.G(9897, J$.R(9889, 'this', this, 0), 's', 0), 'state', 0), J$.G(9921, J$.R(9913, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.B(418, '==', J$.G(9945, J$.G(9937, J$.R(9929, 'this', this, 0), 's', 0), 'state', 0), J$.G(9961, J$.R(9953, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.M(9977, J$.R(9969, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(10033, J$.Th(10025, J$.M(10017, J$.R(9985, 'MongoError', MongoError, 1), 'create', 0)(J$.T(10009, {
                                message: J$.T(9993, 'Cursor is closed', 21, false),
                                driver: J$.T(10001, true, 23, false)
                            }, 11, false))));
                            var order = J$.X1(10057, J$.W(10049, 'order', J$.R(10041, 'keyOrList', keyOrList, 0), order, 1));
                            if (J$.X1(23513, J$.C(608, J$.C(568, J$.M(10081, J$.R(10065, 'Array', Array, 2), 'isArray', 0)(J$.R(10073, 'order', order, 0))) ? J$.M(10121, J$.R(10089, 'Array', Array, 2), 'isArray', 0)(J$.G(10113, J$.R(10097, 'order', order, 0), J$.T(10105, 0, 22, false), 4)) : J$._()))) {
                                J$.X1(10593, order = J$.W(10585, 'order', J$.F(10577, J$.R(10129, 'Map', Map, 1), 1)(J$.M(10569, J$.R(10137, 'order', order, 0), 'map', 0)(J$.T(10561, function (x) {
                                    jalangiLabel3554:
                                        while (true) {
                                            try {
                                                J$.Fe(10529, arguments.callee, this, arguments);
                                                arguments = J$.N(10537, 'arguments', arguments, 4);
                                                x = J$.N(10545, 'x', x, 4);
                                                J$.N(10553, 'value', value, 0);
                                                var value = J$.X1(10193, J$.W(10185, 'value', J$.T(10177, [
                                                    J$.G(10161, J$.R(10145, 'x', x, 0), J$.T(10153, 0, 22, false), 4),
                                                    J$.T(10169, null, 25, false)
                                                ], 10, false), value, 1));
                                                if (J$.X1(23489, J$.C(600, J$.B(426, '==', J$.G(10217, J$.R(10201, 'x', x, 0), J$.T(10209, 1, 22, false), 4), J$.T(10225, 'asc', 21, false), 0)))) {
                                                    J$.X1(10265, J$.P(10257, J$.R(10233, 'value', value, 0), J$.T(10241, 1, 22, false), J$.T(10249, 1, 22, false), 2));
                                                } else if (J$.X1(23481, J$.C(592, J$.B(434, '==', J$.G(10289, J$.R(10273, 'x', x, 0), J$.T(10281, 1, 22, false), 4), J$.T(10297, 'desc', 21, false), 0)))) {
                                                    J$.X1(10337, J$.P(10329, J$.R(10305, 'value', value, 0), J$.T(10313, 1, 22, false), J$.U(442, '-', J$.T(10321, 1, 22, false)), 2));
                                                } else if (J$.X1(23473, J$.C(584, J$.C(576, J$.B(450, '==', J$.G(10361, J$.R(10345, 'x', x, 0), J$.T(10353, 1, 22, false), 4), J$.T(10369, 1, 22, false), 0)) ? J$._() : J$.B(466, '==', J$.G(10393, J$.R(10377, 'x', x, 0), J$.T(10385, 1, 22, false), 4), J$.U(458, '-', J$.T(10401, 1, 22, false)), 0)))) {
                                                    J$.X1(10457, J$.P(10449, J$.R(10409, 'value', value, 0), J$.T(10417, 1, 22, false), J$.G(10441, J$.R(10425, 'x', x, 0), J$.T(10433, 1, 22, false), 4), 2));
                                                } else {
                                                    throw J$.X1(10497, J$.Th(10489, J$.F(10481, J$.R(10465, 'MongoError', MongoError, 1), 1)(J$.T(10473, 'Illegal sort clause, must be of the form [[\'field1\', \'(ascending|descending)\'], [\'field2\', \'(ascending|descending)\']]', 21, false))));
                                                }
                                                return J$.X1(10521, J$.Rt(10513, J$.R(10505, 'value', value, 0)));
                                            } catch (J$e) {
                                                J$.Ex(23497, J$e);
                                            } finally {
                                                if (J$.Fr(23505))
                                                    continue jalangiLabel3554;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 10529))), order, 0));
                            }
                            if (J$.X1(23521, J$.C(616, J$.B(474, '!=', J$.R(10601, 'direction', direction, 0), J$.T(10609, null, 25, false), 0)))) {
                                J$.X1(10657, order = J$.W(10649, 'order', J$.T(10641, [J$.T(10633, [
                                        J$.R(10617, 'keyOrList', keyOrList, 0),
                                        J$.R(10625, 'direction', direction, 0)
                                    ], 10, false)], 10, false), order, 0));
                            }
                            J$.X1(10705, J$.P(10697, J$.G(10681, J$.G(10673, J$.R(10665, 'this', this, 0), 's', 0), 'cmd', 0), 'sort', J$.R(10689, 'order', order, 0), 0));
                            J$.X1(10737, J$.P(10729, J$.R(10713, 'this', this, 0), 'sortValue', J$.R(10721, 'order', order, 0), 0));
                            return J$.X1(10761, J$.Rt(10753, J$.R(10745, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23529, J$e);
                        } finally {
                            if (J$.Fr(23537))
                                continue jalangiLabel3555;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10769), 0));
            J$.X1(10897, J$.M(10889, J$.R(10833, 'define', define, 1), 'classMethod', 0)(J$.T(10841, 'sort', 21, false), J$.T(10881, {
                callback: J$.T(10849, false, 23, false),
                promise: J$.T(10857, false, 23, false),
                returns: J$.T(10873, [J$.R(10865, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(11337, J$.P(11329, J$.G(10913, J$.R(10905, 'Cursor', Cursor, 1), 'prototype', 0), 'batchSize', J$.T(11321, function (value) {
                jalangiLabel3556:
                    while (true) {
                        try {
                            J$.Fe(11297, arguments.callee, this, arguments);
                            arguments = J$.N(11305, 'arguments', arguments, 4);
                            value = J$.N(11313, 'value', value, 4);
                            if (J$.X1(23545, J$.C(624, J$.G(10945, J$.G(10937, J$.G(10929, J$.R(10921, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(11001, J$.Th(10993, J$.M(10985, J$.R(10953, 'MongoError', MongoError, 1), 'create', 0)(J$.T(10977, {
                                message: J$.T(10961, 'Tailable cursor doesn\'t support batchSize', 21, false),
                                driver: J$.T(10969, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23553, J$.C(640, J$.C(632, J$.B(482, '==', J$.G(11025, J$.G(11017, J$.R(11009, 'this', this, 0), 's', 0), 'state', 0), J$.G(11041, J$.R(11033, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(11057, J$.R(11049, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(11113, J$.Th(11105, J$.M(11097, J$.R(11065, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11089, {
                                message: J$.T(11073, 'Cursor is closed', 21, false),
                                driver: J$.T(11081, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23561, J$.C(648, J$.B(498, '!=', J$.U(490, 'typeof', J$.R(11121, 'value', value, 0)), J$.T(11129, 'number', 21, false), 0))))
                                throw J$.X1(11185, J$.Th(11177, J$.M(11169, J$.R(11137, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11161, {
                                message: J$.T(11145, 'batchSize requires an integer', 21, false),
                                driver: J$.T(11153, true, 23, false)
                            }, 11, false))));
                            J$.X1(11233, J$.P(11225, J$.G(11209, J$.G(11201, J$.R(11193, 'this', this, 0), 's', 0), 'cmd', 0), 'batchSize', J$.R(11217, 'value', value, 0), 0));
                            J$.X1(11265, J$.M(11257, J$.R(11241, 'this', this, 0), 'setCursorBatchSize', 0)(J$.R(11249, 'value', value, 0)));
                            return J$.X1(11289, J$.Rt(11281, J$.R(11273, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23569, J$e);
                        } finally {
                            if (J$.Fr(23577))
                                continue jalangiLabel3556;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11297), 0));
            J$.X1(11409, J$.M(11401, J$.R(11345, 'define', define, 1), 'classMethod', 0)(J$.T(11353, 'batchSize', 21, false), J$.T(11393, {
                callback: J$.T(11361, false, 23, false),
                promise: J$.T(11369, false, 23, false),
                returns: J$.T(11385, [J$.R(11377, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(11889, J$.P(11881, J$.G(11425, J$.R(11417, 'Cursor', Cursor, 1), 'prototype', 0), 'limit', J$.T(11873, function (value) {
                jalangiLabel3557:
                    while (true) {
                        try {
                            J$.Fe(11849, arguments.callee, this, arguments);
                            arguments = J$.N(11857, 'arguments', arguments, 4);
                            value = J$.N(11865, 'value', value, 4);
                            if (J$.X1(23585, J$.C(656, J$.G(11457, J$.G(11449, J$.G(11441, J$.R(11433, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(11513, J$.Th(11505, J$.M(11497, J$.R(11465, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11489, {
                                message: J$.T(11473, 'Tailable cursor doesn\'t support limit', 21, false),
                                driver: J$.T(11481, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23593, J$.C(680, J$.C(672, J$.C(664, J$.B(506, '==', J$.G(11537, J$.G(11529, J$.R(11521, 'this', this, 0), 's', 0), 'state', 0), J$.G(11553, J$.R(11545, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.B(514, '==', J$.G(11577, J$.G(11569, J$.R(11561, 'this', this, 0), 's', 0), 'state', 0), J$.G(11593, J$.R(11585, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(11609, J$.R(11601, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(11665, J$.Th(11657, J$.M(11649, J$.R(11617, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11641, {
                                message: J$.T(11625, 'Cursor is closed', 21, false),
                                driver: J$.T(11633, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23601, J$.C(688, J$.B(530, '!=', J$.U(522, 'typeof', J$.R(11673, 'value', value, 0)), J$.T(11681, 'number', 21, false), 0))))
                                throw J$.X1(11737, J$.Th(11729, J$.M(11721, J$.R(11689, 'MongoError', MongoError, 1), 'create', 0)(J$.T(11713, {
                                message: J$.T(11697, 'limit requires an integer', 21, false),
                                driver: J$.T(11705, true, 23, false)
                            }, 11, false))));
                            J$.X1(11785, J$.P(11777, J$.G(11761, J$.G(11753, J$.R(11745, 'this', this, 0), 's', 0), 'cmd', 0), 'limit', J$.R(11769, 'value', value, 0), 0));
                            J$.X1(11817, J$.M(11809, J$.R(11793, 'this', this, 0), 'setCursorLimit', 0)(J$.R(11801, 'value', value, 0)));
                            return J$.X1(11841, J$.Rt(11833, J$.R(11825, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23609, J$e);
                        } finally {
                            if (J$.Fr(23617))
                                continue jalangiLabel3557;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11849), 0));
            J$.X1(11961, J$.M(11953, J$.R(11897, 'define', define, 1), 'classMethod', 0)(J$.T(11905, 'limit', 21, false), J$.T(11945, {
                callback: J$.T(11913, false, 23, false),
                promise: J$.T(11921, false, 23, false),
                returns: J$.T(11937, [J$.R(11929, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(12441, J$.P(12433, J$.G(11977, J$.R(11969, 'Cursor', Cursor, 1), 'prototype', 0), 'skip', J$.T(12425, function (value) {
                jalangiLabel3558:
                    while (true) {
                        try {
                            J$.Fe(12401, arguments.callee, this, arguments);
                            arguments = J$.N(12409, 'arguments', arguments, 4);
                            value = J$.N(12417, 'value', value, 4);
                            if (J$.X1(23625, J$.C(696, J$.G(12009, J$.G(12001, J$.G(11993, J$.R(11985, 'this', this, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(12065, J$.Th(12057, J$.M(12049, J$.R(12017, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12041, {
                                message: J$.T(12025, 'Tailable cursor doesn\'t support skip', 21, false),
                                driver: J$.T(12033, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23633, J$.C(720, J$.C(712, J$.C(704, J$.B(538, '==', J$.G(12089, J$.G(12081, J$.R(12073, 'this', this, 0), 's', 0), 'state', 0), J$.G(12105, J$.R(12097, 'Cursor', Cursor, 1), 'OPEN', 0), 0)) ? J$._() : J$.B(546, '==', J$.G(12129, J$.G(12121, J$.R(12113, 'this', this, 0), 's', 0), 'state', 0), J$.G(12145, J$.R(12137, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(12161, J$.R(12153, 'this', this, 0), 'isDead', 0)())))
                                throw J$.X1(12217, J$.Th(12209, J$.M(12201, J$.R(12169, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12193, {
                                message: J$.T(12177, 'Cursor is closed', 21, false),
                                driver: J$.T(12185, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23641, J$.C(728, J$.B(562, '!=', J$.U(554, 'typeof', J$.R(12225, 'value', value, 0)), J$.T(12233, 'number', 21, false), 0))))
                                throw J$.X1(12289, J$.Th(12281, J$.M(12273, J$.R(12241, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12265, {
                                message: J$.T(12249, 'skip requires an integer', 21, false),
                                driver: J$.T(12257, true, 23, false)
                            }, 11, false))));
                            J$.X1(12337, J$.P(12329, J$.G(12313, J$.G(12305, J$.R(12297, 'this', this, 0), 's', 0), 'cmd', 0), 'skip', J$.R(12321, 'value', value, 0), 0));
                            J$.X1(12369, J$.M(12361, J$.R(12345, 'this', this, 0), 'setCursorSkip', 0)(J$.R(12353, 'value', value, 0)));
                            return J$.X1(12393, J$.Rt(12385, J$.R(12377, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23649, J$e);
                        } finally {
                            if (J$.Fr(23657))
                                continue jalangiLabel3558;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12401), 0));
            J$.X1(12513, J$.M(12505, J$.R(12449, 'define', define, 1), 'classMethod', 0)(J$.T(12457, 'skip', 21, false), J$.T(12497, {
                callback: J$.T(12465, false, 23, false),
                promise: J$.T(12473, false, 23, false),
                returns: J$.T(12489, [J$.R(12481, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(12569, J$.P(12561, J$.G(12529, J$.R(12521, 'Cursor', Cursor, 1), 'prototype', 0), 'nextObject', J$.G(12553, J$.G(12545, J$.R(12537, 'Cursor', Cursor, 1), 'prototype', 0), 'next', 0), 0));
            var nextObject = J$.X1(13593, J$.W(13585, 'nextObject', J$.T(13577, function (self, callback) {
                jalangiLabel3561:
                    while (true) {
                        try {
                            J$.Fe(13545, arguments.callee, this, arguments);
                            arguments = J$.N(13553, 'arguments', arguments, 4);
                            self = J$.N(13561, 'self', self, 4);
                            callback = J$.N(13569, 'callback', callback, 4);
                            if (J$.X1(23665, J$.C(752, J$.C(744, J$.B(570, '==', J$.G(12593, J$.G(12585, J$.R(12577, 'self', self, 0), 's', 0), 'state', 0), J$.G(12609, J$.R(12601, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.C(736, J$.G(12625, J$.R(12617, 'self', self, 0), 'isDead', 0)) ? J$.M(12641, J$.R(12633, 'self', self, 0), 'isDead', 0)() : J$._())))
                                return J$.X1(12721, J$.Rt(12713, J$.F(12705, J$.R(12649, 'handleCallback', handleCallback, 1), 0)(J$.R(12657, 'callback', callback, 0), J$.M(12697, J$.R(12665, 'MongoError', MongoError, 1), 'create', 0)(J$.T(12689, {
                                message: J$.T(12673, 'Cursor is closed', 21, false),
                                driver: J$.T(12681, true, 23, false)
                            }, 11, false)))));
                            if (J$.X1(23673, J$.C(768, J$.C(760, J$.B(578, '==', J$.G(12745, J$.G(12737, J$.R(12729, 'self', self, 0), 's', 0), 'state', 0), J$.G(12761, J$.R(12753, 'Cursor', Cursor, 1), 'INIT', 0), 0)) ? J$.G(12793, J$.G(12785, J$.G(12777, J$.R(12769, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', 0) : J$._()))) {
                                try {
                                    J$.X1(12881, J$.P(12873, J$.G(12817, J$.G(12809, J$.R(12801, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', J$.F(12865, J$.R(12825, 'formattedOrderClause', formattedOrderClause, 1), 0)(J$.G(12857, J$.G(12849, J$.G(12841, J$.R(12833, 'self', self, 0), 's', 0), 'cmd', 0), 'sort', 0)), 0));
                                } catch (err) {
                                    err = J$.N(12937, 'err', err, 1);
                                    return J$.X1(12929, J$.Rt(12921, J$.F(12913, J$.R(12889, 'handleCallback', handleCallback, 1), 0)(J$.R(12897, 'callback', callback, 0), J$.R(12905, 'err', err, 0))));
                                }
                            }
                            J$.X1(13537, J$.M(13529, J$.R(12945, 'self', self, 0), '_next', 0)(J$.T(13521, function (err, doc) {
                                jalangiLabel3560:
                                    while (true) {
                                        try {
                                            J$.Fe(13489, arguments.callee, this, arguments);
                                            arguments = J$.N(13497, 'arguments', arguments, 4);
                                            err = J$.N(13505, 'err', err, 4);
                                            doc = J$.N(13513, 'doc', doc, 4);
                                            if (J$.X1(23681, J$.C(792, J$.C(784, J$.C(776, J$.R(12953, 'err', err, 0)) ? J$.G(12969, J$.R(12961, 'err', err, 0), 'tailable', 0) : J$._()) ? J$.B(586, '==', J$.G(12993, J$.G(12985, J$.R(12977, 'self', self, 0), 's', 0), 'currentNumberOfRetries', 0), J$.T(13001, 0, 22, false), 0) : J$._())))
                                                return J$.X1(13041, J$.Rt(13033, J$.F(13025, J$.R(13009, 'callback', callback, 0), 0)(J$.R(13017, 'err', err, 0))));
                                            if (J$.X1(23713, J$.C(824, J$.C(808, J$.C(800, J$.R(13049, 'err', err, 0)) ? J$.G(13065, J$.R(13057, 'err', err, 0), 'tailable', 0) : J$._()) ? J$.B(594, '>', J$.G(13089, J$.G(13081, J$.R(13073, 'self', self, 0), 's', 0), 'currentNumberOfRetries', 0), J$.T(13097, 0, 22, false), 0) : J$._()))) {
                                                J$.X1(13161, J$.P(13153, J$.G(13113, J$.R(13105, 'self', self, 0), 's', 0), 'currentNumberOfRetries', J$.B(602, '-', J$.G(13137, J$.G(13129, J$.R(13121, 'self', self, 0), 's', 0), 'currentNumberOfRetries', 0), J$.T(13145, 1, 22, false), 0), 0));
                                                return J$.X1(13329, J$.Rt(13321, J$.F(13313, J$.R(13169, 'setTimeout', setTimeout, 2), 0)(J$.T(13281, function () {
                                                    jalangiLabel3559:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(13265, arguments.callee, this, arguments);
                                                                arguments = J$.N(13273, 'arguments', arguments, 4);
                                                                if (J$.X1(23689, J$.C(816, J$.B(610, '==', J$.G(13193, J$.G(13185, J$.R(13177, 'self', self, 0), 'cursorState', 0), 'currentLimit', 0), J$.T(13201, 0, 22, false), 0))))
                                                                    J$.X1(13225, J$.M(13217, J$.R(13209, 'self', self, 0), 'rewind', 0)());
                                                                J$.X1(13257, J$.M(13249, J$.R(13233, 'self', self, 0), 'nextObject', 0)(J$.R(13241, 'callback', callback, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(23697, J$e);
                                                            } finally {
                                                                if (J$.Fr(23705))
                                                                    continue jalangiLabel3559;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 13265), J$.G(13305, J$.G(13297, J$.R(13289, 'self', self, 0), 's', 0), 'tailableRetryInterval', 0))));
                                            }
                                            J$.X1(13377, J$.P(13369, J$.G(13345, J$.R(13337, 'self', self, 0), 's', 0), 'state', J$.G(13361, J$.R(13353, 'Cursor', Cursor, 1), 'OPEN', 0), 0));
                                            if (J$.X1(23721, J$.C(832, J$.R(13385, 'err', err, 0))))
                                                return J$.X1(13433, J$.Rt(13425, J$.F(13417, J$.R(13393, 'handleCallback', handleCallback, 1), 0)(J$.R(13401, 'callback', callback, 0), J$.R(13409, 'err', err, 0))));
                                            J$.X1(13481, J$.F(13473, J$.R(13441, 'handleCallback', handleCallback, 1), 0)(J$.R(13449, 'callback', callback, 0), J$.T(13457, null, 25, false), J$.R(13465, 'doc', doc, 0)));
                                        } catch (J$e) {
                                            J$.Ex(23729, J$e);
                                        } finally {
                                            if (J$.Fr(23737))
                                                continue jalangiLabel3560;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 13489)));
                        } catch (J$e) {
                            J$.Ex(23745, J$e);
                        } finally {
                            if (J$.Fr(23753))
                                continue jalangiLabel3561;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13545), nextObject, 3));
            J$.X1(13649, J$.M(13641, J$.R(13601, 'define', define, 1), 'classMethod', 0)(J$.T(13609, 'nextObject', 21, false), J$.T(13633, {
                callback: J$.T(13617, true, 23, false),
                promise: J$.T(13625, true, 23, false)
            }, 11, false)));
            var loop = J$.X1(13801, J$.W(13793, 'loop', J$.T(13785, function (self, callback) {
                jalangiLabel3562:
                    while (true) {
                        try {
                            J$.Fe(13753, arguments.callee, this, arguments);
                            arguments = J$.N(13761, 'arguments', arguments, 4);
                            self = J$.N(13769, 'self', self, 4);
                            callback = J$.N(13777, 'callback', callback, 4);
                            if (J$.X1(23761, J$.C(840, J$.B(618, '==', J$.M(13665, J$.R(13657, 'self', self, 0), 'bufferedCount', 0)(), J$.T(13673, 0, 22, false), 0))))
                                return J$.X1(13689, J$.Rt(13681, undefined));
                            J$.X1(13721, J$.M(13713, J$.R(13697, 'self', self, 0), '_next', 0)(J$.R(13705, 'callback', callback, 0)));
                            return J$.X1(13745, J$.Rt(13737, J$.R(13729, 'loop', loop, 1)));
                        } catch (J$e) {
                            J$.Ex(23769, J$e);
                        } finally {
                            if (J$.Fr(23777))
                                continue jalangiLabel3562;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13753), loop, 3));
            J$.X1(13857, J$.P(13849, J$.G(13817, J$.R(13809, 'Cursor', Cursor, 1), 'prototype', 0), 'next', J$.G(13841, J$.G(13833, J$.R(13825, 'Cursor', Cursor, 1), 'prototype', 0), 'nextObject', 0), 0));
            J$.X1(13913, J$.M(13905, J$.R(13865, 'define', define, 1), 'classMethod', 0)(J$.T(13873, 'next', 21, false), J$.T(13897, {
                callback: J$.T(13881, true, 23, false),
                promise: J$.T(13889, true, 23, false)
            }, 11, false)));
            J$.X1(14089, J$.P(14081, J$.G(13929, J$.R(13921, 'Cursor', Cursor, 1), 'prototype', 0), 'each', J$.T(14073, function (callback) {
                jalangiLabel3563:
                    while (true) {
                        try {
                            J$.Fe(14049, arguments.callee, this, arguments);
                            arguments = J$.N(14057, 'arguments', arguments, 4);
                            callback = J$.N(14065, 'callback', callback, 4);
                            J$.X1(13953, J$.M(13945, J$.R(13937, 'this', this, 0), 'rewind', 0)());
                            J$.X1(14001, J$.P(13993, J$.G(13969, J$.R(13961, 'this', this, 0), 's', 0), 'state', J$.G(13985, J$.R(13977, 'Cursor', Cursor, 1), 'INIT', 0), 0));
                            J$.X1(14041, J$.F(14033, J$.R(14009, '_each', _each, 1), 0)(J$.R(14017, 'this', this, 0), J$.R(14025, 'callback', callback, 0)));
                        } catch (J$e) {
                            J$.Ex(23785, J$e);
                        } finally {
                            if (J$.Fr(23793))
                                continue jalangiLabel3563;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14049), 0));
            J$.X1(14145, J$.M(14137, J$.R(14097, 'define', define, 1), 'classMethod', 0)(J$.T(14105, 'each', 21, false), J$.T(14129, {
                callback: J$.T(14113, true, 23, false),
                promise: J$.T(14121, false, 23, false)
            }, 11, false)));
            var _each = J$.X1(15041, J$.W(15033, '_each', J$.T(15025, function (self, callback) {
                jalangiLabel3565:
                    while (true) {
                        try {
                            J$.Fe(14985, arguments.callee, this, arguments);
                            arguments = J$.N(14993, 'arguments', arguments, 4);
                            self = J$.N(15001, 'self', self, 4);
                            callback = J$.N(15009, 'callback', callback, 4);
                            J$.N(15017, 'fn', fn, 0);
                            if (J$.X1(23801, J$.C(848, J$.U(626, '!', J$.R(14153, 'callback', callback, 0)))))
                                throw J$.X1(14209, J$.Th(14201, J$.M(14193, J$.R(14161, 'MongoError', MongoError, 1), 'create', 0)(J$.T(14185, {
                                message: J$.T(14169, 'callback is mandatory', 21, false),
                                driver: J$.T(14177, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23809, J$.C(856, J$.M(14225, J$.R(14217, 'self', self, 0), 'isNotified', 0)())))
                                return J$.X1(14241, J$.Rt(14233, undefined));
                            if (J$.X1(23817, J$.C(872, J$.C(864, J$.B(634, '==', J$.G(14265, J$.G(14257, J$.R(14249, 'self', self, 0), 's', 0), 'state', 0), J$.G(14281, J$.R(14273, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(14297, J$.R(14289, 'self', self, 0), 'isDead', 0)()))) {
                                return J$.X1(14377, J$.Rt(14369, J$.F(14361, J$.R(14305, 'handleCallback', handleCallback, 1), 0)(J$.R(14313, 'callback', callback, 0), J$.M(14353, J$.R(14321, 'MongoError', MongoError, 1), 'create', 0)(J$.T(14345, {
                                    message: J$.T(14329, 'Cursor is closed', 21, false),
                                    driver: J$.T(14337, true, 23, false)
                                }, 11, false)))));
                            }
                            if (J$.X1(23825, J$.C(880, J$.B(642, '==', J$.G(14401, J$.G(14393, J$.R(14385, 'self', self, 0), 's', 0), 'state', 0), J$.G(14417, J$.R(14409, 'Cursor', Cursor, 1), 'INIT', 0), 0))))
                                J$.X1(14465, J$.P(14457, J$.G(14433, J$.R(14425, 'self', self, 0), 's', 0), 'state', J$.G(14449, J$.R(14441, 'Cursor', Cursor, 1), 'OPEN', 0), 0));
                            var fn = J$.X1(14489, J$.W(14481, 'fn', J$.T(14473, null, 25, false), fn, 1));
                            if (J$.X1(23881, J$.C(920, J$.B(650, '>', J$.M(14505, J$.R(14497, 'self', self, 0), 'bufferedCount', 0)(), J$.T(14513, 0, 22, false), 0)))) {
                                while (J$.X1(23833, J$.C(888, fn = J$.W(14553, 'fn', J$.F(14545, J$.R(14521, 'loop', loop, 1), 0)(J$.R(14529, 'self', self, 0), J$.R(14537, 'callback', callback, 0)), fn, 0))))
                                    J$.X1(14593, J$.F(14585, J$.R(14561, 'fn', fn, 0), 0)(J$.R(14569, 'self', self, 0), J$.R(14577, 'callback', callback, 0)));
                                J$.X1(14633, J$.F(14625, J$.R(14601, '_each', _each, 1), 0)(J$.R(14609, 'self', self, 0), J$.R(14617, 'callback', callback, 0)));
                            } else {
                                J$.X1(14977, J$.M(14969, J$.R(14641, 'self', self, 0), 'next', 0)(J$.T(14961, function (err, item) {
                                    jalangiLabel3564:
                                        while (true) {
                                            try {
                                                J$.Fe(14929, arguments.callee, this, arguments);
                                                arguments = J$.N(14937, 'arguments', arguments, 4);
                                                err = J$.N(14945, 'err', err, 4);
                                                item = J$.N(14953, 'item', item, 4);
                                                if (J$.X1(23841, J$.C(896, J$.R(14649, 'err', err, 0))))
                                                    return J$.X1(14697, J$.Rt(14689, J$.F(14681, J$.R(14657, 'handleCallback', handleCallback, 1), 0)(J$.R(14665, 'callback', callback, 0), J$.R(14673, 'err', err, 0))));
                                                if (J$.X1(23849, J$.C(904, J$.B(658, '==', J$.R(14705, 'item', item, 0), J$.T(14713, null, 25, false), 0)))) {
                                                    J$.X1(14761, J$.P(14753, J$.G(14729, J$.R(14721, 'self', self, 0), 's', 0), 'state', J$.G(14745, J$.R(14737, 'Cursor', Cursor, 1), 'CLOSED', 0), 0));
                                                    return J$.X1(14817, J$.Rt(14809, J$.F(14801, J$.R(14769, 'handleCallback', handleCallback, 1), 0)(J$.R(14777, 'callback', callback, 0), J$.T(14785, null, 25, false), J$.T(14793, null, 25, false))));
                                                }
                                                if (J$.X1(23857, J$.C(912, J$.B(666, '==', J$.F(14857, J$.R(14825, 'handleCallback', handleCallback, 1), 0)(J$.R(14833, 'callback', callback, 0), J$.T(14841, null, 25, false), J$.R(14849, 'item', item, 0)), J$.T(14865, false, 23, false), 0))))
                                                    return J$.X1(14881, J$.Rt(14873, undefined));
                                                J$.X1(14921, J$.F(14913, J$.R(14889, '_each', _each, 1), 0)(J$.R(14897, 'self', self, 0), J$.R(14905, 'callback', callback, 0)));
                                            } catch (J$e) {
                                                J$.Ex(23865, J$e);
                                            } finally {
                                                if (J$.Fr(23873))
                                                    continue jalangiLabel3564;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 14929)));
                            }
                        } catch (J$e) {
                            J$.Ex(23889, J$e);
                        } finally {
                            if (J$.Fr(23897))
                                continue jalangiLabel3565;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14985), _each, 3));
            J$.X1(15449, J$.P(15441, J$.G(15057, J$.R(15049, 'Cursor', Cursor, 1), 'prototype', 0), 'forEach', J$.T(15433, function (iterator, callback) {
                jalangiLabel3567:
                    while (true) {
                        try {
                            J$.Fe(15401, arguments.callee, this, arguments);
                            arguments = J$.N(15409, 'arguments', arguments, 4);
                            iterator = J$.N(15417, 'iterator', iterator, 4);
                            callback = J$.N(15425, 'callback', callback, 4);
                            J$.X1(15393, J$.M(15385, J$.R(15065, 'this', this, 0), 'each', 0)(J$.T(15377, function (err, doc) {
                                jalangiLabel3566:
                                    while (true) {
                                        try {
                                            J$.Fe(15337, arguments.callee, this, arguments);
                                            arguments = J$.N(15345, 'arguments', arguments, 4);
                                            err = J$.N(15353, 'err', err, 4);
                                            doc = J$.N(15361, 'doc', doc, 4);
                                            J$.N(15369, 'internalCallback', internalCallback, 0);
                                            if (J$.X1(23905, J$.C(928, J$.R(15073, 'err', err, 0)))) {
                                                J$.X1(15105, J$.F(15097, J$.R(15081, 'callback', callback, 0), 0)(J$.R(15089, 'err', err, 0)));
                                                return J$.X1(15129, J$.Rt(15121, J$.T(15113, false, 23, false)));
                                            }
                                            if (J$.X1(23913, J$.C(936, J$.B(674, '!=', J$.R(15137, 'doc', doc, 0), J$.T(15145, null, 25, false), 0)))) {
                                                J$.X1(15177, J$.F(15169, J$.R(15153, 'iterator', iterator, 0), 0)(J$.R(15161, 'doc', doc, 0)));
                                                return J$.X1(15201, J$.Rt(15193, J$.T(15185, true, 23, false)));
                                            }
                                            if (J$.X1(23921, J$.C(952, J$.C(944, J$.B(682, '==', J$.R(15209, 'doc', doc, 0), J$.T(15217, null, 25, false), 0)) ? J$.R(15225, 'callback', callback, 0) : J$._()))) {
                                                var internalCallback = J$.X1(15249, J$.W(15241, 'internalCallback', J$.R(15233, 'callback', callback, 0), internalCallback, 1));
                                                J$.X1(15273, callback = J$.W(15265, 'callback', J$.T(15257, null, 25, false), callback, 0));
                                                J$.X1(15305, J$.F(15297, J$.R(15281, 'internalCallback', internalCallback, 0), 0)(J$.T(15289, null, 25, false)));
                                                return J$.X1(15329, J$.Rt(15321, J$.T(15313, false, 23, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(23929, J$e);
                                        } finally {
                                            if (J$.Fr(23937))
                                                continue jalangiLabel3566;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 15337)));
                        } catch (J$e) {
                            J$.Ex(23945, J$e);
                        } finally {
                            if (J$.Fr(23953))
                                continue jalangiLabel3567;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15401), 0));
            J$.X1(15505, J$.M(15497, J$.R(15457, 'define', define, 1), 'classMethod', 0)(J$.T(15465, 'forEach', 21, false), J$.T(15489, {
                callback: J$.T(15473, true, 23, false),
                promise: J$.T(15481, false, 23, false)
            }, 11, false)));
            J$.X1(15857, J$.P(15849, J$.G(15521, J$.R(15513, 'Cursor', Cursor, 1), 'prototype', 0), 'setReadPreference', J$.T(15841, function (r) {
                jalangiLabel3568:
                    while (true) {
                        try {
                            J$.Fe(15817, arguments.callee, this, arguments);
                            arguments = J$.N(15825, 'arguments', arguments, 4);
                            r = J$.N(15833, 'r', r, 4);
                            if (J$.X1(23961, J$.C(960, J$.B(690, '!=', J$.G(15545, J$.G(15537, J$.R(15529, 'this', this, 0), 's', 0), 'state', 0), J$.G(15561, J$.R(15553, 'Cursor', Cursor, 1), 'INIT', 0), 0))))
                                throw J$.X1(15617, J$.Th(15609, J$.M(15601, J$.R(15569, 'MongoError', MongoError, 1), 'create', 0)(J$.T(15593, {
                                message: J$.T(15577, 'cannot change cursor readPreference after cursor has been accessed', 21, false),
                                driver: J$.T(15585, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(23969, J$.C(968, J$.B(698, 'instanceof', J$.R(15625, 'r', r, 0), J$.R(15633, 'ReadPreference', ReadPreference, 1), 0)))) {
                                J$.X1(15721, J$.P(15713, J$.G(15657, J$.G(15649, J$.R(15641, 'this', this, 0), 's', 0), 'options', 0), 'readPreference', J$.F(15705, J$.R(15665, 'CoreReadPreference', CoreReadPreference, 1), 1)(J$.G(15681, J$.R(15673, 'r', r, 0), 'mode', 0), J$.G(15697, J$.R(15689, 'r', r, 0), 'tags', 0)), 0));
                            } else {
                                J$.X1(15785, J$.P(15777, J$.G(15745, J$.G(15737, J$.R(15729, 'this', this, 0), 's', 0), 'options', 0), 'readPreference', J$.F(15769, J$.R(15753, 'CoreReadPreference', CoreReadPreference, 1), 1)(J$.R(15761, 'r', r, 0)), 0));
                            }
                            return J$.X1(15809, J$.Rt(15801, J$.R(15793, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(23977, J$e);
                        } finally {
                            if (J$.Fr(23985))
                                continue jalangiLabel3568;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15817), 0));
            J$.X1(15929, J$.M(15921, J$.R(15865, 'define', define, 1), 'classMethod', 0)(J$.T(15873, 'setReadPreference', 21, false), J$.T(15913, {
                callback: J$.T(15881, false, 23, false),
                promise: J$.T(15889, false, 23, false),
                returns: J$.T(15905, [J$.R(15897, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(16409, J$.P(16401, J$.G(15945, J$.R(15937, 'Cursor', Cursor, 1), 'prototype', 0), 'toArray', J$.T(16393, function (callback) {
                jalangiLabel3571:
                    while (true) {
                        try {
                            J$.Fe(16361, arguments.callee, this, arguments);
                            arguments = J$.N(16369, 'arguments', arguments, 4);
                            callback = J$.N(16377, 'callback', callback, 4);
                            J$.N(16385, 'self', self, 0);
                            var self = J$.X1(15969, J$.W(15961, 'self', J$.R(15953, 'this', this, 0), self, 1));
                            if (J$.X1(23993, J$.C(976, J$.G(16001, J$.G(15993, J$.G(15985, J$.R(15977, 'self', self, 0), 's', 0), 'options', 0), 'tailable', 0))))
                                throw J$.X1(16057, J$.Th(16049, J$.M(16041, J$.R(16009, 'MongoError', MongoError, 1), 'create', 0)(J$.T(16033, {
                                message: J$.T(16017, 'Tailable cursor cannot be converted to array', 21, false),
                                driver: J$.T(16025, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24001, J$.C(984, J$.B(714, '==', J$.U(706, 'typeof', J$.R(16065, 'callback', callback, 0)), J$.T(16073, 'function', 21, false), 0))))
                                return J$.X1(16121, J$.Rt(16113, J$.F(16105, J$.R(16081, 'toArray', toArray, 1), 0)(J$.R(16089, 'self', self, 0), J$.R(16097, 'callback', callback, 0))));
                            return J$.X1(16353, J$.Rt(16345, J$.M(16337, J$.G(16137, J$.R(16129, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(16329, function (resolve, reject) {
                                jalangiLabel3570:
                                    while (true) {
                                        try {
                                            J$.Fe(16297, arguments.callee, this, arguments);
                                            arguments = J$.N(16305, 'arguments', arguments, 4);
                                            resolve = J$.N(16313, 'resolve', resolve, 4);
                                            reject = J$.N(16321, 'reject', reject, 4);
                                            J$.X1(16289, J$.F(16281, J$.R(16145, 'toArray', toArray, 1), 0)(J$.R(16153, 'self', self, 0), J$.T(16273, function (err, r) {
                                                jalangiLabel3569:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(16241, arguments.callee, this, arguments);
                                                            arguments = J$.N(16249, 'arguments', arguments, 4);
                                                            err = J$.N(16257, 'err', err, 4);
                                                            r = J$.N(16265, 'r', r, 4);
                                                            if (J$.X1(24009, J$.C(992, J$.R(16161, 'err', err, 0))))
                                                                return J$.X1(16201, J$.Rt(16193, J$.F(16185, J$.R(16169, 'reject', reject, 0), 0)(J$.R(16177, 'err', err, 0))));
                                                            J$.X1(16233, J$.F(16225, J$.R(16209, 'resolve', resolve, 0), 0)(J$.R(16217, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(24017, J$e);
                                                        } finally {
                                                            if (J$.Fr(24025))
                                                                continue jalangiLabel3569;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 16241)));
                                        } catch (J$e) {
                                            J$.Ex(24033, J$e);
                                        } finally {
                                            if (J$.Fr(24041))
                                                continue jalangiLabel3570;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 16297))));
                        } catch (J$e) {
                            J$.Ex(24049, J$e);
                        } finally {
                            if (J$.Fr(24057))
                                continue jalangiLabel3571;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 16361), 0));
            var toArray = J$.X1(17185, J$.W(17177, 'toArray', J$.T(17169, function (self, callback) {
                jalangiLabel3574:
                    while (true) {
                        try {
                            J$.Fe(17121, arguments.callee, this, arguments);
                            arguments = J$.N(17129, 'arguments', arguments, 4);
                            self = J$.N(17137, 'self', self, 4);
                            callback = J$.N(17145, 'callback', callback, 4);
                            J$.N(17153, 'items', items, 0);
                            J$.N(17161, 'fetchDocs', fetchDocs, 0);
                            var items = J$.X1(16433, J$.W(16425, 'items', J$.T(16417, [], 10, false), items, 1));
                            J$.X1(16457, J$.M(16449, J$.R(16441, 'self', self, 0), 'rewind', 0)());
                            J$.X1(16505, J$.P(16497, J$.G(16473, J$.R(16465, 'self', self, 0), 's', 0), 'state', J$.G(16489, J$.R(16481, 'Cursor', Cursor, 1), 'INIT', 0), 0));
                            var fetchDocs = J$.X1(17089, J$.W(17081, 'fetchDocs', J$.T(17073, function () {
                                jalangiLabel3573:
                                    while (true) {
                                        try {
                                            J$.Fe(17057, arguments.callee, this, arguments);
                                            arguments = J$.N(17065, 'arguments', arguments, 4);
                                            J$.X1(17049, J$.M(17041, J$.R(16513, 'self', self, 0), '_next', 0)(J$.T(17033, function (err, doc) {
                                                jalangiLabel3572:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(16993, arguments.callee, this, arguments);
                                                            arguments = J$.N(17001, 'arguments', arguments, 4);
                                                            err = J$.N(17009, 'err', err, 4);
                                                            doc = J$.N(17017, 'doc', doc, 4);
                                                            J$.N(17025, 'docs', docs, 0);
                                                            if (J$.X1(24065, J$.C(1000, J$.R(16521, 'err', err, 0))))
                                                                return J$.X1(16569, J$.Rt(16561, J$.F(16553, J$.R(16529, 'handleCallback', handleCallback, 1), 0)(J$.R(16537, 'callback', callback, 0), J$.R(16545, 'err', err, 0))));
                                                            if (J$.X1(24073, J$.C(1008, J$.B(722, '==', J$.R(16577, 'doc', doc, 0), J$.T(16585, null, 25, false), 0)))) {
                                                                J$.X1(16633, J$.P(16625, J$.G(16601, J$.R(16593, 'self', self, 0), 's', 0), 'state', J$.G(16617, J$.R(16609, 'Cursor', Cursor, 1), 'CLOSED', 0), 0));
                                                                return J$.X1(16689, J$.Rt(16681, J$.F(16673, J$.R(16641, 'handleCallback', handleCallback, 1), 0)(J$.R(16649, 'callback', callback, 0), J$.T(16657, null, 25, false), J$.R(16665, 'items', items, 0))));
                                                            }
                                                            J$.X1(16721, J$.M(16713, J$.R(16697, 'items', items, 0), 'push', 0)(J$.R(16705, 'doc', doc, 0)));
                                                            if (J$.X1(24089, J$.C(1032, J$.B(730, '>', J$.M(16737, J$.R(16729, 'self', self, 0), 'bufferedCount', 0)(), J$.T(16745, 0, 22, false), 0)))) {
                                                                var docs = J$.X1(16793, J$.W(16785, 'docs', J$.M(16777, J$.R(16753, 'self', self, 0), 'readBufferedDocuments', 0)(J$.M(16769, J$.R(16761, 'self', self, 0), 'bufferedCount', 0)()), docs, 1));
                                                                if (J$.X1(24081, J$.C(1024, J$.C(1016, J$.G(16817, J$.G(16809, J$.R(16801, 'self', self, 0), 's', 0), 'transforms', 0)) ? J$.B(746, '==', J$.U(738, 'typeof', J$.G(16849, J$.G(16841, J$.G(16833, J$.R(16825, 'self', self, 0), 's', 0), 'transforms', 0), 'doc', 0)), J$.T(16857, 'function', 21, false), 0) : J$._()))) {
                                                                    J$.X1(16921, docs = J$.W(16913, 'docs', J$.M(16905, J$.R(16865, 'docs', docs, 0), 'map', 0)(J$.G(16897, J$.G(16889, J$.G(16881, J$.R(16873, 'self', self, 0), 's', 0), 'transforms', 0), 'doc', 0)), docs, 0));
                                                                }
                                                                J$.X1(16961, items = J$.W(16953, 'items', J$.M(16945, J$.R(16929, 'items', items, 0), 'concat', 0)(J$.R(16937, 'docs', docs, 0)), items, 0));
                                                            }
                                                            J$.X1(16985, J$.F(16977, J$.R(16969, 'fetchDocs', fetchDocs, 0), 0)());
                                                        } catch (J$e) {
                                                            J$.Ex(24097, J$e);
                                                        } finally {
                                                            if (J$.Fr(24105))
                                                                continue jalangiLabel3572;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 16993)));
                                        } catch (J$e) {
                                            J$.Ex(24113, J$e);
                                        } finally {
                                            if (J$.Fr(24121))
                                                continue jalangiLabel3573;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17057), fetchDocs, 1));
                            J$.X1(17113, J$.F(17105, J$.R(17097, 'fetchDocs', fetchDocs, 0), 0)());
                        } catch (J$e) {
                            J$.Ex(24129, J$e);
                        } finally {
                            if (J$.Fr(24137))
                                continue jalangiLabel3574;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17121), toArray, 3));
            J$.X1(17241, J$.M(17233, J$.R(17193, 'define', define, 1), 'classMethod', 0)(J$.T(17201, 'toArray', 21, false), J$.T(17225, {
                callback: J$.T(17209, true, 23, false),
                promise: J$.T(17217, true, 23, false)
            }, 11, false)));
            J$.X1(17873, J$.P(17865, J$.G(17257, J$.R(17249, 'Cursor', Cursor, 1), 'prototype', 0), 'count', J$.T(17857, function (applySkipLimit, opts, callback) {
                jalangiLabel3577:
                    while (true) {
                        try {
                            J$.Fe(17809, arguments.callee, this, arguments);
                            arguments = J$.N(17817, 'arguments', arguments, 4);
                            applySkipLimit = J$.N(17825, 'applySkipLimit', applySkipLimit, 4);
                            opts = J$.N(17833, 'opts', opts, 4);
                            callback = J$.N(17841, 'callback', callback, 4);
                            J$.N(17849, 'self', self, 0);
                            var self = J$.X1(17281, J$.W(17273, 'self', J$.R(17265, 'this', this, 0), self, 1));
                            if (J$.X1(24145, J$.C(1040, J$.B(754, '==', J$.G(17313, J$.G(17305, J$.G(17297, J$.R(17289, 'self', self, 0), 's', 0), 'cmd', 0), 'query', 0), J$.T(17321, null, 25, false), 0))))
                                throw J$.X1(17377, J$.Th(17369, J$.M(17361, J$.R(17329, 'MongoError', MongoError, 1), 'create', 0)(J$.T(17353, {
                                message: J$.T(17337, 'count can only be used with find command', 21, false),
                                driver: J$.T(17345, true, 23, false)
                            }, 11, false))));
                            if (J$.X1(24153, J$.C(1048, J$.B(770, '==', J$.U(762, 'typeof', J$.R(17385, 'opts', opts, 0)), J$.T(17393, 'function', 21, false), 0))))
                                J$.X1(17441, (J$.X1(17433, callback = J$.W(17409, 'callback', J$.R(17401, 'opts', opts, 0), callback, 0)), opts = J$.W(17425, 'opts', J$.T(17417, {}, 11, false), opts, 0)));
                            J$.X1(17473, opts = J$.W(17465, 'opts', J$.C(1056, J$.R(17449, 'opts', opts, 0)) ? J$._() : J$.T(17457, {}, 11, false), opts, 0));
                            if (J$.X1(24161, J$.C(1064, J$.B(786, '==', J$.U(778, 'typeof', J$.R(17481, 'callback', callback, 0)), J$.T(17489, 'function', 21, false), 0))))
                                return J$.X1(17553, J$.Rt(17545, J$.F(17537, J$.R(17497, 'count', count, 1), 0)(J$.R(17505, 'self', self, 0), J$.R(17513, 'applySkipLimit', applySkipLimit, 0), J$.R(17521, 'opts', opts, 0), J$.R(17529, 'callback', callback, 0))));
                            return J$.X1(17801, J$.Rt(17793, J$.M(17785, J$.G(17569, J$.R(17561, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(17777, function (resolve, reject) {
                                jalangiLabel3576:
                                    while (true) {
                                        try {
                                            J$.Fe(17745, arguments.callee, this, arguments);
                                            arguments = J$.N(17753, 'arguments', arguments, 4);
                                            resolve = J$.N(17761, 'resolve', resolve, 4);
                                            reject = J$.N(17769, 'reject', reject, 4);
                                            J$.X1(17737, J$.F(17729, J$.R(17577, 'count', count, 1), 0)(J$.R(17585, 'self', self, 0), J$.R(17593, 'applySkipLimit', applySkipLimit, 0), J$.R(17601, 'opts', opts, 0), J$.T(17721, function (err, r) {
                                                jalangiLabel3575:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(17689, arguments.callee, this, arguments);
                                                            arguments = J$.N(17697, 'arguments', arguments, 4);
                                                            err = J$.N(17705, 'err', err, 4);
                                                            r = J$.N(17713, 'r', r, 4);
                                                            if (J$.X1(24169, J$.C(1072, J$.R(17609, 'err', err, 0))))
                                                                return J$.X1(17649, J$.Rt(17641, J$.F(17633, J$.R(17617, 'reject', reject, 0), 0)(J$.R(17625, 'err', err, 0))));
                                                            J$.X1(17681, J$.F(17673, J$.R(17657, 'resolve', resolve, 0), 0)(J$.R(17665, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(24177, J$e);
                                                        } finally {
                                                            if (J$.Fr(24185))
                                                                continue jalangiLabel3575;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 17689)));
                                        } catch (J$e) {
                                            J$.Ex(24193, J$e);
                                        } finally {
                                            if (J$.Fr(24201))
                                                continue jalangiLabel3576;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17745))));
                        } catch (J$e) {
                            J$.Ex(24209, J$e);
                        } finally {
                            if (J$.Fr(24217))
                                continue jalangiLabel3577;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17809), 0));
            var count = J$.X1(19513, J$.W(19505, 'count', J$.T(19497, function (self, applySkipLimit, opts, callback) {
                jalangiLabel3579:
                    while (true) {
                        try {
                            J$.Fe(19401, arguments.callee, this, arguments);
                            arguments = J$.N(19409, 'arguments', arguments, 4);
                            self = J$.N(19417, 'self', self, 4);
                            applySkipLimit = J$.N(19425, 'applySkipLimit', applySkipLimit, 4);
                            opts = J$.N(19433, 'opts', opts, 4);
                            callback = J$.N(19441, 'callback', callback, 4);
                            J$.N(19449, 'delimiter', delimiter, 0);
                            J$.N(19457, 'command', command, 0);
                            J$.N(19465, 'server', server, 0);
                            J$.N(19473, 'connection', connection, 0);
                            J$.N(19481, 'callbacks', callbacks, 0);
                            J$.N(19489, 'query', query, 0);
                            if (J$.X1(24225, J$.C(1080, J$.B(802, '==', J$.U(794, 'typeof', J$.R(17881, 'applySkipLimit', applySkipLimit, 0)), J$.T(17889, 'function', 21, false), 0)))) {
                                J$.X1(17913, callback = J$.W(17905, 'callback', J$.R(17897, 'applySkipLimit', applySkipLimit, 0), callback, 0));
                                J$.X1(17937, applySkipLimit = J$.W(17929, 'applySkipLimit', J$.T(17921, true, 23, false), applySkipLimit, 0));
                            }
                            if (J$.X1(24249, J$.C(1104, J$.R(17945, 'applySkipLimit', applySkipLimit, 0)))) {
                                if (J$.X1(24233, J$.C(1088, J$.B(818, '==', J$.U(810, 'typeof', J$.M(17961, J$.R(17953, 'self', self, 0), 'cursorSkip', 0)()), J$.T(17969, 'number', 21, false), 0))))
                                    J$.X1(18009, J$.P(18001, J$.R(17977, 'opts', opts, 0), 'skip', J$.M(17993, J$.R(17985, 'self', self, 0), 'cursorSkip', 0)(), 0));
                                if (J$.X1(24241, J$.C(1096, J$.B(834, '==', J$.U(826, 'typeof', J$.M(18025, J$.R(18017, 'self', self, 0), 'cursorLimit', 0)()), J$.T(18033, 'number', 21, false), 0))))
                                    J$.X1(18073, J$.P(18065, J$.R(18041, 'opts', opts, 0), 'limit', J$.M(18057, J$.R(18049, 'self', self, 0), 'cursorLimit', 0)(), 0));
                            }
                            var delimiter = J$.X1(18129, J$.W(18121, 'delimiter', J$.M(18113, J$.G(18097, J$.G(18089, J$.R(18081, 'self', self, 0), 's', 0), 'ns', 0), 'indexOf', 0)(J$.T(18105, '.', 21, false)), delimiter, 1));
                            var command = J$.X1(18233, J$.W(18225, 'command', J$.T(18217, {
                                'count': J$.M(18177, J$.G(18153, J$.G(18145, J$.R(18137, 'self', self, 0), 's', 0), 'ns', 0), 'substr', 0)(J$.B(842, '+', J$.R(18161, 'delimiter', delimiter, 0), J$.T(18169, 1, 22, false), 0)),
                                'query': J$.G(18209, J$.G(18201, J$.G(18193, J$.R(18185, 'self', self, 0), 's', 0), 'cmd', 0), 'query', 0)
                            }, 11, false), command, 1));
                            if (J$.X1(24265, J$.C(1120, J$.B(858, '==', J$.U(850, 'typeof', J$.G(18249, J$.R(18241, 'opts', opts, 0), 'maxTimeMS', 0)), J$.T(18257, 'number', 21, false), 0)))) {
                                J$.X1(18297, J$.P(18289, J$.R(18265, 'command', command, 0), 'maxTimeMS', J$.G(18281, J$.R(18273, 'opts', opts, 0), 'maxTimeMS', 0), 0));
                            } else if (J$.X1(24257, J$.C(1112, J$.B(874, '==', J$.U(866, 'typeof', J$.G(18321, J$.G(18313, J$.R(18305, 'self', self, 0), 's', 0), 'maxTimeMS', 0)), J$.T(18329, 'number', 21, false), 0)))) {
                                J$.X1(18377, J$.P(18369, J$.R(18337, 'command', command, 0), 'maxTimeMS', J$.G(18361, J$.G(18353, J$.R(18345, 'self', self, 0), 's', 0), 'maxTimeMS', 0), 0));
                            }
                            var server = J$.X1(18433, J$.W(18425, 'server', J$.M(18417, J$.G(18401, J$.G(18393, J$.R(18385, 'self', self, 0), 's', 0), 'topology', 0), 'getServer', 0)(J$.R(18409, 'opts', opts, 0)), server, 1));
                            var connection = J$.X1(18489, J$.W(18481, 'connection', J$.M(18473, J$.G(18457, J$.G(18449, J$.R(18441, 'self', self, 0), 's', 0), 'topology', 0), 'getConnection', 0)(J$.R(18465, 'opts', opts, 0)), connection, 1));
                            var callbacks = J$.X1(18521, J$.W(18513, 'callbacks', J$.M(18505, J$.R(18497, 'server', server, 0), 'getCallbacks', 0)(), callbacks, 1));
                            if (J$.X1(24273, J$.C(1128, J$.G(18537, J$.R(18529, 'opts', opts, 0), 'skip', 0))))
                                J$.X1(18577, J$.P(18569, J$.R(18545, 'command', command, 0), 'skip', J$.G(18561, J$.R(18553, 'opts', opts, 0), 'skip', 0), 0));
                            if (J$.X1(24281, J$.C(1136, J$.G(18593, J$.R(18585, 'opts', opts, 0), 'limit', 0))))
                                J$.X1(18633, J$.P(18625, J$.R(18601, 'command', command, 0), 'limit', J$.G(18617, J$.R(18609, 'opts', opts, 0), 'limit', 0), 0));
                            if (J$.X1(24289, J$.C(1144, J$.G(18665, J$.G(18657, J$.G(18649, J$.R(18641, 'self', self, 0), 's', 0), 'options', 0), 'hint', 0))))
                                J$.X1(18721, J$.P(18713, J$.R(18673, 'command', command, 0), 'hint', J$.G(18705, J$.G(18697, J$.G(18689, J$.R(18681, 'self', self, 0), 's', 0), 'options', 0), 'hint', 0), 0));
                            var query = J$.X1(18889, J$.W(18881, 'query', J$.F(18873, J$.R(18729, 'Query', Query, 1), 1)(J$.G(18753, J$.G(18745, J$.R(18737, 'self', self, 0), 's', 0), 'bson', 0), J$.F(18825, J$.R(18761, 'f', f, 1), 0)(J$.T(18769, '%s.$cmd', 21, false), J$.M(18817, J$.G(18793, J$.G(18785, J$.R(18777, 'self', self, 0), 's', 0), 'ns', 0), 'substr', 0)(J$.T(18801, 0, 22, false), J$.R(18809, 'delimiter', delimiter, 0))), J$.R(18833, 'command', command, 0), J$.T(18865, {
                                numberToSkip: J$.T(18841, 0, 22, false),
                                numberToReturn: J$.U(882, '-', J$.T(18849, 1, 22, false)),
                                checkKeys: J$.T(18857, false, 23, false)
                            }, 11, false)), query, 1));
                            J$.X1(19353, J$.M(19345, J$.R(18897, 'callbacks', callbacks, 0), 'register', 0)(J$.G(18913, J$.R(18905, 'query', query, 0), 'requestId', 0), J$.T(19337, function (err, result) {
                                jalangiLabel3578:
                                    while (true) {
                                        try {
                                            J$.Fe(19305, arguments.callee, this, arguments);
                                            arguments = J$.N(19313, 'arguments', arguments, 4);
                                            err = J$.N(19321, 'err', err, 4);
                                            result = J$.N(19329, 'result', result, 4);
                                            if (J$.X1(24297, J$.C(1152, J$.R(18921, 'err', err, 0))))
                                                return J$.X1(18969, J$.Rt(18961, J$.F(18953, J$.R(18929, 'handleCallback', handleCallback, 1), 0)(J$.R(18937, 'callback', callback, 0), J$.R(18945, 'err', err, 0))));
                                            if (J$.X1(24305, J$.C(1184, J$.C(1176, J$.B(890, '==', J$.G(18993, J$.G(18985, J$.R(18977, 'result', result, 0), 'documents', 0), 'length', 0), J$.T(19001, 1, 22, false), 0)) ? J$.C(1168, J$.C(1160, J$.G(19041, J$.G(19033, J$.G(19017, J$.R(19009, 'result', result, 0), 'documents', 0), J$.T(19025, 0, 22, false), 4), 'errmsg', 0)) ? J$._() : J$.G(19081, J$.G(19073, J$.G(19057, J$.R(19049, 'result', result, 0), 'documents', 0), J$.T(19065, 0, 22, false), 4), 'err', 0)) ? J$._() : J$.G(19129, J$.G(19113, J$.G(19097, J$.R(19089, 'result', result, 0), 'documents', 0), J$.T(19105, 0, 22, false), 4), J$.T(19121, '$err', 21, false), 4) : J$._()))) {
                                                return J$.X1(19217, J$.Rt(19209, J$.F(19201, J$.R(19137, 'handleCallback', handleCallback, 1), 0)(J$.R(19145, 'callback', callback, 0), J$.M(19193, J$.R(19153, 'MongoError', MongoError, 1), 'create', 0)(J$.G(19185, J$.G(19169, J$.R(19161, 'result', result, 0), 'documents', 0), J$.T(19177, 0, 22, false), 4)))));
                                            }
                                            J$.X1(19297, J$.F(19289, J$.R(19225, 'handleCallback', handleCallback, 1), 0)(J$.R(19233, 'callback', callback, 0), J$.T(19241, null, 25, false), J$.G(19281, J$.G(19273, J$.G(19257, J$.R(19249, 'result', result, 0), 'documents', 0), J$.T(19265, 0, 22, false), 4), 'n', 0)));
                                        } catch (J$e) {
                                            J$.Ex(24313, J$e);
                                        } finally {
                                            if (J$.Fr(24321))
                                                continue jalangiLabel3578;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19305)));
                            J$.X1(19393, J$.M(19385, J$.R(19361, 'connection', connection, 0), 'write', 0)(J$.M(19377, J$.R(19369, 'query', query, 0), 'toBin', 0)()));
                        } catch (J$e) {
                            J$.Ex(24329, J$e);
                        } finally {
                            if (J$.Fr(24337))
                                continue jalangiLabel3579;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19401), count, 3));
            J$.X1(19569, J$.M(19561, J$.R(19521, 'define', define, 1), 'classMethod', 0)(J$.T(19529, 'count', 21, false), J$.T(19553, {
                callback: J$.T(19537, true, 23, false),
                promise: J$.T(19545, true, 23, false)
            }, 11, false)));
            J$.X1(19913, J$.P(19905, J$.G(19585, J$.R(19577, 'Cursor', Cursor, 1), 'prototype', 0), 'close', J$.T(19897, function (callback) {
                jalangiLabel3581:
                    while (true) {
                        try {
                            J$.Fe(19873, arguments.callee, this, arguments);
                            arguments = J$.N(19881, 'arguments', arguments, 4);
                            callback = J$.N(19889, 'callback', callback, 4);
                            J$.X1(19633, J$.P(19625, J$.G(19601, J$.R(19593, 'this', this, 0), 's', 0), 'state', J$.G(19617, J$.R(19609, 'Cursor', Cursor, 1), 'CLOSED', 0), 0));
                            J$.X1(19657, J$.M(19649, J$.R(19641, 'this', this, 0), 'kill', 0)());
                            J$.X1(19689, J$.M(19681, J$.R(19665, 'this', this, 0), 'emit', 0)(J$.T(19673, 'close', 21, false)));
                            if (J$.X1(24345, J$.C(1192, J$.B(906, '==', J$.U(898, 'typeof', J$.R(19697, 'callback', callback, 0)), J$.T(19705, 'function', 21, false), 0))))
                                return J$.X1(19761, J$.Rt(19753, J$.F(19745, J$.R(19713, 'handleCallback', handleCallback, 1), 0)(J$.R(19721, 'callback', callback, 0), J$.T(19729, null, 25, false), J$.R(19737, 'this', this, 0))));
                            return J$.X1(19865, J$.Rt(19857, J$.M(19849, J$.G(19777, J$.R(19769, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(19841, function (resolve, reject) {
                                jalangiLabel3580:
                                    while (true) {
                                        try {
                                            J$.Fe(19809, arguments.callee, this, arguments);
                                            arguments = J$.N(19817, 'arguments', arguments, 4);
                                            resolve = J$.N(19825, 'resolve', resolve, 4);
                                            reject = J$.N(19833, 'reject', reject, 4);
                                            J$.X1(19801, J$.F(19793, J$.R(19785, 'resolve', resolve, 0), 0)());
                                        } catch (J$e) {
                                            J$.Ex(24353, J$e);
                                        } finally {
                                            if (J$.Fr(24361))
                                                continue jalangiLabel3580;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19809))));
                        } catch (J$e) {
                            J$.Ex(24369, J$e);
                        } finally {
                            if (J$.Fr(24377))
                                continue jalangiLabel3581;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19873), 0));
            J$.X1(19969, J$.M(19961, J$.R(19921, 'define', define, 1), 'classMethod', 0)(J$.T(19929, 'close', 21, false), J$.T(19953, {
                callback: J$.T(19937, true, 23, false),
                promise: J$.T(19945, true, 23, false)
            }, 11, false)));
            J$.X1(20105, J$.P(20097, J$.G(19985, J$.R(19977, 'Cursor', Cursor, 1), 'prototype', 0), 'map', J$.T(20089, function (transform) {
                jalangiLabel3582:
                    while (true) {
                        try {
                            J$.Fe(20065, arguments.callee, this, arguments);
                            arguments = J$.N(20073, 'arguments', arguments, 4);
                            transform = J$.N(20081, 'transform', transform, 4);
                            J$.X1(20033, J$.P(20025, J$.G(20001, J$.R(19993, 'this', this, 0), 'cursorState', 0), 'transforms', J$.T(20017, {
                                doc: J$.R(20009, 'transform', transform, 0)
                            }, 11, false), 0));
                            return J$.X1(20057, J$.Rt(20049, J$.R(20041, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24385, J$e);
                        } finally {
                            if (J$.Fr(24393))
                                continue jalangiLabel3582;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20065), 0));
            J$.X1(20177, J$.M(20169, J$.R(20113, 'define', define, 1), 'classMethod', 0)(J$.T(20121, 'map', 21, false), J$.T(20161, {
                callback: J$.T(20129, false, 23, false),
                promise: J$.T(20137, false, 23, false),
                returns: J$.T(20153, [J$.R(20145, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(20265, J$.P(20257, J$.G(20193, J$.R(20185, 'Cursor', Cursor, 1), 'prototype', 0), 'isClosed', J$.T(20249, function () {
                jalangiLabel3583:
                    while (true) {
                        try {
                            J$.Fe(20233, arguments.callee, this, arguments);
                            arguments = J$.N(20241, 'arguments', arguments, 4);
                            return J$.X1(20225, J$.Rt(20217, J$.M(20209, J$.R(20201, 'this', this, 0), 'isDead', 0)()));
                        } catch (J$e) {
                            J$.Ex(24401, J$e);
                        } finally {
                            if (J$.Fr(24409))
                                continue jalangiLabel3583;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20233), 0));
            J$.X1(20337, J$.M(20329, J$.R(20273, 'define', define, 1), 'classMethod', 0)(J$.T(20281, 'isClosed', 21, false), J$.T(20321, {
                callback: J$.T(20289, false, 23, false),
                promise: J$.T(20297, false, 23, false),
                returns: J$.T(20313, [J$.R(20305, 'Boolean', Boolean, 2)], 10, false)
            }, 11, false)));
            J$.X1(20497, J$.P(20489, J$.G(20353, J$.R(20345, 'Cursor', Cursor, 1), 'prototype', 0), 'destroy', J$.T(20481, function (err) {
                jalangiLabel3584:
                    while (true) {
                        try {
                            J$.Fe(20457, arguments.callee, this, arguments);
                            arguments = J$.N(20465, 'arguments', arguments, 4);
                            err = J$.N(20473, 'err', err, 4);
                            J$.X1(20377, J$.M(20369, J$.R(20361, 'this', this, 0), 'pause', 0)());
                            J$.X1(20401, J$.M(20393, J$.R(20385, 'this', this, 0), 'close', 0)());
                            if (J$.X1(24417, J$.C(1200, J$.R(20409, 'err', err, 0))))
                                J$.X1(20449, J$.M(20441, J$.R(20417, 'this', this, 0), 'emit', 0)(J$.T(20425, 'error', 21, false), J$.R(20433, 'err', err, 0)));
                        } catch (J$e) {
                            J$.Ex(24425, J$e);
                        } finally {
                            if (J$.Fr(24433))
                                continue jalangiLabel3584;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20457), 0));
            J$.X1(20553, J$.M(20545, J$.R(20505, 'define', define, 1), 'classMethod', 0)(J$.T(20513, 'destroy', 21, false), J$.T(20537, {
                callback: J$.T(20521, false, 23, false),
                promise: J$.T(20529, false, 23, false)
            }, 11, false)));
            J$.X1(20689, J$.P(20681, J$.G(20569, J$.R(20561, 'Cursor', Cursor, 1), 'prototype', 0), 'stream', J$.T(20673, function (options) {
                jalangiLabel3585:
                    while (true) {
                        try {
                            J$.Fe(20649, arguments.callee, this, arguments);
                            arguments = J$.N(20657, 'arguments', arguments, 4);
                            options = J$.N(20665, 'options', options, 4);
                            J$.X1(20617, J$.P(20609, J$.G(20585, J$.R(20577, 'this', this, 0), 's', 0), 'streamOptions', J$.C(1208, J$.R(20593, 'options', options, 0)) ? J$._() : J$.T(20601, {}, 11, false), 0));
                            return J$.X1(20641, J$.Rt(20633, J$.R(20625, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(24441, J$e);
                        } finally {
                            if (J$.Fr(24449))
                                continue jalangiLabel3585;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 20649), 0));
            J$.X1(20761, J$.M(20753, J$.R(20697, 'define', define, 1), 'classMethod', 0)(J$.T(20705, 'stream', 21, false), J$.T(20745, {
                callback: J$.T(20713, false, 23, false),
                promise: J$.T(20721, false, 23, false),
                returns: J$.T(20737, [J$.R(20729, 'Cursor', Cursor, 1)], 10, false)
            }, 11, false)));
            J$.X1(21185, J$.P(21177, J$.G(20777, J$.R(20769, 'Cursor', Cursor, 1), 'prototype', 0), 'explain', J$.T(21169, function (callback) {
                jalangiLabel3588:
                    while (true) {
                        try {
                            J$.Fe(21137, arguments.callee, this, arguments);
                            arguments = J$.N(21145, 'arguments', arguments, 4);
                            callback = J$.N(21153, 'callback', callback, 4);
                            J$.N(21161, 'self', self, 0);
                            var self = J$.X1(20801, J$.W(20793, 'self', J$.R(20785, 'this', this, 0), self, 1));
                            J$.X1(20849, J$.P(20841, J$.G(20825, J$.G(20817, J$.R(20809, 'this', this, 0), 's', 0), 'cmd', 0), 'explain', J$.T(20833, true, 23, false), 0));
                            if (J$.X1(24457, J$.C(1216, J$.B(922, '==', J$.U(914, 'typeof', J$.R(20857, 'callback', callback, 0)), J$.T(20865, 'function', 21, false), 0))))
                                return J$.X1(20905, J$.Rt(20897, J$.M(20889, J$.R(20873, 'this', this, 0), '_next', 0)(J$.R(20881, 'callback', callback, 0))));
                            return J$.X1(21129, J$.Rt(21121, J$.M(21113, J$.G(20921, J$.R(20913, 'this', this, 0), 's', 0), 'promiseLibrary', 2)(J$.T(21105, function (resolve, reject) {
                                jalangiLabel3587:
                                    while (true) {
                                        try {
                                            J$.Fe(21073, arguments.callee, this, arguments);
                                            arguments = J$.N(21081, 'arguments', arguments, 4);
                                            resolve = J$.N(21089, 'resolve', resolve, 4);
                                            reject = J$.N(21097, 'reject', reject, 4);
                                            J$.X1(21065, J$.M(21057, J$.R(20929, 'self', self, 0), '_next', 0)(J$.T(21049, function (err, r) {
                                                jalangiLabel3586:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(21017, arguments.callee, this, arguments);
                                                            arguments = J$.N(21025, 'arguments', arguments, 4);
                                                            err = J$.N(21033, 'err', err, 4);
                                                            r = J$.N(21041, 'r', r, 4);
                                                            if (J$.X1(24465, J$.C(1224, J$.R(20937, 'err', err, 0))))
                                                                return J$.X1(20977, J$.Rt(20969, J$.F(20961, J$.R(20945, 'reject', reject, 0), 0)(J$.R(20953, 'err', err, 0))));
                                                            J$.X1(21009, J$.F(21001, J$.R(20985, 'resolve', resolve, 0), 0)(J$.R(20993, 'r', r, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(24473, J$e);
                                                        } finally {
                                                            if (J$.Fr(24481))
                                                                continue jalangiLabel3586;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 21017)));
                                        } catch (J$e) {
                                            J$.Ex(24489, J$e);
                                        } finally {
                                            if (J$.Fr(24497))
                                                continue jalangiLabel3587;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 21073))));
                        } catch (J$e) {
                            J$.Ex(24505, J$e);
                        } finally {
                            if (J$.Fr(24513))
                                continue jalangiLabel3588;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 21137), 0));
            J$.X1(21241, J$.M(21233, J$.R(21193, 'define', define, 1), 'classMethod', 0)(J$.T(21201, 'explain', 21, false), J$.T(21225, {
                callback: J$.T(21209, true, 23, false),
                promise: J$.T(21217, true, 23, false)
            }, 11, false)));
            J$.X1(22033, J$.P(22025, J$.G(21257, J$.R(21249, 'Cursor', Cursor, 1), 'prototype', 0), '_read', J$.T(22017, function (n) {
                jalangiLabel3590:
                    while (true) {
                        try {
                            J$.Fe(21985, arguments.callee, this, arguments);
                            arguments = J$.N(21993, 'arguments', arguments, 4);
                            n = J$.N(22001, 'n', n, 4);
                            J$.N(22009, 'self', self, 0);
                            var self = J$.X1(21281, J$.W(21273, 'self', J$.R(21265, 'this', this, 0), self, 1));
                            if (J$.X1(24521, J$.C(1240, J$.C(1232, J$.B(930, '==', J$.G(21305, J$.G(21297, J$.R(21289, 'self', self, 0), 's', 0), 'state', 0), J$.G(21321, J$.R(21313, 'Cursor', Cursor, 1), 'CLOSED', 0), 0)) ? J$._() : J$.M(21337, J$.R(21329, 'self', self, 0), 'isDead', 0)()))) {
                                return J$.X1(21377, J$.Rt(21369, J$.M(21361, J$.R(21345, 'self', self, 0), 'push', 0)(J$.T(21353, null, 25, false))));
                            }
                            J$.X1(21977, J$.M(21969, J$.R(21385, 'self', self, 0), 'nextObject', 0)(J$.T(21961, function (err, result) {
                                jalangiLabel3589:
                                    while (true) {
                                        try {
                                            J$.Fe(21929, arguments.callee, this, arguments);
                                            arguments = J$.N(21937, 'arguments', arguments, 4);
                                            err = J$.N(21945, 'err', err, 4);
                                            result = J$.N(21953, 'result', result, 4);
                                            if (J$.X1(24545, J$.C(1272, J$.R(21393, 'err', err, 0)))) {
                                                if (J$.X1(24529, J$.C(1248, J$.U(938, '!', J$.M(21409, J$.R(21401, 'self', self, 0), 'isDead', 0)()))))
                                                    J$.X1(21433, J$.M(21425, J$.R(21417, 'self', self, 0), 'close', 0)());
                                                if (J$.X1(24537, J$.C(1264, J$.C(1256, J$.M(21457, J$.R(21441, 'self', self, 0), 'listeners', 0)(J$.T(21449, 'error', 21, false))) ? J$.B(946, '>', J$.G(21489, J$.M(21481, J$.R(21465, 'self', self, 0), 'listeners', 0)(J$.T(21473, 'error', 21, false)), 'length', 0), J$.T(21497, 0, 22, false), 0) : J$._()))) {
                                                    J$.X1(21537, J$.M(21529, J$.R(21505, 'self', self, 0), 'emit', 0)(J$.T(21513, 'error', 21, false), J$.R(21521, 'err', err, 0)));
                                                }
                                                J$.X1(21569, J$.M(21561, J$.R(21545, 'self', self, 0), 'emit', 0)(J$.T(21553, 'end', 21, false)));
                                                return J$.X1(21609, J$.Rt(21601, J$.M(21593, J$.R(21577, 'self', self, 0), 'emit', 0)(J$.T(21585, 'finish', 21, false))));
                                            }
                                            if (J$.X1(24553, J$.C(1288, J$.C(1280, J$.B(962, '==', J$.U(954, 'typeof', J$.G(21641, J$.G(21633, J$.G(21625, J$.R(21617, 'self', self, 0), 's', 0), 'streamOptions', 0), 'transform', 0)), J$.T(21649, 'function', 21, false), 0)) ? J$.B(970, '!=', J$.R(21657, 'result', result, 0), J$.T(21665, null, 25, false), 0) : J$._()))) {
                                                return J$.X1(21737, J$.Rt(21729, J$.M(21721, J$.R(21673, 'self', self, 0), 'push', 0)(J$.M(21713, J$.G(21697, J$.G(21689, J$.R(21681, 'self', self, 0), 's', 0), 'streamOptions', 0), 'transform', 0)(J$.R(21705, 'result', result, 0)))));
                                            }
                                            if (J$.X1(24561, J$.C(1312, J$.C(1304, J$.C(1296, J$.G(21761, J$.G(21753, J$.R(21745, 'self', self, 0), 'cursorState', 0), 'transforms', 0)) ? J$.B(986, '==', J$.U(978, 'typeof', J$.G(21793, J$.G(21785, J$.G(21777, J$.R(21769, 'self', self, 0), 'cursorState', 0), 'transforms', 0), 'doc', 0)), J$.T(21801, 'function', 21, false), 0) : J$._()) ? J$.B(994, '!=', J$.R(21809, 'result', result, 0), J$.T(21817, null, 25, false), 0) : J$._()))) {
                                                return J$.X1(21889, J$.Rt(21881, J$.M(21873, J$.R(21825, 'self', self, 0), 'push', 0)(J$.M(21865, J$.G(21849, J$.G(21841, J$.R(21833, 'self', self, 0), 'cursorState', 0), 'transforms', 0), 'doc', 0)(J$.R(21857, 'result', result, 0)))));
                                            }
                                            J$.X1(21921, J$.M(21913, J$.R(21897, 'self', self, 0), 'push', 0)(J$.R(21905, 'result', result, 0)));
                                        } catch (J$e) {
                                            J$.Ex(24569, J$e);
                                        } finally {
                                            if (J$.Fr(24577))
                                                continue jalangiLabel3589;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 21929)));
                        } catch (J$e) {
                            J$.Ex(24585, J$e);
                        } finally {
                            if (J$.Fr(24593))
                                continue jalangiLabel3590;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 21985), 0));
            J$.X1(22433, J$.M(22425, J$.R(22041, 'Object', Object, 2), 'defineProperty', 0)(J$.G(22057, J$.R(22049, 'Cursor', Cursor, 1), 'prototype', 0), J$.T(22065, 'namespace', 21, false), J$.T(22417, {
                enumerable: J$.T(22073, true, 23, false),
                get: J$.T(22409, function () {
                    jalangiLabel3591:
                        while (true) {
                            try {
                                J$.Fe(22377, arguments.callee, this, arguments);
                                arguments = J$.N(22385, 'arguments', arguments, 4);
                                J$.N(22393, 'ns', ns, 0);
                                J$.N(22401, 'firstDot', firstDot, 0);
                                if (J$.X1(24601, J$.C(1328, J$.C(1320, J$.U(1002, '!', J$.R(22081, 'this', this, 0))) ? J$._() : J$.U(1010, '!', J$.G(22097, J$.R(22089, 'this', this, 0), 's', 0))))) {
                                    return J$.X1(22121, J$.Rt(22113, J$.T(22105, null, 25, false)));
                                }
                                var ns = J$.X1(22169, J$.W(22161, 'ns', J$.C(1336, J$.G(22145, J$.G(22137, J$.R(22129, 'this', this, 0), 's', 0), 'ns', 0)) ? J$._() : J$.T(22153, '', 21, false), ns, 1));
                                var firstDot = J$.X1(22209, J$.W(22201, 'firstDot', J$.M(22193, J$.R(22177, 'ns', ns, 0), 'indexOf', 0)(J$.T(22185, '.', 21, false)), firstDot, 1));
                                if (J$.X1(24609, J$.C(1344, J$.B(1018, '<', J$.R(22217, 'firstDot', firstDot, 0), J$.T(22225, 0, 22, false), 0)))) {
                                    return J$.X1(22281, J$.Rt(22273, J$.T(22265, {
                                        database: J$.G(22249, J$.G(22241, J$.R(22233, 'this', this, 0), 's', 0), 'ns', 0),
                                        collection: J$.T(22257, '', 21, false)
                                    }, 11, false)));
                                }
                                return J$.X1(22369, J$.Rt(22361, J$.T(22353, {
                                    database: J$.M(22313, J$.R(22289, 'ns', ns, 0), 'substr', 0)(J$.T(22297, 0, 22, false), J$.R(22305, 'firstDot', firstDot, 0)),
                                    collection: J$.M(22345, J$.R(22321, 'ns', ns, 0), 'substr', 0)(J$.B(1026, '+', J$.R(22329, 'firstDot', firstDot, 0), J$.T(22337, 1, 22, false), 0))
                                }, 11, false)));
                            } catch (J$e) {
                                J$.Ex(24617, J$e);
                            } finally {
                                if (J$.Fr(24625))
                                    continue jalangiLabel3591;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 22377)
            }, 11, false)));
            J$.X1(22465, J$.P(22457, J$.R(22441, 'Cursor', Cursor, 1), 'INIT', J$.T(22449, 0, 22, false), 0));
            J$.X1(22497, J$.P(22489, J$.R(22473, 'Cursor', Cursor, 1), 'OPEN', J$.T(22481, 1, 22, false), 0));
            J$.X1(22529, J$.P(22521, J$.R(22505, 'Cursor', Cursor, 1), 'CLOSED', J$.T(22513, 2, 22, false), 0));
            J$.X1(22561, J$.P(22553, J$.R(22537, 'Cursor', Cursor, 1), 'GET_MORE', J$.T(22545, 3, 22, false), 0));
            J$.X1(22593, J$.P(22585, J$.R(22569, 'module', module, 2), 'exports', J$.R(22577, 'Cursor', Cursor, 1), 0));
        } catch (J$e) {
            J$.Ex(24633, J$e);
        } finally {
            if (J$.Sr(24641)) {
                J$.L();
                continue jalangiLabel3592;
            } else {
                J$.L();
                break jalangiLabel3592;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
