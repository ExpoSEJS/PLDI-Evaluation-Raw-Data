J$.iids = {"9":[1,20,1,27],"10":[23,26,23,37],"17":[1,28,1,32],"18":[46,30,46,41],"25":[1,20,1,33],"26":[70,30,70,41],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,5,4,12],"89":[4,24,4,31],"97":[4,32,4,40],"105":[4,24,4,41],"113":[4,5,4,41],"121":[4,5,4,42],"129":[5,5,5,12],"137":[5,26,5,33],"145":[5,34,5,42],"153":[5,26,5,43],"161":[5,5,5,43],"169":[5,5,5,44],"177":[6,3,7,2],"185":[9,5,9,22],"193":[10,5,10,15],"201":[11,5,11,13],"209":[12,5,12,12],"217":[13,5,13,15],"225":[14,5,14,15],"233":[15,5,15,16],"241":[16,5,16,16],"249":[17,5,17,17],"257":[18,5,18,15],"265":[19,5,19,15],"273":[20,5,20,18],"281":[21,5,21,13],"289":[8,1,22,2],"297":[23,18,23,25],"305":[23,26,23,30],"313":[23,33,23,37],"321":[23,18,23,38],"329":[23,18,23,38],"337":[23,18,23,38],"345":[24,19,24,25],"353":[25,9,25,16],"361":[25,17,25,18],"369":[25,22,25,28],"377":[25,29,25,30],"385":[25,22,25,31],"393":[25,9,25,31],"401":[25,9,25,32],"409":[24,19,24,25],"417":[24,5,26,6],"425":[24,5,26,6],"433":[22,11,27,2],"441":[22,11,27,2],"449":[22,11,27,2],"457":[22,11,27,2],"465":[22,11,27,2],"473":[22,11,27,2],"481":[8,1,27,3],"483":[8,1,22,10],"489":[8,1,27,4],"497":[28,1,28,8],"505":[29,19,29,21],"513":[29,19,29,21],"521":[29,19,29,21],"529":[31,9,31,26],"537":[32,9,32,19],"545":[33,9,33,17],"553":[34,9,34,16],"561":[35,9,35,19],"569":[36,9,36,19],"577":[37,9,37,20],"585":[38,9,38,20],"593":[39,9,39,21],"601":[40,9,40,19],"609":[41,9,41,19],"617":[42,9,42,22],"625":[43,9,43,17],"633":[44,9,44,19],"641":[30,5,45,6],"649":[46,22,46,29],"657":[46,30,46,34],"665":[46,37,46,41],"673":[46,22,46,42],"681":[46,22,46,42],"689":[46,22,46,42],"697":[47,23,47,29],"705":[48,13,48,20],"713":[48,21,48,22],"721":[48,26,48,32],"729":[48,33,48,34],"737":[48,26,48,35],"745":[48,13,48,35],"753":[48,13,48,36],"761":[47,23,47,29],"769":[47,9,49,10],"777":[47,9,49,10],"785":[45,15,50,6],"793":[45,15,50,6],"801":[45,15,50,6],"809":[45,15,50,6],"817":[45,15,50,6],"825":[45,15,50,6],"833":[30,5,50,7],"835":[30,5,45,14],"841":[30,5,50,8],"849":[51,12,51,19],"857":[51,12,51,19],"865":[51,5,51,20],"873":[28,16,52,2],"881":[28,16,52,2],"889":[28,16,52,2],"897":[28,16,52,2],"905":[28,1,52,2],"913":[28,1,52,3],"921":[53,1,53,8],"929":[54,19,54,21],"937":[54,19,54,21],"945":[54,19,54,21],"953":[56,9,56,26],"961":[57,9,57,19],"969":[58,9,58,17],"977":[59,9,59,16],"985":[60,9,60,19],"993":[61,9,61,19],"1001":[62,9,62,20],"1009":[63,9,63,20],"1017":[64,9,64,21],"1025":[65,9,65,19],"1033":[66,9,66,19],"1041":[67,9,67,22],"1049":[68,9,68,17],"1057":[55,5,69,6],"1065":[70,22,70,29],"1073":[70,30,70,34],"1081":[70,37,70,41],"1089":[70,22,70,42],"1097":[70,22,70,42],"1105":[70,22,70,42],"1113":[71,23,71,29],"1121":[72,13,72,20],"1129":[72,21,72,22],"1137":[72,26,72,32],"1145":[72,33,72,34],"1153":[72,26,72,35],"1161":[72,13,72,35],"1169":[72,13,72,36],"1177":[71,23,71,29],"1185":[71,9,73,10],"1193":[71,9,73,10],"1201":[69,15,74,6],"1209":[69,15,74,6],"1217":[69,15,74,6],"1225":[69,15,74,6],"1233":[69,15,74,6],"1241":[69,15,74,6],"1249":[55,5,74,7],"1251":[55,5,69,14],"1257":[55,5,74,8],"1265":[76,9,76,16],"1273":[76,17,76,23],"1281":[76,27,76,34],"1289":[76,35,76,43],"1297":[76,27,76,44],"1305":[76,9,76,44],"1313":[76,9,76,45],"1321":[78,16,78,23],"1329":[78,16,78,30],"1331":[78,16,78,28],"1337":[78,16,78,30],"1345":[78,9,78,31],"1353":[77,7,79,6],"1361":[80,12,80,19],"1369":[80,12,80,19],"1377":[80,5,80,20],"1385":[53,18,81,2],"1393":[53,18,81,2],"1401":[53,18,81,2],"1409":[53,18,81,2],"1417":[53,1,81,2],"1425":[53,1,81,3],"1433":[1,1,81,3],"1441":[1,1,81,3],"1449":[1,1,81,3],"1457":[22,11,27,2],"1465":[22,11,27,2],"1473":[45,15,50,6],"1481":[45,15,50,6],"1489":[28,16,52,2],"1497":[28,16,52,2],"1505":[69,15,74,6],"1513":[69,15,74,6],"1521":[53,18,81,2],"1529":[53,18,81,2],"1537":[1,1,81,3],"1545":[1,1,81,3],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/index_jalangi_.js","code":"try {\n  exports.BSONPure = require('./bson');\n  exports.BSONNative = require('./bson');\n} catch(err) {\n}\n\n[ './binary_parser'\n  , './binary'\n  , './code'\n  , './map'\n  , './db_ref'\n  , './double'\n  , './max_key'\n  , './min_key'\n  , './objectid'\n  , './regexp'\n  , './symbol'\n  , './timestamp'\n  , './long'].forEach(function (path) {\n  \tvar module = require('./' + path);\n  \tfor (var i in module) {\n  \t\texports[i] = module[i];\n    }\n});\n\n// Exports all the classes for the PURE JS BSON Parser\nexports.pure = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './map'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './regexp'\n    , './symbol'\n    , './timestamp'\n    , './long'\n    , '././bson'].forEach(function (path) {\n    \tvar module = require('./' + path);\n    \tfor (var i in module) {\n    \t\tclasses[i] = module[i];\n      }\n  });\n  // Return classes list\n  return classes;\n}\n\n// Exports all the classes for the NATIVE JS BSON Parser\nexports.native = function() {\n  var classes = {};\n  // Map all the classes\n  [ './binary_parser'\n    , './binary'\n    , './code'\n    , './map'\n    , './db_ref'\n    , './double'\n    , './max_key'\n    , './min_key'\n    , './objectid'\n    , './regexp'\n    , './symbol'\n    , './timestamp'\n    , './long'\n  ].forEach(function (path) {\n      var module = require('./' + path);\n      for (var i in module) {\n        classes[i] = module[i];\n      }\n  });\n\n  // Catch error and return no classes found\n  try {\n    classes['BSON'] = require('./bson');\n  } catch(err) {\n    return exports.pure();\n  }\n\n  // Return classes list\n  return classes;\n}\n"};
jalangiLabel2786:
    while (true) {
        try {
            J$.Se(1433, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/index.js');
            J$.N(1441, '__secret__S$', __secret__S$, 0);
            J$.N(1449, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            try {
                J$.X1(121, J$.P(113, J$.R(81, 'exports', exports, 2), 'BSONPure', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, './bson', 21, false)), 0));
                J$.X1(169, J$.P(161, J$.R(129, 'exports', exports, 2), 'BSONNative', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, './bson', 21, false)), 0));
            } catch (err) {
                err = J$.N(177, 'err', err, 1);
            }
            J$.X1(489, J$.M(481, J$.T(289, [
                J$.T(185, './binary_parser', 21, false),
                J$.T(193, './binary', 21, false),
                J$.T(201, './code', 21, false),
                J$.T(209, './map', 21, false),
                J$.T(217, './db_ref', 21, false),
                J$.T(225, './double', 21, false),
                J$.T(233, './max_key', 21, false),
                J$.T(241, './min_key', 21, false),
                J$.T(249, './objectid', 21, false),
                J$.T(257, './regexp', 21, false),
                J$.T(265, './symbol', 21, false),
                J$.T(273, './timestamp', 21, false),
                J$.T(281, './long', 21, false)
            ], 10, false), 'forEach', 0)(J$.T(473, function (path) {
                jalangiLabel2781:
                    while (true) {
                        try {
                            J$.Fe(433, arguments.callee, this, arguments);
                            arguments = J$.N(441, 'arguments', arguments, 4);
                            path = J$.N(449, 'path', path, 4);
                            J$.N(457, 'module', module, 0);
                            J$.N(465, 'i', i, 0);
                            var module = J$.X1(337, J$.W(329, 'module', J$.F(321, J$.R(297, 'require', require, 2), 0)(J$.B(10, '+', J$.T(305, './', 21, false), J$.R(313, 'path', path, 0), 0)), module, 1));
                            for (J$._tm_p in J$.H(409, J$.R(345, 'module', module, 0))) {
                                var i = J$.X1(425, J$.W(417, 'i', J$._tm_p, i, 1));
                                {
                                    {
                                        J$.X1(401, J$.P(393, J$.R(353, 'exports', exports, 2), J$.R(361, 'i', i, 0), J$.G(385, J$.R(369, 'module', module, 0), J$.R(377, 'i', i, 0), 4), 2));
                                    }
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(1457, J$e);
                        } finally {
                            if (J$.Fr(1465))
                                continue jalangiLabel2781;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 433)));
            J$.X1(913, J$.P(905, J$.R(497, 'exports', exports, 2), 'pure', J$.T(897, function () {
                jalangiLabel2783:
                    while (true) {
                        try {
                            J$.Fe(873, arguments.callee, this, arguments);
                            arguments = J$.N(881, 'arguments', arguments, 4);
                            J$.N(889, 'classes', classes, 0);
                            var classes = J$.X1(521, J$.W(513, 'classes', J$.T(505, {}, 11, false), classes, 1));
                            J$.X1(841, J$.M(833, J$.T(641, [
                                J$.T(529, './binary_parser', 21, false),
                                J$.T(537, './binary', 21, false),
                                J$.T(545, './code', 21, false),
                                J$.T(553, './map', 21, false),
                                J$.T(561, './db_ref', 21, false),
                                J$.T(569, './double', 21, false),
                                J$.T(577, './max_key', 21, false),
                                J$.T(585, './min_key', 21, false),
                                J$.T(593, './objectid', 21, false),
                                J$.T(601, './regexp', 21, false),
                                J$.T(609, './symbol', 21, false),
                                J$.T(617, './timestamp', 21, false),
                                J$.T(625, './long', 21, false),
                                J$.T(633, '././bson', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(825, function (path) {
                                jalangiLabel2782:
                                    while (true) {
                                        try {
                                            J$.Fe(785, arguments.callee, this, arguments);
                                            arguments = J$.N(793, 'arguments', arguments, 4);
                                            path = J$.N(801, 'path', path, 4);
                                            J$.N(809, 'module', module, 0);
                                            J$.N(817, 'i', i, 0);
                                            var module = J$.X1(689, J$.W(681, 'module', J$.F(673, J$.R(649, 'require', require, 2), 0)(J$.B(18, '+', J$.T(657, './', 21, false), J$.R(665, 'path', path, 0), 0)), module, 1));
                                            for (J$._tm_p in J$.H(761, J$.R(697, 'module', module, 0))) {
                                                var i = J$.X1(777, J$.W(769, 'i', J$._tm_p, i, 1));
                                                {
                                                    {
                                                        J$.X1(753, J$.P(745, J$.R(705, 'classes', classes, 0), J$.R(713, 'i', i, 0), J$.G(737, J$.R(721, 'module', module, 0), J$.R(729, 'i', i, 0), 4), 2));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1473, J$e);
                                        } finally {
                                            if (J$.Fr(1481))
                                                continue jalangiLabel2782;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 785)));
                            return J$.X1(865, J$.Rt(857, J$.R(849, 'classes', classes, 0)));
                        } catch (J$e) {
                            J$.Ex(1489, J$e);
                        } finally {
                            if (J$.Fr(1497))
                                continue jalangiLabel2783;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 873), 0));
            J$.X1(1425, J$.P(1417, J$.R(921, 'exports', exports, 2), 'native', J$.T(1409, function () {
                jalangiLabel2785:
                    while (true) {
                        try {
                            J$.Fe(1385, arguments.callee, this, arguments);
                            arguments = J$.N(1393, 'arguments', arguments, 4);
                            J$.N(1401, 'classes', classes, 0);
                            var classes = J$.X1(945, J$.W(937, 'classes', J$.T(929, {}, 11, false), classes, 1));
                            J$.X1(1257, J$.M(1249, J$.T(1057, [
                                J$.T(953, './binary_parser', 21, false),
                                J$.T(961, './binary', 21, false),
                                J$.T(969, './code', 21, false),
                                J$.T(977, './map', 21, false),
                                J$.T(985, './db_ref', 21, false),
                                J$.T(993, './double', 21, false),
                                J$.T(1001, './max_key', 21, false),
                                J$.T(1009, './min_key', 21, false),
                                J$.T(1017, './objectid', 21, false),
                                J$.T(1025, './regexp', 21, false),
                                J$.T(1033, './symbol', 21, false),
                                J$.T(1041, './timestamp', 21, false),
                                J$.T(1049, './long', 21, false)
                            ], 10, false), 'forEach', 0)(J$.T(1241, function (path) {
                                jalangiLabel2784:
                                    while (true) {
                                        try {
                                            J$.Fe(1201, arguments.callee, this, arguments);
                                            arguments = J$.N(1209, 'arguments', arguments, 4);
                                            path = J$.N(1217, 'path', path, 4);
                                            J$.N(1225, 'module', module, 0);
                                            J$.N(1233, 'i', i, 0);
                                            var module = J$.X1(1105, J$.W(1097, 'module', J$.F(1089, J$.R(1065, 'require', require, 2), 0)(J$.B(26, '+', J$.T(1073, './', 21, false), J$.R(1081, 'path', path, 0), 0)), module, 1));
                                            for (J$._tm_p in J$.H(1177, J$.R(1113, 'module', module, 0))) {
                                                var i = J$.X1(1193, J$.W(1185, 'i', J$._tm_p, i, 1));
                                                {
                                                    {
                                                        J$.X1(1169, J$.P(1161, J$.R(1121, 'classes', classes, 0), J$.R(1129, 'i', i, 0), J$.G(1153, J$.R(1137, 'module', module, 0), J$.R(1145, 'i', i, 0), 4), 2));
                                                    }
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1505, J$e);
                                        } finally {
                                            if (J$.Fr(1513))
                                                continue jalangiLabel2784;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1201)));
                            try {
                                J$.X1(1313, J$.P(1305, J$.R(1265, 'classes', classes, 0), J$.T(1273, 'BSON', 21, false), J$.F(1297, J$.R(1281, 'require', require, 2), 0)(J$.T(1289, './bson', 21, false)), 2));
                            } catch (err) {
                                err = J$.N(1353, 'err', err, 1);
                                return J$.X1(1345, J$.Rt(1337, J$.M(1329, J$.R(1321, 'exports', exports, 2), 'pure', 0)()));
                            }
                            return J$.X1(1377, J$.Rt(1369, J$.R(1361, 'classes', classes, 0)));
                        } catch (J$e) {
                            J$.Ex(1521, J$e);
                        } finally {
                            if (J$.Fr(1529))
                                continue jalangiLabel2785;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1385), 0));
        } catch (J$e) {
            J$.Ex(1537, J$e);
        } finally {
            if (J$.Sr(1545)) {
                J$.L();
                continue jalangiLabel2786;
            } else {
                J$.L();
                break jalangiLabel2786;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
