J$.iids = {"8":[4,9,4,34],"9":[1,20,1,27],"10":[4,11,4,33],"17":[1,28,1,32],"18":[4,9,4,34],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,11,4,15],"89":[4,27,4,33],"97":[5,20,5,26],"105":[5,16,5,28],"113":[5,16,5,28],"121":[5,9,5,29],"129":[6,5,6,9],"137":[6,22,6,30],"145":[6,5,6,30],"153":[6,5,6,31],"161":[3,1,7,2],"169":[3,1,7,2],"177":[8,1,8,7],"185":[8,18,8,24],"193":[8,1,8,24],"201":[8,1,8,25],"209":[9,1,9,7],"217":[9,1,9,15],"225":[9,25,9,31],"233":[9,1,9,31],"241":[9,1,9,32],"249":[1,1,9,32],"257":[1,1,9,32],"265":[1,1,9,32],"273":[3,1,7,2],"281":[1,1,9,32],"289":[4,5,5,29],"297":[3,1,7,2],"305":[3,1,7,2],"313":[1,1,9,32],"321":[1,1,9,32],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/max_key.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/max_key_jalangi_.js","code":"/**\n * A class representation of the BSON MaxKey type.\n *\n * @class\n * @return {MaxKey} A MaxKey instance\n */\nfunction MaxKey() {\n  if(!(this instanceof MaxKey)) return new MaxKey();\n  \n  this._bsontype = 'MaxKey';  \n}\n\nmodule.exports = MaxKey;\nmodule.exports.MaxKey = MaxKey;"};
jalangiLabel2961:
    while (true) {
        try {
            J$.Se(249, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/max_key_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/max_key.js');
            function MaxKey() {
                jalangiLabel2960:
                    while (true) {
                        try {
                            J$.Fe(161, arguments.callee, this, arguments);
                            arguments = J$.N(169, 'arguments', arguments, 4);
                            if (J$.X1(289, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(81, 'this', this, 0), J$.R(89, 'MaxKey', MaxKey, 1), 0)))))
                                return J$.X1(121, J$.Rt(113, J$.F(105, J$.R(97, 'MaxKey', MaxKey, 1), 1)()));
                            J$.X1(153, J$.P(145, J$.R(129, 'this', this, 0), '_bsontype', J$.T(137, 'MaxKey', 21, false), 0));
                        } catch (J$e) {
                            J$.Ex(297, J$e);
                        } finally {
                            if (J$.Fr(305))
                                continue jalangiLabel2960;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(257, '__secret__S$', __secret__S$, 0);
            J$.N(265, '__secret__traits__', __secret__traits__, 0);
            MaxKey = J$.N(281, 'MaxKey', J$.T(273, MaxKey, 12, false, 161), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(201, J$.P(193, J$.R(177, 'module', module, 2), 'exports', J$.R(185, 'MaxKey', MaxKey, 1), 0));
            J$.X1(241, J$.P(233, J$.G(217, J$.R(209, 'module', module, 2), 'exports', 0), 'MaxKey', J$.R(225, 'MaxKey', MaxKey, 1), 0));
        } catch (J$e) {
            J$.Ex(313, J$e);
        } finally {
            if (J$.Sr(321)) {
                J$.L();
                continue jalangiLabel2961;
            } else {
                J$.L();
                break jalangiLabel2961;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
