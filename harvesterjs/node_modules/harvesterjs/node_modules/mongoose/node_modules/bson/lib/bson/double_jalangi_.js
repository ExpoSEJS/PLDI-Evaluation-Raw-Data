J$.iids = {"8":[4,9,4,34],"9":[1,20,1,27],"10":[4,11,4,33],"17":[1,28,1,32],"18":[4,9,4,34],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,11,4,15],"89":[4,27,4,33],"97":[5,20,5,26],"105":[5,27,5,32],"113":[5,16,5,33],"121":[5,16,5,33],"129":[5,9,5,34],"137":[6,5,6,9],"145":[6,22,6,30],"153":[6,5,6,30],"161":[6,5,6,31],"169":[7,5,7,9],"177":[7,18,7,23],"185":[7,5,7,23],"193":[7,5,7,24],"201":[3,1,8,2],"209":[3,1,8,2],"217":[3,1,8,2],"225":[9,1,9,7],"233":[9,1,9,17],"241":[10,12,10,16],"249":[10,12,10,22],"257":[10,12,10,22],"265":[10,5,10,23],"273":[9,28,11,2],"281":[9,28,11,2],"289":[9,28,11,2],"297":[9,1,11,2],"305":[9,1,11,3],"313":[12,1,12,7],"321":[12,1,12,17],"329":[13,12,13,16],"337":[13,12,13,22],"345":[13,12,13,22],"353":[13,5,13,23],"361":[12,27,14,2],"369":[12,27,14,2],"377":[12,27,14,2],"385":[12,1,14,2],"393":[12,1,14,3],"401":[15,1,15,7],"409":[15,18,15,24],"417":[15,1,15,24],"425":[15,1,15,25],"433":[16,1,16,7],"441":[16,1,16,15],"449":[16,25,16,31],"457":[16,1,16,31],"465":[16,1,16,32],"473":[1,1,16,32],"481":[1,1,16,32],"489":[1,1,16,32],"497":[3,1,8,2],"505":[1,1,16,32],"513":[4,5,5,34],"521":[3,1,8,2],"529":[3,1,8,2],"537":[9,28,11,2],"545":[9,28,11,2],"553":[12,27,14,2],"561":[12,27,14,2],"569":[1,1,16,32],"577":[1,1,16,32],"nBranches":2,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/double.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/double_jalangi_.js","code":"/**\n * A class representation of the BSON Double type.\n *\n * @class\n * @param {number} value the number we want to represent as a double.\n * @return {Double}\n */\nfunction Double(value) {\n  if(!(this instanceof Double)) return new Double(value);\n  \n  this._bsontype = 'Double';\n  this.value = value;\n}\n\n/**\n * Access the number value.\n *\n * @method\n * @return {number} returns the wrapped double number.\n */\nDouble.prototype.valueOf = function() {\n  return this.value;\n};\n\n/**\n * @ignore\n */\nDouble.prototype.toJSON = function() {\n  return this.value;\n}\n\nmodule.exports = Double;\nmodule.exports.Double = Double;"};
jalangiLabel2852:
    while (true) {
        try {
            J$.Se(473, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/double_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/node_modules/bson/lib/bson/double.js');
            function Double(value) {
                jalangiLabel2849:
                    while (true) {
                        try {
                            J$.Fe(201, arguments.callee, this, arguments);
                            arguments = J$.N(209, 'arguments', arguments, 4);
                            value = J$.N(217, 'value', value, 4);
                            if (J$.X1(513, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(81, 'this', this, 0), J$.R(89, 'Double', Double, 1), 0)))))
                                return J$.X1(129, J$.Rt(121, J$.F(113, J$.R(97, 'Double', Double, 1), 1)(J$.R(105, 'value', value, 0))));
                            J$.X1(161, J$.P(153, J$.R(137, 'this', this, 0), '_bsontype', J$.T(145, 'Double', 21, false), 0));
                            J$.X1(193, J$.P(185, J$.R(169, 'this', this, 0), 'value', J$.R(177, 'value', value, 0), 0));
                        } catch (J$e) {
                            J$.Ex(521, J$e);
                        } finally {
                            if (J$.Fr(529))
                                continue jalangiLabel2849;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(481, '__secret__S$', __secret__S$, 0);
            J$.N(489, '__secret__traits__', __secret__traits__, 0);
            Double = J$.N(505, 'Double', J$.T(497, Double, 12, false, 201), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(305, J$.P(297, J$.G(233, J$.R(225, 'Double', Double, 1), 'prototype', 0), 'valueOf', J$.T(289, function () {
                jalangiLabel2850:
                    while (true) {
                        try {
                            J$.Fe(273, arguments.callee, this, arguments);
                            arguments = J$.N(281, 'arguments', arguments, 4);
                            return J$.X1(265, J$.Rt(257, J$.G(249, J$.R(241, 'this', this, 0), 'value', 0)));
                        } catch (J$e) {
                            J$.Ex(537, J$e);
                        } finally {
                            if (J$.Fr(545))
                                continue jalangiLabel2850;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 273), 0));
            J$.X1(393, J$.P(385, J$.G(321, J$.R(313, 'Double', Double, 1), 'prototype', 0), 'toJSON', J$.T(377, function () {
                jalangiLabel2851:
                    while (true) {
                        try {
                            J$.Fe(361, arguments.callee, this, arguments);
                            arguments = J$.N(369, 'arguments', arguments, 4);
                            return J$.X1(353, J$.Rt(345, J$.G(337, J$.R(329, 'this', this, 0), 'value', 0)));
                        } catch (J$e) {
                            J$.Ex(553, J$e);
                        } finally {
                            if (J$.Fr(561))
                                continue jalangiLabel2851;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 361), 0));
            J$.X1(425, J$.P(417, J$.R(401, 'module', module, 2), 'exports', J$.R(409, 'Double', Double, 1), 0));
            J$.X1(465, J$.P(457, J$.G(441, J$.R(433, 'module', module, 2), 'exports', 0), 'Double', J$.R(449, 'Double', Double, 1), 0));
        } catch (J$e) {
            J$.Ex(569, J$e);
        } finally {
            if (J$.Sr(577)) {
                J$.L();
                continue jalangiLabel2852;
            } else {
                J$.L();
                break jalangiLabel2852;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
