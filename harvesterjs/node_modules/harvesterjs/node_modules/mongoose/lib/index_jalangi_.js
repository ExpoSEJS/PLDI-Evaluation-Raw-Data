J$.iids = {"8":[19,9,19,30],"9":[1,20,1,27],"10":[19,9,19,30],"16":[28,9,28,13],"17":[1,28,1,32],"18":[28,9,28,13],"24":[36,17,36,38],"25":[1,20,1,33],"26":[33,30,33,32],"32":[36,17,36,38],"33":[1,20,1,33],"34":[33,9,33,32],"40":[33,9,33,32],"41":[1,20,1,33],"42":[35,52,35,72],"48":[49,13,49,80],"49":[2,26,2,38],"50":[81,17,81,24],"56":[51,20,51,46],"57":[2,26,2,45],"64":[51,51,51,104],"65":[2,26,2,45],"66":[87,21,87,34],"72":[51,20,51,105],"73":[2,26,2,45],"74":[87,9,87,34],"80":[51,20,51,105],"81":[3,1,3,13],"82":[91,37,91,61],"88":[49,13,49,80],"89":[3,1,3,14],"90":[91,35,91,62],"96":[48,9,48,25],"97":[4,14,4,21],"98":[94,23,94,40],"104":[61,9,61,76],"105":[4,22,4,32],"106":[94,9,94,40],"112":[61,9,61,76],"113":[4,14,4,33],"114":[105,9,105,33],"120":[72,17,72,22],"121":[4,48,4,55],"122":[115,30,115,53],"128":[76,21,76,23],"129":[4,56,4,70],"130":[116,13,116,37],"136":[74,17,74,20],"137":[4,48,4,71],"138":[116,41,116,75],"144":[81,17,81,32],"145":[4,87,4,94],"146":[127,9,127,16],"152":[80,17,80,19],"153":[4,95,4,110],"154":[129,13,129,20],"160":[87,9,87,34],"161":[4,87,4,111],"162":[133,11,133,44],"168":[91,9,91,62],"169":[4,122,4,129],"170":[133,9,133,45],"176":[91,9,91,62],"177":[4,130,4,149],"178":[135,9,135,20],"184":[94,9,94,40],"185":[4,122,4,150],"186":[140,9,140,18],"192":[99,9,99,45],"193":[4,160,4,167],"194":[143,9,143,32],"200":[99,9,99,45],"201":[4,168,4,177],"202":[153,46,153,51],"208":[106,13,106,19],"209":[4,160,4,178],"210":[153,53,153,56],"216":[105,9,105,33],"217":[4,188,4,195],"224":[115,9,115,53],"225":[4,196,4,205],"226":[153,53,153,56],"232":[116,13,116,75],"233":[4,188,4,206],"234":[168,26,168,48],"240":[116,13,116,75],"241":[4,216,4,223],"242":[169,26,169,48],"248":[119,13,119,23],"249":[4,224,4,233],"256":[115,9,115,53],"257":[4,216,4,234],"264":[129,13,129,20],"265":[4,247,4,254],"272":[127,9,127,16],"273":[4,255,4,267],"280":[133,9,133,45],"281":[4,247,4,268],"288":[136,22,136,78],"289":[4,278,4,285],"296":[135,9,135,20],"297":[4,286,4,295],"304":[138,22,138,59],"305":[4,278,4,296],"312":[140,9,140,18],"313":[4,307,4,312],"320":[143,9,143,32],"321":[4,307,4,329],"328":[153,46,153,51],"329":[4,337,4,344],"336":[167,14,167,76],"337":[4,345,4,362],"345":[4,337,4,363],"353":[4,14,4,33],"361":[4,14,4,33],"369":[4,48,4,71],"377":[4,48,4,71],"385":[4,87,4,111],"393":[4,87,4,111],"401":[4,122,4,150],"409":[4,122,4,150],"417":[4,160,4,178],"425":[4,160,4,178],"433":[4,188,4,206],"441":[4,188,4,206],"449":[4,216,4,234],"457":[4,216,4,234],"465":[4,247,4,268],"473":[4,247,4,268],"481":[4,278,4,296],"489":[4,278,4,296],"497":[4,307,4,329],"505":[4,307,4,329],"513":[4,337,4,363],"521":[4,337,4,363],"529":[5,19,5,26],"537":[5,27,5,40],"545":[5,19,5,41],"553":[5,19,5,41],"561":[5,19,5,41],"569":[6,17,6,24],"577":[6,25,6,38],"585":[6,17,6,39],"593":[6,17,6,39],"601":[6,17,6,39],"609":[7,23,7,30],"617":[7,31,7,51],"625":[7,23,7,52],"633":[7,23,7,52],"641":[7,23,7,52],"649":[9,5,9,9],"657":[9,24,9,26],"665":[9,5,9,26],"673":[9,5,9,27],"681":[10,5,10,9],"689":[10,20,10,22],"697":[10,5,10,22],"705":[10,5,10,23],"713":[11,5,11,9],"721":[11,19,11,21],"729":[11,5,11,21],"737":[11,5,11,22],"745":[12,5,12,9],"753":[12,25,12,27],"761":[12,5,12,27],"769":[12,5,12,28],"777":[13,5,13,9],"785":[13,37,13,41],"793":[13,20,13,43],"801":[13,5,13,43],"809":[13,5,13,44],"817":[14,16,14,20],"825":[14,16,14,39],"827":[14,16,14,37],"833":[14,16,14,39],"841":[14,16,14,39],"849":[15,5,15,9],"857":[15,19,15,23],"865":[15,19,15,30],"873":[15,5,15,30],"881":[15,5,15,31],"889":[8,1,16,2],"897":[8,1,16,2],"905":[8,1,16,2],"913":[17,1,17,9],"921":[17,1,17,19],"929":[17,29,17,35],"937":[17,1,17,35],"945":[17,1,17,36],"953":[18,1,18,9],"961":[18,1,18,19],"969":[19,9,19,18],"977":[19,9,19,25],"985":[19,29,19,30],"993":[20,16,20,20],"1001":[20,16,20,28],"1009":[20,29,20,32],"1017":[20,16,20,33],"1025":[20,16,20,33],"1033":[20,9,20,34],"1041":[22,5,22,9],"1049":[22,5,22,17],"1057":[22,18,22,21],"1065":[22,25,22,30],"1073":[22,5,22,30],"1081":[22,5,22,31],"1089":[23,12,23,16],"1097":[23,12,23,16],"1105":[23,5,23,17],"1113":[18,26,24,2],"1121":[18,26,24,2],"1129":[18,26,24,2],"1137":[18,26,24,2],"1145":[18,26,24,2],"1153":[18,1,24,2],"1161":[18,1,24,3],"1169":[25,1,25,9],"1177":[25,1,25,19],"1185":[25,26,25,34],"1193":[25,26,25,44],"1201":[25,26,25,48],"1209":[25,1,25,48],"1217":[25,1,25,49],"1225":[26,18,26,27],"1233":[26,18,26,27],"1241":[26,18,26,27],"1249":[28,10,28,13],"1257":[29,16,29,21],"1265":[29,16,29,21],"1273":[29,9,29,22],"1281":[31,28,31,31],"1289":[31,40,31,43],"1297":[31,28,31,44],"1299":[31,28,31,39],"1305":[31,28,31,44],"1313":[31,28,31,44],"1321":[32,24,32,29],"1329":[32,24,32,29],"1337":[32,24,32,29],"1345":[33,9,33,25],"1353":[33,31,33,32],"1361":[35,23,35,34],"1369":[35,41,35,44],"1377":[35,52,35,68],"1385":[35,71,35,72],"1393":[35,41,35,73],"1395":[35,41,35,51],"1401":[35,23,35,74],"1403":[35,23,35,40],"1409":[35,23,35,74],"1417":[35,23,35,74],"1425":[36,17,36,20],"1433":[36,24,36,27],"1441":[36,24,36,38],"1449":[37,32,37,36],"1457":[37,32,37,36],"1465":[37,17,37,37],"1473":[40,20,40,25],"1481":[40,20,40,25],"1489":[40,13,40,26],"1497":[39,11,41,10],"1505":[43,12,43,24],"1513":[43,12,43,24],"1521":[43,5,43,25],"1529":[27,28,44,2],"1537":[27,28,44,2],"1545":[27,28,44,2],"1553":[27,28,44,2],"1561":[27,28,44,2],"1569":[27,28,44,2],"1577":[27,28,44,2],"1585":[27,28,44,2],"1593":[27,28,44,2],"1601":[45,1,45,9],"1609":[45,1,45,19],"1617":[46,20,46,30],"1625":[46,31,46,35],"1633":[46,16,46,36],"1641":[46,16,46,36],"1649":[46,16,46,36],"1657":[47,5,47,9],"1665":[47,5,47,21],"1673":[47,27,47,31],"1681":[47,5,47,32],"1683":[47,5,47,26],"1689":[47,5,47,33],"1697":[48,9,48,18],"1705":[48,9,48,25],"1713":[49,13,49,23],"1721":[49,29,49,38],"1729":[49,39,49,40],"1737":[49,29,49,41],"1745":[49,13,49,42],"1747":[49,13,49,28],"1753":[49,46,49,66],"1761":[49,67,49,76],"1769":[49,77,49,78],"1777":[49,67,49,79],"1785":[49,46,49,80],"1793":[50,13,50,17],"1801":[50,13,50,25],"1809":[50,32,50,36],"1817":[50,38,50,47],"1825":[50,13,50,48],"1827":[50,13,50,31],"1833":[50,13,50,49],"1841":[51,20,51,27],"1849":[51,31,51,38],"1857":[51,31,51,46],"1865":[51,51,51,58],"1873":[51,51,51,66],"1881":[51,51,51,77],"1889":[51,81,51,88],"1897":[51,81,51,96],"1905":[51,81,51,104],"1913":[52,13,52,17],"1921":[52,13,52,25],"1929":[52,32,52,36],"1937":[52,38,52,47],"1945":[52,13,52,48],"1947":[52,13,52,31],"1953":[52,13,52,49],"1961":[54,13,54,17],"1969":[54,13,54,22],"1977":[54,29,54,33],"1985":[54,35,54,44],"1993":[54,13,54,45],"1995":[54,13,54,28],"2001":[54,13,54,46],"2009":[57,12,57,16],"2017":[57,12,57,16],"2025":[57,5,57,17],"2033":[45,39,58,2],"2041":[45,39,58,2],"2049":[45,39,58,2],"2057":[45,39,58,2],"2065":[45,39,58,2],"2073":[45,39,58,2],"2081":[45,1,58,2],"2089":[45,1,58,3],"2097":[59,1,59,9],"2105":[59,1,59,19],"2113":[60,16,60,20],"2121":[60,16,60,31],"2129":[60,16,60,31],"2137":[60,16,60,31],"2145":[61,9,61,19],"2153":[61,25,61,34],"2161":[61,35,61,36],"2169":[61,25,61,37],"2177":[61,9,61,38],"2179":[61,9,61,24],"2185":[61,42,61,62],"2193":[61,63,61,72],"2201":[61,73,61,74],"2209":[61,63,61,75],"2217":[61,42,61,76],"2225":[62,9,62,13],"2233":[62,9,62,21],"2241":[62,28,62,32],"2249":[62,34,62,43],"2257":[62,9,62,44],"2259":[62,9,62,27],"2265":[62,9,62,45],"2273":[64,9,64,13],"2281":[64,9,64,18],"2289":[64,25,64,29],"2297":[64,31,64,40],"2305":[64,9,64,41],"2307":[64,9,64,24],"2313":[64,9,64,42],"2321":[66,12,66,16],"2329":[66,12,66,16],"2337":[66,5,66,17],"2345":[59,30,67,2],"2353":[59,30,67,2],"2361":[59,30,67,2],"2369":[59,30,67,2],"2377":[59,1,67,2],"2385":[59,1,67,3],"2393":[68,1,68,9],"2401":[68,1,68,19],"2409":[69,17,69,21],"2417":[69,17,69,33],"2425":[69,17,69,40],"2433":[69,17,69,40],"2441":[69,17,69,40],"2449":[70,5,70,9],"2457":[70,5,70,21],"2465":[71,9,71,13],"2473":[72,17,72,22],"2481":[73,17,73,24],"2489":[73,17,73,24],"2497":[74,17,74,20],"2505":[75,25,75,28],"2513":[75,25,75,28],"2521":[75,17,75,29],"2529":[76,21,76,23],"2537":[77,28,77,30],"2545":[77,31,77,34],"2553":[77,28,77,35],"2561":[77,28,77,35],"2569":[77,21,77,36],"2577":[78,23,78,26],"2585":[78,23,78,26],"2593":[78,17,78,27],"2601":[80,17,80,19],"2617":[81,19,81,24],"2625":[81,17,81,24],"2633":[81,28,81,30],"2641":[81,28,81,32],"2649":[81,17,81,33],"2657":[71,20,82,10],"2665":[71,20,82,10],"2673":[71,20,82,10],"2681":[71,20,82,10],"2689":[71,9,82,11],"2691":[71,9,71,19],"2697":[71,9,82,12],"2705":[70,30,83,6],"2713":[70,30,83,6],"2721":[70,30,83,6],"2729":[70,30,83,6],"2737":[70,5,83,7],"2739":[70,5,70,29],"2745":[70,5,83,8],"2753":[84,12,84,16],"2761":[84,12,84,16],"2769":[84,5,84,17],"2777":[68,33,85,2],"2785":[68,33,85,2],"2793":[68,33,85,2],"2801":[68,33,85,2],"2809":[68,33,85,2],"2817":[68,33,85,2],"2825":[68,1,85,2],"2833":[68,1,85,3],"2841":[86,1,86,9],"2849":[86,1,86,19],"2857":[87,9,87,17],"2865":[87,28,87,34],"2873":[88,22,88,28],"2881":[88,22,88,28],"2889":[88,9,88,29],"2897":[89,18,89,23],"2905":[89,18,89,23],"2913":[89,9,89,24],"2921":[91,9,91,14],"2929":[91,24,91,30],"2937":[91,9,91,31],"2939":[91,9,91,23],"2945":[91,37,91,43],"2953":[91,55,91,61],"2961":[92,22,92,28],"2969":[92,29,92,35],"2977":[92,18,92,36],"2985":[92,18,92,36],"2993":[92,9,92,37],"3001":[94,9,94,18],"3009":[94,30,94,40],"3017":[95,20,95,30],"3025":[95,20,95,30],"3033":[95,9,95,31],"3041":[96,22,96,26],"3049":[96,22,96,26],"3057":[96,9,96,27],"3065":[99,9,99,17],"3073":[99,21,99,26],"3081":[99,36,99,44],"3089":[99,21,99,45],"3091":[99,21,99,35],"3097":[100,19,100,27],"3105":[100,19,100,27],"3113":[100,9,100,28],"3121":[101,20,101,24],"3129":[101,20,101,24],"3137":[101,9,101,25],"3145":[103,19,103,21],"3153":[103,19,103,21],"3161":[103,9,103,22],"3169":[105,10,105,14],"3177":[105,10,105,27],"3185":[105,28,105,32],"3193":[105,10,105,33],"3201":[106,13,106,19],"3209":[107,13,107,17],"3217":[107,13,107,30],"3225":[107,31,107,35],"3233":[107,39,107,45],"3241":[107,13,107,45],"3249":[107,13,107,46],"3257":[108,13,108,17],"3265":[108,32,108,38],"3273":[108,13,108,39],"3275":[108,13,108,31],"3281":[108,13,108,40],"3289":[110,23,110,31],"3297":[110,23,110,37],"3305":[110,57,110,61],"3313":[110,19,110,62],"3315":[110,23,110,56],"3321":[110,19,110,62],"3329":[110,13,110,63],"3337":[115,9,115,13],"3345":[115,9,115,20],"3353":[115,21,115,25],"3361":[115,9,115,26],"3369":[115,30,115,35],"3377":[115,40,115,47],"3385":[115,40,115,53],"3393":[116,13,116,19],"3401":[116,31,116,37],"3409":[116,41,116,47],"3417":[116,51,116,55],"3425":[116,51,116,62],"3433":[116,63,116,67],"3441":[116,51,116,68],"3449":[116,51,116,75],"3457":[117,23,117,31],"3465":[117,23,117,37],"3473":[117,58,117,62],"3481":[117,19,117,63],"3483":[117,23,117,57],"3489":[117,19,117,63],"3497":[117,13,117,64],"3505":[119,13,119,23],"3513":[120,21,120,25],"3521":[120,21,120,32],"3529":[120,33,120,37],"3537":[120,21,120,38],"3545":[120,21,120,38],"3553":[120,13,120,39],"3561":[121,22,121,27],"3569":[121,22,121,37],"3577":[121,22,121,44],"3585":[121,22,121,44],"3593":[121,13,121,45],"3601":[122,19,122,24],"3609":[122,36,122,40],"3617":[122,36,122,51],"3625":[122,53,122,59],"3633":[122,61,122,71],"3641":[122,19,122,72],"3643":[122,19,122,35],"3649":[122,19,122,72],"3657":[122,13,122,73],"3665":[123,20,123,23],"3673":[123,20,123,23],"3681":[123,13,123,24],"3689":[125,16,125,20],"3697":[125,16,125,27],"3705":[125,28,125,32],"3713":[125,16,125,33],"3721":[125,16,125,33],"3729":[125,9,125,34],"3737":[127,10,127,16],"3745":[128,18,128,22],"3753":[128,18,128,35],"3761":[128,36,128,40],"3769":[128,18,128,41],"3777":[128,18,128,41],"3785":[128,9,128,42],"3793":[129,14,129,20],"3801":[130,23,130,31],"3809":[130,23,130,37],"3817":[130,57,130,61],"3825":[130,19,130,62],"3827":[130,23,130,56],"3833":[130,19,130,62],"3841":[130,13,130,63],"3849":[133,11,133,26],"3857":[133,30,133,36],"3865":[133,30,133,44],"3873":[134,9,134,15],"3881":[134,9,134,23],"3889":[134,40,134,44],"3897":[134,40,134,52],"3905":[134,40,134,66],"3913":[134,9,134,66],"3921":[134,9,134,67],"3929":[135,10,135,20],"3937":[136,22,136,28],"3945":[136,33,136,45],"3953":[136,22,136,46],"3955":[136,22,136,32],"3961":[136,50,136,56],"3969":[136,57,136,61],"3977":[136,63,136,69],"3985":[136,63,136,77],"3993":[136,50,136,78],"4001":[136,22,136,78],"4009":[136,9,136,79],"4017":[138,22,138,29],"4025":[138,22,138,40],"4033":[138,44,138,48],"4041":[138,44,138,59],"4049":[138,22,138,59],"4057":[138,22,138,59],"4065":[139,13,139,18],"4073":[139,27,139,31],"4081":[139,33,139,39],"4089":[139,41,139,51],"4097":[139,53,139,63],"4105":[139,65,139,69],"4113":[139,13,139,70],"4115":[139,13,139,26],"4121":[139,13,139,70],"4129":[139,5,139,71],"4137":[140,10,140,18],"4145":[141,9,141,14],"4153":[141,9,141,21],"4155":[141,9,141,19],"4161":[141,9,141,22],"4169":[143,9,143,14],"4177":[143,19,143,26],"4185":[143,19,143,32],"4193":[144,16,144,21],"4201":[144,16,144,21],"4209":[144,9,144,22],"4217":[146,12,146,16],"4225":[146,12,146,23],"4233":[146,24,146,28],"4241":[146,32,146,37],"4249":[146,12,146,37],"4257":[146,12,146,37],"4265":[146,5,146,38],"4273":[86,28,147,2],"4281":[86,28,147,2],"4289":[86,28,147,2],"4297":[86,28,147,2],"4305":[86,28,147,2],"4313":[86,28,147,2],"4321":[86,28,147,2],"4329":[86,28,147,2],"4337":[86,28,147,2],"4345":[86,28,147,2],"4353":[86,28,147,2],"4361":[86,1,147,2],"4369":[86,1,147,3],"4377":[148,1,148,9],"4385":[148,1,148,19],"4393":[149,17,149,23],"4401":[149,29,149,33],"4409":[149,29,149,40],"4417":[149,17,149,41],"4419":[149,17,149,28],"4425":[149,17,149,41],"4433":[149,17,149,41],"4441":[150,12,150,17],"4449":[150,12,150,17],"4457":[150,5,150,18],"4465":[148,33,151,2],"4473":[148,33,151,2],"4481":[148,33,151,2],"4489":[148,33,151,2],"4497":[148,1,151,2],"4505":[148,1,151,3],"4513":[152,1,152,9],"4521":[152,1,152,19],"4529":[153,18,153,19],"4537":[153,25,153,29],"4545":[153,25,153,37],"4553":[153,25,153,44],"4561":[153,18,153,19],"4569":[153,18,153,19],"4577":[153,25,153,44],"4585":[153,25,153,44],"4593":[153,46,153,47],"4601":[153,50,153,51],"4617":[153,53,153,54],"4625":[153,53,153,56],"4641":[154,9,154,15],"4649":[154,23,154,27],"4657":[154,23,154,35],"4665":[154,36,154,37],"4673":[154,23,154,38],"4681":[154,39,154,40],"4689":[154,23,154,41],"4697":[154,43,154,47],"4705":[154,43,154,55],"4713":[154,56,154,57],"4721":[154,43,154,58],"4729":[154,59,154,60],"4737":[154,43,154,61],"4745":[154,9,154,62],"4747":[154,9,154,22],"4753":[154,9,154,63],"4761":[152,36,156,2],"4769":[152,36,156,2],"4777":[152,36,156,2],"4785":[152,36,156,2],"4793":[152,36,156,2],"4801":[152,36,156,2],"4809":[152,1,156,2],"4817":[152,1,156,3],"4825":[157,1,157,9],"4833":[157,1,157,19],"4841":[158,5,158,9],"4849":[158,5,158,17],"4857":[159,9,159,11],"4865":[160,9,160,13],"4873":[158,23,161,6],"4881":[158,5,161,7],"4883":[158,5,158,22],"4889":[158,5,161,8],"4897":[162,12,162,16],"4905":[162,12,162,16],"4913":[162,5,162,17],"4921":[157,29,163,2],"4929":[157,29,163,2],"4937":[157,29,163,2],"4945":[157,29,163,2],"4953":[157,29,163,2],"4961":[157,1,163,2],"4969":[157,1,163,3],"4977":[164,1,164,9],"4985":[164,1,164,19],"4993":[164,37,164,49],"5001":[165,12,165,16],"5009":[165,12,165,28],"5017":[165,29,165,30],"5025":[165,12,165,31],"5033":[165,12,165,31],"5041":[165,5,165,32],"5049":[164,51,166,2],"5057":[164,51,166,2],"5065":[164,51,166,2],"5073":[164,1,166,3],"5075":[164,1,164,36],"5081":[164,1,166,4],"5089":[167,14,167,20],"5097":[167,14,167,41],"5105":[167,45,167,76],"5113":[167,14,167,76],"5121":[167,14,167,76],"5129":[168,18,168,25],"5137":[168,26,168,32],"5145":[168,35,168,48],"5153":[168,18,168,49],"5161":[168,18,168,49],"5169":[168,18,168,49],"5177":[169,18,169,25],"5185":[169,26,169,32],"5193":[169,35,169,48],"5201":[169,18,169,49],"5209":[169,18,169,49],"5217":[169,18,169,49],"5225":[170,1,170,9],"5233":[170,1,170,19],"5241":[170,32,170,41],"5249":[170,1,170,41],"5257":[170,1,170,42],"5265":[171,1,171,9],"5273":[171,1,171,19],"5281":[171,33,171,43],"5289":[171,1,171,43],"5297":[171,1,171,44],"5305":[172,1,172,9],"5313":[172,1,172,19],"5321":[172,33,172,43],"5329":[172,1,172,43],"5337":[172,1,172,44],"5345":[173,1,173,9],"5353":[173,1,173,19],"5361":[173,30,173,33],"5369":[173,30,173,41],"5377":[173,1,173,41],"5385":[173,1,173,42],"5393":[174,1,174,9],"5401":[174,1,174,19],"5409":[174,31,174,39],"5417":[174,1,174,39],"5425":[174,1,174,40],"5433":[175,1,175,9],"5441":[175,1,175,19],"5449":[175,29,175,35],"5457":[175,1,175,35],"5465":[175,1,175,36],"5473":[176,1,176,9],"5481":[176,1,176,19],"5489":[176,33,176,43],"5497":[176,1,176,43],"5505":[176,1,176,44],"5513":[177,1,177,9],"5521":[177,1,177,19],"5529":[177,34,177,40],"5537":[177,34,177,46],"5545":[177,1,177,46],"5553":[177,1,177,47],"5561":[178,1,178,9],"5569":[178,1,178,19],"5577":[178,34,178,45],"5585":[178,1,178,45],"5593":[178,1,178,46],"5601":[179,1,179,9],"5609":[179,1,179,19],"5617":[179,28,179,33],"5625":[179,1,179,33],"5633":[179,1,179,34],"5641":[180,1,180,9],"5649":[180,1,180,19],"5657":[180,28,180,33],"5665":[180,1,180,33],"5673":[180,1,180,34],"5681":[181,1,181,7],"5689":[181,23,181,31],"5697":[181,23,181,41],"5705":[181,43,181,52],"5713":[183,16,183,31],"5721":[183,16,183,37],"5723":[183,16,183,35],"5729":[183,16,183,37],"5737":[183,9,183,38],"5745":[182,10,184,6],"5753":[182,10,184,6],"5761":[182,10,184,6],"5769":[186,9,186,24],"5777":[186,29,186,32],"5785":[186,9,186,33],"5787":[186,9,186,28],"5793":[186,9,186,34],"5801":[185,10,187,6],"5809":[185,10,187,6],"5817":[185,10,187,6],"5825":[185,10,187,6],"5833":[181,54,188,2],"5841":[181,1,188,3],"5843":[181,1,181,22],"5849":[181,1,188,4],"5857":[189,1,189,9],"5865":[189,1,189,19],"5873":[189,38,189,53],"5881":[189,1,189,53],"5889":[189,1,189,54],"5897":[190,1,190,9],"5905":[190,1,190,19],"5913":[190,28,190,33],"5921":[190,1,190,33],"5929":[190,1,190,34],"5937":[191,1,191,9],"5945":[191,1,191,19],"5953":[191,31,191,39],"5961":[191,1,191,39],"5969":[191,1,191,40],"5977":[192,1,192,9],"5985":[192,1,192,19],"5993":[192,39,192,46],"6001":[192,47,192,68],"6009":[192,39,192,69],"6017":[192,1,192,69],"6025":[192,1,192,70],"6033":[193,1,193,9],"6041":[193,1,193,19],"6049":[193,28,193,35],"6057":[193,36,193,45],"6065":[193,28,193,46],"6073":[193,1,193,46],"6081":[193,1,193,47],"6089":[194,1,194,9],"6097":[194,1,194,19],"6105":[194,28,194,35],"6113":[194,36,194,45],"6121":[194,28,194,46],"6129":[194,1,194,46],"6137":[194,1,194,47],"6145":[195,1,195,9],"6153":[195,1,195,19],"6161":[195,29,195,36],"6169":[195,37,195,45],"6177":[195,29,195,46],"6185":[195,1,195,46],"6193":[195,1,195,47],"6201":[196,16,196,22],"6209":[196,47,196,55],"6217":[196,43,196,57],"6225":[196,43,196,57],"6233":[196,16,196,57],"6241":[196,16,196,57],"6249":[196,16,196,57],"6257":[1,1,196,58],"6265":[1,1,196,58],"6273":[1,1,196,58],"6281":[1,1,196,58],"6289":[1,1,196,58],"6297":[1,1,196,58],"6305":[1,1,196,58],"6313":[1,1,196,58],"6321":[1,1,196,58],"6329":[1,1,196,58],"6337":[1,1,196,58],"6345":[1,1,196,58],"6353":[1,1,196,58],"6361":[1,1,196,58],"6369":[1,1,196,58],"6377":[1,1,196,58],"6385":[1,1,196,58],"6393":[8,1,16,2],"6401":[1,1,196,58],"6409":[1,1,196,58],"6417":[1,1,196,58],"6425":[1,1,196,58],"6433":[1,1,196,58],"6441":[1,1,196,58],"6449":[1,1,196,58],"6457":[8,1,16,2],"6465":[8,1,16,2],"6473":[19,5,21,6],"6481":[18,26,24,2],"6489":[18,26,24,2],"6497":[28,5,30,6],"6505":[36,13,38,14],"6513":[33,5,42,6],"6521":[27,28,44,2],"6529":[27,28,44,2],"6537":[51,16,55,10],"6545":[49,9,55,10],"6553":[48,5,56,6],"6561":[45,39,58,2],"6569":[45,39,58,2],"6577":[61,5,65,6],"6585":[59,30,67,2],"6593":[59,30,67,2],"6601":[72,13,73,24],"6609":[76,17,77,36],"6617":[74,13,79,14],"6625":[80,13,81,33],"6633":[71,20,82,10],"6641":[71,20,82,10],"6649":[70,30,83,6],"6657":[70,30,83,6],"6665":[68,33,85,2],"6673":[68,33,85,2],"6681":[87,5,90,6],"6689":[91,5,93,6],"6697":[94,5,97,6],"6705":[99,5,104,6],"6713":[106,9,111,10],"6721":[105,5,112,6],"6729":[116,9,118,10],"6737":[119,9,124,10],"6745":[115,5,126,6],"6753":[129,9,131,10],"6761":[127,5,132,6],"6769":[133,5,134,67],"6777":[135,5,137,6],"6785":[140,5,142,6],"6793":[143,5,145,6],"6801":[86,28,147,2],"6809":[86,28,147,2],"6817":[148,33,151,2],"6825":[148,33,151,2],"6833":[153,5,155,6],"6841":[153,5,155,6],"6849":[152,36,156,2],"6857":[152,36,156,2],"6865":[157,29,163,2],"6873":[157,29,163,2],"6881":[164,51,166,2],"6889":[164,51,166,2],"6897":[182,10,184,6],"6905":[182,10,184,6],"6913":[185,10,187,6],"6921":[185,10,187,6],"6929":[1,1,196,58],"6937":[1,1,196,58],"nBranches":84,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/index_jalangi_.js","code":"'use strict';\n\n/*!\n * Module dependencies.\n */\n\nvar Schema = require('./schema'),\n    SchemaType = require('./schematype'),\n    VirtualType = require('./virtualtype'),\n    STATES = require('./connectionstate'),\n    Types = require('./types'),\n    Query = require('./query'),\n    Model = require('./model'),\n    Document = require('./document'),\n    utils = require('./utils'),\n    format = utils.toCollectionName,\n    pkg = require('../package.json');\n\nvar querystring = require('querystring');\n\nvar Aggregate = require('./aggregate');\nvar PromiseProvider = require('./promise_provider');\n\n/**\n * Mongoose constructor.\n *\n * The exports object of the `mongoose` module is an instance of this class.\n * Most apps will only use this one instance.\n *\n * @api public\n */\n\nfunction Mongoose() {\n  this.connections = [];\n  this.plugins = [];\n  this.models = {};\n  this.modelSchemas = {};\n  // default global options\n  this.options = {\n    pluralization: true\n  };\n  var conn = this.createConnection(); // default connection\n  conn.models = this.models;\n}\n\n/**\n * Expose connection states for user-land\n *\n */\nMongoose.prototype.STATES = STATES;\n\n/**\n * Sets mongoose options\n *\n * ####Example:\n *\n *     mongoose.set('test', value) // sets the 'test' option to `value`\n *\n *     mongoose.set('debug', true) // enable logging collection methods + arguments to the console\n *\n *     mongoose.set('debug', function(collectionName, methodName, arg1, arg2...) {}); // use custom function to log collection methods + arguments\n *\n * @param {String} key\n * @param {String|Function} value\n * @api public\n */\n\nMongoose.prototype.set = function(key, value) {\n  if (arguments.length == 1) {\n    return this.options[key];\n  }\n\n  this.options[key] = value;\n  return this;\n};\n\n/**\n * Gets mongoose options\n *\n * ####Example:\n *\n *     mongoose.get('test') // returns the 'test' value\n *\n * @param {String} key\n * @method get\n * @api public\n */\n\nMongoose.prototype.get = Mongoose.prototype.set;\n\n/*!\n * ReplSet connection string check.\n */\n\nvar rgxReplSet = /^.+,.+$/;\n\n/**\n * Checks if ?replicaSet query parameter is specified in URI\n *\n * ####Example:\n *\n *     checkReplicaSetInUri('localhost:27000?replicaSet=rs0'); // true\n *\n * @param {String} uri\n * @return {boolean}\n * @api private\n */\n\nvar checkReplicaSetInUri = function(uri) {\n  if (!uri) {\n    return false;\n  }\n\n  var queryStringStart = uri.indexOf('?');\n  var isReplicaSet = false;\n  if (queryStringStart !== -1) {\n    try {\n      var obj = querystring.parse(uri.substr(queryStringStart + 1));\n      if (obj && obj.replicaSet) {\n        isReplicaSet = true;\n      }\n    } catch (e) {\n      return false;\n    }\n  }\n\n  return isReplicaSet;\n};\n\n/**\n * Creates a Connection instance.\n *\n * Each `connection` instance maps to a single database. This method is helpful when mangaging multiple db connections.\n *\n * If arguments are passed, they are proxied to either [Connection#open](#connection_Connection-open) or [Connection#openSet](#connection_Connection-openSet) appropriately. This means we can pass `db`, `server`, and `replset` options to the driver. _Note that the `safe` option specified in your schema will overwrite the `safe` db option specified here unless you set your schemas `safe` option to `undefined`. See [this](/docs/guide.html#safe) for more information._\n *\n * _Options passed take precedence over options included in connection strings._\n *\n * ####Example:\n *\n *     // with mongodb:// URI\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database');\n *\n *     // and options\n *     var opts = { db: { native_parser: true }}\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port/database', opts);\n *\n *     // replica sets\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database');\n *\n *     // and options\n *     var opts = { replset: { strategy: 'ping', rs_name: 'testSet' }}\n *     db = mongoose.createConnection('mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/database', opts);\n *\n *     // with [host, database_name[, port] signature\n *     db = mongoose.createConnection('localhost', 'database', port)\n *\n *     // and options\n *     var opts = { server: { auto_reconnect: false }, user: 'username', pass: 'mypassword' }\n *     db = mongoose.createConnection('localhost', 'database', port, opts)\n *\n *     // initialize now, connect later\n *     db = mongoose.createConnection();\n *     db.open('localhost', 'database', port, [opts]);\n *\n * @param {String} [uri] a mongodb:// URI\n * @param {Object} [options] options to pass to the driver\n * @see Connection#open #connection_Connection-open\n * @see Connection#openSet #connection_Connection-openSet\n * @return {Connection} the created Connection object\n * @api public\n */\n\nMongoose.prototype.createConnection = function(uri, options) {\n  var conn = new Connection(this);\n  this.connections.push(conn);\n\n  if (arguments.length) {\n    if (rgxReplSet.test(arguments[0]) || checkReplicaSetInUri(arguments[0])) {\n      conn.openSet.apply(conn, arguments);\n    } else if (options && options.replset &&\n        (options.replset.replicaSet || options.replset.rs_name)) {\n      conn.openSet.apply(conn, arguments);\n    } else {\n      conn.open.apply(conn, arguments);\n    }\n  }\n\n  return conn;\n};\n\n/**\n * Opens the default mongoose connection.\n *\n * If arguments are passed, they are proxied to either [Connection#open](#connection_Connection-open) or [Connection#openSet](#connection_Connection-openSet) appropriately.\n *\n * _Options passed take precedence over options included in connection strings._\n *\n * ####Example:\n *\n *     mongoose.connect('mongodb://user:pass@localhost:port/database');\n *\n *     // replica sets\n *     var uri = 'mongodb://user:pass@localhost:port,anotherhost:port,yetanother:port/mydatabase';\n *     mongoose.connect(uri);\n *\n *     // with options\n *     mongoose.connect(uri, options);\n *\n *     // connecting to multiple mongos\n *     var uri = 'mongodb://hostA:27501,hostB:27501';\n *     var opts = { mongos: true };\n *     mongoose.connect(uri, opts);\n *\n * @param {String} uri(s)\n * @param {Object} [options]\n * @param {Function} [callback]\n * @see Mongoose#createConnection #index_Mongoose-createConnection\n * @api public\n * @return {Mongoose} this\n */\n\nMongoose.prototype.connect = function() {\n  var conn = this.connection;\n\n  if (rgxReplSet.test(arguments[0]) || checkReplicaSetInUri(arguments[0])) {\n    conn.openSet.apply(conn, arguments);\n  } else {\n    conn.open.apply(conn, arguments);\n  }\n\n  return this;\n};\n\n/**\n * Disconnects all connections.\n *\n * @param {Function} [fn] called after all connection close.\n * @return {Mongoose} this\n * @api public\n */\n\nMongoose.prototype.disconnect = function(fn) {\n  var count = this.connections.length,\n      error;\n\n  this.connections.forEach(function(conn) {\n    conn.close(function(err) {\n      if (error) return;\n\n      if (err) {\n        error = err;\n        if (fn) return fn(err);\n        throw err;\n      }\n\n      if (fn)\n        --count || fn();\n    });\n  });\n  return this;\n};\n\n/**\n * Defines a model or retrieves it.\n *\n * Models defined on the `mongoose` instance are available to all connection created by the same `mongoose` instance.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *\n *     // define an Actor model with this mongoose instance\n *     mongoose.model('Actor', new Schema({ name: String }));\n *\n *     // create a new connection\n *     var conn = mongoose.createConnection(..);\n *\n *     // retrieve the Actor model\n *     var Actor = conn.model('Actor');\n *\n * _When no `collection` argument is passed, Mongoose produces a collection name by passing the model `name` to the [utils.toCollectionName](#utils_exports.toCollectionName) method. This method pluralizes the name. If you don't like this behavior, either pass a collection name or set your schemas collection name option._\n *\n * ####Example:\n *\n *     var schema = new Schema({ name: String }, { collection: 'actor' });\n *\n *     // or\n *\n *     schema.set('collection', 'actor');\n *\n *     // or\n *\n *     var collectionName = 'actor'\n *     var M = mongoose.model('Actor', schema, collectionName)\n *\n * @param {String} name model name\n * @param {Schema} [schema]\n * @param {String} [collection] name (optional, induced from model name)\n * @param {Boolean} [skipInit] whether to skip initialization (defaults to false)\n * @api public\n */\n\nMongoose.prototype.model = function(name, schema, collection, skipInit) {\n  if ('string' == typeof schema) {\n    collection = schema;\n    schema = false;\n  }\n\n  if (utils.isObject(schema) && !(schema instanceof Schema)) {\n    schema = new Schema(schema);\n  }\n\n  if ('boolean' === typeof collection) {\n    skipInit = collection;\n    collection = null;\n  }\n\n  // handle internal options from connection.model()\n  var options;\n  if (skipInit && utils.isObject(skipInit)) {\n    options = skipInit;\n    skipInit = true;\n  } else {\n    options = {};\n  }\n\n  // look up schema for the collection.\n  if (!this.modelSchemas[name]) {\n    if (schema) {\n      // cache it so we only apply plugins once\n      this.modelSchemas[name] = schema;\n      this._applyPlugins(schema);\n    } else {\n      throw new mongoose.Error.MissingSchemaError(name);\n    }\n  }\n\n  var model;\n  var sub;\n\n  // connection.model() may be passing a different schema for\n  // an existing model name. in this case don't read from cache.\n  if (this.models[name] && false !== options.cache) {\n    if (schema instanceof Schema && schema != this.models[name].schema) {\n      throw new mongoose.Error.OverwriteModelError(name);\n    }\n\n    if (collection) {\n      // subclass current model with alternate collection\n      model = this.models[name];\n      schema = model.prototype.schema;\n      sub = model.__subclass(this.connection, schema, collection);\n      // do not cache the sub model\n      return sub;\n    }\n\n    return this.models[name];\n  }\n\n  // ensure a schema exists\n  if (!schema) {\n    schema = this.modelSchemas[name];\n    if (!schema) {\n      throw new mongoose.Error.MissingSchemaError(name);\n    }\n  }\n\n  // Apply relevant \"global\" options to the schema\n  if (!('pluralization' in schema.options)) schema.options.pluralization = this.options.pluralization;\n\n\n  if (!collection) {\n    collection = schema.get('collection') || format(name, schema.options);\n  }\n\n  var connection = options.connection || this.connection;\n  model = Model.compile(name, schema, collection, connection, this);\n\n  if (!skipInit) {\n    model.init();\n  }\n\n  if (false === options.cache) {\n    return model;\n  }\n\n  return this.models[name] = model;\n};\n\n/**\n * Returns an array of model names created on this instance of Mongoose.\n *\n * ####Note:\n *\n * _Does not include names of models created using `connection.model()`._\n *\n * @api public\n * @return {Array}\n */\n\nMongoose.prototype.modelNames = function() {\n  var names = Object.keys(this.models);\n  return names;\n};\n\n/**\n * Applies global plugins to `schema`.\n *\n * @param {Schema} schema\n * @api private\n */\n\nMongoose.prototype._applyPlugins = function(schema) {\n  for (var i = 0, l = this.plugins.length; i < l; i++) {\n    schema.plugin(this.plugins[i][0], this.plugins[i][1]);\n  }\n};\n\n/**\n * Declares a global plugin executed on all Schemas.\n *\n * Equivalent to calling `.plugin(fn)` on each Schema you create.\n *\n * @param {Function} fn plugin callback\n * @param {Object} [opts] optional options\n * @return {Mongoose} this\n * @see plugins ./plugins.html\n * @api public\n */\n\nMongoose.prototype.plugin = function(fn, opts) {\n  this.plugins.push([fn, opts]);\n  return this;\n};\n\n/**\n * The default connection of the mongoose module.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     mongoose.connect(...);\n *     mongoose.connection.on('error', cb);\n *\n * This is the connection used by default for every model created using [mongoose.model](#index_Mongoose-model).\n *\n * @property connection\n * @return {Connection}\n * @api public\n */\n\nMongoose.prototype.__defineGetter__('connection', function() {\n  return this.connections[0];\n});\n\n/*!\n * Driver depentend APIs\n */\n\nvar driver = global.MONGOOSE_DRIVER_PATH || './drivers/node-mongodb-native';\n\n/*!\n * Connection\n */\n\nvar Connection = require(driver + '/connection');\n\n/*!\n * Collection\n */\n\nvar Collection = require(driver + '/collection');\n\n/**\n * The Mongoose Aggregate constructor\n *\n * @method Aggregate\n * @api public\n */\n\nMongoose.prototype.Aggregate = Aggregate;\n\n/**\n * The Mongoose Collection constructor\n *\n * @method Collection\n * @api public\n */\n\nMongoose.prototype.Collection = Collection;\n\n/**\n * The Mongoose [Connection](#connection_Connection) constructor\n *\n * @method Connection\n * @api public\n */\n\nMongoose.prototype.Connection = Connection;\n\n/**\n * The Mongoose version\n *\n * @property version\n * @api public\n */\n\nMongoose.prototype.version = pkg.version;\n\n/**\n * The Mongoose constructor\n *\n * The exports of the mongoose module is an instance of this class.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var mongoose2 = new mongoose.Mongoose();\n *\n * @method Mongoose\n * @api public\n */\n\nMongoose.prototype.Mongoose = Mongoose;\n\n/**\n * The Mongoose [Schema](#schema_Schema) constructor\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var Schema = mongoose.Schema;\n *     var CatSchema = new Schema(..);\n *\n * @method Schema\n * @api public\n */\n\nMongoose.prototype.Schema = Schema;\n\n/**\n * The Mongoose [SchemaType](#schematype_SchemaType) constructor\n *\n * @method SchemaType\n * @api public\n */\n\nMongoose.prototype.SchemaType = SchemaType;\n\n/**\n * The various Mongoose SchemaTypes.\n *\n * ####Note:\n *\n * _Alias of mongoose.Schema.Types for backwards compatibility._\n *\n * @property SchemaTypes\n * @see Schema.SchemaTypes #schema_Schema.Types\n * @api public\n */\n\nMongoose.prototype.SchemaTypes = Schema.Types;\n\n/**\n * The Mongoose [VirtualType](#virtualtype_VirtualType) constructor\n *\n * @method VirtualType\n * @api public\n */\n\nMongoose.prototype.VirtualType = VirtualType;\n\n/**\n * The various Mongoose Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var array = mongoose.Types.Array;\n *\n * ####Types:\n *\n * - [ObjectId](#types-objectid-js)\n * - [Buffer](#types-buffer-js)\n * - [SubDocument](#types-embedded-js)\n * - [Array](#types-array-js)\n * - [DocumentArray](#types-documentarray-js)\n *\n * Using this exposed access to the `ObjectId` type, we can construct ids on demand.\n *\n *     var ObjectId = mongoose.Types.ObjectId;\n *     var id1 = new ObjectId;\n *\n * @property Types\n * @api public\n */\n\nMongoose.prototype.Types = Types;\n\n/**\n * The Mongoose [Query](#query_Query) constructor.\n *\n * @method Query\n * @api public\n */\n\nMongoose.prototype.Query = Query;\n\n/**\n * The Mongoose [Promise](#promise_Promise) constructor.\n *\n * @method Promise\n * @api public\n */\n\nObject.defineProperty(Mongoose.prototype, 'Promise', {\n  get: function() {\n    return PromiseProvider.get();\n  },\n  set: function(lib) {\n    PromiseProvider.set(lib);\n  }\n});\n\n/**\n * Storage layer for mongoose promises\n *\n * @method PromiseProvider\n * @api public\n */\n\nMongoose.prototype.PromiseProvider = PromiseProvider;\n\n/**\n * The Mongoose [Model](#model_Model) constructor.\n *\n * @method Model\n * @api public\n */\n\nMongoose.prototype.Model = Model;\n\n/**\n * The Mongoose [Document](#document-js) constructor.\n *\n * @method Document\n * @api public\n */\n\nMongoose.prototype.Document = Document;\n\n/**\n * The Mongoose DocumentProvider constructor.\n *\n * @method DocumentProvider\n * @api public\n */\n\nMongoose.prototype.DocumentProvider = require('./document_provider');\n\n/**\n * The [MongooseError](#error_MongooseError) constructor.\n *\n * @method Error\n * @api public\n */\n\nMongoose.prototype.Error = require('./error');\n\n/**\n * The [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver Mongoose uses.\n *\n * @property mongo\n * @api public\n */\n\nMongoose.prototype.mongo = require('mongodb');\n\n/**\n * The [mquery](https://github.com/aheckmann/mquery) query builder Mongoose uses.\n *\n * @property mquery\n * @api public\n */\n\nMongoose.prototype.mquery = require('mquery');\n\n/*!\n * The exports object is an instance of Mongoose.\n *\n * @api public\n */\n\nvar mongoose = module.exports = exports = new Mongoose;\n"};
jalangiLabel2580:
    while (true) {
        try {
            J$.Se(6257, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/index_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/index.js');
            function Mongoose() {
                jalangiLabel2565:
                    while (true) {
                        try {
                            J$.Fe(889, arguments.callee, this, arguments);
                            arguments = J$.N(897, 'arguments', arguments, 4);
                            J$.N(905, 'conn', conn, 0);
                            J$.X1(673, J$.P(665, J$.R(649, 'this', this, 0), 'connections', J$.T(657, [], 10, false), 0));
                            J$.X1(705, J$.P(697, J$.R(681, 'this', this, 0), 'plugins', J$.T(689, [], 10, false), 0));
                            J$.X1(737, J$.P(729, J$.R(713, 'this', this, 0), 'models', J$.T(721, {}, 11, false), 0));
                            J$.X1(769, J$.P(761, J$.R(745, 'this', this, 0), 'modelSchemas', J$.T(753, {}, 11, false), 0));
                            J$.X1(809, J$.P(801, J$.R(777, 'this', this, 0), 'options', J$.T(793, {
                                pluralization: J$.T(785, true, 23, false)
                            }, 11, false), 0));
                            var conn = J$.X1(841, J$.W(833, 'conn', J$.M(825, J$.R(817, 'this', this, 0), 'createConnection', 0)(), conn, 1));
                            J$.X1(881, J$.P(873, J$.R(849, 'conn', conn, 0), 'models', J$.G(865, J$.R(857, 'this', this, 0), 'models', 0), 0));
                        } catch (J$e) {
                            J$.Ex(6457, J$e);
                        } finally {
                            if (J$.Fr(6465))
                                continue jalangiLabel2565;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(6265, '__secret__S$', __secret__S$, 0);
            J$.N(6273, '__secret__traits__', __secret__traits__, 0);
            J$.N(6281, 'Schema', Schema, 0);
            J$.N(6289, 'SchemaType', SchemaType, 0);
            J$.N(6297, 'VirtualType', VirtualType, 0);
            J$.N(6305, 'STATES', STATES, 0);
            J$.N(6313, 'Types', Types, 0);
            J$.N(6321, 'Query', Query, 0);
            J$.N(6329, 'Model', Model, 0);
            J$.N(6337, 'Document', Document, 0);
            J$.N(6345, 'utils', utils, 0);
            J$.N(6353, 'format', format, 0);
            J$.N(6361, 'pkg', pkg, 0);
            J$.N(6369, 'querystring', querystring, 0);
            J$.N(6377, 'Aggregate', Aggregate, 0);
            J$.N(6385, 'PromiseProvider', PromiseProvider, 0);
            Mongoose = J$.N(6401, 'Mongoose', J$.T(6393, Mongoose, 12, false, 889), 0);
            J$.N(6409, 'rgxReplSet', rgxReplSet, 0);
            J$.N(6417, 'checkReplicaSetInUri', checkReplicaSetInUri, 0);
            J$.N(6425, 'driver', driver, 0);
            J$.N(6433, 'Connection', Connection, 0);
            J$.N(6441, 'Collection', Collection, 0);
            J$.N(6449, 'mongoose', mongoose, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var Schema = J$.X1(361, J$.W(353, 'Schema', J$.F(113, J$.R(97, 'require', require, 2), 0)(J$.T(105, './schema', 21, false)), Schema, 3)), SchemaType = J$.X1(377, J$.W(369, 'SchemaType', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, './schematype', 21, false)), SchemaType, 3)), VirtualType = J$.X1(393, J$.W(385, 'VirtualType', J$.F(161, J$.R(145, 'require', require, 2), 0)(J$.T(153, './virtualtype', 21, false)), VirtualType, 3)), STATES = J$.X1(409, J$.W(401, 'STATES', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, './connectionstate', 21, false)), STATES, 3)), Types = J$.X1(425, J$.W(417, 'Types', J$.F(209, J$.R(193, 'require', require, 2), 0)(J$.T(201, './types', 21, false)), Types, 3)), Query = J$.X1(441, J$.W(433, 'Query', J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, './query', 21, false)), Query, 3)), Model = J$.X1(457, J$.W(449, 'Model', J$.F(257, J$.R(241, 'require', require, 2), 0)(J$.T(249, './model', 21, false)), Model, 3)), Document = J$.X1(473, J$.W(465, 'Document', J$.F(281, J$.R(265, 'require', require, 2), 0)(J$.T(273, './document', 21, false)), Document, 3)), utils = J$.X1(489, J$.W(481, 'utils', J$.F(305, J$.R(289, 'require', require, 2), 0)(J$.T(297, './utils', 21, false)), utils, 3)), format = J$.X1(505, J$.W(497, 'format', J$.G(321, J$.R(313, 'utils', utils, 1), 'toCollectionName', 0), format, 3)), pkg = J$.X1(521, J$.W(513, 'pkg', J$.F(345, J$.R(329, 'require', require, 2), 0)(J$.T(337, '../package.json', 21, false)), pkg, 3));
            var querystring = J$.X1(561, J$.W(553, 'querystring', J$.F(545, J$.R(529, 'require', require, 2), 0)(J$.T(537, 'querystring', 21, false)), querystring, 3));
            var Aggregate = J$.X1(601, J$.W(593, 'Aggregate', J$.F(585, J$.R(569, 'require', require, 2), 0)(J$.T(577, './aggregate', 21, false)), Aggregate, 3));
            var PromiseProvider = J$.X1(641, J$.W(633, 'PromiseProvider', J$.F(625, J$.R(609, 'require', require, 2), 0)(J$.T(617, './promise_provider', 21, false)), PromiseProvider, 3));
            J$.X1(945, J$.P(937, J$.G(921, J$.R(913, 'Mongoose', Mongoose, 1), 'prototype', 0), 'STATES', J$.R(929, 'STATES', STATES, 1), 0));
            J$.X1(1161, J$.P(1153, J$.G(961, J$.R(953, 'Mongoose', Mongoose, 1), 'prototype', 0), 'set', J$.T(1145, function (key, value) {
                jalangiLabel2566:
                    while (true) {
                        try {
                            J$.Fe(1113, arguments.callee, this, arguments);
                            arguments = J$.N(1121, 'arguments', arguments, 4);
                            key = J$.N(1129, 'key', key, 4);
                            value = J$.N(1137, 'value', value, 4);
                            if (J$.X1(6473, J$.C(8, J$.B(10, '==', J$.G(977, J$.R(969, 'arguments', arguments, 2), 'length', 0), J$.T(985, 1, 22, false), 0)))) {
                                return J$.X1(1033, J$.Rt(1025, J$.G(1017, J$.G(1001, J$.R(993, 'this', this, 0), 'options', 0), J$.R(1009, 'key', key, 0), 4)));
                            }
                            J$.X1(1081, J$.P(1073, J$.G(1049, J$.R(1041, 'this', this, 0), 'options', 0), J$.R(1057, 'key', key, 0), J$.R(1065, 'value', value, 0), 2));
                            return J$.X1(1105, J$.Rt(1097, J$.R(1089, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(6481, J$e);
                        } finally {
                            if (J$.Fr(6489))
                                continue jalangiLabel2566;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1113), 0));
            J$.X1(1217, J$.P(1209, J$.G(1177, J$.R(1169, 'Mongoose', Mongoose, 1), 'prototype', 0), 'get', J$.G(1201, J$.G(1193, J$.R(1185, 'Mongoose', Mongoose, 1), 'prototype', 0), 'set', 0), 0));
            var rgxReplSet = J$.X1(1241, J$.W(1233, 'rgxReplSet', J$.T(1225, /^.+,.+$/, 14, false), rgxReplSet, 3));
            var checkReplicaSetInUri = J$.X1(1593, J$.W(1585, 'checkReplicaSetInUri', J$.T(1577, function (uri) {
                jalangiLabel2567:
                    while (true) {
                        try {
                            J$.Fe(1529, arguments.callee, this, arguments);
                            arguments = J$.N(1537, 'arguments', arguments, 4);
                            uri = J$.N(1545, 'uri', uri, 4);
                            J$.N(1553, 'queryStringStart', queryStringStart, 0);
                            J$.N(1561, 'isReplicaSet', isReplicaSet, 0);
                            J$.N(1569, 'obj', obj, 0);
                            if (J$.X1(6497, J$.C(16, J$.U(18, '!', J$.R(1249, 'uri', uri, 0))))) {
                                return J$.X1(1273, J$.Rt(1265, J$.T(1257, false, 23, false)));
                            }
                            var queryStringStart = J$.X1(1313, J$.W(1305, 'queryStringStart', J$.M(1297, J$.R(1281, 'uri', uri, 0), 'indexOf', 0)(J$.T(1289, '?', 21, false)), queryStringStart, 1));
                            var isReplicaSet = J$.X1(1337, J$.W(1329, 'isReplicaSet', J$.T(1321, false, 23, false), isReplicaSet, 1));
                            if (J$.X1(6513, J$.C(40, J$.B(34, '!==', J$.R(1345, 'queryStringStart', queryStringStart, 0), J$.U(26, '-', J$.T(1353, 1, 22, false)), 0)))) {
                                try {
                                    var obj = J$.X1(1417, J$.W(1409, 'obj', J$.M(1401, J$.R(1361, 'querystring', querystring, 1), 'parse', 0)(J$.M(1393, J$.R(1369, 'uri', uri, 0), 'substr', 0)(J$.B(42, '+', J$.R(1377, 'queryStringStart', queryStringStart, 0), J$.T(1385, 1, 22, false), 0))), obj, 1));
                                    if (J$.X1(6505, J$.C(32, J$.C(24, J$.R(1425, 'obj', obj, 0)) ? J$.G(1441, J$.R(1433, 'obj', obj, 0), 'replicaSet', 0) : J$._()))) {
                                        J$.X1(1465, isReplicaSet = J$.W(1457, 'isReplicaSet', J$.T(1449, true, 23, false), isReplicaSet, 0));
                                    }
                                } catch (e) {
                                    e = J$.N(1497, 'e', e, 1);
                                    return J$.X1(1489, J$.Rt(1481, J$.T(1473, false, 23, false)));
                                }
                            }
                            return J$.X1(1521, J$.Rt(1513, J$.R(1505, 'isReplicaSet', isReplicaSet, 0)));
                        } catch (J$e) {
                            J$.Ex(6521, J$e);
                        } finally {
                            if (J$.Fr(6529))
                                continue jalangiLabel2567;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1529), checkReplicaSetInUri, 3));
            J$.X1(2089, J$.P(2081, J$.G(1609, J$.R(1601, 'Mongoose', Mongoose, 1), 'prototype', 0), 'createConnection', J$.T(2073, function (uri, options) {
                jalangiLabel2568:
                    while (true) {
                        try {
                            J$.Fe(2033, arguments.callee, this, arguments);
                            arguments = J$.N(2041, 'arguments', arguments, 4);
                            uri = J$.N(2049, 'uri', uri, 4);
                            options = J$.N(2057, 'options', options, 4);
                            J$.N(2065, 'conn', conn, 0);
                            var conn = J$.X1(1649, J$.W(1641, 'conn', J$.F(1633, J$.R(1617, 'Connection', Connection, 1), 1)(J$.R(1625, 'this', this, 0)), conn, 1));
                            J$.X1(1689, J$.M(1681, J$.G(1665, J$.R(1657, 'this', this, 0), 'connections', 0), 'push', 0)(J$.R(1673, 'conn', conn, 0)));
                            if (J$.X1(6553, J$.C(96, J$.G(1705, J$.R(1697, 'arguments', arguments, 2), 'length', 0)))) {
                                if (J$.X1(6545, J$.C(88, J$.C(48, J$.M(1745, J$.R(1713, 'rgxReplSet', rgxReplSet, 1), 'test', 0)(J$.G(1737, J$.R(1721, 'arguments', arguments, 2), J$.T(1729, 0, 22, false), 4))) ? J$._() : J$.F(1785, J$.R(1753, 'checkReplicaSetInUri', checkReplicaSetInUri, 1), 0)(J$.G(1777, J$.R(1761, 'arguments', arguments, 2), J$.T(1769, 0, 22, false), 4))))) {
                                    J$.X1(1833, J$.M(1825, J$.G(1801, J$.R(1793, 'conn', conn, 0), 'openSet', 0), 'apply', 0)(J$.R(1809, 'conn', conn, 0), J$.R(1817, 'arguments', arguments, 2)));
                                } else if (J$.X1(6537, J$.C(80, J$.C(72, J$.C(56, J$.R(1841, 'options', options, 0)) ? J$.G(1857, J$.R(1849, 'options', options, 0), 'replset', 0) : J$._()) ? J$.C(64, J$.G(1881, J$.G(1873, J$.R(1865, 'options', options, 0), 'replset', 0), 'replicaSet', 0)) ? J$._() : J$.G(1905, J$.G(1897, J$.R(1889, 'options', options, 0), 'replset', 0), 'rs_name', 0) : J$._()))) {
                                    J$.X1(1953, J$.M(1945, J$.G(1921, J$.R(1913, 'conn', conn, 0), 'openSet', 0), 'apply', 0)(J$.R(1929, 'conn', conn, 0), J$.R(1937, 'arguments', arguments, 2)));
                                } else {
                                    J$.X1(2001, J$.M(1993, J$.G(1969, J$.R(1961, 'conn', conn, 0), 'open', 0), 'apply', 0)(J$.R(1977, 'conn', conn, 0), J$.R(1985, 'arguments', arguments, 2)));
                                }
                            }
                            return J$.X1(2025, J$.Rt(2017, J$.R(2009, 'conn', conn, 0)));
                        } catch (J$e) {
                            J$.Ex(6561, J$e);
                        } finally {
                            if (J$.Fr(6569))
                                continue jalangiLabel2568;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2033), 0));
            J$.X1(2385, J$.P(2377, J$.G(2105, J$.R(2097, 'Mongoose', Mongoose, 1), 'prototype', 0), 'connect', J$.T(2369, function () {
                jalangiLabel2569:
                    while (true) {
                        try {
                            J$.Fe(2345, arguments.callee, this, arguments);
                            arguments = J$.N(2353, 'arguments', arguments, 4);
                            J$.N(2361, 'conn', conn, 0);
                            var conn = J$.X1(2137, J$.W(2129, 'conn', J$.G(2121, J$.R(2113, 'this', this, 0), 'connection', 0), conn, 1));
                            if (J$.X1(6577, J$.C(112, J$.C(104, J$.M(2177, J$.R(2145, 'rgxReplSet', rgxReplSet, 1), 'test', 0)(J$.G(2169, J$.R(2153, 'arguments', arguments, 2), J$.T(2161, 0, 22, false), 4))) ? J$._() : J$.F(2217, J$.R(2185, 'checkReplicaSetInUri', checkReplicaSetInUri, 1), 0)(J$.G(2209, J$.R(2193, 'arguments', arguments, 2), J$.T(2201, 0, 22, false), 4))))) {
                                J$.X1(2265, J$.M(2257, J$.G(2233, J$.R(2225, 'conn', conn, 0), 'openSet', 0), 'apply', 0)(J$.R(2241, 'conn', conn, 0), J$.R(2249, 'arguments', arguments, 2)));
                            } else {
                                J$.X1(2313, J$.M(2305, J$.G(2281, J$.R(2273, 'conn', conn, 0), 'open', 0), 'apply', 0)(J$.R(2289, 'conn', conn, 0), J$.R(2297, 'arguments', arguments, 2)));
                            }
                            return J$.X1(2337, J$.Rt(2329, J$.R(2321, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(6585, J$e);
                        } finally {
                            if (J$.Fr(6593))
                                continue jalangiLabel2569;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2345), 0));
            J$.X1(2833, J$.P(2825, J$.G(2401, J$.R(2393, 'Mongoose', Mongoose, 1), 'prototype', 0), 'disconnect', J$.T(2817, function (fn) {
                jalangiLabel2572:
                    while (true) {
                        try {
                            J$.Fe(2777, arguments.callee, this, arguments);
                            arguments = J$.N(2785, 'arguments', arguments, 4);
                            fn = J$.N(2793, 'fn', fn, 4);
                            J$.N(2801, 'count', count, 0);
                            J$.N(2809, 'error', error, 0);
                            var count = J$.X1(2441, J$.W(2433, 'count', J$.G(2425, J$.G(2417, J$.R(2409, 'this', this, 0), 'connections', 0), 'length', 0), count, 1)), error;
                            J$.X1(2745, J$.M(2737, J$.G(2457, J$.R(2449, 'this', this, 0), 'connections', 0), 'forEach', 0)(J$.T(2729, function (conn) {
                                jalangiLabel2571:
                                    while (true) {
                                        try {
                                            J$.Fe(2705, arguments.callee, this, arguments);
                                            arguments = J$.N(2713, 'arguments', arguments, 4);
                                            conn = J$.N(2721, 'conn', conn, 4);
                                            J$.X1(2697, J$.M(2689, J$.R(2465, 'conn', conn, 0), 'close', 0)(J$.T(2681, function (err) {
                                                jalangiLabel2570:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(2657, arguments.callee, this, arguments);
                                                            arguments = J$.N(2665, 'arguments', arguments, 4);
                                                            err = J$.N(2673, 'err', err, 4);
                                                            if (J$.X1(6601, J$.C(120, J$.R(2473, 'error', error, 0))))
                                                                return J$.X1(2489, J$.Rt(2481, undefined));
                                                            if (J$.X1(6617, J$.C(136, J$.R(2497, 'err', err, 0)))) {
                                                                J$.X1(2521, error = J$.W(2513, 'error', J$.R(2505, 'err', err, 0), error, 0));
                                                                if (J$.X1(6609, J$.C(128, J$.R(2529, 'fn', fn, 0))))
                                                                    return J$.X1(2569, J$.Rt(2561, J$.F(2553, J$.R(2537, 'fn', fn, 0), 0)(J$.R(2545, 'err', err, 0))));
                                                                throw J$.X1(2593, J$.Th(2585, J$.R(2577, 'err', err, 0)));
                                                            }
                                                            if (J$.X1(6625, J$.C(152, J$.R(2601, 'fn', fn, 0))))
                                                                J$.X1(2649, J$.C(144, count = J$.W(2625, 'count', J$.B(58, '-', J$.U(50, '+', J$.R(2617, 'count', count, 0)), J$.T(2609, 1, 22, false), 0), count, 0)) ? J$._() : J$.F(2641, J$.R(2633, 'fn', fn, 0), 0)());
                                                        } catch (J$e) {
                                                            J$.Ex(6633, J$e);
                                                        } finally {
                                                            if (J$.Fr(6641))
                                                                continue jalangiLabel2570;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 2657)));
                                        } catch (J$e) {
                                            J$.Ex(6649, J$e);
                                        } finally {
                                            if (J$.Fr(6657))
                                                continue jalangiLabel2571;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2705)));
                            return J$.X1(2769, J$.Rt(2761, J$.R(2753, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(6665, J$e);
                        } finally {
                            if (J$.Fr(6673))
                                continue jalangiLabel2572;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2777), 0));
            J$.X1(4369, J$.P(4361, J$.G(2849, J$.R(2841, 'Mongoose', Mongoose, 1), 'prototype', 0), 'model', J$.T(4353, function (name, schema, collection, skipInit) {
                jalangiLabel2573:
                    while (true) {
                        try {
                            J$.Fe(4273, arguments.callee, this, arguments);
                            arguments = J$.N(4281, 'arguments', arguments, 4);
                            name = J$.N(4289, 'name', name, 4);
                            schema = J$.N(4297, 'schema', schema, 4);
                            collection = J$.N(4305, 'collection', collection, 4);
                            skipInit = J$.N(4313, 'skipInit', skipInit, 4);
                            J$.N(4321, 'options', options, 0);
                            J$.N(4329, 'model', model, 0);
                            J$.N(4337, 'sub', sub, 0);
                            J$.N(4345, 'connection', connection, 0);
                            if (J$.X1(6681, J$.C(160, J$.B(74, '==', J$.T(2857, 'string', 21, false), J$.U(66, 'typeof', J$.R(2865, 'schema', schema, 0)), 0)))) {
                                J$.X1(2889, collection = J$.W(2881, 'collection', J$.R(2873, 'schema', schema, 0), collection, 0));
                                J$.X1(2913, schema = J$.W(2905, 'schema', J$.T(2897, false, 23, false), schema, 0));
                            }
                            if (J$.X1(6689, J$.C(176, J$.C(168, J$.M(2937, J$.R(2921, 'utils', utils, 1), 'isObject', 0)(J$.R(2929, 'schema', schema, 0))) ? J$.U(90, '!', J$.B(82, 'instanceof', J$.R(2945, 'schema', schema, 0), J$.R(2953, 'Schema', Schema, 1), 0)) : J$._()))) {
                                J$.X1(2993, schema = J$.W(2985, 'schema', J$.F(2977, J$.R(2961, 'Schema', Schema, 1), 1)(J$.R(2969, 'schema', schema, 0)), schema, 0));
                            }
                            if (J$.X1(6697, J$.C(184, J$.B(106, '===', J$.T(3001, 'boolean', 21, false), J$.U(98, 'typeof', J$.R(3009, 'collection', collection, 0)), 0)))) {
                                J$.X1(3033, skipInit = J$.W(3025, 'skipInit', J$.R(3017, 'collection', collection, 0), skipInit, 0));
                                J$.X1(3057, collection = J$.W(3049, 'collection', J$.T(3041, null, 25, false), collection, 0));
                            }
                            var options;
                            if (J$.X1(6705, J$.C(200, J$.C(192, J$.R(3065, 'skipInit', skipInit, 0)) ? J$.M(3089, J$.R(3073, 'utils', utils, 1), 'isObject', 0)(J$.R(3081, 'skipInit', skipInit, 0)) : J$._()))) {
                                J$.X1(3113, options = J$.W(3105, 'options', J$.R(3097, 'skipInit', skipInit, 0), options, 0));
                                J$.X1(3137, skipInit = J$.W(3129, 'skipInit', J$.T(3121, true, 23, false), skipInit, 0));
                            } else {
                                J$.X1(3161, options = J$.W(3153, 'options', J$.T(3145, {}, 11, false), options, 0));
                            }
                            if (J$.X1(6721, J$.C(216, J$.U(114, '!', J$.G(3193, J$.G(3177, J$.R(3169, 'this', this, 0), 'modelSchemas', 0), J$.R(3185, 'name', name, 0), 4))))) {
                                if (J$.X1(6713, J$.C(208, J$.R(3201, 'schema', schema, 0)))) {
                                    J$.X1(3249, J$.P(3241, J$.G(3217, J$.R(3209, 'this', this, 0), 'modelSchemas', 0), J$.R(3225, 'name', name, 0), J$.R(3233, 'schema', schema, 0), 2));
                                    J$.X1(3281, J$.M(3273, J$.R(3257, 'this', this, 0), '_applyPlugins', 0)(J$.R(3265, 'schema', schema, 0)));
                                } else {
                                    throw J$.X1(3329, J$.Th(3321, J$.M(3313, J$.G(3297, J$.R(3289, 'mongoose', mongoose, 1), 'Error', 0), 'MissingSchemaError', 2)(J$.R(3305, 'name', name, 0))));
                                }
                            }
                            var model;
                            var sub;
                            if (J$.X1(6745, J$.C(256, J$.C(224, J$.G(3361, J$.G(3345, J$.R(3337, 'this', this, 0), 'models', 0), J$.R(3353, 'name', name, 0), 4)) ? J$.B(122, '!==', J$.T(3369, false, 23, false), J$.G(3385, J$.R(3377, 'options', options, 0), 'cache', 0), 0) : J$._()))) {
                                if (J$.X1(6729, J$.C(240, J$.C(232, J$.B(130, 'instanceof', J$.R(3393, 'schema', schema, 0), J$.R(3401, 'Schema', Schema, 1), 0)) ? J$.B(138, '!=', J$.R(3409, 'schema', schema, 0), J$.G(3449, J$.G(3441, J$.G(3425, J$.R(3417, 'this', this, 0), 'models', 0), J$.R(3433, 'name', name, 0), 4), 'schema', 0), 0) : J$._()))) {
                                    throw J$.X1(3497, J$.Th(3489, J$.M(3481, J$.G(3465, J$.R(3457, 'mongoose', mongoose, 1), 'Error', 0), 'OverwriteModelError', 2)(J$.R(3473, 'name', name, 0))));
                                }
                                if (J$.X1(6737, J$.C(248, J$.R(3505, 'collection', collection, 0)))) {
                                    J$.X1(3553, model = J$.W(3545, 'model', J$.G(3537, J$.G(3521, J$.R(3513, 'this', this, 0), 'models', 0), J$.R(3529, 'name', name, 0), 4), model, 0));
                                    J$.X1(3593, schema = J$.W(3585, 'schema', J$.G(3577, J$.G(3569, J$.R(3561, 'model', model, 0), 'prototype', 0), 'schema', 0), schema, 0));
                                    J$.X1(3657, sub = J$.W(3649, 'sub', J$.M(3641, J$.R(3601, 'model', model, 0), '__subclass', 0)(J$.G(3617, J$.R(3609, 'this', this, 0), 'connection', 0), J$.R(3625, 'schema', schema, 0), J$.R(3633, 'collection', collection, 0)), sub, 0));
                                    return J$.X1(3681, J$.Rt(3673, J$.R(3665, 'sub', sub, 0)));
                                }
                                return J$.X1(3729, J$.Rt(3721, J$.G(3713, J$.G(3697, J$.R(3689, 'this', this, 0), 'models', 0), J$.R(3705, 'name', name, 0), 4)));
                            }
                            if (J$.X1(6761, J$.C(272, J$.U(146, '!', J$.R(3737, 'schema', schema, 0))))) {
                                J$.X1(3785, schema = J$.W(3777, 'schema', J$.G(3769, J$.G(3753, J$.R(3745, 'this', this, 0), 'modelSchemas', 0), J$.R(3761, 'name', name, 0), 4), schema, 0));
                                if (J$.X1(6753, J$.C(264, J$.U(154, '!', J$.R(3793, 'schema', schema, 0))))) {
                                    throw J$.X1(3841, J$.Th(3833, J$.M(3825, J$.G(3809, J$.R(3801, 'mongoose', mongoose, 1), 'Error', 0), 'MissingSchemaError', 2)(J$.R(3817, 'name', name, 0))));
                                }
                            }
                            if (J$.X1(6769, J$.C(280, J$.U(170, '!', J$.B(162, 'in', J$.T(3849, 'pluralization', 21, false), J$.G(3865, J$.R(3857, 'schema', schema, 0), 'options', 0), 0)))))
                                J$.X1(3921, J$.P(3913, J$.G(3881, J$.R(3873, 'schema', schema, 0), 'options', 0), 'pluralization', J$.G(3905, J$.G(3897, J$.R(3889, 'this', this, 0), 'options', 0), 'pluralization', 0), 0));
                            if (J$.X1(6777, J$.C(296, J$.U(178, '!', J$.R(3929, 'collection', collection, 0))))) {
                                J$.X1(4009, collection = J$.W(4001, 'collection', J$.C(288, J$.M(3953, J$.R(3937, 'schema', schema, 0), 'get', 0)(J$.T(3945, 'collection', 21, false))) ? J$._() : J$.F(3993, J$.R(3961, 'format', format, 1), 0)(J$.R(3969, 'name', name, 0), J$.G(3985, J$.R(3977, 'schema', schema, 0), 'options', 0)), collection, 0));
                            }
                            var connection = J$.X1(4057, J$.W(4049, 'connection', J$.C(304, J$.G(4025, J$.R(4017, 'options', options, 0), 'connection', 0)) ? J$._() : J$.G(4041, J$.R(4033, 'this', this, 0), 'connection', 0), connection, 1));
                            J$.X1(4129, model = J$.W(4121, 'model', J$.M(4113, J$.R(4065, 'Model', Model, 1), 'compile', 0)(J$.R(4073, 'name', name, 0), J$.R(4081, 'schema', schema, 0), J$.R(4089, 'collection', collection, 0), J$.R(4097, 'connection', connection, 0), J$.R(4105, 'this', this, 0)), model, 0));
                            if (J$.X1(6785, J$.C(312, J$.U(186, '!', J$.R(4137, 'skipInit', skipInit, 0))))) {
                                J$.X1(4161, J$.M(4153, J$.R(4145, 'model', model, 0), 'init', 0)());
                            }
                            if (J$.X1(6793, J$.C(320, J$.B(194, '===', J$.T(4169, false, 23, false), J$.G(4185, J$.R(4177, 'options', options, 0), 'cache', 0), 0)))) {
                                return J$.X1(4209, J$.Rt(4201, J$.R(4193, 'model', model, 0)));
                            }
                            return J$.X1(4265, J$.Rt(4257, J$.P(4249, J$.G(4225, J$.R(4217, 'this', this, 0), 'models', 0), J$.R(4233, 'name', name, 0), J$.R(4241, 'model', model, 0), 2)));
                        } catch (J$e) {
                            J$.Ex(6801, J$e);
                        } finally {
                            if (J$.Fr(6809))
                                continue jalangiLabel2573;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4273), 0));
            J$.X1(4505, J$.P(4497, J$.G(4385, J$.R(4377, 'Mongoose', Mongoose, 1), 'prototype', 0), 'modelNames', J$.T(4489, function () {
                jalangiLabel2574:
                    while (true) {
                        try {
                            J$.Fe(4465, arguments.callee, this, arguments);
                            arguments = J$.N(4473, 'arguments', arguments, 4);
                            J$.N(4481, 'names', names, 0);
                            var names = J$.X1(4433, J$.W(4425, 'names', J$.M(4417, J$.R(4393, 'Object', Object, 2), 'keys', 0)(J$.G(4409, J$.R(4401, 'this', this, 0), 'models', 0)), names, 1));
                            return J$.X1(4457, J$.Rt(4449, J$.R(4441, 'names', names, 0)));
                        } catch (J$e) {
                            J$.Ex(6817, J$e);
                        } finally {
                            if (J$.Fr(6825))
                                continue jalangiLabel2574;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4465), 0));
            J$.X1(4817, J$.P(4809, J$.G(4521, J$.R(4513, 'Mongoose', Mongoose, 1), 'prototype', 0), '_applyPlugins', J$.T(4801, function (schema) {
                jalangiLabel2575:
                    while (true) {
                        try {
                            J$.Fe(4761, arguments.callee, this, arguments);
                            arguments = J$.N(4769, 'arguments', arguments, 4);
                            schema = J$.N(4777, 'schema', schema, 4);
                            J$.N(4785, 'i', i, 0);
                            J$.N(4793, 'l', l, 0);
                            for (var i = J$.X1(4569, J$.W(4561, 'i', J$.T(4529, 0, 22, false), i, 1)), l = J$.X1(4585, J$.W(4577, 'l', J$.G(4553, J$.G(4545, J$.R(4537, 'this', this, 0), 'plugins', 0), 'length', 0), l, 1)); J$.X1(6833, J$.C(328, J$.B(202, '<', J$.R(4593, 'i', i, 0), J$.R(4601, 'l', l, 0), 0))); J$.X1(6841, J$.B(226, '-', i = J$.W(4625, 'i', J$.B(218, '+', J$.U(210, '+', J$.R(4617, 'i', i, 0)), J$.T(4609, 1, 22, false), 0), i, 0), J$.T(4633, 1, 22, false), 0))) {
                                J$.X1(4753, J$.M(4745, J$.R(4641, 'schema', schema, 0), 'plugin', 0)(J$.G(4689, J$.G(4673, J$.G(4657, J$.R(4649, 'this', this, 0), 'plugins', 0), J$.R(4665, 'i', i, 0), 4), J$.T(4681, 0, 22, false), 4), J$.G(4737, J$.G(4721, J$.G(4705, J$.R(4697, 'this', this, 0), 'plugins', 0), J$.R(4713, 'i', i, 0), 4), J$.T(4729, 1, 22, false), 4)));
                            }
                        } catch (J$e) {
                            J$.Ex(6849, J$e);
                        } finally {
                            if (J$.Fr(6857))
                                continue jalangiLabel2575;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4761), 0));
            J$.X1(4969, J$.P(4961, J$.G(4833, J$.R(4825, 'Mongoose', Mongoose, 1), 'prototype', 0), 'plugin', J$.T(4953, function (fn, opts) {
                jalangiLabel2576:
                    while (true) {
                        try {
                            J$.Fe(4921, arguments.callee, this, arguments);
                            arguments = J$.N(4929, 'arguments', arguments, 4);
                            fn = J$.N(4937, 'fn', fn, 4);
                            opts = J$.N(4945, 'opts', opts, 4);
                            J$.X1(4889, J$.M(4881, J$.G(4849, J$.R(4841, 'this', this, 0), 'plugins', 0), 'push', 0)(J$.T(4873, [
                                J$.R(4857, 'fn', fn, 0),
                                J$.R(4865, 'opts', opts, 0)
                            ], 10, false)));
                            return J$.X1(4913, J$.Rt(4905, J$.R(4897, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(6865, J$e);
                        } finally {
                            if (J$.Fr(6873))
                                continue jalangiLabel2576;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4921), 0));
            J$.X1(5081, J$.M(5073, J$.G(4985, J$.R(4977, 'Mongoose', Mongoose, 1), 'prototype', 0), '__defineGetter__', 0)(J$.T(4993, 'connection', 21, false), J$.T(5065, function () {
                jalangiLabel2577:
                    while (true) {
                        try {
                            J$.Fe(5049, arguments.callee, this, arguments);
                            arguments = J$.N(5057, 'arguments', arguments, 4);
                            return J$.X1(5041, J$.Rt(5033, J$.G(5025, J$.G(5009, J$.R(5001, 'this', this, 0), 'connections', 0), J$.T(5017, 0, 22, false), 4)));
                        } catch (J$e) {
                            J$.Ex(6881, J$e);
                        } finally {
                            if (J$.Fr(6889))
                                continue jalangiLabel2577;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5049)));
            var driver = J$.X1(5121, J$.W(5113, 'driver', J$.C(336, J$.G(5097, J$.R(5089, 'global', global, 2), 'MONGOOSE_DRIVER_PATH', 0)) ? J$._() : J$.T(5105, './drivers/node-mongodb-native', 21, false), driver, 3));
            var Connection = J$.X1(5169, J$.W(5161, 'Connection', J$.F(5153, J$.R(5129, 'require', require, 2), 0)(J$.B(234, '+', J$.R(5137, 'driver', driver, 1), J$.T(5145, '/connection', 21, false), 0)), Connection, 3));
            var Collection = J$.X1(5217, J$.W(5209, 'Collection', J$.F(5201, J$.R(5177, 'require', require, 2), 0)(J$.B(242, '+', J$.R(5185, 'driver', driver, 1), J$.T(5193, '/collection', 21, false), 0)), Collection, 3));
            J$.X1(5257, J$.P(5249, J$.G(5233, J$.R(5225, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Aggregate', J$.R(5241, 'Aggregate', Aggregate, 1), 0));
            J$.X1(5297, J$.P(5289, J$.G(5273, J$.R(5265, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Collection', J$.R(5281, 'Collection', Collection, 1), 0));
            J$.X1(5337, J$.P(5329, J$.G(5313, J$.R(5305, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Connection', J$.R(5321, 'Connection', Connection, 1), 0));
            J$.X1(5385, J$.P(5377, J$.G(5353, J$.R(5345, 'Mongoose', Mongoose, 1), 'prototype', 0), 'version', J$.G(5369, J$.R(5361, 'pkg', pkg, 1), 'version', 0), 0));
            J$.X1(5425, J$.P(5417, J$.G(5401, J$.R(5393, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Mongoose', J$.R(5409, 'Mongoose', Mongoose, 1), 0));
            J$.X1(5465, J$.P(5457, J$.G(5441, J$.R(5433, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Schema', J$.R(5449, 'Schema', Schema, 1), 0));
            J$.X1(5505, J$.P(5497, J$.G(5481, J$.R(5473, 'Mongoose', Mongoose, 1), 'prototype', 0), 'SchemaType', J$.R(5489, 'SchemaType', SchemaType, 1), 0));
            J$.X1(5553, J$.P(5545, J$.G(5521, J$.R(5513, 'Mongoose', Mongoose, 1), 'prototype', 0), 'SchemaTypes', J$.G(5537, J$.R(5529, 'Schema', Schema, 1), 'Types', 0), 0));
            J$.X1(5593, J$.P(5585, J$.G(5569, J$.R(5561, 'Mongoose', Mongoose, 1), 'prototype', 0), 'VirtualType', J$.R(5577, 'VirtualType', VirtualType, 1), 0));
            J$.X1(5633, J$.P(5625, J$.G(5609, J$.R(5601, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Types', J$.R(5617, 'Types', Types, 1), 0));
            J$.X1(5673, J$.P(5665, J$.G(5649, J$.R(5641, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Query', J$.R(5657, 'Query', Query, 1), 0));
            J$.X1(5849, J$.M(5841, J$.R(5681, 'Object', Object, 2), 'defineProperty', 0)(J$.G(5697, J$.R(5689, 'Mongoose', Mongoose, 1), 'prototype', 0), J$.T(5705, 'Promise', 21, false), J$.T(5833, {
                get: J$.T(5761, function () {
                    jalangiLabel2578:
                        while (true) {
                            try {
                                J$.Fe(5745, arguments.callee, this, arguments);
                                arguments = J$.N(5753, 'arguments', arguments, 4);
                                return J$.X1(5737, J$.Rt(5729, J$.M(5721, J$.R(5713, 'PromiseProvider', PromiseProvider, 1), 'get', 0)()));
                            } catch (J$e) {
                                J$.Ex(6897, J$e);
                            } finally {
                                if (J$.Fr(6905))
                                    continue jalangiLabel2578;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5745),
                set: J$.T(5825, function (lib) {
                    jalangiLabel2579:
                        while (true) {
                            try {
                                J$.Fe(5801, arguments.callee, this, arguments);
                                arguments = J$.N(5809, 'arguments', arguments, 4);
                                lib = J$.N(5817, 'lib', lib, 4);
                                J$.X1(5793, J$.M(5785, J$.R(5769, 'PromiseProvider', PromiseProvider, 1), 'set', 0)(J$.R(5777, 'lib', lib, 0)));
                            } catch (J$e) {
                                J$.Ex(6913, J$e);
                            } finally {
                                if (J$.Fr(6921))
                                    continue jalangiLabel2579;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5801)
            }, 11, false)));
            J$.X1(5889, J$.P(5881, J$.G(5865, J$.R(5857, 'Mongoose', Mongoose, 1), 'prototype', 0), 'PromiseProvider', J$.R(5873, 'PromiseProvider', PromiseProvider, 1), 0));
            J$.X1(5929, J$.P(5921, J$.G(5905, J$.R(5897, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Model', J$.R(5913, 'Model', Model, 1), 0));
            J$.X1(5969, J$.P(5961, J$.G(5945, J$.R(5937, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Document', J$.R(5953, 'Document', Document, 1), 0));
            J$.X1(6025, J$.P(6017, J$.G(5985, J$.R(5977, 'Mongoose', Mongoose, 1), 'prototype', 0), 'DocumentProvider', J$.F(6009, J$.R(5993, 'require', require, 2), 0)(J$.T(6001, './document_provider', 21, false)), 0));
            J$.X1(6081, J$.P(6073, J$.G(6041, J$.R(6033, 'Mongoose', Mongoose, 1), 'prototype', 0), 'Error', J$.F(6065, J$.R(6049, 'require', require, 2), 0)(J$.T(6057, './error', 21, false)), 0));
            J$.X1(6137, J$.P(6129, J$.G(6097, J$.R(6089, 'Mongoose', Mongoose, 1), 'prototype', 0), 'mongo', J$.F(6121, J$.R(6105, 'require', require, 2), 0)(J$.T(6113, 'mongodb', 21, false)), 0));
            J$.X1(6193, J$.P(6185, J$.G(6153, J$.R(6145, 'Mongoose', Mongoose, 1), 'prototype', 0), 'mquery', J$.F(6177, J$.R(6161, 'require', require, 2), 0)(J$.T(6169, 'mquery', 21, false)), 0));
            var mongoose = J$.X1(6249, J$.W(6241, 'mongoose', J$.P(6233, J$.R(6201, 'module', module, 2), 'exports', exports = J$.W(6225, 'exports', J$.F(6217, J$.R(6209, 'Mongoose', Mongoose, 1), 1)(), J$.I(typeof exports === 'undefined' ? undefined : exports), 4), 0), mongoose, 3));
        } catch (J$e) {
            J$.Ex(6929, J$e);
        } finally {
            if (J$.Sr(6937)) {
                J$.L();
                continue jalangiLabel2580;
            } else {
                J$.L();
                break jalangiLabel2580;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
