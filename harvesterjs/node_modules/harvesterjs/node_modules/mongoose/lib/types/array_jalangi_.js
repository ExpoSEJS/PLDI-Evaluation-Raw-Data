J$.iids = {"8":[22,21,22,36],"9":[1,20,1,27],"10":[22,21,22,36],"16":[28,9,28,39],"17":[1,28,1,32],"18":[22,38,22,41],"24":[28,9,28,39],"25":[1,20,1,33],"32":[43,39,43,65],"33":[1,20,1,33],"34":[28,16,28,39],"40":[42,17,42,23],"41":[1,20,1,33],"42":[42,17,42,23],"48":[41,13,41,25],"49":[2,26,2,38],"50":[47,26,47,39],"56":[47,13,47,39],"57":[2,26,2,45],"58":[49,43,49,68],"64":[49,17,49,68],"65":[2,26,2,45],"66":[49,72,49,94],"72":[49,17,49,94],"73":[2,26,2,45],"74":[52,79,52,130],"80":[49,17,49,94],"81":[3,24,3,31],"82":[53,17,53,24],"88":[52,26,52,75],"89":[3,32,3,44],"90":[65,21,65,41],"96":[52,26,52,130],"97":[3,24,3,45],"98":[66,33,66,48],"104":[53,17,53,24],"105":[3,24,3,45],"106":[66,33,66,69],"112":[47,13,47,39],"113":[3,24,3,45],"114":[66,33,66,75],"120":[65,21,65,41],"121":[4,16,4,23],"122":[66,33,66,90],"128":[64,17,64,33],"129":[4,24,4,37],"130":[68,33,68,48],"136":[62,13,62,19],"137":[4,16,4,38],"138":[68,33,68,55],"144":[76,13,76,25],"145":[4,16,4,38],"146":[76,13,76,25],"152":[81,13,81,49],"153":[4,16,4,38],"154":[81,13,81,25],"160":[81,13,81,49],"161":[5,16,5,23],"162":[81,31,81,48],"168":[87,35,87,82],"169":[5,24,5,36],"170":[81,29,81,49],"176":[87,13,87,82],"177":[5,16,5,37],"178":[87,68,87,81],"184":[87,13,87,82],"185":[5,16,5,37],"186":[87,66,87,82],"192":[92,13,92,51],"193":[5,16,5,37],"194":[92,13,92,30],"200":[92,13,92,73],"201":[6,13,6,20],"202":[92,34,92,51],"208":[93,13,93,46],"209":[6,21,6,31],"210":[92,55,92,73],"216":[96,26,96,69],"217":[6,13,6,32],"218":[95,20,95,38],"224":[98,28,98,65],"225":[6,13,6,32],"226":[97,17,97,51],"232":[103,28,103,76],"233":[6,13,6,32],"234":[115,13,115,20],"240":[97,17,97,51],"241":[7,24,7,29],"242":[125,16,125,19],"248":[95,20,95,38],"249":[7,24,7,46],"256":[92,13,92,73],"257":[7,24,7,46],"258":[125,16,125,19],"264":[115,13,115,20],"265":[7,24,7,46],"266":[141,17,141,34],"272":[138,24,138,35],"273":[9,15,9,17],"274":[152,32,152,75],"280":[133,24,133,42],"281":[9,25,9,31],"282":[152,13,152,76],"288":[128,17,128,38],"289":[9,15,9,32],"290":[158,32,158,51],"291":[9,15,9,24],"296":[141,17,141,34],"297":[9,15,9,32],"298":[190,38,190,40],"304":[125,16,125,19],"305":[9,15,9,32],"306":[205,16,205,19],"312":[152,15,152,75],"313":[10,5,10,10],"320":[152,13,152,76],"321":[10,20,10,23],"322":[205,16,205,19],"328":[178,13,178,25],"329":[10,25,10,38],"330":[207,17,207,40],"336":[192,13,192,26],"337":[10,25,10,44],"338":[213,24,213,54],"344":[208,21,210,23],"345":[10,5,10,45],"346":[217,13,217,50],"347":[10,5,10,19],"352":[213,24,213,54],"353":[10,5,10,46],"354":[231,25,231,45],"360":[207,17,207,40],"361":[11,5,11,8],"362":[231,47,231,50],"368":[205,16,205,19],"369":[11,27,11,31],"376":[219,24,219,34],"377":[11,5,11,31],"378":[232,27,232,32],"384":[217,13,217,50],"385":[11,5,11,32],"386":[232,91,232,96],"392":[232,27,232,32],"393":[13,21,13,26],"394":[232,75,232,97],"400":[231,25,231,45],"401":[14,23,14,27],"402":[258,20,258,57],"408":[229,13,229,29],"409":[15,19,15,23],"410":[258,68,258,93],"416":[258,68,258,93],"417":[12,20,16,6],"418":[268,27,268,29],"424":[258,20,258,57],"425":[12,20,16,6],"426":[270,28,270,30],"432":[261,21,261,25],"433":[12,20,16,6],"434":[270,28,270,38],"440":[262,18,262,23],"441":[17,16,17,22],"442":[274,25,274,41],"448":[267,18,267,24],"449":[17,28,17,41],"450":[276,17,276,23],"456":[276,17,276,23],"457":[17,28,17,47],"458":[287,17,287,64],"464":[287,17,287,64],"465":[17,16,17,48],"466":[295,24,295,47],"467":[17,16,17,27],"472":[293,13,293,42],"473":[18,9,18,26],"474":[304,13,304,36],"480":[295,24,295,47],"481":[19,9,19,21],"482":[306,44,306,51],"488":[293,13,293,42],"489":[20,9,20,16],"490":[306,53,306,56],"496":[304,13,304,36],"497":[17,56,21,6],"504":[307,17,307,31],"505":[17,16,21,7],"506":[307,17,307,31],"507":[17,16,17,55],"512":[306,44,306,51],"513":[17,16,21,7],"514":[311,16,311,18],"521":[17,16,21,7],"529":[22,18,22,19],"537":[22,18,22,19],"545":[22,18,22,19],"553":[22,21,22,22],"561":[22,25,22,29],"569":[22,25,22,36],"585":[22,40,22,41],"593":[22,38,22,41],"601":[23,9,23,15],"609":[23,31,23,34],"617":[23,36,23,40],"625":[23,41,23,42],"633":[23,36,23,43],"641":[23,45,23,53],"649":[23,9,23,54],"651":[23,9,23,30],"657":[23,9,23,55],"665":[25,5,25,8],"673":[25,20,25,22],"681":[25,5,25,22],"689":[25,5,25,23],"697":[26,5,26,8],"705":[26,22,26,24],"713":[26,5,26,24],"721":[26,5,26,25],"729":[27,5,27,8],"737":[27,17,27,21],"745":[27,5,27,21],"753":[27,5,27,22],"761":[28,9,28,12],"769":[28,16,28,19],"777":[28,31,28,39],"785":[29,9,29,12],"793":[29,23,29,26],"801":[29,9,29,26],"809":[29,9,29,27],"817":[30,9,30,12],"825":[30,23,30,26],"833":[30,23,30,33],"841":[30,39,30,43],"849":[30,23,30,44],"851":[30,23,30,38],"857":[30,9,30,44],"865":[30,9,30,45],"873":[32,12,32,15],"881":[32,12,32,15],"889":[32,5,32,16],"897":[8,1,33,2],"905":[8,1,33,2],"913":[8,1,33,2],"921":[8,1,33,2],"929":[8,1,33,2],"937":[8,1,33,2],"945":[8,1,33,2],"953":[8,1,33,2],"961":[8,1,33,2],"969":[34,1,34,14],"977":[35,15,35,24],"985":[36,14,36,23],"993":[38,21,38,25],"1001":[38,21,38,32],"1009":[38,21,38,32],"1017":[38,21,38,32],"1025":[39,25,39,30],"1033":[39,25,39,30],"1041":[39,25,39,30],"1049":[41,13,41,17],"1057":[41,13,41,25],"1065":[42,18,42,23],"1073":[43,25,43,29],"1081":[43,39,43,43],"1089":[43,39,43,51],"1097":[43,39,43,65],"1105":[43,68,43,72],"1113":[43,68,43,80],"1121":[43,68,43,96],"1123":[43,68,43,94],"1129":[43,99,43,103],"1137":[43,99,43,111],"1145":[43,25,43,111],"1153":[43,25,43,111],"1161":[43,17,43,112],"1169":[45,25,45,30],"1177":[45,41,45,45],"1185":[45,41,45,51],"1193":[45,53,45,57],"1201":[45,25,45,58],"1203":[45,25,45,40],"1209":[45,25,45,58],"1217":[45,13,45,59],"1225":[47,13,47,22],"1233":[47,26,47,30],"1241":[47,34,47,39],"1249":[48,21,48,30],"1257":[48,21,48,38],"1265":[48,21,48,44],"1273":[48,21,48,44],"1281":[48,13,48,45],"1289":[49,17,49,23],"1297":[49,33,49,38],"1305":[49,17,49,39],"1307":[49,17,49,32],"1313":[49,43,49,48],"1321":[49,60,49,68],"1329":[49,73,49,78],"1337":[49,88,49,93],"1345":[49,73,49,94],"1347":[49,73,49,87],"1353":[50,32,50,37],"1361":[50,25,50,39],"1369":[50,25,50,39],"1377":[50,17,50,40],"1385":[52,26,52,31],"1393":[52,26,52,38],"1401":[52,42,52,47],"1409":[52,42,52,54],"1417":[52,42,52,75],"1425":[52,79,52,84],"1433":[52,79,52,91],"1441":[52,79,52,112],"1449":[52,79,52,116],"1457":[52,121,52,130],"1465":[52,26,52,130],"1473":[52,26,52,130],"1481":[53,18,53,24],"1489":[54,29,54,34],"1497":[54,35,54,40],"1505":[54,25,54,41],"1513":[54,25,54,41],"1521":[54,17,54,42],"1529":[56,20,56,24],"1537":[56,20,56,32],"1545":[56,20,56,39],"1553":[56,45,56,50],"1561":[56,52,56,56],"1569":[56,52,56,64],"1577":[56,66,56,70],"1585":[56,20,56,71],"1587":[56,20,56,44],"1593":[56,20,56,71],"1601":[56,13,56,72],"1609":[58,16,58,20],"1617":[58,16,58,28],"1625":[58,16,58,35],"1633":[58,41,58,46],"1641":[58,48,58,52],"1649":[58,48,58,60],"1657":[58,62,58,67],"1665":[58,16,58,68],"1667":[58,16,58,40],"1673":[58,16,58,68],"1681":[58,9,58,69],"1689":[37,12,59,6],"1697":[37,12,59,6],"1705":[37,12,59,6],"1713":[37,12,59,6],"1721":[37,12,59,6],"1729":[37,12,59,6],"1737":[37,12,59,6],"1745":[37,12,59,6],"1753":[61,22,61,26],"1761":[61,22,61,34],"1769":[61,22,61,34],"1777":[61,22,61,34],"1785":[62,13,62,19],"1793":[63,25,63,29],"1801":[63,25,63,35],"1809":[63,25,63,35],"1817":[63,13,63,36],"1825":[64,17,64,26],"1833":[64,17,64,33],"1841":[65,21,65,25],"1849":[65,29,65,41],"1857":[66,33,66,42],"1865":[66,45,66,48],"1873":[66,51,66,55],"1881":[66,64,66,68],"1889":[66,51,66,69],"1891":[66,51,66,63],"1897":[66,72,66,75],"1905":[66,78,66,90],"1913":[66,33,66,90],"1921":[66,21,66,91],"1929":[68,33,68,42],"1937":[68,45,68,48],"1945":[68,51,68,55],"1953":[68,33,68,55],"1961":[68,21,68,56],"1969":[71,13,71,19],"1977":[71,33,71,42],"1985":[71,13,71,43],"1987":[71,13,71,32],"1993":[71,13,71,44],"2001":[73,16,73,20],"2009":[73,16,73,20],"2017":[73,9,73,21],"2025":[60,20,74,6],"2033":[60,20,74,6],"2041":[60,20,74,6],"2049":[60,20,74,6],"2057":[60,20,74,6],"2065":[60,20,74,6],"2073":[60,20,74,6],"2081":[76,13,76,19],"2089":[76,23,76,25],"2097":[77,13,77,17],"2105":[77,37,77,40],"2113":[77,29,77,42],"2121":[77,13,77,42],"2129":[77,13,77,43],"2137":[78,20,78,24],"2145":[78,20,78,24],"2153":[78,13,78,25],"2161":[80,23,80,27],"2169":[80,23,80,36],"2177":[80,23,80,36],"2185":[80,23,80,36],"2193":[81,13,81,19],"2201":[81,23,81,25],"2209":[81,31,81,37],"2217":[81,41,81,48],"2225":[82,24,82,28],"2233":[82,24,82,28],"2241":[82,24,82,28],"2249":[83,13,83,17],"2257":[83,13,83,25],"2265":[83,31,83,37],"2273":[84,17,84,21],"2281":[84,32,84,36],"2289":[84,48,84,52],"2297":[84,32,84,52],"2305":[84,17,84,52],"2313":[84,17,84,53],"2321":[83,39,85,14],"2329":[83,39,85,14],"2337":[83,39,85,14],"2345":[83,13,85,15],"2347":[83,13,83,30],"2353":[83,13,85,16],"2361":[87,13,87,17],"2369":[87,13,87,26],"2377":[87,13,87,31],"2385":[87,35,87,41],"2393":[87,47,87,54],"2401":[87,35,87,55],"2403":[87,35,87,46],"2409":[87,35,87,62],"2417":[87,68,87,70],"2425":[87,74,87,81],"2433":[88,13,88,17],"2441":[88,37,88,41],"2449":[88,29,88,43],"2457":[88,13,88,43],"2465":[88,13,88,44],"2473":[89,20,89,24],"2481":[89,20,89,24],"2489":[89,13,89,25],"2497":[92,13,92,15],"2505":[92,20,92,30],"2513":[92,34,92,36],"2521":[92,41,92,51],"2529":[92,55,92,57],"2537":[92,62,92,73],"2545":[93,13,93,20],"2553":[93,21,93,23],"2561":[93,13,93,24],"2569":[93,29,93,36],"2577":[93,37,93,39],"2585":[93,43,93,45],"2593":[93,29,93,45],"2601":[93,13,93,47],"2609":[94,13,94,20],"2617":[94,21,94,23],"2625":[94,27,94,34],"2633":[94,35,94,37],"2641":[94,27,94,38],"2649":[94,46,94,49],"2657":[94,27,94,50],"2659":[94,27,94,45],"2665":[94,13,94,50],"2673":[94,13,94,51],"2681":[95,20,95,22],"2689":[95,27,95,38],"2697":[96,26,96,33],"2705":[96,34,96,41],"2713":[96,26,96,42],"2721":[96,47,96,54],"2729":[96,55,96,62],"2737":[96,66,96,68],"2745":[96,47,96,68],"2753":[96,26,96,69],"2761":[96,26,96,69],"2769":[97,17,97,20],"2777":[97,21,97,22],"2785":[97,17,97,23],"2793":[97,35,97,51],"2801":[98,28,98,34],"2809":[98,35,98,40],"2817":[98,28,98,41],"2825":[98,46,98,52],"2833":[98,53,98,58],"2841":[98,62,98,64],"2849":[98,46,98,64],"2857":[98,28,98,65],"2865":[98,17,98,66],"2873":[99,17,99,22],"2881":[99,17,99,32],"2889":[99,17,99,37],"2897":[99,44,99,52],"2905":[99,54,99,57],"2913":[100,28,100,29],"2921":[100,51,100,56],"2929":[100,39,100,58],"2937":[100,28,100,59],"2939":[100,28,100,38],"2945":[100,28,100,59],"2953":[100,21,100,60],"2961":[99,62,101,18],"2969":[99,62,101,18],"2977":[99,62,101,18],"2985":[99,62,101,18],"2993":[99,54,101,19],"2995":[99,54,99,61],"3001":[99,17,101,20],"3003":[99,17,99,43],"3009":[99,17,101,21],"3017":[103,28,103,34],"3025":[103,35,103,40],"3033":[103,28,103,41],"3041":[103,46,103,52],"3049":[103,53,103,58],"3057":[103,71,103,73],"3065":[103,62,103,75],"3073":[103,46,103,75],"3081":[103,28,103,76],"3089":[103,17,103,77],"3097":[104,17,104,25],"3105":[104,26,104,31],"3113":[104,35,104,43],"3121":[104,44,104,49],"3129":[104,35,104,50],"3137":[104,58,104,61],"3145":[104,35,104,62],"3147":[104,35,104,57],"3153":[104,17,104,62],"3161":[104,17,104,63],"3169":[107,13,107,20],"3177":[107,21,107,23],"3185":[107,27,107,30],"3193":[107,13,107,30],"3201":[107,13,107,31],"3209":[109,16,109,20],"3217":[109,16,109,20],"3225":[109,9,109,21],"3233":[75,22,110,6],"3241":[75,22,110,6],"3249":[75,22,110,6],"3257":[75,22,110,6],"3265":[75,22,110,6],"3273":[75,22,110,6],"3281":[75,22,110,6],"3289":[75,22,110,6],"3297":[75,22,110,6],"3305":[112,19,112,21],"3313":[112,19,112,21],"3321":[112,19,112,21],"3329":[113,20,113,26],"3337":[113,32,113,36],"3345":[113,32,113,45],"3353":[113,20,113,46],"3355":[113,20,113,31],"3361":[113,20,113,46],"3369":[113,20,113,46],"3377":[114,17,114,21],"3385":[114,17,114,28],"3393":[114,17,114,28],"3401":[114,17,114,28],"3409":[115,13,115,14],"3417":[115,19,115,20],"3425":[116,13,116,16],"3433":[116,17,116,18],"3441":[117,17,117,23],"3449":[118,17,118,21],"3457":[119,33,119,34],"3465":[120,32,120,37],"3473":[118,31,121,18],"3481":[118,17,121,19],"3483":[118,17,118,30],"3489":[116,22,122,14],"3497":[116,13,122,14],"3505":[116,13,122,15],"3513":[123,20,123,23],"3521":[123,20,123,23],"3529":[123,13,123,24],"3545":[125,16,125,17],"3553":[125,16,125,19],"3569":[126,22,126,26],"3577":[126,27,126,28],"3585":[126,22,126,29],"3593":[126,22,126,29],"3601":[126,22,126,29],"3609":[127,23,127,27],"3617":[127,23,127,36],"3625":[127,37,127,39],"3633":[127,23,127,40],"3641":[127,23,127,40],"3649":[127,23,127,40],"3657":[128,17,128,33],"3665":[128,34,128,37],"3673":[128,17,128,38],"3681":[129,23,129,26],"3689":[130,33,130,34],"3697":[131,32,131,37],"3705":[129,36,132,18],"3713":[129,23,132,19],"3715":[129,23,129,35],"3721":[129,23,132,19],"3729":[129,17,132,20],"3737":[133,24,133,29],"3745":[133,38,133,41],"3753":[133,24,133,42],"3755":[133,24,133,37],"3761":[134,23,134,27],"3769":[134,23,134,36],"3777":[134,42,134,45],"3785":[135,33,135,34],"3793":[136,32,136,37],"3801":[134,47,137,18],"3809":[134,23,137,19],"3811":[134,23,134,41],"3817":[134,23,137,19],"3825":[134,17,137,20],"3833":[138,24,138,27],"3841":[138,24,138,35],"3849":[139,23,139,26],"3857":[139,23,139,36],"3859":[139,23,139,34],"3865":[139,23,139,36],"3873":[139,17,139,37],"3881":[141,17,141,28],"3889":[141,32,141,34],"3897":[142,32,142,35],"3905":[142,23,142,37],"3913":[142,23,142,37],"3921":[142,17,142,38],"3929":[144,13,144,16],"3937":[145,17,145,19],"3945":[146,17,146,20],"3953":[144,22,147,14],"3961":[144,13,147,15],"3963":[144,13,144,21],"3969":[144,13,147,16],"3977":[149,16,149,19],"3985":[149,16,149,19],"3993":[149,9,149,20],"4001":[111,20,150,6],"4009":[111,20,150,6],"4017":[111,20,150,6],"4025":[111,20,150,6],"4033":[111,20,150,6],"4041":[111,20,150,6],"4049":[111,20,150,6],"4057":[111,20,150,6],"4065":[152,15,152,19],"4073":[152,15,152,28],"4081":[152,32,152,40],"4089":[152,45,152,49],"4097":[152,45,152,58],"4105":[152,45,152,70],"4113":[152,45,152,75],"4121":[153,20,153,21],"4129":[153,20,153,21],"4137":[153,13,153,22],"4145":[155,16,155,22],"4153":[155,28,155,32],"4161":[155,28,155,41],"4169":[155,16,155,42],"4171":[155,16,155,27],"4177":[155,16,155,49],"4185":[155,16,155,49],"4193":[155,9,155,50],"4201":[151,17,156,6],"4209":[151,17,156,6],"4217":[151,17,156,6],"4225":[151,17,156,6],"4233":[158,16,158,20],"4241":[158,27,158,30],"4249":[158,32,158,36],"4257":[158,32,158,43],"4265":[158,46,158,51],"4273":[158,16,158,52],"4275":[158,16,158,26],"4281":[158,16,158,52],"4289":[158,9,158,53],"4297":[157,15,159,6],"4305":[157,15,159,6],"4313":[157,15,159,6],"4321":[157,15,159,6],"4329":[157,15,159,6],"4337":[161,22,161,24],"4345":[161,22,161,28],"4353":[161,34,161,43],"4361":[161,45,161,49],"4369":[161,45,161,58],"4377":[161,60,161,64],"4385":[161,22,161,65],"4387":[161,22,161,33],"4393":[161,22,161,65],"4401":[161,22,161,65],"4409":[162,18,162,22],"4417":[162,18,162,30],"4425":[162,44,162,50],"4433":[162,52,162,56],"4441":[162,52,162,64],"4449":[162,18,162,65],"4451":[162,18,162,43],"4457":[162,18,162,65],"4465":[162,9,162,66],"4473":[163,19,163,21],"4481":[163,19,163,26],"4489":[163,33,163,37],"4497":[163,39,163,45],"4505":[163,19,163,46],"4507":[163,19,163,32],"4513":[163,19,163,46],"4521":[163,19,163,46],"4529":[164,9,164,13],"4537":[164,30,164,40],"4545":[164,42,164,48],"4553":[164,9,164,49],"4555":[164,9,164,29],"4561":[164,9,164,50],"4569":[165,9,165,13],"4577":[165,9,165,29],"4579":[165,9,165,27],"4585":[165,9,165,30],"4593":[166,16,166,19],"4601":[166,16,166,19],"4609":[166,9,166,20],"4617":[160,11,167,6],"4625":[160,11,167,6],"4633":[160,11,167,6],"4641":[160,11,167,6],"4649":[160,11,167,6],"4657":[169,22,169,24],"4665":[169,22,169,28],"4673":[169,34,169,43],"4681":[169,45,169,49],"4689":[169,45,169,58],"4697":[169,60,169,64],"4705":[169,22,169,65],"4707":[169,22,169,33],"4713":[169,22,169,65],"4721":[169,22,169,65],"4729":[170,19,170,21],"4737":[170,19,170,26],"4745":[170,33,170,37],"4753":[170,39,170,45],"4761":[170,19,170,46],"4763":[170,19,170,32],"4769":[170,19,170,46],"4777":[170,19,170,46],"4785":[171,9,171,13],"4793":[171,30,171,36],"4801":[171,38,171,42],"4809":[171,9,171,43],"4811":[171,9,171,29],"4817":[171,9,171,44],"4825":[172,9,172,13],"4833":[172,9,172,29],"4835":[172,9,172,27],"4841":[172,9,172,30],"4849":[173,16,173,19],"4857":[173,16,173,19],"4865":[173,9,173,20],"4873":[168,20,174,6],"4881":[168,20,174,6],"4889":[168,20,174,6],"4897":[168,20,174,6],"4905":[168,20,174,6],"4913":[176,9,176,13],"4921":[176,30,176,36],"4929":[176,38,176,39],"4937":[176,9,176,40],"4939":[176,9,176,29],"4945":[176,9,176,41],"4953":[177,9,177,13],"4961":[177,9,177,29],"4963":[177,9,177,27],"4969":[177,9,177,30],"4977":[178,13,178,17],"4985":[178,13,178,25],"4993":[179,13,179,20],"5001":[179,13,179,20],"5009":[180,9,180,13],"5017":[180,24,180,28],"5025":[180,9,180,28],"5033":[180,9,180,29],"5041":[181,16,181,18],"5049":[181,16,181,22],"5057":[181,28,181,32],"5065":[181,16,181,33],"5067":[181,16,181,27],"5073":[181,16,181,33],"5081":[181,9,181,34],"5089":[175,11,182,6],"5097":[175,11,182,6],"5105":[175,11,182,6],"5113":[184,19,184,21],"5121":[184,19,184,25],"5129":[184,31,184,35],"5137":[184,19,184,36],"5139":[184,19,184,30],"5145":[184,19,184,36],"5153":[184,19,184,36],"5161":[185,9,185,13],"5169":[185,30,185,36],"5177":[185,38,185,42],"5185":[185,9,185,43],"5187":[185,9,185,29],"5193":[185,9,185,44],"5201":[186,9,186,13],"5209":[186,9,186,29],"5211":[186,9,186,27],"5217":[186,9,186,30],"5225":[187,16,187,19],"5233":[187,16,187,19],"5241":[187,9,187,20],"5249":[183,10,188,6],"5257":[183,10,188,6],"5265":[183,10,188,6],"5273":[183,10,188,6],"5281":[190,9,190,13],"5289":[190,30,190,36],"5297":[190,39,190,40],"5305":[190,9,190,41],"5307":[190,9,190,29],"5313":[190,9,190,42],"5321":[191,9,191,13],"5329":[191,9,191,29],"5331":[191,9,191,27],"5337":[191,9,191,30],"5345":[192,13,192,17],"5353":[192,13,192,26],"5361":[193,13,193,20],"5369":[193,13,193,20],"5377":[194,9,194,13],"5385":[194,25,194,29],"5393":[194,9,194,29],"5401":[194,9,194,30],"5409":[195,16,195,18],"5417":[195,16,195,24],"5425":[195,30,195,34],"5433":[195,16,195,35],"5435":[195,16,195,29],"5441":[195,16,195,35],"5449":[195,9,195,36],"5457":[189,13,196,6],"5465":[189,13,196,6],"5473":[189,13,196,6],"5481":[189,13,196,6],"5489":[198,19,198,21],"5497":[198,19,198,27],"5505":[198,33,198,37],"5513":[198,19,198,38],"5515":[198,19,198,32],"5521":[198,19,198,38],"5529":[198,19,198,38],"5537":[199,9,199,13],"5545":[199,30,199,36],"5553":[199,38,199,42],"5561":[199,9,199,43],"5563":[199,9,199,29],"5569":[199,9,199,44],"5577":[200,9,200,13],"5585":[200,9,200,29],"5587":[200,9,200,27],"5593":[200,9,200,30],"5601":[201,16,201,19],"5609":[201,16,201,19],"5617":[201,9,201,20],"5625":[197,12,202,6],"5633":[197,12,202,6],"5641":[197,12,202,6],"5649":[197,12,202,6],"5657":[204,22,204,24],"5665":[204,22,204,28],"5673":[204,34,204,43],"5681":[204,45,204,49],"5689":[204,45,204,55],"5697":[204,57,204,61],"5705":[204,22,204,62],"5707":[204,22,204,33],"5713":[204,70,204,74],"5721":[204,70,204,82],"5729":[204,87,204,91],"5737":[204,87,204,97],"5745":[204,70,204,98],"5747":[204,70,204,86],"5753":[204,104,204,107],"5761":[204,104,204,114],"5769":[204,22,204,62],"5777":[204,22,204,62],"5785":[204,70,204,98],"5793":[204,70,204,98],"5801":[204,104,204,114],"5809":[204,104,204,114],"5825":[205,16,205,17],"5833":[205,16,205,19],"5849":[206,19,206,22],"5857":[206,23,206,24],"5865":[206,19,206,25],"5873":[206,19,206,25],"5881":[206,13,206,26],"5889":[207,17,207,20],"5897":[207,32,207,40],"5905":[208,21,208,27],"5913":[209,32,209,33],"5921":[209,41,209,44],"5929":[209,32,209,45],"5931":[209,32,209,40],"5937":[209,32,209,45],"5945":[209,25,209,46],"5953":[208,33,210,22],"5961":[208,33,210,22],"5969":[208,33,210,22],"5977":[208,33,210,22],"5985":[208,21,210,23],"5987":[208,21,208,32],"5993":[211,21,211,23],"6001":[211,21,211,30],"6009":[211,36,211,39],"6017":[211,41,211,42],"6025":[211,44,211,45],"6033":[211,21,211,46],"6035":[211,21,211,35],"6041":[211,21,211,47],"6049":[213,25,213,28],"6057":[213,25,213,36],"6065":[213,42,213,48],"6073":[213,50,213,53],"6081":[213,25,213,54],"6083":[213,25,213,41],"6089":[214,17,214,19],"6097":[214,17,214,26],"6105":[214,32,214,35],"6113":[214,37,214,38],"6121":[214,40,214,41],"6129":[214,17,214,42],"6131":[214,17,214,31],"6137":[214,17,214,43],"6145":[217,13,217,19],"6153":[217,20,217,21],"6161":[217,13,217,22],"6169":[217,34,217,50],"6177":[218,13,218,17],"6185":[218,34,218,45],"6193":[218,47,218,53],"6201":[219,24,219,25],"6209":[219,24,219,29],"6217":[219,33,219,34],"6225":[219,24,219,34],"6233":[219,17,219,35],"6241":[218,58,220,14],"6249":[218,58,220,14],"6257":[218,58,220,14],"6265":[218,58,220,14],"6273":[218,47,220,15],"6275":[218,47,218,57],"6281":[218,13,220,16],"6283":[218,13,218,33],"6289":[218,13,220,17],"6297":[222,13,222,17],"6305":[222,34,222,44],"6313":[222,46,222,52],"6321":[222,13,222,53],"6323":[222,13,222,33],"6329":[222,13,222,54],"6337":[224,9,224,13],"6345":[224,9,224,29],"6347":[224,9,224,27],"6353":[224,9,224,30],"6361":[225,16,225,20],"6369":[225,16,225,20],"6377":[225,9,225,21],"6385":[203,11,226,6],"6393":[203,11,226,6],"6401":[203,11,226,6],"6409":[203,11,226,6],"6417":[203,11,226,6],"6425":[203,11,226,6],"6433":[203,11,226,6],"6441":[229,13,229,22],"6449":[229,13,229,29],"6457":[230,20,230,22],"6465":[230,20,230,22],"6473":[230,13,230,23],"6481":[231,22,231,23],"6489":[231,22,231,23],"6497":[231,25,231,26],"6505":[231,29,231,38],"6513":[231,29,231,45],"6529":[231,49,231,50],"6537":[231,47,231,50],"6545":[232,17,232,21],"6553":[232,22,232,23],"6561":[232,27,232,28],"6569":[232,31,232,32],"6577":[232,35,232,44],"6585":[232,45,232,46],"6593":[232,35,232,47],"6601":[232,50,232,54],"6609":[232,61,232,70],"6617":[232,71,232,72],"6625":[232,61,232,73],"6633":[232,75,232,84],"6641":[232,85,232,86],"6649":[232,75,232,87],"6657":[232,91,232,92],"6665":[232,95,232,96],"6673":[232,50,232,98],"6675":[232,50,232,60],"6681":[232,17,232,98],"6689":[232,17,232,99],"6697":[234,19,234,21],"6705":[234,19,234,28],"6713":[234,35,234,39],"6721":[234,41,234,45],"6729":[234,19,234,46],"6731":[234,19,234,34],"6737":[234,19,234,46],"6745":[234,13,234,47],"6753":[235,13,235,17],"6761":[235,34,235,40],"6769":[235,42,235,46],"6777":[235,13,235,47],"6779":[235,13,235,33],"6785":[235,13,235,48],"6793":[236,13,236,17],"6801":[236,13,236,33],"6803":[236,13,236,31],"6809":[236,13,236,34],"6817":[238,16,238,19],"6825":[238,16,238,19],"6833":[238,9,238,20],"6841":[227,13,239,6],"6849":[227,13,239,6],"6857":[227,13,239,6],"6865":[227,13,239,6],"6873":[227,13,239,6],"6881":[227,13,239,6],"6889":[227,13,239,6],"6897":[241,22,241,24],"6905":[241,22,241,28],"6913":[241,34,241,43],"6921":[241,45,241,49],"6929":[241,45,241,55],"6937":[241,57,241,61],"6945":[241,22,241,62],"6947":[241,22,241,33],"6953":[241,22,241,62],"6961":[241,22,241,62],"6969":[242,18,242,22],"6977":[242,18,242,30],"6985":[242,44,242,50],"6993":[242,52,242,56],"7001":[242,52,242,64],"7009":[242,18,242,65],"7011":[242,18,242,43],"7017":[242,18,242,65],"7025":[242,9,242,66],"7033":[243,9,243,11],"7041":[243,9,243,19],"7049":[243,26,243,30],"7057":[243,32,243,38],"7065":[243,9,243,39],"7067":[243,9,243,25],"7073":[243,9,243,40],"7081":[244,9,244,13],"7089":[244,30,244,36],"7097":[244,38,244,42],"7105":[244,9,244,43],"7107":[244,9,244,29],"7113":[244,9,244,44],"7121":[245,9,245,13],"7129":[245,9,245,29],"7131":[245,9,245,27],"7137":[245,9,245,30],"7145":[246,16,246,20],"7153":[246,16,246,27],"7161":[246,16,246,27],"7169":[246,9,246,28],"7177":[240,14,247,6],"7185":[240,14,247,6],"7193":[240,14,247,6],"7201":[240,14,247,6],"7209":[249,19,249,21],"7217":[249,19,249,26],"7225":[249,33,249,37],"7233":[249,39,249,48],"7241":[249,19,249,49],"7243":[249,19,249,32],"7249":[249,19,249,49],"7257":[249,19,249,49],"7265":[250,9,250,13],"7273":[250,30,250,36],"7281":[250,38,250,42],"7289":[250,9,250,43],"7291":[250,9,250,29],"7297":[250,9,250,44],"7305":[251,9,251,13],"7313":[251,9,251,29],"7315":[251,9,251,27],"7321":[251,9,251,30],"7329":[252,16,252,19],"7337":[252,16,252,19],"7345":[252,9,252,20],"7353":[248,11,253,6],"7361":[248,11,253,6],"7369":[248,11,253,6],"7377":[248,11,253,6],"7385":[255,22,255,24],"7393":[255,22,255,28],"7401":[255,34,255,43],"7409":[255,45,255,49],"7417":[255,45,255,58],"7425":[255,60,255,64],"7433":[255,22,255,65],"7435":[255,22,255,33],"7441":[255,22,255,65],"7449":[255,22,255,65],"7457":[256,18,256,22],"7465":[256,18,256,30],"7473":[256,44,256,50],"7481":[256,52,256,56],"7489":[256,52,256,64],"7497":[256,18,256,65],"7499":[256,18,256,43],"7505":[256,18,256,65],"7513":[256,9,256,66],"7521":[257,21,257,23],"7529":[257,21,257,23],"7537":[257,21,257,23],"7545":[258,20,258,26],"7553":[258,27,258,28],"7561":[258,20,258,29],"7569":[258,41,258,57],"7577":[258,60,258,65],"7585":[258,68,258,74],"7593":[258,75,258,76],"7601":[258,68,258,77],"7609":[258,89,258,93],"7617":[258,96,258,102],"7625":[258,105,258,107],"7633":[258,20,258,107],"7641":[258,20,258,107],"7649":[259,9,259,15],"7657":[261,21,261,25],"7665":[263,25,263,29],"7673":[264,28,264,31],"7681":[264,39,264,40],"7689":[264,28,264,41],"7691":[264,28,264,38],"7697":[264,28,264,41],"7705":[264,21,264,42],"7713":[263,35,265,18],"7721":[263,35,265,18],"7729":[263,35,265,18],"7737":[263,35,265,18],"7745":[263,25,265,19],"7747":[263,25,263,34],"7753":[263,25,265,19],"7761":[263,17,265,20],"7769":[262,18,262,23],"7777":[268,28,268,29],"7785":[268,27,268,29],"7793":[268,27,268,29],"7801":[269,25,269,29],"7809":[270,29,270,30],"7817":[270,35,270,38],"7825":[270,28,270,38],"7833":[270,21,270,39],"7841":[269,35,271,18],"7849":[269,35,271,18],"7857":[269,35,271,18],"7865":[269,35,271,18],"7873":[269,25,271,19],"7875":[269,25,269,34],"7881":[269,25,271,19],"7889":[269,17,271,20],"7897":[267,18,267,24],"7905":[274,26,274,30],"7913":[274,39,274,40],"7921":[274,26,274,41],"7923":[274,26,274,38],"7929":[274,25,274,41],"7937":[274,17,274,42],"7945":[276,18,276,23],"7953":[277,17,277,19],"7961":[277,17,277,24],"7969":[277,30,277,34],"7977":[277,36,277,37],"7985":[277,17,277,38],"7987":[277,17,277,29],"7993":[277,17,277,39],"8001":[278,17,278,21],"8009":[278,38,278,49],"8017":[278,51,278,52],"8025":[278,17,278,53],"8027":[278,17,278,37],"8033":[278,17,278,54],"8041":[279,17,279,21],"8049":[279,17,279,37],"8051":[279,17,279,35],"8057":[279,17,279,38],"8065":[280,17,280,19],"8073":[280,17,280,24],"8081":[280,30,280,35],"8089":[280,37,280,38],"8097":[280,17,280,39],"8099":[280,17,280,29],"8105":[280,17,280,40],"8113":[259,24,282,10],"8121":[259,24,282,10],"8129":[259,24,282,10],"8137":[259,24,282,10],"8145":[259,24,282,10],"8153":[259,24,282,10],"8161":[282,12,282,16],"8169":[259,9,282,17],"8171":[259,9,259,23],"8177":[259,9,282,18],"8185":[283,16,283,21],"8193":[283,16,283,21],"8201":[283,9,283,22],"8209":[254,15,284,6],"8217":[254,15,284,6],"8225":[254,15,284,6],"8233":[254,15,284,6],"8241":[254,15,284,6],"8249":[254,15,284,6],"8257":[254,15,284,6],"8265":[286,21,286,25],"8273":[286,32,286,35],"8281":[286,37,286,38],"8289":[286,21,286,39],"8291":[286,21,286,31],"8297":[286,21,286,39],"8305":[286,21,286,39],"8313":[287,17,287,21],"8321":[287,17,287,29],"8329":[287,17,287,36],"8337":[287,48,287,64],"8345":[287,67,287,72],"8353":[287,75,287,79],"8361":[287,75,287,87],"8369":[287,75,287,94],"8377":[287,108,287,111],"8385":[287,113,287,117],"8393":[287,113,287,125],"8401":[287,75,287,126],"8403":[287,75,287,107],"8409":[287,17,287,126],"8417":[287,9,287,127],"8425":[288,9,288,13],"8433":[288,14,288,15],"8441":[288,19,288,24],"8449":[288,9,288,24],"8457":[288,9,288,25],"8465":[289,9,289,13],"8473":[289,28,289,29],"8481":[289,9,289,30],"8483":[289,9,289,27],"8489":[289,9,289,31],"8497":[290,16,290,20],"8505":[290,16,290,20],"8513":[290,9,290,21],"8521":[285,10,291,6],"8529":[285,10,291,6],"8537":[285,10,291,6],"8545":[285,10,291,6],"8553":[285,10,291,6],"8561":[285,10,291,6],"8569":[285,10,291,6],"8577":[293,13,293,20],"8585":[293,24,293,31],"8593":[293,24,293,42],"8601":[294,20,294,24],"8609":[295,24,295,27],"8617":[295,39,295,47],"8625":[295,50,295,53],"8633":[295,63,295,70],"8641":[295,50,295,71],"8643":[295,50,295,62],"8649":[295,74,295,77],"8657":[295,24,295,77],"8665":[295,17,295,78],"8673":[294,29,296,14],"8681":[294,29,296,14],"8689":[294,29,296,14],"8697":[294,29,296,14],"8705":[294,20,296,15],"8707":[294,20,294,28],"8713":[294,20,296,15],"8721":[294,13,296,16],"8729":[298,16,298,20],"8737":[298,16,298,28],"8739":[298,16,298,26],"8745":[298,16,298,28],"8753":[298,9,298,29],"8761":[292,15,299,6],"8769":[292,15,299,6],"8777":[292,15,299,6],"8785":[292,15,299,6],"8793":[301,16,301,20],"8801":[301,31,301,35],"8809":[301,16,301,36],"8811":[301,16,301,30],"8817":[301,16,301,36],"8825":[301,9,301,37],"8833":[300,14,302,6],"8841":[300,14,302,6],"8849":[300,14,302,6],"8857":[304,13,304,16],"8865":[304,28,304,36],"8873":[305,19,305,22],"8881":[305,19,305,33],"8883":[305,19,305,31],"8889":[305,19,305,33],"8897":[305,13,305,34],"8905":[306,22,306,23],"8913":[306,31,306,35],"8921":[306,31,306,42],"8929":[306,22,306,23],"8937":[306,22,306,23],"8945":[306,31,306,42],"8953":[306,31,306,42],"8961":[306,44,306,45],"8969":[306,48,306,51],"8985":[306,55,306,56],"8993":[306,53,306,56],"9001":[307,17,307,20],"9009":[307,24,307,28],"9017":[307,29,307,30],"9025":[307,24,307,31],"9033":[308,24,308,25],"9041":[308,24,308,25],"9049":[308,17,308,26],"9057":[311,17,311,18],"9065":[311,16,311,18],"9073":[311,9,311,19],"9081":[303,14,312,6],"9089":[303,14,312,6],"9097":[303,14,312,6],"9105":[303,14,312,6],"9113":[303,14,312,6],"9121":[303,14,312,6],"9129":[303,14,312,6],"9137":[34,23,313,2],"9145":[34,1,313,2],"9153":[34,1,313,3],"9161":[314,1,314,14],"9169":[314,1,314,20],"9177":[314,30,314,43],"9185":[314,30,314,49],"9193":[314,30,314,54],"9201":[314,1,314,54],"9209":[314,1,314,55],"9217":[315,1,315,7],"9225":[315,28,315,41],"9233":[315,28,315,41],"9241":[315,1,315,41],"9249":[315,1,315,42],"9257":[1,1,315,42],"9265":[1,1,315,42],"9273":[1,1,315,42],"9281":[1,1,315,42],"9289":[1,1,315,42],"9297":[1,1,315,42],"9305":[1,1,315,42],"9313":[1,1,315,42],"9321":[8,1,33,2],"9329":[1,1,315,42],"9337":[22,5,24,6],"9345":[22,5,24,6],"9353":[28,5,31,6],"9361":[8,1,33,2],"9369":[8,1,33,2],"9377":[43,39,43,111],"9385":[42,13,44,14],"9393":[41,9,46,10],"9401":[49,13,51,14],"9409":[53,13,55,14],"9417":[47,9,57,10],"9425":[37,12,59,6],"9433":[37,12,59,6],"9441":[65,17,69,18],"9449":[64,13,70,14],"9457":[62,9,72,10],"9465":[60,20,74,6],"9473":[60,20,74,6],"9481":[76,9,79,10],"9489":[83,39,85,14],"9497":[83,39,85,14],"9505":[81,9,86,10],"9513":[87,9,90,10],"9521":[99,62,101,18],"9529":[99,62,101,18],"9537":[97,13,105,14],"9545":[95,16,108,10],"9553":[92,9,108,10],"9561":[75,22,110,6],"9569":[75,22,110,6],"9577":[115,9,124,10],"9585":[138,20,140,14],"9593":[133,20,140,14],"9601":[128,13,140,14],"9609":[141,13,143,14],"9617":[125,9,148,10],"9625":[111,20,150,6],"9633":[111,20,150,6],"9641":[152,9,154,10],"9649":[151,17,156,6],"9657":[151,17,156,6],"9665":[157,15,159,6],"9673":[157,15,159,6],"9681":[160,11,167,6],"9689":[160,11,167,6],"9697":[168,20,174,6],"9705":[168,20,174,6],"9713":[178,9,179,20],"9721":[175,11,182,6],"9729":[175,11,182,6],"9737":[183,10,188,6],"9745":[183,10,188,6],"9753":[192,9,193,20],"9761":[189,13,196,6],"9769":[189,13,196,6],"9777":[197,12,202,6],"9785":[197,12,202,6],"9793":[208,33,210,22],"9801":[208,33,210,22],"9809":[208,17,212,18],"9817":[213,20,215,14],"9825":[207,13,215,14],"9833":[205,9,216,10],"9841":[218,58,220,14],"9849":[218,58,220,14],"9857":[217,9,223,10],"9865":[203,11,226,6],"9873":[203,11,226,6],"9881":[232,27,232,98],"9889":[231,13,233,14],"9897":[231,13,233,14],"9905":[231,13,233,14],"9913":[229,9,237,10],"9921":[227,13,239,6],"9929":[227,13,239,6],"9937":[240,14,247,6],"9945":[240,14,247,6],"9953":[248,11,253,6],"9961":[248,11,253,6],"9969":[258,68,258,107],"9977":[258,20,258,107],"9985":[263,35,265,18],"9993":[263,35,265,18],"10001":[269,35,271,18],"10009":[269,35,271,18],"10017":[261,21,261,25],"10025":[262,18,262,23],"10033":[267,18,267,24],"10041":[276,13,281,14],"10049":[259,24,282,10],"10057":[259,24,282,10],"10065":[254,15,284,6],"10073":[254,15,284,6],"10081":[287,17,287,126],"10089":[285,10,291,6],"10097":[285,10,291,6],"10105":[295,24,295,77],"10113":[294,29,296,14],"10121":[294,29,296,14],"10129":[293,9,297,10],"10137":[292,15,299,6],"10145":[292,15,299,6],"10153":[300,14,302,6],"10161":[300,14,302,6],"10169":[304,9,305,34],"10177":[307,13,309,14],"10185":[306,9,310,10],"10193":[306,9,310,10],"10201":[303,14,312,6],"10209":[303,14,312,6],"10217":[1,1,315,42],"10225":[1,1,315,42],"nBranches":128,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/types/array.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/types/array_jalangi_.js","code":"/*!\n * Module dependencies.\n */\n\nvar EmbeddedDocument = require('./embedded');\nvar Document = require('../document');\nvar ObjectId = require('./objectid');\nvar utils = require('../utils');\nvar isMongooseObject = utils.isMongooseObject;\n\n/**\n * Mongoose Array constructor.\n *\n * ####NOTE:\n *\n * _Values always have to be passed to the constructor to initialize, otherwise `MongooseArray#push` will mark the array as modified._\n *\n * @param {Array} values\n * @param {String} path\n * @param {Document} doc parent document\n * @api private\n * @inherits Array\n * @see http://bit.ly/f6CnZU\n */\n\nfunction MongooseArray(values, path, doc) {\n  var arr = [].concat(values);\n\n  utils.decorate( arr, MongooseArray.mixin );\n  arr.isMongooseArray = true;\n\n  var _options = { enumerable: false, configurable: true, writable: true };\n  var keys = Object.keys(MongooseArray.mixin).\n    concat(['isMongooseArray', 'validators', '_path']);\n  for (var i = 0; i < keys.length; ++i) {\n    Object.defineProperty(arr, keys[i], _options);\n  }\n\n  arr._atomics = {};\n  arr.validators = [];\n  arr._path = path;\n\n  // Because doc comes from the context of another function, doc === global\n  // can happen if there was a null somewhere up the chain (see #3020)\n  // RB Jun 17, 2015 updated to check for presence of expected paths instead\n  // to make more proof against unusual node environments\n  if (doc && doc instanceof Document) {\n    arr._parent = doc;\n    arr._schema = doc.schema.path(path);\n  }\n\n  return arr;\n}\n\nMongooseArray.mixin = {\n\n  /**\n   * Stores a queue of atomic operations to perform\n   *\n   * @property _atomics\n   * @api private\n   */\n\n  _atomics: undefined,\n\n  /**\n   * Parent owner document\n   *\n   * @property _parent\n   * @api private\n   * @receiver MongooseArray\n   */\n\n  _parent: undefined,\n\n  /**\n   * Casts a member based on this arrays schema.\n   *\n   * @param {any} value\n   * @return value the casted value\n   * @method _cast\n   * @api private\n   * @receiver MongooseArray\n   */\n\n  _cast: function(value) {\n    var owner = this._owner;\n    var populated = false;\n    var Model;\n\n    if (this._parent) {\n      // if a populated array, we must cast to the same model\n      // instance as specified in the original query.\n      if (!owner) {\n        owner = this._owner = this._parent.ownerDocument\n          ? this._parent.ownerDocument()\n          : this._parent;\n      }\n\n      populated = owner.populated(this._path, true);\n    }\n\n    if (populated && null != value) {\n      // cast to the populated Models schema\n      Model = populated.options.model;\n\n      // only objects are permitted so we can safely assume that\n      // non-objects are to be interpreted as _id\n      if (Buffer.isBuffer(value) ||\n          value instanceof ObjectId || !utils.isObject(value)) {\n        value = { _id: value };\n      }\n\n      // gh-2399\n      // we should cast model only when it's not a discriminator\n      var isDisc = value.schema && value.schema.discriminatorMapping &&\n        value.schema.discriminatorMapping.key !== undefined;\n      if (!isDisc) {\n        value = new Model(value);\n      }\n      return this._schema.caster.cast(value, this._parent, true);\n    }\n\n    return this._schema.caster.cast(value, this._parent, false);\n  },\n\n  /**\n   * Marks this array as modified.\n   *\n   * If it bubbles up from an embedded document change, then it takes the following arguments (otherwise, takes 0 arguments)\n   *\n   * @param {EmbeddedDocument} embeddedDoc the embedded doc that invoked this method on the Array\n   * @param {String} embeddedPath the path which changed in the embeddedDoc\n   * @method _markModified\n   * @api private\n   * @receiver MongooseArray\n   */\n\n  _markModified: function(elem, embeddedPath) {\n    var parent = this._parent,\n        dirtyPath;\n\n    if (parent) {\n      dirtyPath = this._path;\n\n      if (arguments.length) {\n        if (null != embeddedPath) {\n          // an embedded doc bubbled up the change\n          dirtyPath = dirtyPath + '.' + this.indexOf(elem) + '.' + embeddedPath;\n        } else {\n          // directly set an index\n          dirtyPath = dirtyPath + '.' + elem;\n        }\n      }\n\n      parent.markModified(dirtyPath);\n    }\n\n    return this;\n  },\n\n  /**\n   * Register an atomic operation with the parent.\n   *\n   * @param {Array} op operation\n   * @param {any} val\n   * @method _registerAtomic\n   * @api private\n   * @receiver MongooseArray\n   */\n\n  _registerAtomic: function(op, val) {\n    if ('$set' == op) {\n      // $set takes precedence over all other ops.\n      // mark entire array modified.\n      this._atomics = { $set: val };\n      return this;\n    }\n\n    var atomics = this._atomics;\n\n    // reset pop/shift after save\n    if ('$pop' == op && !('$pop' in atomics)) {\n      var self = this;\n      this._parent.once('save', function() {\n        self._popped = self._shifted = null;\n      });\n    }\n\n    // check for impossible $atomic combos (Mongo denies more than one\n    // $atomic op on a single path\n    if (this._atomics.$set ||\n        Object.keys(atomics).length && !(op in atomics)) {\n      // a different op was previously registered.\n      // save the entire thing.\n      this._atomics = { $set: this };\n      return this;\n    }\n\n    var selector;\n\n    if (op === '$pullAll' || op === '$pushAll' || op === '$addToSet') {\n      atomics[op] || (atomics[op] = []);\n      atomics[op] = atomics[op].concat(val);\n    } else if (op === '$pullDocs') {\n      var pullOp = atomics['$pull'] || (atomics['$pull'] = {});\n      if (val[0] instanceof EmbeddedDocument) {\n        selector = pullOp['$or'] || (pullOp['$or'] = []);\n        Array.prototype.push.apply(selector, val.map(function(v) {\n          return v.toObject({ virtuals: false });\n        }));\n      } else {\n        selector = pullOp['_id'] || (pullOp['_id'] = {'$in' : [] });\n        selector['$in'] = selector['$in'].concat(val);\n      }\n    } else {\n      atomics[op] = val;\n    }\n\n    return this;\n  },\n\n  /**\n   * Depopulates stored atomic operation values as necessary for direct insertion to MongoDB.\n   *\n   * If no atomics exist, we return all array values after conversion.\n   *\n   * @return {Array}\n   * @method $__getAtomics\n   * @memberOf MongooseArray\n   * @api private\n   */\n\n  $__getAtomics: function() {\n    var ret = [];\n    var keys = Object.keys(this._atomics);\n    var i = keys.length;\n\n    if (0 === i) {\n      ret[0] = ['$set', this.toObject({ depopulate: 1, transform: false })];\n      return ret;\n    }\n\n    while (i--) {\n      var op = keys[i];\n      var val = this._atomics[op];\n\n      // the atomic values which are arrays are not MongooseArrays. we\n      // need to convert their elements as if they were MongooseArrays\n      // to handle populated arrays versus DocumentArrays properly.\n      if (isMongooseObject(val)) {\n        val = val.toObject({ depopulate: 1, transform: false });\n      } else if (Array.isArray(val)) {\n        val = this.toObject.call(val, { depopulate: 1, transform: false });\n      } else if (val.valueOf) {\n        val = val.valueOf();\n      }\n\n      if ('$addToSet' == op) {\n        val = { $each: val };\n      }\n\n      ret.push([op, val]);\n    }\n\n    return ret;\n  },\n\n  /**\n   * Returns the number of pending atomic operations to send to the db for this array.\n   *\n   * @api private\n   * @return {Number}\n   * @method hasAtomics\n   * @receiver MongooseArray\n   */\n\n  hasAtomics: function hasAtomics() {\n    if (!(this._atomics && 'Object' === this._atomics.constructor.name)) {\n      return 0;\n    }\n\n    return Object.keys(this._atomics).length;\n  },\n\n  /**\n   * Internal helper for .map()\n   *\n   * @api private\n   * @return {Number}\n   * @method _mapCast\n   * @receiver MongooseArray\n   */\n  _mapCast: function(val, index) {\n    return this._cast(val, this.length + index);\n  },\n\n  /**\n   * Wraps [`Array#push`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/push) with proper change tracking.\n   *\n   * @param {Object} [args...]\n   * @api public\n   * @method push\n   * @receiver MongooseArray\n   */\n\n  push: function() {\n    var values = [].map.call(arguments, this._mapCast, this);\n    values = this._schema.applySetters(values, this._parent);\n    var ret = [].push.apply(this, values);\n\n    // $pushAll might be fibbed (could be $push). But it makes it easier to\n    // handle what could have been $push, $pushAll combos\n    this._registerAtomic('$pushAll', values);\n    this._markModified();\n    return ret;\n  },\n\n  /**\n   * Pushes items to the array non-atomically.\n   *\n   * ####NOTE:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @param {any} [args...]\n   * @api public\n   * @method nonAtomicPush\n   * @receiver MongooseArray\n   */\n\n  nonAtomicPush: function() {\n    var values = [].map.call(arguments, this._mapCast, this);\n    var ret = [].push.apply(this, values);\n    this._registerAtomic('$set', this);\n    this._markModified();\n    return ret;\n  },\n\n  /**\n   * Pops the array atomically at most one time per document `save()`.\n   *\n   * #### NOTE:\n   *\n   * _Calling this mulitple times on an array before saving sends the same command as calling it once._\n   * _This update is implemented using the MongoDB [$pop](http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop) method which enforces this restriction._\n   *\n   *      doc.array = [1,2,3];\n   *\n   *      var popped = doc.array.$pop();\n   *      console.log(popped); // 3\n   *      console.log(doc.array); // [1,2]\n   *\n   *      // no affect\n   *      popped = doc.array.$pop();\n   *      console.log(doc.array); // [1,2]\n   *\n   *      doc.save(function (err) {\n   *        if (err) return handleError(err);\n   *\n   *        // we saved, now $pop works again\n   *        popped = doc.array.$pop();\n   *        console.log(popped); // 2\n   *        console.log(doc.array); // [1]\n   *      })\n   *\n   * @api public\n   * @method $pop\n   * @memberOf MongooseArray\n   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop\n   * @method $pop\n   * @receiver MongooseArray\n   */\n\n  $pop: function() {\n    this._registerAtomic('$pop', 1);\n    this._markModified();\n\n    // only allow popping once\n    if (this._popped) return;\n    this._popped = true;\n\n    return [].pop.call(this);\n  },\n\n  /**\n   * Wraps [`Array#pop`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/pop) with proper change tracking.\n   *\n   * ####Note:\n   *\n   * _marks the entire array as modified which will pass the entire thing to $set potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @see MongooseArray#$pop #types_array_MongooseArray-%24pop\n   * @api public\n   * @method pop\n   * @receiver MongooseArray\n   */\n\n  pop: function() {\n    var ret = [].pop.call(this);\n    this._registerAtomic('$set', this);\n    this._markModified();\n    return ret;\n  },\n\n  /**\n   * Atomically shifts the array at most one time per document `save()`.\n   *\n   * ####NOTE:\n   *\n   * _Calling this mulitple times on an array before saving sends the same command as calling it once._\n   * _This update is implemented using the MongoDB [$pop](http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop) method which enforces this restriction._\n   *\n   *      doc.array = [1,2,3];\n   *\n   *      var shifted = doc.array.$shift();\n   *      console.log(shifted); // 1\n   *      console.log(doc.array); // [2,3]\n   *\n   *      // no affect\n   *      shifted = doc.array.$shift();\n   *      console.log(doc.array); // [2,3]\n   *\n   *      doc.save(function (err) {\n   *        if (err) return handleError(err);\n   *\n   *        // we saved, now $shift works again\n   *        shifted = doc.array.$shift();\n   *        console.log(shifted ); // 2\n   *        console.log(doc.array); // [3]\n   *      })\n   *\n   * @api public\n   * @memberOf MongooseArray\n   * @method $shift\n   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pop\n   */\n\n  $shift: function $shift() {\n    this._registerAtomic('$pop', -1);\n    this._markModified();\n\n    // only allow shifting once\n    if (this._shifted) return;\n    this._shifted = true;\n\n    return [].shift.call(this);\n  },\n\n  /**\n   * Wraps [`Array#shift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.\n   *\n   * ####Example:\n   *\n   *     doc.array = [2,3];\n   *     var res = doc.array.shift();\n   *     console.log(res) // 2\n   *     console.log(doc.array) // [3]\n   *\n   * ####Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method shift\n   * @receiver MongooseArray\n   */\n\n  shift: function() {\n    var ret = [].shift.call(this);\n    this._registerAtomic('$set', this);\n    this._markModified();\n    return ret;\n  },\n\n  /**\n   * Pulls items from the array atomically. Equality is determined by casting\n   * the provided value to an embedded document and comparing using\n   * [the `Document.equals()` function.](./api.html#document_Document-equals)\n   *\n   * ####Examples:\n   *\n   *     doc.array.pull(ObjectId)\n   *     doc.array.pull({ _id: 'someId' })\n   *     doc.array.pull(36)\n   *     doc.array.pull('tag 1', 'tag 2')\n   *\n   * To remove a document from a subdocument array we may pass an object with a matching `_id`.\n   *\n   *     doc.subdocs.push({ _id: 4815162342 })\n   *     doc.subdocs.pull({ _id: 4815162342 }) // removed\n   *\n   * Or we may passing the _id directly and let mongoose take care of it.\n   *\n   *     doc.subdocs.push({ _id: 4815162342 })\n   *     doc.subdocs.pull(4815162342); // works\n   *\n   * @param {any} [args...]\n   * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pull\n   * @api public\n   * @method pull\n   * @receiver MongooseArray\n   */\n\n  pull: function() {\n    var values = [].map.call(arguments, this._cast, this),\n        cur = this._parent.get(this._path),\n        i = cur.length,\n        mem;\n\n    while (i--) {\n      mem = cur[i];\n      if (mem instanceof Document) {\n        if (values.some(function(v) { return v.equals(mem); } )) {\n          [].splice.call(cur, i, 1);\n        }\n      } else if (~cur.indexOf.call(values, mem)) {\n        [].splice.call(cur, i, 1);\n      }\n    }\n\n    if (values[0] instanceof EmbeddedDocument) {\n      this._registerAtomic('$pullDocs', values.map(function(v) {\n        return v._id || v;\n      }));\n    } else {\n      this._registerAtomic('$pullAll', values);\n    }\n\n    this._markModified();\n    return this;\n  },\n\n  /**\n   * Wraps [`Array#splice`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/splice) with proper change tracking and casting.\n   *\n   * ####Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method splice\n   * @receiver MongooseArray\n   */\n\n  splice: function splice() {\n    var ret, vals, i;\n\n    if (arguments.length) {\n      vals = [];\n      for (i = 0; i < arguments.length; ++i) {\n        vals[i] = i < 2\n          ? arguments[i]\n          : this._cast(arguments[i], arguments[0] + (i - 2));\n      }\n      ret = [].splice.apply(this, vals);\n      this._registerAtomic('$set', this);\n      this._markModified();\n    }\n\n    return ret;\n  },\n\n  /**\n   * Wraps [`Array#unshift`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/unshift) with proper change tracking.\n   *\n   * ####Note:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method unshift\n   * @receiver MongooseArray\n   */\n\n  unshift: function() {\n    var values = [].map.call(arguments, this._cast, this);\n    values = this._schema.applySetters(values, this._parent);\n    [].unshift.apply(this, values);\n    this._registerAtomic('$set', this);\n    this._markModified();\n    return this.length;\n  },\n\n  /**\n   * Wraps [`Array#sort`](https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/sort) with proper change tracking.\n   *\n   * ####NOTE:\n   *\n   * _marks the entire array as modified, which if saved, will store it as a `$set` operation, potentially overwritting any changes that happen between when you retrieved the object and when you save it._\n   *\n   * @api public\n   * @method sort\n   * @receiver MongooseArray\n   */\n\n  sort: function() {\n    var ret = [].sort.apply(this, arguments);\n    this._registerAtomic('$set', this);\n    this._markModified();\n    return ret;\n  },\n\n  /**\n   * Adds values to the array if not already present.\n   *\n   * ####Example:\n   *\n   *     console.log(doc.array) // [2,3,4]\n   *     var added = doc.array.addToSet(4,5);\n   *     console.log(doc.array) // [2,3,4,5]\n   *     console.log(added)     // [5]\n   *\n   * @param {any} [args...]\n   * @return {Array} the values that were added\n   * @receiver MongooseArray\n   * @api public\n   * @method addToSet\n   */\n\n  addToSet: function addToSet() {\n    var values = [].map.call(arguments, this._mapCast, this);\n    values = this._schema.applySetters(values, this._parent);\n    var added = [];\n    var type = values[0] instanceof EmbeddedDocument ? 'doc' :\n               values[0] instanceof Date ? 'date' :\n               '';\n\n    values.forEach(function(v) {\n      var found;\n      switch (type) {\n        case 'doc':\n          found = this.some(function(doc) { return doc.equals(v); });\n          break;\n        case 'date':\n          var val = +v;\n          found = this.some(function(d) { return +d === val; });\n          break;\n        default:\n          found = ~this.indexOf(v);\n      }\n\n      if (!found) {\n        [].push.call(this, v);\n        this._registerAtomic('$addToSet', v);\n        this._markModified();\n        [].push.call(added, v);\n      }\n    }, this);\n\n    return added;\n  },\n\n  /**\n   * Sets the casted `val` at index `i` and marks the array modified.\n   *\n   * ####Example:\n   *\n   *     // given documents based on the following\n   *     var Doc = mongoose.model('Doc', new Schema({ array: [Number] }));\n   *\n   *     var doc = new Doc({ array: [2,3,4] })\n   *\n   *     console.log(doc.array) // [2,3,4]\n   *\n   *     doc.array.set(1,\"5\");\n   *     console.log(doc.array); // [2,5,4] // properly cast to number\n   *     doc.save() // the change is saved\n   *\n   *     // VS not using array#set\n   *     doc.array[1] = \"5\";\n   *     console.log(doc.array); // [2,\"5\",4] // no casting\n   *     doc.save() // change is not saved\n   *\n   * @return {Array} this\n   * @api public\n   * @method set\n   * @receiver MongooseArray\n   */\n\n  set: function set(i, val) {\n    var value = this._cast(val, i);\n    value = this._schema.caster instanceof EmbeddedDocument ?\n            value :\n            this._schema.caster.applySetters(val, this._parent)\n            ;\n    this[i] = value;\n    this._markModified(i);\n    return this;\n  },\n\n  /**\n   * Returns a native js Array.\n   *\n   * @param {Object} options\n   * @return {Array}\n   * @api public\n   * @method toObject\n   * @receiver MongooseArray\n   */\n\n  toObject: function(options) {\n    if (options && options.depopulate) {\n      return this.map(function(doc) {\n        return doc instanceof Document\n          ? doc.toObject(options)\n          : doc;\n      });\n    }\n\n    return this.slice();\n  },\n\n  /**\n   * Helper for console.log\n   *\n   * @api public\n   * @method inspect\n   * @receiver MongooseArray\n   */\n\n  inspect: function() {\n    return JSON.stringify(this);\n  },\n\n  /**\n   * Return the index of `obj` or `-1` if not found.\n   *\n   * @param {Object} obj the item to look for\n   * @return {Number}\n   * @api public\n   * @method indexOf\n   * @receiver MongooseArray\n   */\n\n  indexOf: function indexOf(obj) {\n    if (obj instanceof ObjectId) obj = obj.toString();\n    for (var i = 0, len = this.length; i < len; ++i) {\n      if (obj == this[i]) {\n        return i;\n      }\n    }\n    return -1;\n  }\n};\n\n/**\n * Alias of [pull](#types_array_MongooseArray-pull)\n *\n * @see MongooseArray#pull #types_array_MongooseArray-pull\n * @see mongodb http://www.mongodb.org/display/DOCS/Updating/#Updating-%24pull\n * @api public\n * @memberOf MongooseArray\n * @method remove\n */\n\nMongooseArray.mixin.remove = MongooseArray.mixin.pull;\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = MongooseArray;\n"};
jalangiLabel4897:
    while (true) {
        try {
            J$.Se(9257, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/types/array_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/types/array.js');
            function MongooseArray(values, path, doc) {
                jalangiLabel4867:
                    while (true) {
                        try {
                            J$.Fe(897, arguments.callee, this, arguments);
                            arguments = J$.N(905, 'arguments', arguments, 4);
                            values = J$.N(913, 'values', values, 4);
                            path = J$.N(921, 'path', path, 4);
                            doc = J$.N(929, 'doc', doc, 4);
                            J$.N(937, 'arr', arr, 0);
                            J$.N(945, '_options', _options, 0);
                            J$.N(953, 'keys', keys, 0);
                            J$.N(961, 'i', i, 0);
                            var arr = J$.X1(305, J$.W(297, 'arr', J$.M(289, J$.T(273, [], 10, false), 'concat', 0)(J$.R(281, 'values', values, 0)), arr, 1));
                            J$.X1(353, J$.M(345, J$.R(313, 'utils', utils, 1), 'decorate', 0)(J$.R(321, 'arr', arr, 0), J$.G(337, J$.R(329, 'MongooseArray', MongooseArray, 1), 'mixin', 0)));
                            J$.X1(385, J$.P(377, J$.R(361, 'arr', arr, 0), 'isMongooseArray', J$.T(369, true, 23, false), 0));
                            var _options = J$.X1(433, J$.W(425, '_options', J$.T(417, {
                                enumerable: J$.T(393, false, 23, false),
                                configurable: J$.T(401, true, 23, false),
                                writable: J$.T(409, true, 23, false)
                            }, 11, false), _options, 1));
                            var keys = J$.X1(521, J$.W(513, 'keys', J$.M(505, J$.M(465, J$.R(441, 'Object', Object, 2), 'keys', 0)(J$.G(457, J$.R(449, 'MongooseArray', MongooseArray, 1), 'mixin', 0)), 'concat', 0)(J$.T(497, [
                                J$.T(473, 'isMongooseArray', 21, false),
                                J$.T(481, 'validators', 21, false),
                                J$.T(489, '_path', 21, false)
                            ], 10, false)), keys, 1));
                            for (var i = J$.X1(545, J$.W(537, 'i', J$.T(529, 0, 22, false), i, 1)); J$.X1(9337, J$.C(8, J$.B(10, '<', J$.R(553, 'i', i, 0), J$.G(569, J$.R(561, 'keys', keys, 0), 'length', 0), 0))); J$.X1(9345, i = J$.W(593, 'i', J$.B(26, '+', J$.U(18, '+', J$.R(585, 'i', i, 0)), J$.T(577, 1, 22, false), 0), i, 0))) {
                                J$.X1(657, J$.M(649, J$.R(601, 'Object', Object, 2), 'defineProperty', 0)(J$.R(609, 'arr', arr, 0), J$.G(633, J$.R(617, 'keys', keys, 0), J$.R(625, 'i', i, 0), 4), J$.R(641, '_options', _options, 0)));
                            }
                            J$.X1(689, J$.P(681, J$.R(665, 'arr', arr, 0), '_atomics', J$.T(673, {}, 11, false), 0));
                            J$.X1(721, J$.P(713, J$.R(697, 'arr', arr, 0), 'validators', J$.T(705, [], 10, false), 0));
                            J$.X1(753, J$.P(745, J$.R(729, 'arr', arr, 0), '_path', J$.R(737, 'path', path, 0), 0));
                            if (J$.X1(9353, J$.C(24, J$.C(16, J$.R(761, 'doc', doc, 0)) ? J$.B(34, 'instanceof', J$.R(769, 'doc', doc, 0), J$.R(777, 'Document', Document, 1), 0) : J$._()))) {
                                J$.X1(809, J$.P(801, J$.R(785, 'arr', arr, 0), '_parent', J$.R(793, 'doc', doc, 0), 0));
                                J$.X1(865, J$.P(857, J$.R(817, 'arr', arr, 0), '_schema', J$.M(849, J$.G(833, J$.R(825, 'doc', doc, 0), 'schema', 0), 'path', 0)(J$.R(841, 'path', path, 0)), 0));
                            }
                            return J$.X1(889, J$.Rt(881, J$.R(873, 'arr', arr, 0)));
                        } catch (J$e) {
                            J$.Ex(9361, J$e);
                        } finally {
                            if (J$.Fr(9369))
                                continue jalangiLabel4867;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(9265, '__secret__S$', __secret__S$, 0);
            J$.N(9273, '__secret__traits__', __secret__traits__, 0);
            J$.N(9281, 'EmbeddedDocument', EmbeddedDocument, 0);
            J$.N(9289, 'Document', Document, 0);
            J$.N(9297, 'ObjectId', ObjectId, 0);
            J$.N(9305, 'utils', utils, 0);
            J$.N(9313, 'isMongooseObject', isMongooseObject, 0);
            MongooseArray = J$.N(9329, 'MongooseArray', J$.T(9321, MongooseArray, 12, false, 897), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var EmbeddedDocument = J$.X1(113, J$.W(105, 'EmbeddedDocument', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './embedded', 21, false)), EmbeddedDocument, 3));
            var Document = J$.X1(153, J$.W(145, 'Document', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, '../document', 21, false)), Document, 3));
            var ObjectId = J$.X1(193, J$.W(185, 'ObjectId', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, './objectid', 21, false)), ObjectId, 3));
            var utils = J$.X1(233, J$.W(225, 'utils', J$.F(217, J$.R(201, 'require', require, 2), 0)(J$.T(209, '../utils', 21, false)), utils, 3));
            var isMongooseObject = J$.X1(265, J$.W(257, 'isMongooseObject', J$.G(249, J$.R(241, 'utils', utils, 1), 'isMongooseObject', 0), isMongooseObject, 3));
            J$.X1(9153, J$.P(9145, J$.R(969, 'MongooseArray', MongooseArray, 1), 'mixin', J$.T(9137, {
                _atomics: J$.T(977, undefined, 24, false),
                _parent: J$.T(985, undefined, 24, false),
                _cast: J$.T(1745, function (value) {
                    jalangiLabel4868:
                        while (true) {
                            try {
                                J$.Fe(1689, arguments.callee, this, arguments);
                                arguments = J$.N(1697, 'arguments', arguments, 4);
                                value = J$.N(1705, 'value', value, 4);
                                J$.N(1713, 'owner', owner, 0);
                                J$.N(1721, 'populated', populated, 0);
                                J$.N(1729, 'Model', Model, 0);
                                J$.N(1737, 'isDisc', isDisc, 0);
                                var owner = J$.X1(1017, J$.W(1009, 'owner', J$.G(1001, J$.R(993, 'this', this, 0), '_owner', 0), owner, 1));
                                var populated = J$.X1(1041, J$.W(1033, 'populated', J$.T(1025, false, 23, false), populated, 1));
                                var Model;
                                if (J$.X1(9393, J$.C(48, J$.G(1057, J$.R(1049, 'this', this, 0), '_parent', 0)))) {
                                    if (J$.X1(9385, J$.C(40, J$.U(42, '!', J$.R(1065, 'owner', owner, 0))))) {
                                        J$.X1(1161, owner = J$.W(1153, 'owner', J$.P(1145, J$.R(1073, 'this', this, 0), '_owner', J$.X1(9377, J$.C(32, J$.G(1097, J$.G(1089, J$.R(1081, 'this', this, 0), '_parent', 0), 'ownerDocument', 0))) ? J$.M(1121, J$.G(1113, J$.R(1105, 'this', this, 0), '_parent', 0), 'ownerDocument', 0)() : J$.G(1137, J$.R(1129, 'this', this, 0), '_parent', 0), 0), owner, 0));
                                    }
                                    J$.X1(1217, populated = J$.W(1209, 'populated', J$.M(1201, J$.R(1169, 'owner', owner, 0), 'populated', 0)(J$.G(1185, J$.R(1177, 'this', this, 0), '_path', 0), J$.T(1193, true, 23, false)), populated, 0));
                                }
                                if (J$.X1(9417, J$.C(112, J$.C(56, J$.R(1225, 'populated', populated, 0)) ? J$.B(50, '!=', J$.T(1233, null, 25, false), J$.R(1241, 'value', value, 0), 0) : J$._()))) {
                                    J$.X1(1281, Model = J$.W(1273, 'Model', J$.G(1265, J$.G(1257, J$.R(1249, 'populated', populated, 0), 'options', 0), 'model', 0), Model, 0));
                                    if (J$.X1(9401, J$.C(80, J$.C(72, J$.C(64, J$.M(1305, J$.R(1289, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(1297, 'value', value, 0))) ? J$._() : J$.B(58, 'instanceof', J$.R(1313, 'value', value, 0), J$.R(1321, 'ObjectId', ObjectId, 1), 0)) ? J$._() : J$.U(66, '!', J$.M(1345, J$.R(1329, 'utils', utils, 1), 'isObject', 0)(J$.R(1337, 'value', value, 0)))))) {
                                        J$.X1(1377, value = J$.W(1369, 'value', J$.T(1361, {
                                            _id: J$.R(1353, 'value', value, 0)
                                        }, 11, false), value, 0));
                                    }
                                    var isDisc = J$.X1(1473, J$.W(1465, 'isDisc', J$.C(96, J$.C(88, J$.G(1393, J$.R(1385, 'value', value, 0), 'schema', 0)) ? J$.G(1417, J$.G(1409, J$.R(1401, 'value', value, 0), 'schema', 0), 'discriminatorMapping', 0) : J$._()) ? J$.B(74, '!==', J$.G(1449, J$.G(1441, J$.G(1433, J$.R(1425, 'value', value, 0), 'schema', 0), 'discriminatorMapping', 0), 'key', 0), J$.T(1457, undefined, 24, false), 0) : J$._(), isDisc, 1));
                                    if (J$.X1(9409, J$.C(104, J$.U(82, '!', J$.R(1481, 'isDisc', isDisc, 0))))) {
                                        J$.X1(1521, value = J$.W(1513, 'value', J$.F(1505, J$.R(1489, 'Model', Model, 0), 1)(J$.R(1497, 'value', value, 0)), value, 0));
                                    }
                                    return J$.X1(1601, J$.Rt(1593, J$.M(1585, J$.G(1545, J$.G(1537, J$.R(1529, 'this', this, 0), '_schema', 0), 'caster', 0), 'cast', 0)(J$.R(1553, 'value', value, 0), J$.G(1569, J$.R(1561, 'this', this, 0), '_parent', 0), J$.T(1577, true, 23, false))));
                                }
                                return J$.X1(1681, J$.Rt(1673, J$.M(1665, J$.G(1625, J$.G(1617, J$.R(1609, 'this', this, 0), '_schema', 0), 'caster', 0), 'cast', 0)(J$.R(1633, 'value', value, 0), J$.G(1649, J$.R(1641, 'this', this, 0), '_parent', 0), J$.T(1657, false, 23, false))));
                            } catch (J$e) {
                                J$.Ex(9425, J$e);
                            } finally {
                                if (J$.Fr(9433))
                                    continue jalangiLabel4868;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1689),
                _markModified: J$.T(2073, function (elem, embeddedPath) {
                    jalangiLabel4869:
                        while (true) {
                            try {
                                J$.Fe(2025, arguments.callee, this, arguments);
                                arguments = J$.N(2033, 'arguments', arguments, 4);
                                elem = J$.N(2041, 'elem', elem, 4);
                                embeddedPath = J$.N(2049, 'embeddedPath', embeddedPath, 4);
                                J$.N(2057, 'parent', parent, 0);
                                J$.N(2065, 'dirtyPath', dirtyPath, 0);
                                var parent = J$.X1(1777, J$.W(1769, 'parent', J$.G(1761, J$.R(1753, 'this', this, 0), '_parent', 0), parent, 1)), dirtyPath;
                                if (J$.X1(9457, J$.C(136, J$.R(1785, 'parent', parent, 0)))) {
                                    J$.X1(1817, dirtyPath = J$.W(1809, 'dirtyPath', J$.G(1801, J$.R(1793, 'this', this, 0), '_path', 0), dirtyPath, 0));
                                    if (J$.X1(9449, J$.C(128, J$.G(1833, J$.R(1825, 'arguments', arguments, 2), 'length', 0)))) {
                                        if (J$.X1(9441, J$.C(120, J$.B(90, '!=', J$.T(1841, null, 25, false), J$.R(1849, 'embeddedPath', embeddedPath, 0), 0)))) {
                                            J$.X1(1921, dirtyPath = J$.W(1913, 'dirtyPath', J$.B(122, '+', J$.B(114, '+', J$.B(106, '+', J$.B(98, '+', J$.R(1857, 'dirtyPath', dirtyPath, 0), J$.T(1865, '.', 21, false), 0), J$.M(1889, J$.R(1873, 'this', this, 0), 'indexOf', 0)(J$.R(1881, 'elem', elem, 0)), 0), J$.T(1897, '.', 21, false), 0), J$.R(1905, 'embeddedPath', embeddedPath, 0), 0), dirtyPath, 0));
                                        } else {
                                            J$.X1(1961, dirtyPath = J$.W(1953, 'dirtyPath', J$.B(138, '+', J$.B(130, '+', J$.R(1929, 'dirtyPath', dirtyPath, 0), J$.T(1937, '.', 21, false), 0), J$.R(1945, 'elem', elem, 0), 0), dirtyPath, 0));
                                        }
                                    }
                                    J$.X1(1993, J$.M(1985, J$.R(1969, 'parent', parent, 0), 'markModified', 0)(J$.R(1977, 'dirtyPath', dirtyPath, 0)));
                                }
                                return J$.X1(2017, J$.Rt(2009, J$.R(2001, 'this', this, 0)));
                            } catch (J$e) {
                                J$.Ex(9465, J$e);
                            } finally {
                                if (J$.Fr(9473))
                                    continue jalangiLabel4869;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2025),
                _registerAtomic: J$.T(3297, function (op, val) {
                    jalangiLabel4872:
                        while (true) {
                            try {
                                J$.Fe(3233, arguments.callee, this, arguments);
                                arguments = J$.N(3241, 'arguments', arguments, 4);
                                op = J$.N(3249, 'op', op, 4);
                                val = J$.N(3257, 'val', val, 4);
                                J$.N(3265, 'atomics', atomics, 0);
                                J$.N(3273, 'self', self, 0);
                                J$.N(3281, 'selector', selector, 0);
                                J$.N(3289, 'pullOp', pullOp, 0);
                                if (J$.X1(9481, J$.C(144, J$.B(146, '==', J$.T(2081, '$set', 21, false), J$.R(2089, 'op', op, 0), 0)))) {
                                    J$.X1(2129, J$.P(2121, J$.R(2097, 'this', this, 0), '_atomics', J$.T(2113, {
                                        $set: J$.R(2105, 'val', val, 0)
                                    }, 11, false), 0));
                                    return J$.X1(2153, J$.Rt(2145, J$.R(2137, 'this', this, 0)));
                                }
                                var atomics = J$.X1(2185, J$.W(2177, 'atomics', J$.G(2169, J$.R(2161, 'this', this, 0), '_atomics', 0), atomics, 1));
                                if (J$.X1(9505, J$.C(160, J$.C(152, J$.B(154, '==', J$.T(2193, '$pop', 21, false), J$.R(2201, 'op', op, 0), 0)) ? J$.U(170, '!', J$.B(162, 'in', J$.T(2209, '$pop', 21, false), J$.R(2217, 'atomics', atomics, 0), 0)) : J$._()))) {
                                    var self = J$.X1(2241, J$.W(2233, 'self', J$.R(2225, 'this', this, 0), self, 1));
                                    J$.X1(2353, J$.M(2345, J$.G(2257, J$.R(2249, 'this', this, 0), '_parent', 0), 'once', 0)(J$.T(2265, 'save', 21, false), J$.T(2337, function () {
                                        jalangiLabel4870:
                                            while (true) {
                                                try {
                                                    J$.Fe(2321, arguments.callee, this, arguments);
                                                    arguments = J$.N(2329, 'arguments', arguments, 4);
                                                    J$.X1(2313, J$.P(2305, J$.R(2273, 'self', self, 0), '_popped', J$.P(2297, J$.R(2281, 'self', self, 0), '_shifted', J$.T(2289, null, 25, false), 0), 0));
                                                } catch (J$e) {
                                                    J$.Ex(9489, J$e);
                                                } finally {
                                                    if (J$.Fr(9497))
                                                        continue jalangiLabel4870;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 2321)));
                                }
                                if (J$.X1(9513, J$.C(184, J$.C(176, J$.G(2377, J$.G(2369, J$.R(2361, 'this', this, 0), '_atomics', 0), '$set', 0)) ? J$._() : J$.C(168, J$.G(2409, J$.M(2401, J$.R(2385, 'Object', Object, 2), 'keys', 0)(J$.R(2393, 'atomics', atomics, 0)), 'length', 0)) ? J$.U(186, '!', J$.B(178, 'in', J$.R(2417, 'op', op, 0), J$.R(2425, 'atomics', atomics, 0), 0)) : J$._()))) {
                                    J$.X1(2465, J$.P(2457, J$.R(2433, 'this', this, 0), '_atomics', J$.T(2449, {
                                        $set: J$.R(2441, 'this', this, 0)
                                    }, 11, false), 0));
                                    return J$.X1(2489, J$.Rt(2481, J$.R(2473, 'this', this, 0)));
                                }
                                var selector;
                                if (J$.X1(9553, J$.C(256, J$.C(200, J$.C(192, J$.B(194, '===', J$.R(2497, 'op', op, 0), J$.T(2505, '$pullAll', 21, false), 0)) ? J$._() : J$.B(202, '===', J$.R(2513, 'op', op, 0), J$.T(2521, '$pushAll', 21, false), 0)) ? J$._() : J$.B(210, '===', J$.R(2529, 'op', op, 0), J$.T(2537, '$addToSet', 21, false), 0)))) {
                                    J$.X1(2601, J$.C(208, J$.G(2561, J$.R(2545, 'atomics', atomics, 0), J$.R(2553, 'op', op, 0), 4)) ? J$._() : J$.P(2593, J$.R(2569, 'atomics', atomics, 0), J$.R(2577, 'op', op, 0), J$.T(2585, [], 10, false), 2));
                                    J$.X1(2673, J$.P(2665, J$.R(2609, 'atomics', atomics, 0), J$.R(2617, 'op', op, 0), J$.M(2657, J$.G(2641, J$.R(2625, 'atomics', atomics, 0), J$.R(2633, 'op', op, 0), 4), 'concat', 0)(J$.R(2649, 'val', val, 0)), 2));
                                } else if (J$.X1(9545, J$.C(248, J$.B(218, '===', J$.R(2681, 'op', op, 0), J$.T(2689, '$pullDocs', 21, false), 0)))) {
                                    var pullOp = J$.X1(2761, J$.W(2753, 'pullOp', J$.C(216, J$.G(2713, J$.R(2697, 'atomics', atomics, 0), J$.T(2705, '$pull', 21, false), 4)) ? J$._() : J$.P(2745, J$.R(2721, 'atomics', atomics, 0), J$.T(2729, '$pull', 21, false), J$.T(2737, {}, 11, false), 2), pullOp, 1));
                                    if (J$.X1(9537, J$.C(240, J$.B(226, 'instanceof', J$.G(2785, J$.R(2769, 'val', val, 0), J$.T(2777, 0, 22, false), 4), J$.R(2793, 'EmbeddedDocument', EmbeddedDocument, 1), 0)))) {
                                        J$.X1(2865, selector = J$.W(2857, 'selector', J$.C(224, J$.G(2817, J$.R(2801, 'pullOp', pullOp, 0), J$.T(2809, '$or', 21, false), 4)) ? J$._() : J$.P(2849, J$.R(2825, 'pullOp', pullOp, 0), J$.T(2833, '$or', 21, false), J$.T(2841, [], 10, false), 2), selector, 0));
                                        J$.X1(3009, J$.M(3001, J$.G(2889, J$.G(2881, J$.R(2873, 'Array', Array, 2), 'prototype', 0), 'push', 0), 'apply', 0)(J$.R(2897, 'selector', selector, 0), J$.M(2993, J$.R(2905, 'val', val, 0), 'map', 0)(J$.T(2985, function (v) {
                                            jalangiLabel4871:
                                                while (true) {
                                                    try {
                                                        J$.Fe(2961, arguments.callee, this, arguments);
                                                        arguments = J$.N(2969, 'arguments', arguments, 4);
                                                        v = J$.N(2977, 'v', v, 4);
                                                        return J$.X1(2953, J$.Rt(2945, J$.M(2937, J$.R(2913, 'v', v, 0), 'toObject', 0)(J$.T(2929, {
                                                            virtuals: J$.T(2921, false, 23, false)
                                                        }, 11, false))));
                                                    } catch (J$e) {
                                                        J$.Ex(9521, J$e);
                                                    } finally {
                                                        if (J$.Fr(9529))
                                                            continue jalangiLabel4871;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false, 2961))));
                                    } else {
                                        J$.X1(3089, selector = J$.W(3081, 'selector', J$.C(232, J$.G(3033, J$.R(3017, 'pullOp', pullOp, 0), J$.T(3025, '_id', 21, false), 4)) ? J$._() : J$.P(3073, J$.R(3041, 'pullOp', pullOp, 0), J$.T(3049, '_id', 21, false), J$.T(3065, {
                                            '$in': J$.T(3057, [], 10, false)
                                        }, 11, false), 2), selector, 0));
                                        J$.X1(3161, J$.P(3153, J$.R(3097, 'selector', selector, 0), J$.T(3105, '$in', 21, false), J$.M(3145, J$.G(3129, J$.R(3113, 'selector', selector, 0), J$.T(3121, '$in', 21, false), 4), 'concat', 0)(J$.R(3137, 'val', val, 0)), 2));
                                    }
                                } else {
                                    J$.X1(3201, J$.P(3193, J$.R(3169, 'atomics', atomics, 0), J$.R(3177, 'op', op, 0), J$.R(3185, 'val', val, 0), 2));
                                }
                                return J$.X1(3225, J$.Rt(3217, J$.R(3209, 'this', this, 0)));
                            } catch (J$e) {
                                J$.Ex(9561, J$e);
                            } finally {
                                if (J$.Fr(9569))
                                    continue jalangiLabel4872;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3233),
                $__getAtomics: J$.T(4057, function () {
                    jalangiLabel4873:
                        while (true) {
                            try {
                                J$.Fe(4001, arguments.callee, this, arguments);
                                arguments = J$.N(4009, 'arguments', arguments, 4);
                                J$.N(4017, 'ret', ret, 0);
                                J$.N(4025, 'keys', keys, 0);
                                J$.N(4033, 'i', i, 0);
                                J$.N(4041, 'op', op, 0);
                                J$.N(4049, 'val', val, 0);
                                var ret = J$.X1(3321, J$.W(3313, 'ret', J$.T(3305, [], 10, false), ret, 1));
                                var keys = J$.X1(3369, J$.W(3361, 'keys', J$.M(3353, J$.R(3329, 'Object', Object, 2), 'keys', 0)(J$.G(3345, J$.R(3337, 'this', this, 0), '_atomics', 0)), keys, 1));
                                var i = J$.X1(3401, J$.W(3393, 'i', J$.G(3385, J$.R(3377, 'keys', keys, 0), 'length', 0), i, 1));
                                if (J$.X1(9577, J$.C(264, J$.B(234, '===', J$.T(3409, 0, 22, false), J$.R(3417, 'i', i, 0), 0)))) {
                                    J$.X1(3505, J$.P(3497, J$.R(3425, 'ret', ret, 0), J$.T(3433, 0, 22, false), J$.T(3489, [
                                        J$.T(3441, '$set', 21, false),
                                        J$.M(3481, J$.R(3449, 'this', this, 0), 'toObject', 0)(J$.T(3473, {
                                            depopulate: J$.T(3457, 1, 22, false),
                                            transform: J$.T(3465, false, 23, false)
                                        }, 11, false))
                                    ], 10, false), 2));
                                    return J$.X1(3529, J$.Rt(3521, J$.R(3513, 'ret', ret, 0)));
                                }
                                while (J$.X1(9617, J$.C(304, J$.B(258, '+', i = J$.W(3553, 'i', J$.B(250, '-', J$.U(242, '+', J$.R(3545, 'i', i, 0)), J$.T(3537, 1, 22, false), 0), i, 0), J$.T(3561, 1, 22, false), 0)))) {
                                    var op = J$.X1(3601, J$.W(3593, 'op', J$.G(3585, J$.R(3569, 'keys', keys, 0), J$.R(3577, 'i', i, 0), 4), op, 1));
                                    var val = J$.X1(3649, J$.W(3641, 'val', J$.G(3633, J$.G(3617, J$.R(3609, 'this', this, 0), '_atomics', 0), J$.R(3625, 'op', op, 0), 4), val, 1));
                                    if (J$.X1(9601, J$.C(288, J$.F(3673, J$.R(3657, 'isMongooseObject', isMongooseObject, 1), 0)(J$.R(3665, 'val', val, 0))))) {
                                        J$.X1(3729, val = J$.W(3721, 'val', J$.M(3713, J$.R(3681, 'val', val, 0), 'toObject', 0)(J$.T(3705, {
                                            depopulate: J$.T(3689, 1, 22, false),
                                            transform: J$.T(3697, false, 23, false)
                                        }, 11, false)), val, 0));
                                    } else if (J$.X1(9593, J$.C(280, J$.M(3753, J$.R(3737, 'Array', Array, 2), 'isArray', 0)(J$.R(3745, 'val', val, 0))))) {
                                        J$.X1(3825, val = J$.W(3817, 'val', J$.M(3809, J$.G(3769, J$.R(3761, 'this', this, 0), 'toObject', 0), 'call', 0)(J$.R(3777, 'val', val, 0), J$.T(3801, {
                                            depopulate: J$.T(3785, 1, 22, false),
                                            transform: J$.T(3793, false, 23, false)
                                        }, 11, false)), val, 0));
                                    } else if (J$.X1(9585, J$.C(272, J$.G(3841, J$.R(3833, 'val', val, 0), 'valueOf', 0)))) {
                                        J$.X1(3873, val = J$.W(3865, 'val', J$.M(3857, J$.R(3849, 'val', val, 0), 'valueOf', 0)(), val, 0));
                                    }
                                    if (J$.X1(9609, J$.C(296, J$.B(266, '==', J$.T(3881, '$addToSet', 21, false), J$.R(3889, 'op', op, 0), 0)))) {
                                        J$.X1(3921, val = J$.W(3913, 'val', J$.T(3905, {
                                            $each: J$.R(3897, 'val', val, 0)
                                        }, 11, false), val, 0));
                                    }
                                    J$.X1(3969, J$.M(3961, J$.R(3929, 'ret', ret, 0), 'push', 0)(J$.T(3953, [
                                        J$.R(3937, 'op', op, 0),
                                        J$.R(3945, 'val', val, 0)
                                    ], 10, false)));
                                }
                                return J$.X1(3993, J$.Rt(3985, J$.R(3977, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(9625, J$e);
                            } finally {
                                if (J$.Fr(9633))
                                    continue jalangiLabel4873;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4001),
                hasAtomics: J$.T(4225, function hasAtomics() {
                    jalangiLabel4874:
                        while (true) {
                            try {
                                J$.Fe(4201, arguments.callee, this, arguments);
                                arguments = J$.N(4209, 'arguments', arguments, 4);
                                hasAtomics = J$.N(4217, 'hasAtomics', hasAtomics, 0);
                                if (J$.X1(9641, J$.C(320, J$.U(282, '!', J$.C(312, J$.G(4073, J$.R(4065, 'this', this, 0), '_atomics', 0)) ? J$.B(274, '===', J$.T(4081, 'Object', 21, false), J$.G(4113, J$.G(4105, J$.G(4097, J$.R(4089, 'this', this, 0), '_atomics', 0), 'constructor', 0), 'name', 0), 0) : J$._())))) {
                                    return J$.X1(4137, J$.Rt(4129, J$.T(4121, 0, 22, false)));
                                }
                                return J$.X1(4193, J$.Rt(4185, J$.G(4177, J$.M(4169, J$.R(4145, 'Object', Object, 2), 'keys', 0)(J$.G(4161, J$.R(4153, 'this', this, 0), '_atomics', 0)), 'length', 0)));
                            } catch (J$e) {
                                J$.Ex(9649, J$e);
                            } finally {
                                if (J$.Fr(9657))
                                    continue jalangiLabel4874;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4201),
                _mapCast: J$.T(4329, function (val, index) {
                    jalangiLabel4875:
                        while (true) {
                            try {
                                J$.Fe(4297, arguments.callee, this, arguments);
                                arguments = J$.N(4305, 'arguments', arguments, 4);
                                val = J$.N(4313, 'val', val, 4);
                                index = J$.N(4321, 'index', index, 4);
                                return J$.X1(4289, J$.Rt(4281, J$.M(4273, J$.R(4233, 'this', this, 0), '_cast', 0)(J$.R(4241, 'val', val, 0), J$.B(290, '+', J$.G(4257, J$.R(4249, 'this', this, 0), 'length', 0), J$.R(4265, 'index', index, 0), 0))));
                            } catch (J$e) {
                                J$.Ex(9665, J$e);
                            } finally {
                                if (J$.Fr(9673))
                                    continue jalangiLabel4875;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4297),
                push: J$.T(4649, function () {
                    jalangiLabel4876:
                        while (true) {
                            try {
                                J$.Fe(4617, arguments.callee, this, arguments);
                                arguments = J$.N(4625, 'arguments', arguments, 4);
                                J$.N(4633, 'values', values, 0);
                                J$.N(4641, 'ret', ret, 0);
                                var values = J$.X1(4401, J$.W(4393, 'values', J$.M(4385, J$.G(4345, J$.T(4337, [], 10, false), 'map', 0), 'call', 0)(J$.R(4353, 'arguments', arguments, 2), J$.G(4369, J$.R(4361, 'this', this, 0), '_mapCast', 0), J$.R(4377, 'this', this, 0)), values, 1));
                                J$.X1(4465, values = J$.W(4457, 'values', J$.M(4449, J$.G(4417, J$.R(4409, 'this', this, 0), '_schema', 0), 'applySetters', 0)(J$.R(4425, 'values', values, 0), J$.G(4441, J$.R(4433, 'this', this, 0), '_parent', 0)), values, 0));
                                var ret = J$.X1(4521, J$.W(4513, 'ret', J$.M(4505, J$.G(4481, J$.T(4473, [], 10, false), 'push', 0), 'apply', 0)(J$.R(4489, 'this', this, 0), J$.R(4497, 'values', values, 0)), ret, 1));
                                J$.X1(4561, J$.M(4553, J$.R(4529, 'this', this, 0), '_registerAtomic', 0)(J$.T(4537, '$pushAll', 21, false), J$.R(4545, 'values', values, 0)));
                                J$.X1(4585, J$.M(4577, J$.R(4569, 'this', this, 0), '_markModified', 0)());
                                return J$.X1(4609, J$.Rt(4601, J$.R(4593, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(9681, J$e);
                            } finally {
                                if (J$.Fr(9689))
                                    continue jalangiLabel4876;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4617),
                nonAtomicPush: J$.T(4905, function () {
                    jalangiLabel4877:
                        while (true) {
                            try {
                                J$.Fe(4873, arguments.callee, this, arguments);
                                arguments = J$.N(4881, 'arguments', arguments, 4);
                                J$.N(4889, 'values', values, 0);
                                J$.N(4897, 'ret', ret, 0);
                                var values = J$.X1(4721, J$.W(4713, 'values', J$.M(4705, J$.G(4665, J$.T(4657, [], 10, false), 'map', 0), 'call', 0)(J$.R(4673, 'arguments', arguments, 2), J$.G(4689, J$.R(4681, 'this', this, 0), '_mapCast', 0), J$.R(4697, 'this', this, 0)), values, 1));
                                var ret = J$.X1(4777, J$.W(4769, 'ret', J$.M(4761, J$.G(4737, J$.T(4729, [], 10, false), 'push', 0), 'apply', 0)(J$.R(4745, 'this', this, 0), J$.R(4753, 'values', values, 0)), ret, 1));
                                J$.X1(4817, J$.M(4809, J$.R(4785, 'this', this, 0), '_registerAtomic', 0)(J$.T(4793, '$set', 21, false), J$.R(4801, 'this', this, 0)));
                                J$.X1(4841, J$.M(4833, J$.R(4825, 'this', this, 0), '_markModified', 0)());
                                return J$.X1(4865, J$.Rt(4857, J$.R(4849, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(9697, J$e);
                            } finally {
                                if (J$.Fr(9705))
                                    continue jalangiLabel4877;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4873),
                $pop: J$.T(5105, function () {
                    jalangiLabel4878:
                        while (true) {
                            try {
                                J$.Fe(5089, arguments.callee, this, arguments);
                                arguments = J$.N(5097, 'arguments', arguments, 4);
                                J$.X1(4945, J$.M(4937, J$.R(4913, 'this', this, 0), '_registerAtomic', 0)(J$.T(4921, '$pop', 21, false), J$.T(4929, 1, 22, false)));
                                J$.X1(4969, J$.M(4961, J$.R(4953, 'this', this, 0), '_markModified', 0)());
                                if (J$.X1(9713, J$.C(328, J$.G(4985, J$.R(4977, 'this', this, 0), '_popped', 0))))
                                    return J$.X1(5001, J$.Rt(4993, undefined));
                                J$.X1(5033, J$.P(5025, J$.R(5009, 'this', this, 0), '_popped', J$.T(5017, true, 23, false), 0));
                                return J$.X1(5081, J$.Rt(5073, J$.M(5065, J$.G(5049, J$.T(5041, [], 10, false), 'pop', 0), 'call', 0)(J$.R(5057, 'this', this, 0))));
                            } catch (J$e) {
                                J$.Ex(9721, J$e);
                            } finally {
                                if (J$.Fr(9729))
                                    continue jalangiLabel4878;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5089),
                pop: J$.T(5273, function () {
                    jalangiLabel4879:
                        while (true) {
                            try {
                                J$.Fe(5249, arguments.callee, this, arguments);
                                arguments = J$.N(5257, 'arguments', arguments, 4);
                                J$.N(5265, 'ret', ret, 0);
                                var ret = J$.X1(5153, J$.W(5145, 'ret', J$.M(5137, J$.G(5121, J$.T(5113, [], 10, false), 'pop', 0), 'call', 0)(J$.R(5129, 'this', this, 0)), ret, 1));
                                J$.X1(5193, J$.M(5185, J$.R(5161, 'this', this, 0), '_registerAtomic', 0)(J$.T(5169, '$set', 21, false), J$.R(5177, 'this', this, 0)));
                                J$.X1(5217, J$.M(5209, J$.R(5201, 'this', this, 0), '_markModified', 0)());
                                return J$.X1(5241, J$.Rt(5233, J$.R(5225, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(9737, J$e);
                            } finally {
                                if (J$.Fr(9745))
                                    continue jalangiLabel4879;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5249),
                $shift: J$.T(5481, function $shift() {
                    jalangiLabel4880:
                        while (true) {
                            try {
                                J$.Fe(5457, arguments.callee, this, arguments);
                                arguments = J$.N(5465, 'arguments', arguments, 4);
                                $shift = J$.N(5473, '$shift', $shift, 0);
                                J$.X1(5313, J$.M(5305, J$.R(5281, 'this', this, 0), '_registerAtomic', 0)(J$.T(5289, '$pop', 21, false), J$.U(298, '-', J$.T(5297, 1, 22, false))));
                                J$.X1(5337, J$.M(5329, J$.R(5321, 'this', this, 0), '_markModified', 0)());
                                if (J$.X1(9753, J$.C(336, J$.G(5353, J$.R(5345, 'this', this, 0), '_shifted', 0))))
                                    return J$.X1(5369, J$.Rt(5361, undefined));
                                J$.X1(5401, J$.P(5393, J$.R(5377, 'this', this, 0), '_shifted', J$.T(5385, true, 23, false), 0));
                                return J$.X1(5449, J$.Rt(5441, J$.M(5433, J$.G(5417, J$.T(5409, [], 10, false), 'shift', 0), 'call', 0)(J$.R(5425, 'this', this, 0))));
                            } catch (J$e) {
                                J$.Ex(9761, J$e);
                            } finally {
                                if (J$.Fr(9769))
                                    continue jalangiLabel4880;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5457),
                shift: J$.T(5649, function () {
                    jalangiLabel4881:
                        while (true) {
                            try {
                                J$.Fe(5625, arguments.callee, this, arguments);
                                arguments = J$.N(5633, 'arguments', arguments, 4);
                                J$.N(5641, 'ret', ret, 0);
                                var ret = J$.X1(5529, J$.W(5521, 'ret', J$.M(5513, J$.G(5497, J$.T(5489, [], 10, false), 'shift', 0), 'call', 0)(J$.R(5505, 'this', this, 0)), ret, 1));
                                J$.X1(5569, J$.M(5561, J$.R(5537, 'this', this, 0), '_registerAtomic', 0)(J$.T(5545, '$set', 21, false), J$.R(5553, 'this', this, 0)));
                                J$.X1(5593, J$.M(5585, J$.R(5577, 'this', this, 0), '_markModified', 0)());
                                return J$.X1(5617, J$.Rt(5609, J$.R(5601, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(9777, J$e);
                            } finally {
                                if (J$.Fr(9785))
                                    continue jalangiLabel4881;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5625),
                pull: J$.T(6433, function () {
                    jalangiLabel4884:
                        while (true) {
                            try {
                                J$.Fe(6385, arguments.callee, this, arguments);
                                arguments = J$.N(6393, 'arguments', arguments, 4);
                                J$.N(6401, 'values', values, 0);
                                J$.N(6409, 'cur', cur, 0);
                                J$.N(6417, 'i', i, 0);
                                J$.N(6425, 'mem', mem, 0);
                                var values = J$.X1(5777, J$.W(5769, 'values', J$.M(5705, J$.G(5665, J$.T(5657, [], 10, false), 'map', 0), 'call', 0)(J$.R(5673, 'arguments', arguments, 2), J$.G(5689, J$.R(5681, 'this', this, 0), '_cast', 0), J$.R(5697, 'this', this, 0)), values, 1)), cur = J$.X1(5793, J$.W(5785, 'cur', J$.M(5745, J$.G(5721, J$.R(5713, 'this', this, 0), '_parent', 0), 'get', 0)(J$.G(5737, J$.R(5729, 'this', this, 0), '_path', 0)), cur, 1)), i = J$.X1(5809, J$.W(5801, 'i', J$.G(5761, J$.R(5753, 'cur', cur, 0), 'length', 0), i, 1)), mem;
                                while (J$.X1(9833, J$.C(368, J$.B(322, '+', i = J$.W(5833, 'i', J$.B(314, '-', J$.U(306, '+', J$.R(5825, 'i', i, 0)), J$.T(5817, 1, 22, false), 0), i, 0), J$.T(5841, 1, 22, false), 0)))) {
                                    J$.X1(5881, mem = J$.W(5873, 'mem', J$.G(5865, J$.R(5849, 'cur', cur, 0), J$.R(5857, 'i', i, 0), 4), mem, 0));
                                    if (J$.X1(9825, J$.C(360, J$.B(330, 'instanceof', J$.R(5889, 'mem', mem, 0), J$.R(5897, 'Document', Document, 1), 0)))) {
                                        if (J$.X1(9809, J$.C(344, J$.M(5985, J$.R(5905, 'values', values, 0), 'some', 0)(J$.T(5977, function (v) {
                                                jalangiLabel4882:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(5953, arguments.callee, this, arguments);
                                                            arguments = J$.N(5961, 'arguments', arguments, 4);
                                                            v = J$.N(5969, 'v', v, 4);
                                                            return J$.X1(5945, J$.Rt(5937, J$.M(5929, J$.R(5913, 'v', v, 0), 'equals', 0)(J$.R(5921, 'mem', mem, 0))));
                                                        } catch (J$e) {
                                                            J$.Ex(9793, J$e);
                                                        } finally {
                                                            if (J$.Fr(9801))
                                                                continue jalangiLabel4882;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 5953))))) {
                                            J$.X1(6041, J$.M(6033, J$.G(6001, J$.T(5993, [], 10, false), 'splice', 0), 'call', 0)(J$.R(6009, 'cur', cur, 0), J$.R(6017, 'i', i, 0), J$.T(6025, 1, 22, false)));
                                        }
                                    } else if (J$.X1(9817, J$.C(352, J$.U(338, '~', J$.M(6081, J$.G(6057, J$.R(6049, 'cur', cur, 0), 'indexOf', 0), 'call', 0)(J$.R(6065, 'values', values, 0), J$.R(6073, 'mem', mem, 0)))))) {
                                        J$.X1(6137, J$.M(6129, J$.G(6097, J$.T(6089, [], 10, false), 'splice', 0), 'call', 0)(J$.R(6105, 'cur', cur, 0), J$.R(6113, 'i', i, 0), J$.T(6121, 1, 22, false)));
                                    }
                                }
                                if (J$.X1(9857, J$.C(384, J$.B(346, 'instanceof', J$.G(6161, J$.R(6145, 'values', values, 0), J$.T(6153, 0, 22, false), 4), J$.R(6169, 'EmbeddedDocument', EmbeddedDocument, 1), 0)))) {
                                    J$.X1(6289, J$.M(6281, J$.R(6177, 'this', this, 0), '_registerAtomic', 0)(J$.T(6185, '$pullDocs', 21, false), J$.M(6273, J$.R(6193, 'values', values, 0), 'map', 0)(J$.T(6265, function (v) {
                                        jalangiLabel4883:
                                            while (true) {
                                                try {
                                                    J$.Fe(6241, arguments.callee, this, arguments);
                                                    arguments = J$.N(6249, 'arguments', arguments, 4);
                                                    v = J$.N(6257, 'v', v, 4);
                                                    return J$.X1(6233, J$.Rt(6225, J$.C(376, J$.G(6209, J$.R(6201, 'v', v, 0), '_id', 0)) ? J$._() : J$.R(6217, 'v', v, 0)));
                                                } catch (J$e) {
                                                    J$.Ex(9841, J$e);
                                                } finally {
                                                    if (J$.Fr(9849))
                                                        continue jalangiLabel4883;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 6241))));
                                } else {
                                    J$.X1(6329, J$.M(6321, J$.R(6297, 'this', this, 0), '_registerAtomic', 0)(J$.T(6305, '$pullAll', 21, false), J$.R(6313, 'values', values, 0)));
                                }
                                J$.X1(6353, J$.M(6345, J$.R(6337, 'this', this, 0), '_markModified', 0)());
                                return J$.X1(6377, J$.Rt(6369, J$.R(6361, 'this', this, 0)));
                            } catch (J$e) {
                                J$.Ex(9865, J$e);
                            } finally {
                                if (J$.Fr(9873))
                                    continue jalangiLabel4884;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 6385),
                splice: J$.T(6889, function splice() {
                    jalangiLabel4885:
                        while (true) {
                            try {
                                J$.Fe(6841, arguments.callee, this, arguments);
                                arguments = J$.N(6849, 'arguments', arguments, 4);
                                splice = J$.N(6857, 'splice', splice, 0);
                                J$.N(6865, 'ret', ret, 0);
                                J$.N(6873, 'vals', vals, 0);
                                J$.N(6881, 'i', i, 0);
                                var ret, vals, i;
                                if (J$.X1(9913, J$.C(408, J$.G(6449, J$.R(6441, 'arguments', arguments, 2), 'length', 0)))) {
                                    J$.X1(6473, vals = J$.W(6465, 'vals', J$.T(6457, [], 10, false), vals, 0));
                                    for (J$.X1(9897, i = J$.W(6489, 'i', J$.T(6481, 0, 22, false), i, 0)); J$.X1(9889, J$.C(400, J$.B(354, '<', J$.R(6497, 'i', i, 0), J$.G(6513, J$.R(6505, 'arguments', arguments, 2), 'length', 0), 0))); J$.X1(9905, i = J$.W(6537, 'i', J$.B(370, '+', J$.U(362, '+', J$.R(6529, 'i', i, 0)), J$.T(6521, 1, 22, false), 0), i, 0))) {
                                        J$.X1(6689, J$.P(6681, J$.R(6545, 'vals', vals, 0), J$.R(6553, 'i', i, 0), J$.X1(9881, J$.C(392, J$.B(378, '<', J$.R(6561, 'i', i, 0), J$.T(6569, 2, 22, false), 0))) ? J$.G(6593, J$.R(6577, 'arguments', arguments, 2), J$.R(6585, 'i', i, 0), 4) : J$.M(6673, J$.R(6601, 'this', this, 0), '_cast', 0)(J$.G(6625, J$.R(6609, 'arguments', arguments, 2), J$.R(6617, 'i', i, 0), 4), J$.B(394, '+', J$.G(6649, J$.R(6633, 'arguments', arguments, 2), J$.T(6641, 0, 22, false), 4), J$.B(386, '-', J$.R(6657, 'i', i, 0), J$.T(6665, 2, 22, false), 0), 0)), 2));
                                    }
                                    J$.X1(6745, ret = J$.W(6737, 'ret', J$.M(6729, J$.G(6705, J$.T(6697, [], 10, false), 'splice', 0), 'apply', 0)(J$.R(6713, 'this', this, 0), J$.R(6721, 'vals', vals, 0)), ret, 0));
                                    J$.X1(6785, J$.M(6777, J$.R(6753, 'this', this, 0), '_registerAtomic', 0)(J$.T(6761, '$set', 21, false), J$.R(6769, 'this', this, 0)));
                                    J$.X1(6809, J$.M(6801, J$.R(6793, 'this', this, 0), '_markModified', 0)());
                                }
                                return J$.X1(6833, J$.Rt(6825, J$.R(6817, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(9921, J$e);
                            } finally {
                                if (J$.Fr(9929))
                                    continue jalangiLabel4885;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 6841),
                unshift: J$.T(7201, function () {
                    jalangiLabel4886:
                        while (true) {
                            try {
                                J$.Fe(7177, arguments.callee, this, arguments);
                                arguments = J$.N(7185, 'arguments', arguments, 4);
                                J$.N(7193, 'values', values, 0);
                                var values = J$.X1(6961, J$.W(6953, 'values', J$.M(6945, J$.G(6905, J$.T(6897, [], 10, false), 'map', 0), 'call', 0)(J$.R(6913, 'arguments', arguments, 2), J$.G(6929, J$.R(6921, 'this', this, 0), '_cast', 0), J$.R(6937, 'this', this, 0)), values, 1));
                                J$.X1(7025, values = J$.W(7017, 'values', J$.M(7009, J$.G(6977, J$.R(6969, 'this', this, 0), '_schema', 0), 'applySetters', 0)(J$.R(6985, 'values', values, 0), J$.G(7001, J$.R(6993, 'this', this, 0), '_parent', 0)), values, 0));
                                J$.X1(7073, J$.M(7065, J$.G(7041, J$.T(7033, [], 10, false), 'unshift', 0), 'apply', 0)(J$.R(7049, 'this', this, 0), J$.R(7057, 'values', values, 0)));
                                J$.X1(7113, J$.M(7105, J$.R(7081, 'this', this, 0), '_registerAtomic', 0)(J$.T(7089, '$set', 21, false), J$.R(7097, 'this', this, 0)));
                                J$.X1(7137, J$.M(7129, J$.R(7121, 'this', this, 0), '_markModified', 0)());
                                return J$.X1(7169, J$.Rt(7161, J$.G(7153, J$.R(7145, 'this', this, 0), 'length', 0)));
                            } catch (J$e) {
                                J$.Ex(9937, J$e);
                            } finally {
                                if (J$.Fr(9945))
                                    continue jalangiLabel4886;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 7177),
                sort: J$.T(7377, function () {
                    jalangiLabel4887:
                        while (true) {
                            try {
                                J$.Fe(7353, arguments.callee, this, arguments);
                                arguments = J$.N(7361, 'arguments', arguments, 4);
                                J$.N(7369, 'ret', ret, 0);
                                var ret = J$.X1(7257, J$.W(7249, 'ret', J$.M(7241, J$.G(7217, J$.T(7209, [], 10, false), 'sort', 0), 'apply', 0)(J$.R(7225, 'this', this, 0), J$.R(7233, 'arguments', arguments, 2)), ret, 1));
                                J$.X1(7297, J$.M(7289, J$.R(7265, 'this', this, 0), '_registerAtomic', 0)(J$.T(7273, '$set', 21, false), J$.R(7281, 'this', this, 0)));
                                J$.X1(7321, J$.M(7313, J$.R(7305, 'this', this, 0), '_markModified', 0)());
                                return J$.X1(7345, J$.Rt(7337, J$.R(7329, 'ret', ret, 0)));
                            } catch (J$e) {
                                J$.Ex(9953, J$e);
                            } finally {
                                if (J$.Fr(9961))
                                    continue jalangiLabel4887;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 7353),
                addToSet: J$.T(8257, function addToSet() {
                    jalangiLabel4891:
                        while (true) {
                            try {
                                J$.Fe(8209, arguments.callee, this, arguments);
                                arguments = J$.N(8217, 'arguments', arguments, 4);
                                addToSet = J$.N(8225, 'addToSet', addToSet, 0);
                                J$.N(8233, 'values', values, 0);
                                J$.N(8241, 'added', added, 0);
                                J$.N(8249, 'type', type, 0);
                                var values = J$.X1(7449, J$.W(7441, 'values', J$.M(7433, J$.G(7393, J$.T(7385, [], 10, false), 'map', 0), 'call', 0)(J$.R(7401, 'arguments', arguments, 2), J$.G(7417, J$.R(7409, 'this', this, 0), '_mapCast', 0), J$.R(7425, 'this', this, 0)), values, 1));
                                J$.X1(7513, values = J$.W(7505, 'values', J$.M(7497, J$.G(7465, J$.R(7457, 'this', this, 0), '_schema', 0), 'applySetters', 0)(J$.R(7473, 'values', values, 0), J$.G(7489, J$.R(7481, 'this', this, 0), '_parent', 0)), values, 0));
                                var added = J$.X1(7537, J$.W(7529, 'added', J$.T(7521, [], 10, false), added, 1));
                                var type = J$.X1(7641, J$.W(7633, 'type', J$.X1(9977, J$.C(424, J$.B(402, 'instanceof', J$.G(7561, J$.R(7545, 'values', values, 0), J$.T(7553, 0, 22, false), 4), J$.R(7569, 'EmbeddedDocument', EmbeddedDocument, 1), 0))) ? J$.T(7577, 'doc', 21, false) : J$.X1(9969, J$.C(416, J$.B(410, 'instanceof', J$.G(7601, J$.R(7585, 'values', values, 0), J$.T(7593, 0, 22, false), 4), J$.R(7609, 'Date', Date, 2), 0))) ? J$.T(7617, 'date', 21, false) : J$.T(7625, '', 21, false), type, 1));
                                J$.X1(8177, J$.M(8169, J$.R(7649, 'values', values, 0), 'forEach', 0)(J$.T(8153, function (v) {
                                    jalangiLabel4890:
                                        while (true) {
                                            try {
                                                J$.Fe(8113, arguments.callee, this, arguments);
                                                arguments = J$.N(8121, 'arguments', arguments, 4);
                                                v = J$.N(8129, 'v', v, 4);
                                                J$.N(8137, 'found', found, 0);
                                                J$.N(8145, 'val', val, 0);
                                                var found;
                                                switch (J$.X1(10017, J$.C1(432, J$.R(7657, 'type', type, 0)))) {
                                                case J$.X1(10025, J$.C2(440, J$.T(7769, 'doc', 21, false))):
                                                    J$.X1(7761, found = J$.W(7753, 'found', J$.M(7745, J$.R(7665, 'this', this, 0), 'some', 0)(J$.T(7737, function (doc) {
                                                        jalangiLabel4888:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(7713, arguments.callee, this, arguments);
                                                                    arguments = J$.N(7721, 'arguments', arguments, 4);
                                                                    doc = J$.N(7729, 'doc', doc, 4);
                                                                    return J$.X1(7705, J$.Rt(7697, J$.M(7689, J$.R(7673, 'doc', doc, 0), 'equals', 0)(J$.R(7681, 'v', v, 0))));
                                                                } catch (J$e) {
                                                                    J$.Ex(9985, J$e);
                                                                } finally {
                                                                    if (J$.Fr(9993))
                                                                        continue jalangiLabel4888;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 7713)), found, 0));
                                                    break;
                                                case J$.X1(10033, J$.C2(448, J$.T(7897, 'date', 21, false))):
                                                    var val = J$.X1(7793, J$.W(7785, 'val', J$.U(418, '+', J$.R(7777, 'v', v, 0)), val, 1));
                                                    J$.X1(7889, found = J$.W(7881, 'found', J$.M(7873, J$.R(7801, 'this', this, 0), 'some', 0)(J$.T(7865, function (d) {
                                                        jalangiLabel4889:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(7841, arguments.callee, this, arguments);
                                                                    arguments = J$.N(7849, 'arguments', arguments, 4);
                                                                    d = J$.N(7857, 'd', d, 4);
                                                                    return J$.X1(7833, J$.Rt(7825, J$.B(434, '===', J$.U(426, '+', J$.R(7809, 'd', d, 0)), J$.R(7817, 'val', val, 0), 0)));
                                                                } catch (J$e) {
                                                                    J$.Ex(10001, J$e);
                                                                } finally {
                                                                    if (J$.Fr(10009))
                                                                        continue jalangiLabel4889;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 7841)), found, 0));
                                                    break;
                                                default:
                                                    J$.X1(7937, found = J$.W(7929, 'found', J$.U(442, '~', J$.M(7921, J$.R(7905, 'this', this, 0), 'indexOf', 0)(J$.R(7913, 'v', v, 0))), found, 0));
                                                }
                                                if (J$.X1(10041, J$.C(456, J$.U(450, '!', J$.R(7945, 'found', found, 0))))) {
                                                    J$.X1(7993, J$.M(7985, J$.G(7961, J$.T(7953, [], 10, false), 'push', 0), 'call', 0)(J$.R(7969, 'this', this, 0), J$.R(7977, 'v', v, 0)));
                                                    J$.X1(8033, J$.M(8025, J$.R(8001, 'this', this, 0), '_registerAtomic', 0)(J$.T(8009, '$addToSet', 21, false), J$.R(8017, 'v', v, 0)));
                                                    J$.X1(8057, J$.M(8049, J$.R(8041, 'this', this, 0), '_markModified', 0)());
                                                    J$.X1(8105, J$.M(8097, J$.G(8073, J$.T(8065, [], 10, false), 'push', 0), 'call', 0)(J$.R(8081, 'added', added, 0), J$.R(8089, 'v', v, 0)));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(10049, J$e);
                                            } finally {
                                                if (J$.Fr(10057))
                                                    continue jalangiLabel4890;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 8113), J$.R(8161, 'this', this, 0)));
                                return J$.X1(8201, J$.Rt(8193, J$.R(8185, 'added', added, 0)));
                            } catch (J$e) {
                                J$.Ex(10065, J$e);
                            } finally {
                                if (J$.Fr(10073))
                                    continue jalangiLabel4891;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 8209),
                set: J$.T(8569, function set(i, val) {
                    jalangiLabel4892:
                        while (true) {
                            try {
                                J$.Fe(8521, arguments.callee, this, arguments);
                                arguments = J$.N(8529, 'arguments', arguments, 4);
                                set = J$.N(8537, 'set', set, 0);
                                i = J$.N(8545, 'i', i, 4);
                                val = J$.N(8553, 'val', val, 4);
                                J$.N(8561, 'value', value, 0);
                                var value = J$.X1(8305, J$.W(8297, 'value', J$.M(8289, J$.R(8265, 'this', this, 0), '_cast', 0)(J$.R(8273, 'val', val, 0), J$.R(8281, 'i', i, 0)), value, 1));
                                J$.X1(8417, value = J$.W(8409, 'value', J$.X1(10081, J$.C(464, J$.B(458, 'instanceof', J$.G(8329, J$.G(8321, J$.R(8313, 'this', this, 0), '_schema', 0), 'caster', 0), J$.R(8337, 'EmbeddedDocument', EmbeddedDocument, 1), 0))) ? J$.R(8345, 'value', value, 0) : J$.M(8401, J$.G(8369, J$.G(8361, J$.R(8353, 'this', this, 0), '_schema', 0), 'caster', 0), 'applySetters', 0)(J$.R(8377, 'val', val, 0), J$.G(8393, J$.R(8385, 'this', this, 0), '_parent', 0)), value, 0));
                                J$.X1(8457, J$.P(8449, J$.R(8425, 'this', this, 0), J$.R(8433, 'i', i, 0), J$.R(8441, 'value', value, 0), 2));
                                J$.X1(8489, J$.M(8481, J$.R(8465, 'this', this, 0), '_markModified', 0)(J$.R(8473, 'i', i, 0)));
                                return J$.X1(8513, J$.Rt(8505, J$.R(8497, 'this', this, 0)));
                            } catch (J$e) {
                                J$.Ex(10089, J$e);
                            } finally {
                                if (J$.Fr(10097))
                                    continue jalangiLabel4892;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 8521),
                toObject: J$.T(8785, function (options) {
                    jalangiLabel4894:
                        while (true) {
                            try {
                                J$.Fe(8761, arguments.callee, this, arguments);
                                arguments = J$.N(8769, 'arguments', arguments, 4);
                                options = J$.N(8777, 'options', options, 4);
                                if (J$.X1(10129, J$.C(488, J$.C(472, J$.R(8577, 'options', options, 0)) ? J$.G(8593, J$.R(8585, 'options', options, 0), 'depopulate', 0) : J$._()))) {
                                    return J$.X1(8721, J$.Rt(8713, J$.M(8705, J$.R(8601, 'this', this, 0), 'map', 0)(J$.T(8697, function (doc) {
                                        jalangiLabel4893:
                                            while (true) {
                                                try {
                                                    J$.Fe(8673, arguments.callee, this, arguments);
                                                    arguments = J$.N(8681, 'arguments', arguments, 4);
                                                    doc = J$.N(8689, 'doc', doc, 4);
                                                    return J$.X1(8665, J$.Rt(8657, J$.X1(10105, J$.C(480, J$.B(466, 'instanceof', J$.R(8609, 'doc', doc, 0), J$.R(8617, 'Document', Document, 1), 0))) ? J$.M(8641, J$.R(8625, 'doc', doc, 0), 'toObject', 0)(J$.R(8633, 'options', options, 0)) : J$.R(8649, 'doc', doc, 0)));
                                                } catch (J$e) {
                                                    J$.Ex(10113, J$e);
                                                } finally {
                                                    if (J$.Fr(10121))
                                                        continue jalangiLabel4893;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 8673))));
                                }
                                return J$.X1(8753, J$.Rt(8745, J$.M(8737, J$.R(8729, 'this', this, 0), 'slice', 0)()));
                            } catch (J$e) {
                                J$.Ex(10137, J$e);
                            } finally {
                                if (J$.Fr(10145))
                                    continue jalangiLabel4894;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 8761),
                inspect: J$.T(8849, function () {
                    jalangiLabel4895:
                        while (true) {
                            try {
                                J$.Fe(8833, arguments.callee, this, arguments);
                                arguments = J$.N(8841, 'arguments', arguments, 4);
                                return J$.X1(8825, J$.Rt(8817, J$.M(8809, J$.R(8793, 'JSON', JSON, 2), 'stringify', 0)(J$.R(8801, 'this', this, 0))));
                            } catch (J$e) {
                                J$.Ex(10153, J$e);
                            } finally {
                                if (J$.Fr(10161))
                                    continue jalangiLabel4895;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 8833),
                indexOf: J$.T(9129, function indexOf(obj) {
                    jalangiLabel4896:
                        while (true) {
                            try {
                                J$.Fe(9081, arguments.callee, this, arguments);
                                arguments = J$.N(9089, 'arguments', arguments, 4);
                                indexOf = J$.N(9097, 'indexOf', indexOf, 0);
                                obj = J$.N(9105, 'obj', obj, 4);
                                J$.N(9113, 'i', i, 0);
                                J$.N(9121, 'len', len, 0);
                                if (J$.X1(10169, J$.C(496, J$.B(474, 'instanceof', J$.R(8857, 'obj', obj, 0), J$.R(8865, 'ObjectId', ObjectId, 1), 0))))
                                    J$.X1(8897, obj = J$.W(8889, 'obj', J$.M(8881, J$.R(8873, 'obj', obj, 0), 'toString', 0)(), obj, 0));
                                for (var i = J$.X1(8937, J$.W(8929, 'i', J$.T(8905, 0, 22, false), i, 1)), len = J$.X1(8953, J$.W(8945, 'len', J$.G(8921, J$.R(8913, 'this', this, 0), 'length', 0), len, 1)); J$.X1(10185, J$.C(512, J$.B(482, '<', J$.R(8961, 'i', i, 0), J$.R(8969, 'len', len, 0), 0))); J$.X1(10193, i = J$.W(8993, 'i', J$.B(498, '+', J$.U(490, '+', J$.R(8985, 'i', i, 0)), J$.T(8977, 1, 22, false), 0), i, 0))) {
                                    if (J$.X1(10177, J$.C(504, J$.B(506, '==', J$.R(9001, 'obj', obj, 0), J$.G(9025, J$.R(9009, 'this', this, 0), J$.R(9017, 'i', i, 0), 4), 0)))) {
                                        return J$.X1(9049, J$.Rt(9041, J$.R(9033, 'i', i, 0)));
                                    }
                                }
                                return J$.X1(9073, J$.Rt(9065, J$.U(514, '-', J$.T(9057, 1, 22, false))));
                            } catch (J$e) {
                                J$.Ex(10201, J$e);
                            } finally {
                                if (J$.Fr(10209))
                                    continue jalangiLabel4896;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 9081)
            }, 11, false), 0));
            J$.X1(9209, J$.P(9201, J$.G(9169, J$.R(9161, 'MongooseArray', MongooseArray, 1), 'mixin', 0), 'remove', J$.G(9193, J$.G(9185, J$.R(9177, 'MongooseArray', MongooseArray, 1), 'mixin', 0), 'pull', 0), 0));
            J$.X1(9249, J$.P(9241, J$.R(9217, 'module', module, 2), 'exports', exports = J$.W(9233, 'exports', J$.R(9225, 'MongooseArray', MongooseArray, 1), J$.I(typeof exports === 'undefined' ? undefined : exports), 4), 0));
        } catch (J$e) {
            J$.Ex(10217, J$e);
        } finally {
            if (J$.Sr(10225)) {
                J$.L();
                continue jalangiLabel4897;
            } else {
                J$.L();
                break jalangiLabel4897;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
