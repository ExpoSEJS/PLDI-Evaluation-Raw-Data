J$.iids = {"8":[20,9,20,34],"9":[1,20,1,27],"10":[20,11,20,33],"16":[40,9,40,12],"17":[1,28,1,32],"18":[20,9,20,34],"24":[43,21,43,35],"25":[1,20,1,33],"26":[44,19,44,37],"32":[43,21,43,62],"33":[1,20,1,33],"34":[44,42,44,60],"40":[44,42,44,80],"41":[1,20,1,33],"42":[44,85,44,95],"48":[44,19,44,81],"49":[2,26,2,38],"50":[50,18,50,35],"56":[44,19,44,95],"57":[2,26,2,45],"58":[50,40,50,65],"64":[45,9,45,16],"65":[2,26,2,45],"66":[54,21,54,55],"72":[50,40,50,84],"73":[2,26,2,45],"74":[54,57,54,60],"80":[50,18,50,85],"81":[3,16,3,23],"88":[51,9,51,15],"89":[3,24,3,35],"90":[56,31,56,41],"96":[54,21,54,55],"97":[3,16,3,36],"98":[56,30,56,41],"104":[60,25,60,60],"105":[3,16,3,51],"106":[62,13,62,35],"112":[60,74,60,109],"113":[3,16,3,51],"114":[68,17,68,33],"120":[62,13,62,35],"121":[3,16,3,51],"122":[98,27,98,43],"128":[69,35,69,42],"129":[4,20,4,27],"130":[114,62,114,76],"136":[68,17,68,33],"137":[4,28,4,36],"138":[114,62,114,89],"144":[71,31,71,41],"145":[4,20,4,37],"146":[114,93,114,124],"152":[59,9,59,19],"153":[4,20,4,50],"154":[117,39,117,66],"160":[95,9,95,21],"161":[4,20,4,50],"162":[117,38,117,66],"168":[98,27,98,43],"169":[4,20,4,50],"170":[142,21,142,36],"176":[111,21,111,39],"177":[5,19,5,26],"178":[154,41,154,59],"184":[114,51,114,89],"185":[5,27,5,42],"186":[154,61,154,64],"192":[114,51,114,124],"193":[5,19,5,43],"200":[116,21,116,48],"201":[5,19,5,43],"202":[155,29,155,69],"208":[122,25,122,50],"209":[5,19,5,43],"210":[174,20,174,42],"216":[121,21,121,35],"217":[6,13,6,20],"218":[177,36,177,56],"224":[142,21,142,67],"225":[6,21,6,30],"226":[205,21,205,36],"232":[142,21,142,67],"233":[6,13,6,31],"234":[205,38,205,41],"240":[154,41,154,59],"241":[6,13,6,31],"248":[157,29,157,34],"249":[6,13,6,31],"250":[207,13,207,29],"256":[174,9,174,42],"257":[8,14,8,21],"258":[208,33,208,75],"264":[174,9,174,42],"265":[8,22,8,30],"266":[208,33,208,81],"272":[177,9,177,32],"273":[8,14,8,31],"274":[208,33,208,87],"280":[177,9,177,56],"281":[8,14,8,31],"282":[210,40,210,61],"288":[177,9,177,56],"289":[8,14,8,31],"290":[210,65,210,84],"296":[197,9,197,21],"297":[9,13,9,20],"298":[211,33,211,81],"304":[203,14,203,26],"305":[9,21,9,28],"306":[211,33,211,87],"312":[207,13,207,29],"313":[9,13,9,29],"314":[211,33,211,93],"320":[210,13,210,61],"321":[9,13,9,29],"322":[213,42,213,63],"328":[210,13,210,84],"329":[9,13,9,29],"330":[213,67,213,122],"336":[210,13,210,84],"337":[10,23,10,30],"338":[213,128,213,159],"344":[213,42,213,122],"345":[10,31,10,51],"346":[213,163,213,194],"352":[213,13,213,123],"353":[10,23,10,52],"354":[215,29,215,41],"360":[213,163,213,216],"361":[10,23,10,52],"362":[216,36,216,48],"368":[213,128,213,216],"369":[10,23,10,52],"370":[216,36,216,54],"376":[213,13,213,217],"377":[12,12,12,16],"378":[218,27,218,39],"384":[214,17,214,45],"385":[13,11,13,15],"386":[221,23,221,35],"392":[213,13,213,217],"393":[14,14,14,18],"394":[229,22,229,118],"400":[205,21,205,36],"401":[15,23,15,27],"402":[231,9,231,25],"408":[232,13,232,29],"409":[16,23,16,27],"410":[239,25,239,35],"416":[234,13,234,32],"417":[17,13,17,17],"418":[239,25,239,78],"424":[236,16,236,40],"425":[11,21,18,2],"426":[242,21,242,46],"432":[231,9,231,25],"433":[11,21,18,2],"434":[246,13,246,25],"440":[238,9,238,23],"441":[11,21,18,2],"442":[248,25,248,43],"448":[241,9,241,23],"449":[20,11,20,15],"450":[248,13,248,43],"456":[246,13,246,25],"457":[20,27,20,33],"458":[249,23,249,56],"464":[248,13,248,43],"465":[21,20,21,26],"466":[249,23,249,64],"472":[261,13,261,40],"473":[21,27,21,30],"474":[249,23,249,82],"480":[259,9,259,24],"481":[21,32,21,39],"482":[249,23,249,129],"488":[267,41,267,85],"489":[21,16,21,40],"490":[249,23,249,156],"496":[267,16,267,86],"497":[21,16,21,40],"498":[249,23,249,175],"504":[267,16,267,86],"505":[21,9,21,41],"506":[249,23,249,181],"512":[268,9,268,79],"513":[22,5,22,9],"514":[261,13,261,40],"520":[268,9,268,79],"521":[22,18,22,20],"522":[267,41,267,67],"528":[271,9,271,45],"529":[22,5,22,20],"530":[267,71,267,85],"536":[271,9,271,64],"537":[22,5,22,21],"538":[268,9,268,60],"544":[272,20,272,52],"545":[23,5,23,9],"546":[268,64,268,79],"552":[272,20,272,52],"553":[23,21,23,23],"554":[271,32,271,45],"560":[273,13,273,35],"561":[23,5,23,23],"562":[271,49,271,64],"568":[278,55,278,99],"569":[23,5,23,24],"570":[272,20,272,33],"576":[278,29,278,99],"577":[24,5,24,9],"578":[272,37,272,52],"584":[278,20,278,100],"585":[24,21,24,23],"586":[273,13,273,35],"592":[278,20,278,155],"593":[24,5,24,23],"594":[276,25,276,36],"600":[278,20,278,183],"601":[24,5,24,24],"602":[276,13,276,36],"608":[280,17,280,32],"609":[25,5,25,9],"610":[277,34,277,82],"616":[278,20,278,183],"617":[25,19,25,21],"618":[278,29,278,51],"624":[276,13,276,36],"625":[25,5,25,21],"626":[278,55,278,81],"632":[286,46,286,73],"633":[25,5,25,22],"634":[278,104,278,155],"640":[271,9,271,64],"641":[26,5,26,9],"642":[288,9,288,31],"648":[288,9,288,31],"649":[26,21,26,23],"650":[295,28,295,39],"656":[295,49,295,95],"657":[26,5,26,23],"658":[295,16,295,39],"664":[295,16,295,39],"665":[26,5,26,24],"666":[298,16,298,64],"672":[292,9,292,30],"673":[27,5,27,9],"674":[300,9,300,41],"680":[297,9,297,13],"681":[27,22,27,24],"682":[301,29,301,54],"688":[300,9,300,41],"689":[27,5,27,24],"690":[301,29,301,65],"696":[307,21,307,28],"697":[27,5,27,25],"698":[301,29,301,72],"704":[313,9,313,43],"705":[28,5,28,9],"706":[301,29,301,111],"712":[313,9,313,43],"713":[28,21,28,23],"714":[301,29,301,155],"720":[318,13,318,40],"721":[28,5,28,23],"722":[307,21,307,28],"728":[316,12,316,15],"729":[28,5,28,24],"730":[307,30,307,33],"736":[324,9,324,27],"737":[29,5,29,9],"744":[329,9,329,27],"745":[29,20,29,22],"746":[313,32,313,43],"752":[331,9,331,30],"753":[29,5,29,22],"754":[316,12,316,15],"760":[333,9,333,28],"761":[29,5,29,23],"768":[335,9,335,30],"769":[30,5,30,9],"770":[316,12,316,15],"776":[337,9,337,36],"777":[30,20,30,22],"778":[329,9,329,27],"784":[347,16,347,21],"785":[30,5,30,22],"786":[331,9,331,30],"792":[348,13,348,82],"793":[30,5,30,23],"794":[333,9,333,28],"800":[348,13,348,82],"801":[31,5,31,9],"802":[335,9,335,30],"808":[346,21,346,40],"809":[31,17,31,19],"810":[346,21,346,40],"816":[356,9,356,28],"817":[31,5,31,19],"818":[346,42,346,45],"824":[361,9,361,13],"825":[31,5,31,20],"832":[367,13,367,30],"833":[32,5,32,9],"834":[347,16,347,21],"840":[367,13,367,45],"841":[32,27,32,36],"842":[347,24,347,34],"848":[367,13,367,68],"849":[32,5,32,36],"850":[347,24,347,48],"856":[368,17,368,51],"857":[32,5,32,37],"858":[348,13,348,31],"864":[367,13,367,68],"865":[33,5,33,9],"866":[348,35,348,82],"872":[375,13,375,32],"873":[33,33,33,42],"874":[356,9,356,28],"880":[377,15,377,32],"881":[33,5,33,42],"882":[361,9,361,13],"888":[377,13,377,33],"889":[33,5,33,43],"890":[363,16,363,35],"896":[364,12,364,31],"897":[34,5,34,9],"898":[364,12,364,31],"904":[386,9,386,12],"905":[34,26,34,35],"906":[364,33,364,36],"912":[389,9,389,17],"913":[34,5,34,35],"920":[407,9,407,28],"921":[34,5,34,36],"922":[367,13,367,23],"928":[414,9,414,30],"929":[35,5,35,9],"930":[367,34,367,45],"936":[418,9,418,22],"937":[36,20,36,26],"938":[367,49,367,68],"944":[442,9,442,32],"945":[36,16,36,28],"946":[368,17,368,51],"952":[450,9,450,32],"953":[37,21,37,34],"954":[375,13,375,32],"960":[458,5,458,30],"961":[35,14,38,6],"962":[377,13,377,33],"968":[459,9,459,24],"969":[35,5,38,6],"970":[382,20,382,37],"976":[468,9,468,31],"977":[35,5,38,7],"978":[418,9,418,22],"984":[476,29,476,44],"985":[39,5,39,9],"986":[442,21,442,32],"992":[471,13,471,16],"993":[39,20,39,24],"994":[442,9,442,32],"1000":[472,10,472,16],"1001":[39,40,39,47],"1002":[450,21,450,32],"1008":[475,10,475,16],"1009":[39,20,39,48],"1010":[450,9,450,32],"1011":[39,20,39,39],"1016":[500,13,500,31],"1017":[39,5,39,48],"1018":[468,9,468,31],"1024":[504,18,504,30],"1025":[39,5,39,49],"1026":[476,29,476,44],"1032":[516,21,516,53],"1033":[40,9,40,12],"1034":[507,25,507,40],"1040":[519,31,519,39],"1041":[41,9,41,13],"1042":[507,42,507,45],"1048":[520,63,520,71],"1049":[41,18,41,21],"1056":[520,28,520,52],"1057":[41,9,41,22],"1058":[510,17,510,60],"1059":[41,9,41,17],"1064":[521,25,521,65],"1065":[41,9,41,23],"1066":[511,45,511,54],"1072":[521,25,521,65],"1073":[43,21,43,24],"1074":[513,45,513,54],"1080":[527,25,527,51],"1081":[43,28,43,31],"1082":[516,21,516,36],"1088":[516,21,516,53],"1089":[43,28,43,35],"1090":[516,40,516,53],"1096":[512,24,512,44],"1097":[43,39,43,44],"1098":[520,40,520,52],"1104":[510,17,510,60],"1105":[43,54,43,57],"1106":[520,28,520,52],"1112":[507,25,507,40],"1113":[43,54,43,61],"1114":[521,33,521,65],"1120":[541,21,541,48],"1121":[43,39,43,62],"1122":[522,31,522,43],"1123":[43,39,43,53],"1128":[537,13,537,19],"1129":[43,21,43,62],"1130":[524,31,524,43],"1136":[556,25,556,33],"1137":[43,21,43,62],"1138":[526,21,526,40],"1144":[551,21,551,28],"1145":[44,20,44,24],"1146":[527,27,527,50],"1152":[571,35,571,57],"1153":[44,20,44,30],"1154":[527,25,527,51],"1160":[571,9,571,96],"1161":[44,31,44,36],"1162":[541,23,541,47],"1168":[579,9,579,33],"1169":[44,20,44,37],"1170":[541,21,541,48],"1176":[584,17,584,32],"1177":[44,43,44,47],"1178":[551,21,551,28],"1184":[582,9,582,28],"1185":[44,43,44,55],"1186":[551,30,551,33],"1192":[593,9,593,19],"1193":[44,43,44,60],"1200":[603,25,603,74],"1201":[44,64,44,68],"1202":[556,25,556,33],"1208":[606,25,606,65],"1209":[44,64,44,76],"1210":[556,35,556,38],"1216":[607,29,607,45],"1217":[44,64,44,80],"1224":[606,25,606,65],"1225":[44,86,44,95],"1226":[558,26,558,38],"1232":[602,21,602,39],"1233":[44,19,44,95],"1234":[571,41,571,57],"1240":[601,17,601,28],"1241":[44,19,44,95],"1242":[571,35,571,57],"1248":[598,16,598,19],"1249":[45,9,45,16],"1250":[579,9,579,20],"1257":[46,30,46,34],"1258":[579,9,579,33],"1265":[46,22,46,36],"1266":[585,17,585,40],"1273":[46,15,46,38],"1274":[597,17,597,33],"1281":[46,15,46,38],"1282":[598,16,598,19],"1289":[46,9,46,39],"1297":[47,9,47,12],"1298":[598,16,598,19],"1305":[47,9,47,16],"1306":[603,25,603,74],"1313":[47,17,47,21],"1314":[606,25,606,43],"1321":[47,17,47,29],"1322":[607,29,607,45],"1329":[47,17,47,37],"1330":[608,55,608,60],"1337":[47,41,47,47],"1345":[47,41,47,56],"1353":[47,9,47,56],"1361":[47,9,47,57],"1369":[48,9,48,13],"1377":[48,18,48,21],"1385":[48,9,48,22],"1387":[48,9,48,17],"1393":[48,9,48,23],"1401":[50,19,50,23],"1409":[50,19,50,29],"1417":[50,30,50,34],"1425":[50,19,50,35],"1433":[50,41,50,45],"1441":[50,41,50,53],"1449":[50,41,50,65],"1457":[50,69,50,73],"1465":[50,69,50,81],"1473":[50,69,50,84],"1481":[50,18,50,85],"1489":[50,18,50,85],"1497":[51,9,51,15],"1505":[52,9,52,13],"1513":[52,22,52,26],"1521":[52,9,52,27],"1523":[52,9,52,21],"1529":[52,32,52,40],"1537":[52,9,52,41],"1539":[52,9,52,31],"1545":[52,9,52,42],"1553":[54,18,54,19],"1561":[54,18,54,19],"1569":[54,18,54,19],"1577":[54,21,54,22],"1585":[54,25,54,29],"1593":[54,25,54,48],"1601":[54,25,54,55],"1617":[54,59,54,60],"1625":[54,57,54,60],"1633":[55,17,55,21],"1641":[55,17,55,40],"1649":[55,41,55,42],"1657":[55,17,55,43],"1665":[55,17,55,43],"1673":[55,17,55,43],"1681":[56,9,56,13],"1689":[56,14,56,15],"1697":[56,14,56,20],"1705":[56,22,56,23],"1713":[56,22,56,28],"1721":[56,32,56,33],"1729":[56,32,56,41],"1737":[56,43,56,44],"1745":[56,43,56,47],"1753":[56,9,56,48],"1755":[56,9,56,21],"1761":[56,9,56,49],"1769":[58,22,58,26],"1777":[58,22,58,34],"1785":[58,22,58,45],"1793":[58,22,58,45],"1801":[58,22,58,45],"1809":[59,9,59,19],"1817":[60,25,60,35],"1825":[60,25,60,45],"1833":[60,49,60,60],"1841":[60,74,60,84],"1849":[60,74,60,94],"1857":[60,98,60,109],"1865":[60,129,60,131],"1873":[60,25,60,60],"1881":[60,25,60,60],"1889":[60,74,60,109],"1897":[60,74,60,109],"1905":[60,129,60,131],"1913":[60,129,60,131],"1921":[61,9,61,24],"1929":[61,25,61,34],"1937":[61,38,61,42],"1945":[61,9,61,42],"1953":[61,9,61,43],"1961":[62,14,62,18],"1969":[62,14,62,24],"1977":[62,25,62,34],"1985":[62,14,62,35],"1993":[63,13,63,28],"2001":[63,29,63,38],"2009":[63,42,63,46],"2017":[63,13,63,46],"2025":[63,13,63,47],"2033":[65,9,65,13],"2041":[65,18,65,33],"2049":[65,9,65,34],"2051":[65,9,65,17],"2057":[65,9,65,35],"2065":[66,9,66,13],"2073":[66,18,66,24],"2081":[67,40,67,44],"2089":[67,36,67,46],"2097":[67,36,67,46],"2105":[67,36,67,46],"2113":[68,18,68,22],"2121":[68,23,68,32],"2129":[68,18,68,33],"2137":[69,17,69,21],"2145":[69,22,69,31],"2153":[69,35,69,42],"2161":[69,45,69,49],"2169":[69,45,69,53],"2177":[69,45,69,68],"2179":[69,45,69,66],"2185":[69,71,69,87],"2193":[69,17,69,87],"2201":[69,17,69,88],"2209":[71,13,71,17],"2217":[71,18,71,27],"2225":[71,31,71,35],"2233":[71,31,71,41],"2241":[71,44,71,48],"2249":[71,49,71,58],"2257":[71,44,71,59],"2265":[71,62,71,78],"2273":[71,13,71,78],"2281":[71,13,71,79],"2289":[72,13,72,17],"2297":[72,13,72,19],"2305":[72,13,72,20],"2313":[66,26,73,10],"2321":[66,26,73,10],"2329":[66,26,73,10],"2337":[66,26,73,10],"2345":[66,26,73,10],"2353":[66,9,73,11],"2355":[66,9,66,17],"2361":[66,9,73,12],"2369":[75,27,75,31],"2377":[75,23,75,33],"2385":[75,23,75,33],"2393":[75,23,75,33],"2401":[77,23,77,25],"2409":[78,31,78,33],"2417":[76,27,79,14],"2425":[76,27,79,14],"2433":[76,27,79,14],"2441":[80,13,80,20],"2449":[80,13,80,25],"2457":[80,26,80,35],"2465":[80,39,80,42],"2473":[80,13,80,42],"2481":[80,13,80,43],"2489":[81,13,81,20],"2497":[81,13,81,33],"2505":[81,34,81,43],"2513":[81,47,81,50],"2521":[81,13,81,50],"2529":[81,13,81,51],"2537":[82,20,82,27],"2545":[82,20,82,27],"2553":[82,13,82,28],"2561":[74,26,83,10],"2569":[74,26,83,10],"2577":[74,26,83,10],"2585":[74,26,83,10],"2593":[74,26,83,10],"2601":[74,26,83,10],"2609":[74,26,83,10],"2617":[84,9,84,13],"2625":[84,18,84,36],"2633":[85,13,85,17],"2641":[85,35,85,37],"2649":[85,39,85,49],"2657":[85,39,85,51],"2665":[85,13,85,52],"2667":[85,13,85,34],"2673":[85,13,85,53],"2681":[86,13,86,17],"2689":[86,13,86,19],"2697":[86,13,86,20],"2705":[84,38,87,10],"2713":[84,38,87,10],"2721":[84,38,87,10],"2729":[84,38,87,10],"2737":[84,9,87,11],"2739":[84,9,84,17],"2745":[84,9,87,12],"2753":[88,9,88,13],"2761":[88,18,88,26],"2769":[89,13,89,17],"2777":[89,25,89,27],"2785":[89,29,89,39],"2793":[89,29,89,41],"2801":[89,13,89,42],"2803":[89,13,89,24],"2809":[89,13,89,43],"2817":[90,13,90,17],"2825":[90,13,90,19],"2833":[90,13,90,20],"2841":[88,28,91,10],"2849":[88,28,91,10],"2857":[88,28,91,10],"2865":[88,28,91,10],"2873":[88,9,91,11],"2875":[88,9,88,17],"2881":[88,9,91,12],"2889":[19,1,93,2],"2897":[19,1,93,2],"2905":[19,1,93,2],"2913":[19,1,93,2],"2921":[19,1,93,2],"2929":[19,1,93,2],"2937":[19,1,93,2],"2945":[19,1,93,2],"2953":[19,1,93,2],"2961":[19,1,93,2],"2969":[19,1,93,2],"2977":[19,1,93,2],"2985":[19,1,93,2],"2993":[19,1,93,2],"3001":[95,9,95,13],"3009":[95,9,95,17],"3017":[95,9,95,21],"3025":[96,16,96,20],"3033":[96,16,96,24],"3041":[96,16,96,28],"3049":[96,16,96,28],"3057":[96,9,96,29],"3065":[98,12,98,16],"3073":[98,12,98,20],"3081":[98,27,98,31],"3089":[98,35,98,39],"3097":[98,35,98,43],"3105":[98,46,98,50],"3113":[98,53,98,59],"3121":[98,60,98,64],"3129":[98,60,98,68],"3137":[98,53,98,69],"3145":[98,12,98,69],"3153":[98,12,98,69],"3161":[98,5,98,70],"3169":[94,1,99,2],"3177":[94,1,99,2],"3185":[100,1,100,7],"3193":[100,20,100,26],"3201":[100,34,100,46],"3209":[100,34,100,56],"3217":[100,20,100,57],"3219":[100,20,100,33],"3225":[100,1,100,57],"3233":[100,1,100,58],"3241":[101,1,101,7],"3249":[101,1,101,17],"3257":[101,32,101,38],"3265":[101,1,101,38],"3273":[101,1,101,39],"3281":[102,1,102,7],"3289":[102,23,102,29],"3297":[102,23,102,39],"3305":[102,41,102,61],"3313":[103,19,103,24],"3321":[104,17,104,22],"3329":[105,15,105,20],"3337":[108,19,108,24],"3345":[109,19,109,25],"3353":[111,21,111,25],"3361":[111,21,111,39],"3369":[112,28,112,32],"3377":[112,28,112,34],"3385":[112,28,112,34],"3393":[112,21,112,35],"3401":[114,51,114,58],"3409":[114,69,114,76],"3417":[114,81,114,89],"3425":[114,93,114,113],"3433":[114,117,114,124],"3441":[114,51,114,124],"3449":[114,51,114,124],"3457":[116,21,116,48],"3465":[117,40,117,47],"3473":[117,40,117,66],"3481":[117,38,117,66],"3489":[117,21,117,67],"3497":[119,38,119,42],"3505":[119,38,119,49],"3513":[119,38,119,57],"3521":[119,38,119,76],"3529":[119,38,119,76],"3537":[119,21,119,77],"3545":[121,21,121,35],"3553":[122,25,122,29],"3561":[122,25,122,50],"3569":[123,25,123,29],"3577":[123,66,123,70],"3585":[123,51,123,72],"3593":[124,29,124,33],"3601":[124,34,124,39],"3609":[124,29,124,40],"3617":[124,29,124,41],"3625":[123,74,125,26],"3633":[123,74,125,26],"3641":[123,74,125,26],"3649":[123,74,125,26],"3657":[123,25,125,27],"3659":[123,25,123,50],"3665":[123,25,125,28],"3673":[127,25,127,29],"3681":[127,54,127,58],"3689":[127,39,127,60],"3697":[128,29,128,33],"3705":[128,34,128,39],"3713":[128,29,128,40],"3721":[128,29,128,41],"3729":[127,62,129,26],"3737":[127,62,129,26],"3745":[127,62,129,26],"3753":[127,62,129,26],"3761":[127,25,129,27],"3763":[127,25,127,38],"3769":[127,25,129,28],"3777":[132,21,132,25],"3785":[132,21,132,27],"3793":[132,21,132,28],"3801":[110,17,134,14],"3809":[110,17,134,14],"3817":[110,17,134,14],"3825":[110,17,134,14],"3833":[110,17,134,14],"3841":[110,17,134,14],"3849":[110,17,134,14],"3857":[107,9,135,10],"3865":[137,19,137,24],"3873":[138,19,138,25],"3881":[139,22,139,26],"3889":[141,31,141,46],"3897":[141,31,141,52],"3899":[141,31,141,50],"3905":[141,64,141,68],"3913":[141,64,141,87],"3915":[141,64,141,85],"3921":[141,31,141,52],"3929":[141,31,141,52],"3937":[141,64,141,87],"3945":[141,64,141,87],"3953":[142,22,142,29],"3961":[142,22,142,36],"3969":[142,40,142,44],"3977":[142,40,142,67],"3985":[143,21,143,25],"3993":[143,21,143,27],"4001":[143,21,143,28],"4009":[144,21,144,25],"4017":[144,21,144,27],"4025":[144,21,144,28],"4033":[145,21,145,28],"4041":[145,21,145,28],"4049":[147,21,147,28],"4057":[148,21,148,26],"4065":[148,32,148,39],"4073":[149,25,149,31],"4081":[149,57,149,61],"4089":[149,25,149,61],"4097":[149,25,149,62],"4105":[150,25,150,31],"4113":[151,29,151,31],"4121":[151,32,151,35],"4129":[151,29,151,36],"4137":[151,29,151,37],"4145":[150,37,152,26],"4153":[150,37,152,26],"4161":[150,37,152,26],"4169":[150,37,152,26],"4177":[150,25,152,27],"4179":[150,25,150,36],"4185":[150,25,152,28],"4193":[148,41,153,22],"4201":[148,41,153,22],"4209":[148,41,153,22],"4217":[148,41,153,22],"4225":[148,41,153,22],"4233":[154,38,154,39],"4241":[154,38,154,39],"4249":[154,38,154,39],"4257":[154,41,154,42],"4265":[154,45,154,52],"4273":[154,45,154,59],"4289":[154,63,154,64],"4297":[154,61,154,64],"4305":[155,36,155,43],"4313":[155,44,155,45],"4321":[155,36,155,46],"4329":[155,29,155,70],"4337":[157,29,157,34],"4345":[158,29,158,35],"4353":[158,36,158,41],"4361":[158,29,158,42],"4369":[158,29,158,43],"4377":[159,29,159,36],"4385":[159,29,159,36],"4393":[161,25,161,32],"4401":[161,25,161,34],"4409":[161,25,161,35],"4417":[153,24,162,22],"4425":[153,24,162,22],"4433":[153,24,162,22],"4441":[153,24,162,22],"4449":[153,24,162,22],"4457":[148,21,162,23],"4459":[148,21,148,31],"4465":[148,21,162,24],"4473":[147,33,163,18],"4481":[147,33,163,18],"4489":[147,33,163,18],"4497":[147,33,163,18],"4505":[147,33,163,18],"4513":[147,17,163,19],"4515":[147,21,147,32],"4521":[164,21,164,25],"4529":[164,21,164,27],"4537":[164,21,164,28],"4545":[165,21,165,25],"4553":[165,21,165,27],"4561":[165,21,165,28],"4569":[163,25,166,18],"4577":[163,25,166,18],"4585":[163,25,166,18],"4593":[166,20,166,24],"4601":[147,17,166,25],"4603":[147,17,163,24],"4609":[147,17,166,26],"4617":[140,17,167,14],"4625":[140,17,167,14],"4633":[140,17,167,14],"4641":[140,17,167,14],"4649":[140,17,167,14],"4657":[140,17,167,14],"4665":[140,17,167,14],"4673":[136,9,168,10],"4681":[106,12,169,6],"4689":[102,63,170,2],"4697":[102,1,170,3],"4699":[102,1,102,22],"4705":[102,1,170,4],"4713":[171,1,171,7],"4721":[171,1,171,17],"4729":[171,1,171,23],"4737":[171,1,171,24],"4745":[172,1,172,7],"4753":[172,1,172,17],"4761":[172,1,172,22],"4769":[172,1,172,23],"4777":[173,1,173,7],"4785":[173,1,173,17],"4793":[174,9,174,16],"4801":[174,20,174,25],"4809":[174,30,174,37],"4817":[174,30,174,42],"4825":[175,9,175,16],"4833":[175,29,175,30],"4841":[175,24,175,32],"4849":[175,9,175,32],"4857":[175,9,175,33],"4865":[177,9,177,16],"4873":[177,20,177,27],"4881":[177,20,177,32],"4889":[177,36,177,37],"4897":[177,42,177,49],"4905":[177,42,177,54],"4913":[177,42,177,56],"4921":[178,9,178,16],"4929":[178,30,178,35],"4937":[178,9,178,35],"4945":[178,9,178,36],"4953":[180,15,180,20],"4961":[181,17,181,21],"4969":[182,25,182,29],"4977":[183,17,183,22],"4985":[184,21,184,26],"4993":[185,27,185,32],"5001":[186,19,186,23],"5009":[187,20,187,24],"5017":[188,19,188,23],"5025":[189,15,189,19],"5033":[190,29,190,33],"5041":[191,15,191,20],"5049":[192,14,192,18],"5057":[193,22,193,27],"5065":[194,13,194,17],"5073":[195,18,195,24],"5081":[180,29,196,6],"5089":[196,8,196,15],"5097":[180,15,196,16],"5099":[180,15,180,28],"5105":[180,15,196,16],"5113":[180,5,196,17],"5121":[197,9,197,16],"5129":[197,9,197,21],"5137":[198,9,198,16],"5145":[198,24,198,32],"5153":[198,33,198,40],"5161":[198,33,198,45],"5169":[198,24,198,46],"5177":[198,9,198,46],"5185":[198,9,198,47],"5193":[200,12,200,19],"5201":[200,12,200,19],"5209":[200,5,200,20],"5217":[173,35,201,2],"5225":[173,35,201,2],"5233":[173,35,201,2],"5241":[173,35,201,2],"5249":[173,1,201,2],"5257":[173,1,201,3],"5265":[202,1,202,7],"5273":[202,1,202,17],"5281":[203,14,203,20],"5289":[203,24,203,26],"5297":[203,14,203,26],"5305":[203,5,203,27],"5313":[204,16,204,22],"5321":[204,28,204,31],"5329":[204,16,204,32],"5331":[204,16,204,27],"5337":[204,16,204,32],"5345":[204,16,204,32],"5353":[205,18,205,19],"5361":[205,18,205,19],"5369":[205,18,205,19],"5377":[205,21,205,22],"5385":[205,25,205,29],"5393":[205,25,205,36],"5409":[205,40,205,41],"5417":[205,38,205,41],"5425":[206,19,206,23],"5433":[206,24,206,25],"5441":[206,19,206,26],"5449":[206,19,206,26],"5457":[206,19,206,26],"5465":[207,13,207,17],"5473":[207,21,207,24],"5481":[207,25,207,28],"5489":[207,21,207,29],"5497":[208,23,208,32],"5505":[208,33,208,66],"5513":[208,69,208,75],"5521":[208,78,208,81],"5529":[208,84,208,87],"5537":[208,19,208,88],"5545":[208,19,208,88],"5553":[208,13,208,89],"5561":[210,13,210,18],"5569":[210,27,210,30],"5577":[210,31,210,34],"5585":[210,27,210,35],"5593":[210,13,210,36],"5595":[210,13,210,26],"5601":[210,40,210,43],"5609":[210,44,210,47],"5617":[210,40,210,48],"5625":[210,40,210,55],"5633":[210,60,210,61],"5641":[210,65,210,69],"5649":[210,73,210,76],"5657":[210,77,210,80],"5665":[210,73,210,81],"5673":[210,82,210,83],"5681":[210,73,210,84],"5689":[211,23,211,32],"5697":[211,33,211,72],"5705":[211,75,211,81],"5713":[211,84,211,87],"5721":[211,90,211,93],"5729":[211,19,211,94],"5737":[211,19,211,94],"5745":[211,13,211,95],"5753":[213,13,213,18],"5761":[213,28,213,31],"5769":[213,32,213,35],"5777":[213,28,213,36],"5785":[213,13,213,37],"5787":[213,13,213,27],"5793":[213,43,213,46],"5801":[213,47,213,50],"5809":[213,43,213,51],"5817":[213,43,213,63],"5825":[213,67,213,75],"5833":[213,79,213,84],"5841":[213,101,213,104],"5849":[213,105,213,108],"5857":[213,101,213,109],"5865":[213,101,213,121],"5873":[213,79,213,122],"5875":[213,79,213,100],"5881":[213,129,213,132],"5889":[213,133,213,136],"5897":[213,129,213,137],"5905":[213,138,213,142],"5913":[213,138,213,150],"5921":[213,138,213,158],"5929":[213,129,213,159],"5937":[213,163,213,167],"5945":[213,163,213,175],"5953":[213,163,213,183],"5961":[213,188,213,194],"5969":[213,198,213,201],"5977":[213,202,213,205],"5985":[213,198,213,206],"5993":[213,198,213,211],"6001":[213,198,213,216],"6009":[214,17,214,23],"6017":[214,29,214,32],"6025":[214,33,214,36],"6033":[214,29,214,37],"6041":[214,17,214,38],"6043":[214,17,214,28],"6049":[214,17,214,45],"6057":[215,17,215,21],"6065":[215,17,215,28],"6073":[215,29,215,35],"6081":[215,38,215,41],"6089":[215,45,215,49],"6097":[215,17,215,49],"6105":[215,17,215,50],"6113":[216,17,216,21],"6121":[216,26,216,29],"6129":[216,30,216,33],"6137":[216,26,216,34],"6145":[216,36,216,42],"6153":[216,45,216,48],"6161":[216,51,216,54],"6169":[216,17,216,55],"6171":[216,17,216,25],"6177":[216,17,216,56],"6185":[218,17,218,21],"6193":[218,27,218,33],"6201":[218,36,218,39],"6209":[218,41,218,44],"6217":[218,45,218,48],"6225":[218,41,218,49],"6233":[218,17,218,50],"6235":[218,17,218,26],"6241":[218,17,218,51],"6249":[221,13,221,17],"6257":[221,23,221,29],"6265":[221,32,221,35],"6273":[221,37,221,40],"6281":[221,41,221,44],"6289":[221,37,221,45],"6297":[221,13,221,46],"6299":[221,13,221,22],"6305":[221,13,221,47],"6313":[202,24,224,2],"6321":[202,24,224,2],"6329":[202,24,224,2],"6337":[202,24,224,2],"6345":[202,24,224,2],"6353":[202,24,224,2],"6361":[202,24,224,2],"6369":[202,24,224,2],"6377":[202,24,224,2],"6385":[202,1,224,2],"6393":[202,1,224,3],"6401":[225,1,225,7],"6409":[225,19,225,25],"6417":[225,33,225,37],"6425":[225,19,225,38],"6427":[225,19,225,32],"6433":[225,1,225,38],"6441":[225,1,225,39],"6449":[226,16,226,22],"6457":[226,16,226,31],"6465":[226,16,226,31],"6473":[226,16,226,31],"6481":[227,1,227,9],"6489":[227,17,227,25],"6497":[227,31,227,39],"6505":[227,47,227,55],"6513":[227,69,227,77],"6521":[227,83,227,91],"6529":[227,101,227,109],"6537":[227,117,227,125],"6545":[227,139,227,147],"6553":[227,156,227,164],"6561":[227,171,227,179],"6569":[227,192,227,200],"6577":[227,208,227,216],"6585":[227,226,227,234],"6593":[227,241,227,249],"6601":[227,261,227,269],"6609":[227,281,227,289],"6617":[227,298,227,306],"6625":[227,316,227,317],"6633":[227,298,227,317],"6641":[227,281,227,317],"6649":[227,261,227,317],"6657":[227,241,227,317],"6665":[227,226,227,317],"6673":[227,208,227,317],"6681":[227,192,227,317],"6689":[227,171,227,317],"6697":[227,156,227,317],"6705":[227,139,227,317],"6713":[227,117,227,317],"6721":[227,101,227,317],"6729":[227,83,227,317],"6737":[227,69,227,317],"6745":[227,47,227,317],"6753":[227,31,227,317],"6761":[227,17,227,317],"6769":[227,1,227,317],"6777":[227,1,227,318],"6785":[228,16,228,18],"6793":[228,16,228,18],"6801":[228,16,228,18],"6809":[229,1,229,9],"6817":[229,22,229,77],"6825":[229,80,229,118],"6833":[229,1,229,118],"6841":[229,1,229,119],"6849":[230,1,230,7],"6857":[230,1,230,17],"6865":[231,9,231,12],"6873":[231,16,231,25],"6881":[232,13,232,17],"6889":[232,13,232,23],"6897":[232,24,232,28],"6905":[232,13,232,29],"6913":[233,20,233,24],"6921":[233,20,233,30],"6929":[233,31,233,35],"6937":[233,20,233,36],"6945":[233,20,233,36],"6953":[233,13,233,37],"6961":[234,13,234,17],"6969":[234,13,234,26],"6977":[234,27,234,31],"6985":[234,13,234,32],"6993":[235,20,235,24],"7001":[235,20,235,33],"7009":[235,34,235,38],"7017":[235,20,235,39],"7025":[235,20,235,39],"7033":[235,13,235,40],"7041":[236,16,236,29],"7049":[236,35,236,39],"7057":[236,16,236,40],"7059":[236,16,236,34],"7065":[236,43,236,60],"7073":[236,61,236,65],"7081":[236,67,236,71],"7089":[236,43,236,72],"7097":[236,75,236,84],"7105":[236,16,236,84],"7113":[236,9,236,85],"7121":[238,9,238,17],"7129":[238,18,238,22],"7137":[238,9,238,23],"7145":[239,19,239,24],"7153":[239,25,239,28],"7161":[239,31,239,35],"7169":[239,38,239,78],"7177":[239,15,239,79],"7185":[239,15,239,79],"7193":[239,9,239,80],"7201":[241,9,241,17],"7209":[241,18,241,22],"7217":[241,9,241,23],"7225":[242,9,242,16],"7233":[242,21,242,29],"7241":[242,32,242,40],"7249":[242,41,242,45],"7257":[242,32,242,46],"7265":[242,9,242,47],"7267":[242,9,242,20],"7273":[242,9,242,48],"7281":[244,20,244,24],"7289":[244,31,244,35],"7297":[244,20,244,36],"7299":[244,20,244,30],"7305":[244,45,244,53],"7313":[244,45,244,59],"7315":[244,45,244,57],"7321":[244,70,244,74],"7329":[244,70,244,79],"7337":[244,20,244,36],"7345":[244,20,244,36],"7353":[244,45,244,59],"7361":[244,45,244,59],"7369":[244,70,244,79],"7377":[244,70,244,79],"7385":[245,5,245,13],"7393":[246,14,246,20],"7401":[246,21,246,24],"7409":[246,14,246,25],"7417":[247,13,247,19],"7425":[247,20,247,23],"7433":[247,27,247,29],"7441":[247,13,247,29],"7449":[247,13,247,30],"7457":[248,13,248,21],"7465":[248,32,248,38],"7473":[248,39,248,42],"7481":[248,32,248,43],"7489":[249,23,249,49],"7497":[249,52,249,56],"7505":[249,59,249,64],"7513":[249,67,249,82],"7521":[249,85,249,93],"7529":[249,100,249,101],"7537":[249,103,249,104],"7545":[249,85,249,105],"7547":[249,85,249,99],"7553":[249,114,249,117],"7561":[249,113,249,118],"7569":[249,85,249,119],"7571":[249,85,249,112],"7577":[249,125,249,128],"7585":[249,85,249,129],"7587":[249,85,249,124],"7593":[249,132,249,156],"7601":[249,159,249,165],"7609":[249,166,249,169],"7617":[249,159,249,170],"7625":[249,159,249,175],"7633":[249,178,249,181],"7641":[249,23,249,181],"7649":[249,23,249,181],"7657":[250,23,250,28],"7665":[250,29,250,32],"7673":[250,19,250,33],"7681":[250,19,250,33],"7689":[250,13,250,34],"7697":[252,18,252,24],"7705":[252,25,252,28],"7713":[252,18,252,29],"7721":[252,18,252,29],"7729":[252,9,252,30],"7737":[245,22,253,6],"7745":[245,22,253,6],"7753":[245,22,253,6],"7761":[245,22,253,6],"7769":[245,22,253,6],"7777":[245,22,253,6],"7785":[245,5,253,7],"7787":[245,5,245,21],"7793":[245,5,253,8],"7801":[254,5,254,11],"7809":[254,12,254,16],"7817":[254,20,254,25],"7825":[254,32,254,35],"7833":[254,20,254,36],"7835":[254,20,254,31],"7841":[254,5,254,36],"7849":[254,5,254,37],"7857":[255,5,255,9],"7865":[255,5,255,15],"7873":[255,16,255,20],"7881":[255,24,255,30],"7889":[255,47,255,51],"7897":[255,53,255,56],"7905":[255,58,255,62],"7913":[255,58,255,70],"7921":[255,24,255,71],"7923":[255,24,255,46],"7929":[255,5,255,71],"7937":[255,5,255,72],"7945":[256,12,256,16],"7953":[256,12,256,16],"7961":[256,5,256,17],"7969":[230,25,257,2],"7977":[230,25,257,2],"7985":[230,25,257,2],"7993":[230,25,257,2],"8001":[230,25,257,2],"8009":[230,25,257,2],"8017":[230,25,257,2],"8025":[230,25,257,2],"8033":[230,1,257,2],"8041":[230,1,257,3],"8049":[258,1,258,7],"8057":[259,9,259,12],"8065":[259,9,259,24],"8073":[260,31,260,36],"8081":[260,53,260,56],"8089":[260,53,260,68],"8097":[260,31,260,69],"8099":[260,31,260,52],"8105":[260,31,260,69],"8113":[260,31,260,69],"8121":[261,13,261,28],"8129":[261,32,261,40],"8137":[262,26,262,29],"8145":[262,26,262,29],"8153":[262,26,262,29],"8161":[263,19,263,21],"8169":[263,19,263,21],"8177":[263,13,263,22],"8185":[264,13,264,16],"8193":[264,17,264,24],"8201":[264,17,264,32],"8209":[264,36,264,42],"8217":[264,13,264,42],"8225":[264,13,264,43],"8233":[267,16,267,19],"8241":[267,20,267,27],"8249":[267,20,267,35],"8257":[267,16,267,36],"8265":[267,41,267,48],"8273":[267,41,267,56],"8281":[267,61,267,67],"8289":[267,72,267,75],"8297":[267,72,267,80],"8305":[267,72,267,85],"8313":[267,89,267,92],"8321":[267,93,267,100],"8329":[267,93,267,108],"8337":[267,89,267,109],"8345":[267,112,267,114],"8353":[267,16,267,114],"8361":[267,16,267,114],"8369":[268,9,268,17],"8377":[268,21,268,26],"8385":[268,43,268,47],"8393":[268,43,268,59],"8401":[268,21,268,60],"8403":[268,21,268,42],"8409":[268,64,268,71],"8417":[268,75,268,79],"8425":[269,20,269,33],"8433":[269,40,269,44],"8441":[269,46,269,49],"8449":[269,16,269,50],"8451":[269,20,269,39],"8457":[269,16,269,50],"8465":[269,9,269,51],"8473":[271,9,271,14],"8481":[271,23,271,27],"8489":[271,9,271,28],"8491":[271,9,271,22],"8497":[271,32,271,37],"8505":[271,41,271,45],"8513":[271,49,271,56],"8521":[271,60,271,64],"8529":[272,20,272,25],"8537":[272,29,272,33],"8545":[272,37,272,44],"8553":[272,48,272,52],"8561":[272,55,272,58],"8569":[272,55,272,63],"8577":[272,66,272,70],"8585":[272,71,272,72],"8593":[272,66,272,73],"8601":[272,20,272,73],"8609":[272,20,272,73],"8617":[273,13,273,17],"8625":[273,29,273,35],"8633":[274,24,274,37],"8641":[274,52,274,56],"8649":[274,58,274,62],"8657":[274,64,274,67],"8665":[274,20,274,68],"8667":[274,24,274,51],"8673":[274,20,274,68],"8681":[274,13,274,69],"8689":[276,13,276,21],"8697":[276,32,276,36],"8705":[277,20,277,33],"8713":[277,34,277,38],"8721":[277,46,277,47],"8729":[277,34,277,48],"8731":[277,34,277,45],"8737":[277,34,277,62],"8739":[277,34,277,60],"8745":[277,65,277,69],"8753":[277,80,277,81],"8761":[277,65,277,82],"8763":[277,65,277,79],"8769":[277,20,277,83],"8777":[277,20,277,83],"8785":[277,13,277,84],"8793":[278,20,278,24],"8801":[278,30,278,34],"8809":[278,35,278,42],"8817":[278,35,278,50],"8825":[278,30,278,51],"8833":[278,55,278,62],"8841":[278,55,278,70],"8849":[278,75,278,81],"8857":[278,85,278,89],"8865":[278,85,278,94],"8873":[278,85,278,99],"8881":[278,104,278,112],"8889":[278,116,278,121],"8897":[278,138,278,142],"8905":[278,138,278,154],"8913":[278,116,278,155],"8915":[278,116,278,137],"8921":[278,159,278,165],"8929":[278,171,278,175],"8937":[278,159,278,176],"8939":[278,159,278,170],"8945":[278,159,278,183],"8953":[279,50,279,57],"8961":[279,50,279,66],"8969":[279,38,279,68],"8977":[279,38,279,68],"8985":[279,38,279,68],"8993":[280,17,280,24],"9001":[280,17,280,32],"9009":[281,17,281,35],"9017":[281,46,281,53],"9025":[281,46,281,61],"9033":[281,17,281,61],"9041":[281,17,281,62],"9049":[283,35,283,41],"9057":[283,42,283,46],"9065":[283,48,283,66],"9073":[283,31,283,67],"9081":[283,31,283,67],"9089":[283,31,283,67],"9097":[284,24,284,37],"9105":[284,52,284,56],"9113":[284,58,284,69],"9121":[284,71,284,74],"9129":[284,20,284,75],"9131":[284,24,284,51],"9137":[284,20,284,75],"9145":[284,13,284,76],"9153":[286,20,286,33],"9161":[286,40,286,44],"9169":[286,46,286,50],"9177":[286,54,286,67],"9185":[286,54,286,73],"9193":[286,75,286,78],"9201":[286,16,286,79],"9203":[286,20,286,39],"9209":[286,16,286,79],"9217":[286,9,286,80],"9225":[288,9,288,13],"9233":[288,25,288,31],"9241":[289,20,289,33],"9249":[289,43,289,47],"9257":[289,49,289,53],"9265":[289,55,289,58],"9273":[289,16,289,59],"9275":[289,20,289,42],"9281":[289,16,289,59],"9289":[289,9,289,60],"9297":[292,9,292,15],"9305":[292,25,292,29],"9313":[292,9,292,30],"9315":[292,9,292,24],"9321":[293,16,293,24],"9329":[293,16,293,24],"9337":[293,9,293,25],"9345":[295,16,295,24],"9353":[295,35,295,39],"9361":[295,42,295,46],"9369":[295,49,295,53],"9377":[295,49,295,64],"9385":[295,68,295,73],"9393":[295,90,295,94],"9401":[295,68,295,95],"9403":[295,68,295,89],"9409":[295,16,295,95],"9417":[295,9,295,96],"9425":[297,9,297,13],"9433":[298,16,298,20],"9441":[298,28,298,29],"9449":[298,16,298,30],"9451":[298,16,298,27],"9457":[298,16,298,44],"9459":[298,16,298,42],"9465":[298,47,298,51],"9473":[298,62,298,63],"9481":[298,47,298,64],"9483":[298,47,298,61],"9489":[298,16,298,64],"9497":[298,9,298,65],"9505":[300,9,300,18],"9513":[300,22,300,35],"9521":[300,36,300,40],"9529":[300,22,300,41],"9537":[301,19,301,28],"9545":[301,29,301,47],"9553":[301,50,301,54],"9561":[301,57,301,65],"9569":[301,68,301,72],"9577":[301,75,301,111],"9585":[301,114,301,155],"9593":[301,15,301,156],"9601":[301,15,301,156],"9609":[301,9,301,157],"9617":[303,16,303,29],"9625":[303,30,303,34],"9633":[303,36,303,40],"9641":[303,42,303,45],"9649":[303,12,303,46],"9651":[303,16,303,35],"9657":[303,12,303,46],"9665":[303,5,303,47],"9673":[258,26,304,2],"9681":[258,26,304,2],"9689":[258,26,304,2],"9697":[258,26,304,2],"9705":[258,26,304,2],"9713":[258,26,304,2],"9721":[258,26,304,2],"9729":[258,26,304,2],"9737":[258,26,304,2],"9745":[258,26,304,2],"9753":[258,26,304,2],"9761":[258,26,304,2],"9769":[258,26,304,2],"9777":[258,1,304,2],"9785":[258,1,304,3],"9793":[305,1,305,7],"9801":[305,1,305,17],"9809":[306,16,306,22],"9817":[306,28,306,32],"9825":[306,28,306,38],"9833":[306,16,306,39],"9835":[306,16,306,27],"9841":[306,47,306,51],"9849":[306,47,306,58],"9857":[306,16,306,39],"9865":[306,16,306,39],"9873":[306,47,306,58],"9881":[306,47,306,58],"9889":[307,18,307,19],"9897":[307,18,307,19],"9905":[307,18,307,19],"9913":[307,21,307,22],"9921":[307,25,307,28],"9937":[307,32,307,33],"9945":[307,30,307,33],"9953":[308,9,308,11],"9961":[308,12,308,16],"9969":[308,17,308,18],"9977":[308,12,308,19],"9985":[308,21,308,25],"9993":[308,21,308,31],"10001":[308,32,308,36],"10009":[308,37,308,38],"10017":[308,32,308,39],"10025":[308,21,308,40],"10033":[308,9,308,41],"10041":[308,9,308,42],"10049":[310,12,310,16],"10057":[310,12,310,16],"10065":[310,5,310,17],"10073":[305,29,311,2],"10081":[305,29,311,2],"10089":[305,29,311,2],"10097":[305,29,311,2],"10105":[305,29,311,2],"10113":[305,29,311,2],"10121":[305,29,311,2],"10129":[305,1,311,2],"10137":[305,1,311,3],"10145":[312,1,312,7],"10153":[312,1,312,17],"10161":[313,9,313,13],"10169":[313,9,313,28],"10177":[313,33,313,43],"10185":[314,16,314,20],"10193":[314,16,314,35],"10201":[314,16,314,35],"10209":[314,9,314,36],"10217":[315,17,315,23],"10225":[315,29,315,33],"10233":[315,29,315,39],"10241":[315,17,315,40],"10243":[315,17,315,28],"10249":[315,46,315,51],"10257":[315,46,315,58],"10265":[315,66,315,68],"10273":[315,17,315,40],"10281":[315,17,315,40],"10289":[315,46,315,58],"10297":[315,46,315,58],"10305":[315,66,315,68],"10313":[315,66,315,68],"10329":[316,12,316,13],"10337":[316,12,316,15],"10353":[317,20,317,25],"10361":[317,26,317,27],"10369":[317,20,317,28],"10377":[317,20,317,28],"10385":[317,20,317,28],"10393":[318,13,318,17],"10401":[318,13,318,23],"10409":[318,24,318,28],"10417":[318,13,318,29],"10425":[318,13,318,40],"10433":[319,13,319,16],"10441":[319,22,319,26],"10449":[319,13,319,27],"10451":[319,13,319,21],"10457":[319,13,319,28],"10465":[321,12,321,16],"10473":[321,34,321,37],"10481":[321,12,321,37],"10489":[321,12,321,37],"10497":[321,5,321,38],"10505":[312,34,322,2],"10513":[312,34,322,2],"10521":[312,34,322,2],"10529":[312,34,322,2],"10537":[312,34,322,2],"10545":[312,34,322,2],"10553":[312,34,322,2],"10561":[312,34,322,2],"10569":[312,34,322,2],"10577":[312,1,322,2],"10585":[312,1,322,3],"10593":[323,1,323,7],"10601":[323,1,323,17],"10609":[324,9,324,13],"10617":[324,9,324,27],"10625":[325,16,325,20],"10633":[325,16,325,34],"10641":[325,16,325,34],"10649":[325,9,325,35],"10657":[326,12,326,16],"10665":[326,33,326,37],"10673":[326,33,326,47],"10675":[326,33,326,45],"10681":[326,12,326,47],"10689":[326,12,326,47],"10697":[326,5,326,48],"10705":[323,33,327,2],"10713":[323,33,327,2],"10721":[323,33,327,2],"10729":[323,33,327,2],"10737":[323,1,327,2],"10745":[323,1,327,3],"10753":[328,1,328,7],"10761":[328,1,328,17],"10769":[329,9,329,13],"10777":[329,17,329,21],"10785":[329,17,329,27],"10793":[330,16,330,22],"10801":[330,16,330,22],"10809":[330,9,330,23],"10817":[331,9,331,13],"10825":[331,17,331,21],"10833":[331,17,331,30],"10841":[332,16,332,25],"10849":[332,16,332,25],"10857":[332,9,332,26],"10865":[333,9,333,13],"10873":[333,17,333,21],"10881":[333,17,333,28],"10889":[334,16,334,24],"10897":[334,16,334,24],"10905":[334,9,334,25],"10913":[335,9,335,13],"10921":[335,17,335,21],"10929":[335,17,335,30],"10937":[336,16,336,22],"10945":[336,16,336,22],"10953":[336,9,336,23],"10961":[337,9,337,25],"10969":[337,31,337,35],"10977":[337,9,337,36],"10979":[337,9,337,30],"10985":[338,16,338,37],"10993":[338,38,338,42],"11001":[338,44,338,48],"11009":[338,16,338,49],"11017":[338,16,338,49],"11025":[338,9,338,50],"11033":[340,16,340,34],"11041":[340,16,340,34],"11049":[340,9,340,35],"11057":[328,29,342,2],"11065":[328,29,342,2],"11073":[328,29,342,2],"11081":[328,29,342,2],"11089":[328,1,342,2],"11097":[328,1,342,3],"11105":[343,1,343,7],"11113":[343,1,343,17],"11121":[344,20,344,24],"11129":[344,31,344,36],"11137":[344,20,344,37],"11139":[344,20,344,30],"11145":[344,20,344,37],"11153":[344,20,344,37],"11161":[345,12,345,14],"11169":[345,12,345,14],"11177":[345,5,345,15],"11185":[346,18,346,19],"11193":[346,18,346,19],"11201":[346,18,346,19],"11209":[346,21,346,22],"11217":[346,25,346,33],"11225":[346,25,346,40],"11241":[346,44,346,45],"11249":[346,42,346,45],"11257":[347,16,347,17],"11265":[347,20,347,21],"11273":[347,24,347,28],"11281":[347,31,347,34],"11289":[347,37,347,45],"11297":[347,46,347,47],"11305":[347,37,347,48],"11313":[347,51,347,59],"11321":[347,60,347,61],"11329":[347,51,347,62],"11337":[347,16,347,62],"11345":[347,9,347,63],"11353":[348,13,348,17],"11361":[348,21,348,25],"11369":[348,21,348,31],"11377":[348,35,348,39],"11385":[348,35,348,45],"11393":[348,46,348,50],"11401":[348,35,348,51],"11409":[348,63,348,76],"11417":[348,63,348,82],"11425":[349,20,349,24],"11433":[349,20,349,24],"11441":[349,13,349,25],"11449":[352,12,352,17],"11457":[352,12,352,17],"11465":[352,5,352,18],"11473":[343,35,353,2],"11481":[343,35,353,2],"11489":[343,35,353,2],"11497":[343,35,353,2],"11505":[343,35,353,2],"11513":[343,35,353,2],"11521":[343,1,353,2],"11529":[343,1,353,3],"11537":[355,20,355,24],"11545":[355,31,355,51],"11553":[355,20,355,52],"11555":[355,20,355,30],"11561":[355,60,355,67],"11569":[355,20,355,68],"11571":[355,20,355,59],"11577":[355,20,355,68],"11585":[355,20,355,68],"11593":[356,9,356,17],"11601":[356,9,356,24],"11609":[356,27,356,28],"11617":[357,16,357,20],"11625":[357,16,357,26],"11633":[357,27,357,35],"11641":[357,36,357,37],"11649":[357,27,357,38],"11657":[357,16,357,39],"11665":[357,16,357,39],"11673":[357,9,357,40],"11681":[359,15,359,19],"11689":[359,25,359,33],"11697":[359,34,359,35],"11705":[359,25,359,36],"11713":[359,15,359,37],"11715":[359,15,359,24],"11721":[359,15,359,37],"11729":[359,15,359,37],"11737":[360,20,360,25],"11745":[360,20,360,25],"11753":[360,20,360,25],"11761":[361,10,361,13],"11769":[362,16,362,19],"11777":[362,16,362,19],"11785":[362,9,362,20],"11793":[363,16,363,24],"11801":[363,16,363,31],"11809":[363,34,363,35],"11817":[363,50,363,51],"11825":[363,16,363,35],"11833":[363,16,363,35],"11841":[363,50,363,51],"11849":[363,50,363,51],"11857":[364,12,364,13],"11865":[364,16,364,24],"11873":[364,16,364,31],"11889":[364,35,364,36],"11897":[364,33,364,36],"11905":[365,20,365,25],"11913":[365,20,365,25],"11921":[365,9,365,26],"11929":[366,19,366,27],"11937":[366,28,366,29],"11945":[366,19,366,30],"11953":[366,19,366,30],"11961":[366,9,366,31],"11969":[367,13,367,14],"11977":[367,19,367,23],"11985":[367,27,367,30],"11993":[367,35,367,38],"12001":[367,35,367,45],"12009":[367,50,367,54],"12017":[367,60,367,67],"12025":[367,50,367,68],"12027":[367,50,367,59],"12033":[368,17,368,20],"12041":[368,32,368,45],"12049":[368,32,368,51],"12057":[369,23,369,26],"12065":[369,23,369,33],"12073":[369,23,369,33],"12081":[369,17,369,34],"12089":[371,23,371,32],"12097":[371,23,371,32],"12105":[371,17,371,33],"12113":[375,14,375,18],"12121":[375,24,375,31],"12129":[375,14,375,32],"12131":[375,14,375,23],"12137":[377,15,377,18],"12145":[377,22,377,25],"12153":[377,22,377,32],"12161":[378,19,378,28],"12169":[378,19,378,28],"12177":[378,13,378,29],"12185":[381,20,381,23],"12193":[381,20,381,30],"12201":[381,40,381,47],"12209":[381,20,381,48],"12211":[381,20,381,39],"12217":[381,20,381,48],"12225":[381,20,381,48],"12233":[382,20,382,24],"12241":[382,29,382,37],"12249":[382,20,382,37],"12257":[382,9,382,38],"12265":[383,15,383,18],"12273":[383,15,383,25],"12281":[383,31,383,38],"12289":[383,15,383,39],"12291":[383,15,383,30],"12297":[383,15,383,39],"12305":[383,9,383,40],"12313":[385,5,385,9],"12321":[385,5,385,18],"12329":[385,19,385,23],"12337":[385,27,385,30],"12345":[385,5,385,30],"12353":[385,5,385,31],"12361":[386,9,386,12],"12369":[387,16,387,22],"12377":[387,16,387,22],"12385":[387,9,387,23],"12393":[389,9,389,17],"12401":[390,16,390,24],"12409":[390,16,390,24],"12417":[390,9,390,25],"12425":[392,12,392,30],"12433":[392,12,392,30],"12441":[392,5,392,31],"12449":[354,1,393,2],"12457":[354,1,393,2],"12465":[354,1,393,2],"12473":[354,1,393,2],"12481":[354,1,393,2],"12489":[354,1,393,2],"12497":[354,1,393,2],"12505":[354,1,393,2],"12513":[354,1,393,2],"12521":[354,1,393,2],"12529":[354,1,393,2],"12537":[395,5,395,26],"12545":[395,27,395,31],"12553":[395,33,395,37],"12561":[395,5,395,38],"12569":[395,5,395,39],"12577":[396,12,396,16],"12585":[396,12,396,25],"12593":[396,26,396,30],"12601":[396,12,396,31],"12609":[396,12,396,31],"12617":[396,5,396,32],"12625":[394,1,397,2],"12633":[394,1,397,2],"12641":[394,1,397,2],"12649":[394,1,397,2],"12657":[398,1,398,7],"12665":[398,1,398,17],"12673":[399,5,399,9],"12681":[399,5,399,19],"12689":[400,9,400,13],"12697":[401,9,401,13],"12705":[399,25,402,6],"12713":[399,5,402,7],"12715":[399,5,399,24],"12721":[399,5,402,8],"12729":[403,12,403,16],"12737":[403,12,403,16],"12745":[403,5,403,17],"12753":[398,26,404,2],"12761":[398,26,404,2],"12769":[398,26,404,2],"12777":[398,26,404,2],"12785":[398,26,404,2],"12793":[398,1,404,2],"12801":[398,1,404,3],"12809":[405,1,405,7],"12817":[405,1,405,17],"12825":[406,16,406,25],"12833":[406,26,406,27],"12841":[406,16,406,28],"12849":[406,16,406,28],"12857":[406,16,406,28],"12865":[407,9,407,22],"12873":[407,23,407,27],"12881":[407,9,407,28],"12889":[408,9,408,13],"12897":[408,9,408,15],"12905":[408,9,408,21],"12913":[408,9,408,25],"12921":[408,32,408,36],"12929":[408,32,408,38],"12937":[408,32,408,44],"12945":[408,46,408,55],"12953":[408,9,408,56],"12955":[408,9,408,31],"12961":[408,9,408,57],"12969":[409,16,409,20],"12977":[409,16,409,20],"12985":[409,9,409,21],"12993":[411,12,411,16],"13001":[411,23,411,28],"13009":[411,30,411,39],"13017":[411,12,411,40],"13019":[411,12,411,22],"13025":[411,12,411,40],"13033":[411,5,411,41],"13041":[405,24,412,2],"13049":[405,24,412,2],"13057":[405,24,412,2],"13065":[405,24,412,2],"13073":[405,1,412,2],"13081":[405,1,412,3],"13089":[413,1,413,7],"13097":[413,1,413,17],"13105":[414,9,414,22],"13113":[414,23,414,29],"13121":[414,9,414,30],"13129":[415,9,415,13],"13137":[415,9,415,15],"13145":[415,9,415,21],"13153":[415,9,415,26],"13161":[415,33,415,37],"13169":[415,33,415,39],"13177":[415,33,415,45],"13185":[415,47,415,56],"13193":[415,9,415,57],"13195":[415,9,415,32],"13201":[415,9,415,58],"13209":[416,16,416,20],"13217":[416,16,416,20],"13225":[416,9,416,21],"13233":[418,9,418,11],"13241":[418,9,418,18],"13249":[418,21,418,22],"13257":[419,16,419,20],"13265":[419,27,419,31],"13273":[420,13,420,22],"13281":[420,23,420,24],"13289":[420,13,420,25],"13297":[422,24,422,26],"13305":[422,32,422,35],"13313":[422,37,422,40],"13321":[422,24,422,41],"13323":[422,24,422,31],"13329":[422,24,422,41],"13337":[422,17,422,42],"13345":[421,13,423,14],"13353":[421,13,423,14],"13361":[421,13,423,14],"13369":[421,13,423,14],"13377":[419,33,424,10],"13385":[419,16,424,11],"13387":[419,16,419,26],"13393":[419,16,424,11],"13401":[419,9,424,12],"13409":[426,12,426,16],"13417":[426,23,426,29],"13425":[427,9,427,18],"13433":[427,19,427,20],"13441":[427,9,427,21],"13449":[429,24,429,28],"13457":[429,24,429,28],"13465":[429,24,429,28],"13473":[430,24,430,29],"13481":[430,24,430,39],"13489":[430,24,430,45],"13497":[430,51,430,60],"13505":[430,62,430,63],"13513":[430,24,430,64],"13515":[430,24,430,50],"13521":[430,24,430,64],"13529":[430,24,430,64],"13537":[431,13,431,15],"13545":[431,21,431,25],"13553":[431,27,431,31],"13561":[432,24,432,28],"13569":[432,35,432,39],"13577":[432,42,432,45],"13585":[432,41,432,46],"13593":[432,54,432,58],"13601":[432,41,432,59],"13603":[432,41,432,53],"13609":[432,24,432,60],"13611":[432,24,432,34],"13617":[432,24,432,60],"13625":[432,17,432,61],"13633":[431,33,433,14],"13641":[431,33,433,14],"13649":[431,33,433,14],"13657":[431,33,433,14],"13665":[431,13,433,15],"13667":[431,13,431,20],"13673":[431,13,433,16],"13681":[428,9,434,10],"13689":[428,9,434,10],"13697":[428,9,434,10],"13705":[428,9,434,10],"13713":[428,9,434,10],"13721":[428,9,434,10],"13729":[426,31,435,6],"13737":[426,12,435,7],"13739":[426,12,426,22],"13745":[426,12,435,7],"13753":[426,5,435,8],"13761":[413,25,436,2],"13769":[413,25,436,2],"13777":[413,25,436,2],"13785":[413,25,436,2],"13793":[413,25,436,2],"13801":[413,1,436,2],"13809":[413,1,436,3],"13817":[437,1,437,7],"13825":[437,1,437,17],"13833":[438,5,438,7],"13841":[438,8,438,12],"13849":[438,14,438,18],"13857":[438,5,438,19],"13865":[438,5,438,20],"13873":[439,12,439,16],"13881":[439,12,439,16],"13889":[439,5,439,17],"13897":[437,27,440,2],"13905":[437,27,440,2],"13913":[437,27,440,2],"13921":[437,27,440,2],"13929":[437,27,440,2],"13937":[437,1,440,2],"13945":[437,1,440,3],"13953":[441,1,441,7],"13961":[441,1,441,17],"13969":[442,9,442,17],"13977":[442,28,442,32],"13985":[443,23,443,27],"13993":[444,13,444,17],"14001":[444,13,444,25],"14009":[444,26,444,27],"14017":[444,31,444,35],"14025":[444,36,444,37],"14033":[444,31,444,38],"14041":[444,13,444,38],"14049":[444,13,444,39],"14057":[443,23,443,27],"14065":[443,9,444,39],"14073":[443,9,444,39],"14081":[446,9,446,13],"14089":[446,9,446,21],"14097":[446,22,446,26],"14105":[446,30,446,32],"14113":[446,9,446,32],"14121":[446,9,446,33],"14129":[447,12,447,16],"14137":[447,12,447,16],"14145":[447,5,447,17],"14153":[441,27,448,2],"14161":[441,27,448,2],"14169":[441,27,448,2],"14177":[441,27,448,2],"14185":[441,27,448,2],"14193":[441,27,448,2],"14201":[441,1,448,2],"14209":[441,1,448,3],"14217":[449,1,449,7],"14225":[449,1,449,17],"14233":[450,9,450,17],"14241":[450,28,450,32],"14249":[451,23,451,27],"14257":[452,13,452,17],"14265":[452,13,452,25],"14273":[452,26,452,27],"14281":[452,31,452,35],"14289":[452,36,452,37],"14297":[452,31,452,38],"14305":[452,13,452,38],"14313":[452,13,452,39],"14321":[451,23,451,27],"14329":[451,9,452,39],"14337":[451,9,452,39],"14345":[454,9,454,13],"14353":[454,9,454,21],"14361":[454,22,454,26],"14369":[454,30,454,32],"14377":[454,9,454,32],"14385":[454,9,454,33],"14393":[455,12,455,16],"14401":[455,12,455,16],"14409":[455,5,455,17],"14417":[449,27,456,2],"14425":[449,27,456,2],"14433":[449,27,456,2],"14441":[449,27,456,2],"14449":[449,27,456,2],"14457":[449,27,456,2],"14465":[449,1,456,2],"14473":[449,1,456,3],"14481":[457,1,457,7],"14489":[457,1,457,17],"14497":[458,5,458,12],"14505":[458,27,458,29],"14513":[458,27,458,29],"14521":[458,5,458,31],"14529":[459,9,459,16],"14537":[459,9,459,24],"14545":[460,9,460,14],"14553":[460,23,460,30],"14561":[460,9,460,31],"14563":[460,9,460,22],"14569":[460,9,460,32],"14577":[461,5,461,9],"14585":[461,5,461,18],"14593":[462,9,462,15],"14601":[463,9,463,16],"14609":[461,24,464,6],"14617":[461,5,464,7],"14619":[461,5,461,23],"14625":[461,5,464,8],"14633":[465,12,465,16],"14641":[465,12,465,16],"14649":[465,5,465,17],"14657":[457,26,466,2],"14665":[457,26,466,2],"14673":[457,26,466,2],"14681":[457,26,466,2],"14689":[457,26,466,2],"14697":[457,1,466,2],"14705":[457,1,466,3],"14713":[467,1,467,7],"14721":[467,1,467,17],"14729":[468,9,468,10],"14737":[468,15,468,24],"14745":[468,15,468,31],"14753":[469,16,469,20],"14761":[469,16,469,28],"14769":[469,29,469,32],"14777":[469,16,469,33],"14785":[469,16,469,33],"14793":[469,9,469,34],"14801":[471,13,471,16],"14809":[473,9,473,13],"14817":[473,9,473,21],"14825":[473,22,473,25],"14833":[473,29,473,37],"14841":[473,38,473,43],"14849":[473,45,473,50],"14857":[473,29,473,51],"14865":[473,9,473,51],"14873":[473,9,473,52],"14881":[472,10,472,16],"14889":[476,9,476,13],"14897":[476,9,476,21],"14905":[476,22,476,25],"14913":[476,29,476,34],"14921":[476,39,476,44],"14929":[476,52,476,53],"14937":[476,47,476,55],"14945":[476,58,476,63],"14953":[476,9,476,63],"14961":[476,9,476,64],"14969":[475,10,475,16],"14977":[479,9,479,13],"14985":[479,9,479,21],"14993":[479,22,479,25],"15001":[479,29,479,34],"15009":[479,9,479,34],"15017":[479,9,479,35],"15025":[481,12,481,16],"15033":[481,12,481,16],"15041":[481,5,481,17],"15049":[467,24,482,2],"15057":[467,24,482,2],"15065":[467,24,482,2],"15073":[467,24,482,2],"15081":[467,24,482,2],"15089":[467,24,482,2],"15097":[467,1,482,2],"15105":[467,1,482,3],"15113":[483,1,483,7],"15121":[483,1,483,17],"15129":[484,12,484,16],"15137":[484,12,484,24],"15145":[484,25,484,28],"15153":[484,12,484,29],"15161":[484,12,484,29],"15169":[484,5,484,30],"15177":[483,24,485,2],"15185":[483,24,485,2],"15193":[483,24,485,2],"15201":[483,24,485,2],"15209":[483,1,485,2],"15217":[483,1,485,3],"15225":[486,18,486,43],"15233":[486,50,486,53],"15241":[486,18,486,54],"15243":[486,18,486,49],"15249":[486,18,486,54],"15257":[486,18,486,54],"15265":[487,1,487,7],"15273":[487,23,487,29],"15281":[487,31,487,43],"15289":[489,16,489,26],"15297":[489,16,489,26],"15305":[489,9,489,27],"15313":[488,10,490,6],"15321":[488,10,490,6],"15329":[488,10,490,6],"15337":[492,19,492,24],"15345":[492,25,492,61],"15353":[492,15,492,62],"15361":[492,15,492,62],"15369":[492,9,492,63],"15377":[491,10,493,6],"15385":[491,10,493,6],"15393":[491,10,493,6],"15401":[487,45,494,2],"15409":[487,1,494,3],"15411":[487,1,487,22],"15417":[487,1,494,4],"15425":[495,1,495,7],"15433":[495,1,495,17],"15441":[496,5,496,17],"15449":[496,5,496,18],"15457":[497,19,497,21],"15465":[497,19,497,21],"15473":[497,19,497,21],"15481":[498,22,498,24],"15489":[498,22,498,24],"15497":[498,22,498,24],"15505":[500,13,500,23],"15513":[500,24,500,30],"15521":[500,13,500,31],"15529":[501,13,501,20],"15537":[501,13,501,20],"15545":[503,9,503,19],"15553":[503,20,503,26],"15561":[503,30,503,34],"15569":[503,9,503,34],"15577":[503,9,503,35],"15585":[504,18,504,24],"15593":[504,28,504,30],"15601":[504,18,504,30],"15609":[504,9,504,31],"15617":[506,20,506,26],"15625":[506,32,506,38],"15633":[506,32,506,44],"15641":[506,20,506,45],"15643":[506,20,506,31],"15649":[506,20,506,45],"15657":[506,20,506,45],"15665":[507,22,507,23],"15673":[507,22,507,23],"15681":[507,22,507,23],"15689":[507,25,507,26],"15697":[507,29,507,33],"15705":[507,29,507,40],"15721":[507,44,507,45],"15729":[507,42,507,45],"15737":[508,19,508,23],"15745":[508,24,508,25],"15753":[508,19,508,26],"15761":[508,19,508,26],"15769":[508,13,508,27],"15777":[509,20,509,26],"15785":[509,20,509,32],"15793":[509,33,509,36],"15801":[509,20,509,37],"15809":[509,20,509,37],"15817":[509,13,509,38],"15825":[510,17,510,21],"15833":[510,33,510,46],"15841":[510,33,510,60],"15849":[511,17,511,31],"15857":[511,32,511,36],"15865":[511,32,511,43],"15873":[511,45,511,48],"15881":[511,51,511,54],"15889":[511,17,511,55],"15897":[511,17,511,56],"15905":[512,24,512,28],"15913":[512,24,512,44],"15921":[513,17,513,31],"15929":[513,32,513,36],"15937":[513,32,513,43],"15945":[513,45,513,48],"15953":[513,51,513,54],"15961":[513,17,513,55],"15969":[513,17,513,56],"15977":[515,25,515,29],"15985":[515,25,515,36],"15993":[515,25,515,36],"16001":[515,17,515,37],"16009":[516,21,516,26],"16017":[516,31,516,36],"16025":[516,40,516,44],"16033":[516,48,516,53],"16041":[517,29,517,31],"16049":[517,29,517,31],"16057":[517,21,517,32],"16065":[518,32,518,37],"16073":[518,47,518,52],"16081":[518,32,518,53],"16083":[518,32,518,46],"16089":[518,32,518,53],"16097":[518,21,518,54],"16105":[519,31,519,39],"16113":[519,42,519,47],"16121":[519,50,519,52],"16129":[519,31,519,52],"16137":[519,21,519,53],"16145":[520,28,520,36],"16153":[520,47,520,52],"16161":[520,55,520,60],"16169":[520,63,520,71],"16177":[520,74,520,79],"16185":[520,74,520,84],"16193":[520,87,520,92],"16201":[520,28,520,92],"16209":[520,21,520,93],"16217":[521,25,521,29],"16225":[521,34,521,40],"16233":[521,34,521,51],"16241":[521,60,521,64],"16249":[521,34,521,65],"16251":[521,34,521,59],"16257":[522,25,522,30],"16265":[522,31,522,37],"16273":[522,40,522,43],"16281":[522,47,522,51],"16289":[522,25,522,51],"16297":[522,25,522,52],"16305":[524,25,524,30],"16313":[524,31,524,37],"16321":[524,40,524,43],"16329":[524,47,524,48],"16337":[524,25,524,48],"16345":[524,25,524,49],"16353":[526,28,526,35],"16361":[526,21,526,41],"16369":[527,27,527,39],"16377":[527,43,527,50],"16385":[528,25,528,32],"16393":[528,46,528,50],"16401":[528,25,528,50],"16409":[528,25,528,51],"16417":[530,21,530,28],"16425":[531,25,531,30],"16433":[532,25,532,32],"16441":[530,34,533,22],"16449":[530,21,533,23],"16451":[530,21,530,33],"16457":[530,21,533,24],"16465":[537,13,537,19],"16473":[538,13,538,29],"16481":[538,30,538,36],"16489":[538,38,538,44],"16497":[538,13,538,45],"16505":[538,13,538,46],"16513":[540,13,540,19],"16521":[540,13,540,28],"16529":[541,23,541,35],"16537":[541,39,541,44],"16545":[541,45,541,46],"16553":[541,39,541,47],"16561":[542,21,542,26],"16569":[542,27,542,28],"16577":[542,21,542,29],"16585":[542,43,542,47],"16593":[542,21,542,47],"16601":[542,21,542,48],"16609":[540,37,543,14],"16617":[540,37,543,14],"16625":[540,37,543,14],"16633":[540,37,543,14],"16641":[540,13,543,15],"16643":[540,13,540,36],"16649":[540,13,543,16],"16657":[544,23,544,30],"16665":[544,38,544,44],"16673":[544,38,544,53],"16681":[544,23,544,54],"16683":[544,23,544,37],"16689":[544,23,544,54],"16697":[544,13,544,55],"16705":[499,26,546,6],"16713":[499,26,546,6],"16721":[499,26,546,6],"16729":[499,26,546,6],"16737":[499,26,546,6],"16745":[499,26,546,6],"16753":[499,26,546,6],"16761":[499,26,546,6],"16769":[499,26,546,6],"16777":[499,26,546,6],"16785":[499,26,546,6],"16793":[499,26,546,6],"16801":[499,26,546,6],"16809":[499,26,546,6],"16817":[499,26,546,6],"16825":[499,26,546,6],"16833":[547,5,547,19],"16841":[547,20,547,24],"16849":[547,5,547,25],"16857":[547,5,547,26],"16865":[548,12,548,19],"16873":[548,12,548,19],"16881":[548,5,548,20],"16889":[550,26,550,32],"16897":[550,26,550,41],"16905":[550,49,550,59],"16913":[550,49,550,66],"16921":[550,109,550,110],"16929":[550,26,550,41],"16937":[550,26,550,41],"16945":[550,49,550,66],"16953":[550,49,550,66],"16961":[550,109,550,110],"16969":[550,109,550,110],"16977":[551,18,551,19],"16985":[551,18,551,19],"16993":[551,21,551,22],"17001":[551,25,551,28],"17017":[551,32,551,33],"17025":[551,30,551,33],"17033":[552,24,552,34],"17041":[552,35,552,36],"17049":[552,24,552,37],"17057":[552,38,552,39],"17065":[552,24,552,40],"17073":[552,24,552,40],"17081":[552,13,552,41],"17089":[553,20,553,26],"17097":[553,32,553,40],"17105":[553,20,553,41],"17107":[553,20,553,31],"17113":[553,20,553,41],"17121":[553,13,553,42],"17129":[554,20,554,24],"17137":[554,20,554,31],"17145":[554,20,554,31],"17153":[554,13,554,32],"17161":[555,24,555,26],"17169":[555,24,555,26],"17177":[555,13,555,27],"17185":[556,22,556,23],"17193":[556,22,556,23],"17201":[556,25,556,26],"17209":[556,29,556,33],"17225":[556,37,556,38],"17233":[556,35,556,38],"17241":[557,23,557,27],"17249":[557,28,557,29],"17257":[557,23,557,30],"17265":[557,23,557,30],"17273":[557,17,557,31],"17281":[558,17,558,25],"17289":[558,26,558,32],"17297":[558,35,558,38],"17305":[558,42,558,50],"17313":[558,51,558,54],"17321":[558,42,558,55],"17329":[558,17,558,55],"17337":[558,17,558,56],"17345":[560,13,560,20],"17353":[561,17,561,25],"17361":[562,17,562,27],"17369":[562,28,562,29],"17377":[562,17,562,30],"17385":[562,31,562,32],"17393":[562,17,562,33],"17401":[560,26,563,14],"17409":[560,13,563,15],"17411":[560,13,560,25],"17417":[560,13,563,16],"17425":[549,5,565,6],"17433":[549,5,565,6],"17441":[549,5,565,6],"17449":[549,5,565,6],"17457":[549,5,565,6],"17465":[549,5,565,6],"17473":[549,5,565,6],"17481":[549,5,565,6],"17489":[549,5,565,6],"17497":[549,5,565,6],"17505":[549,5,565,6],"17513":[549,5,565,6],"17521":[549,5,565,6],"17529":[495,28,566,2],"17537":[495,28,566,2],"17545":[495,28,566,2],"17553":[495,28,566,2],"17561":[495,28,566,2],"17569":[549,5,565,6],"17577":[495,28,566,2],"17585":[495,28,566,2],"17593":[495,1,566,2],"17601":[495,1,566,3],"17609":[567,1,567,7],"17617":[567,1,567,17],"17625":[568,20,568,24],"17633":[568,20,568,33],"17641":[568,20,568,33],"17649":[568,20,568,33],"17657":[569,17,569,21],"17665":[569,28,569,31],"17673":[569,17,569,32],"17675":[569,17,569,27],"17681":[569,17,569,32],"17689":[569,17,569,32],"17697":[570,12,570,20],"17705":[570,21,570,25],"17713":[570,29,570,34],"17721":[571,9,571,12],"17729":[571,13,571,17],"17737":[571,9,571,18],"17745":[571,23,571,26],"17753":[571,27,571,31],"17761":[571,35,571,36],"17769":[571,41,571,46],"17777":[571,41,571,53],"17785":[571,56,571,57],"17793":[571,64,571,75],"17801":[571,76,571,83],"17809":[571,85,571,89],"17817":[571,60,571,90],"17825":[571,93,571,95],"17833":[571,23,571,95],"17841":[571,9,571,97],"17849":[572,16,572,19],"17857":[572,20,572,24],"17865":[572,16,572,25],"17873":[572,16,572,25],"17881":[572,9,572,26],"17889":[570,42,573,6],"17897":[570,42,573,6],"17905":[570,42,573,6],"17913":[570,42,573,6],"17921":[570,42,573,6],"17929":[570,42,573,6],"17937":[573,8,573,12],"17945":[573,8,573,17],"17953":[570,29,573,18],"17955":[570,29,570,41],"17961":[570,12,573,18],"17969":[570,12,573,18],"17977":[570,5,573,19],"17985":[567,28,574,2],"17993":[567,28,574,2],"18001":[567,28,574,2],"18009":[567,28,574,2],"18017":[567,28,574,2],"18025":[567,28,574,2],"18033":[567,28,574,2],"18041":[567,1,574,2],"18049":[567,1,574,3],"18057":[575,1,575,7],"18065":[575,1,575,17],"18073":[576,12,576,16],"18081":[576,12,576,25],"18089":[576,26,576,30],"18097":[576,12,576,31],"18105":[576,12,576,31],"18113":[576,5,576,32],"18121":[575,32,577,2],"18129":[575,32,577,2],"18137":[575,32,577,2],"18145":[575,32,577,2],"18153":[575,1,577,2],"18161":[575,1,577,3],"18169":[578,1,578,7],"18177":[578,1,578,17],"18185":[579,16,579,20],"18193":[579,25,579,33],"18201":[580,17,580,21],"18209":[580,16,580,22],"18217":[580,16,580,22],"18225":[580,9,580,23],"18233":[582,9,582,14],"18241":[582,23,582,27],"18249":[582,9,582,28],"18251":[582,9,582,22],"18257":[583,9,583,13],"18265":[584,17,584,21],"18273":[584,27,584,31],"18281":[584,17,584,32],"18283":[584,17,584,26],"18289":[585,24,585,28],"18297":[585,24,585,34],"18305":[585,35,585,39],"18313":[585,17,585,41],"18321":[583,22,587,10],"18329":[583,22,587,10],"18337":[583,22,587,10],"18345":[583,22,587,10],"18353":[587,12,587,16],"18361":[583,9,587,17],"18363":[583,9,583,21],"18369":[583,9,587,18],"18377":[578,27,589,2],"18385":[578,27,589,2],"18393":[578,27,589,2],"18401":[578,27,589,2],"18409":[578,1,589,2],"18417":[578,1,589,3],"18425":[590,1,590,7],"18433":[590,1,590,17],"18441":[591,18,591,22],"18449":[591,18,591,22],"18457":[591,18,591,22],"18465":[592,22,592,28],"18473":[592,34,592,38],"18481":[592,22,592,39],"18483":[592,22,592,33],"18489":[592,22,592,39],"18497":[592,22,592,39],"18505":[593,9,593,19],"18513":[594,16,594,26],"18521":[594,16,594,26],"18529":[594,9,594,27],"18537":[597,17,597,22],"18545":[597,17,597,29],"18553":[597,32,597,33],"18561":[597,17,597,33],"18569":[597,17,597,33],"18585":[598,16,598,17],"18593":[598,16,598,19],"18609":[599,23,599,28],"18617":[599,35,599,36],"18625":[599,38,599,39],"18633":[599,23,599,40],"18635":[599,23,599,34],"18641":[599,46,599,49],"18649":[599,23,599,50],"18651":[599,23,599,45],"18657":[599,23,599,50],"18665":[599,13,599,51],"18673":[600,27,600,33],"18681":[600,39,600,46],"18689":[600,27,600,47],"18691":[600,27,600,38],"18697":[600,27,600,47],"18705":[600,13,600,48],"18713":[601,17,601,28],"18721":[602,21,602,32],"18729":[602,21,602,39],"18737":[603,25,603,36],"18745":[603,25,603,43],"18753":[603,55,603,68],"18761":[603,55,603,74],"18769":[604,32,604,43],"18777":[604,32,604,50],"18785":[604,32,604,50],"18793":[604,25,604,51],"18801":[606,25,606,26],"18809":[606,31,606,36],"18817":[606,31,606,43],"18825":[606,47,606,58],"18833":[606,47,606,65],"18841":[607,29,607,32],"18849":[607,37,607,42],"18857":[607,43,607,44],"18865":[607,37,607,45],"18873":[608,36,608,42],"18881":[608,43,608,48],"18889":[608,55,608,56],"18897":[608,59,608,60],"18905":[608,43,608,61],"18907":[608,43,608,54],"18913":[608,63,608,74],"18921":[608,63,608,81],"18929":[608,36,608,82],"18937":[608,36,608,82],"18945":[608,29,608,83],"18953":[610,36,610,42],"18961":[610,43,610,48],"18969":[610,55,610,56],"18977":[610,43,610,57],"18979":[610,43,610,54],"18985":[610,59,610,70],"18993":[610,59,610,77],"19001":[610,36,610,78],"19009":[610,36,610,78],"19017":[610,29,610,79],"19025":[614,24,614,35],"19033":[614,24,614,35],"19041":[614,17,614,36],"19049":[596,12,617,6],"19057":[596,12,617,6],"19065":[596,12,617,6],"19073":[596,12,617,6],"19081":[596,12,617,6],"19089":[596,12,617,6],"19097":[596,12,617,6],"19105":[596,12,617,6],"19113":[596,12,617,6],"19121":[617,7,617,11],"19129":[617,18,617,21],"19137":[617,7,617,22],"19139":[617,7,617,17],"19145":[617,24,617,30],"19153":[596,12,617,31],"19161":[596,12,617,31],"19169":[596,5,617,32],"19177":[590,31,618,2],"19185":[590,31,618,2],"19193":[590,31,618,2],"19201":[590,31,618,2],"19209":[590,31,618,2],"19217":[590,31,618,2],"19225":[590,1,618,2],"19233":[590,1,618,3],"19241":[619,1,619,7],"19249":[619,28,619,34],"19257":[619,28,619,34],"19265":[619,1,619,34],"19273":[619,1,619,35],"19281":[620,1,620,7],"19289":[620,32,620,39],"19297":[620,40,620,56],"19305":[620,32,620,57],"19313":[620,32,620,57],"19321":[620,1,620,57],"19329":[620,1,620,58],"19337":[621,1,621,8],"19345":[621,20,621,33],"19353":[621,20,621,42],"19361":[621,1,621,42],"19369":[621,1,621,43],"19377":[1,1,621,43],"19385":[1,1,621,43],"19393":[1,1,621,43],"19401":[1,1,621,43],"19409":[1,1,621,43],"19417":[1,1,621,43],"19425":[1,1,621,43],"19433":[1,1,621,43],"19441":[1,1,621,43],"19449":[1,1,621,43],"19457":[1,1,621,43],"19465":[1,1,621,43],"19473":[19,1,93,2],"19481":[1,1,621,43],"19489":[94,1,99,2],"19497":[1,1,621,43],"19505":[1,1,621,43],"19513":[1,1,621,43],"19521":[354,1,393,2],"19529":[1,1,621,43],"19537":[394,1,397,2],"19545":[1,1,621,43],"19553":[1,1,621,43],"19561":[20,5,21,41],"19569":[40,5,42,6],"19577":[45,5,49,6],"19585":[51,5,53,6],"19593":[54,5,57,6],"19601":[54,5,57,6],"19609":[62,9,64,10],"19617":[69,35,69,87],"19625":[68,13,70,14],"19633":[71,31,71,78],"19641":[66,26,73,10],"19649":[66,26,73,10],"19657":[74,26,83,10],"19665":[74,26,83,10],"19673":[84,38,87,10],"19681":[84,38,87,10],"19689":[88,28,91,10],"19697":[88,28,91,10],"19705":[59,5,92,6],"19713":[19,1,93,2],"19721":[19,1,93,2],"19729":[95,5,97,6],"19737":[98,27,98,69],"19745":[94,1,99,2],"19753":[94,1,99,2],"19761":[111,17,113,18],"19769":[116,17,120,18],"19777":[123,74,125,26],"19785":[123,74,125,26],"19793":[127,62,129,26],"19801":[127,62,129,26],"19809":[122,21,130,22],"19817":[121,17,133,18],"19825":[110,17,134,14],"19833":[110,17,134,14],"19841":[142,17,146,18],"19849":[150,37,152,26],"19857":[150,37,152,26],"19865":[148,41,153,22],"19873":[148,41,153,22],"19881":[154,25,156,26],"19889":[154,25,156,26],"19897":[157,25,160,26],"19905":[153,24,162,22],"19913":[153,24,162,22],"19921":[147,33,163,18],"19929":[147,33,163,18],"19937":[163,25,166,18],"19945":[163,25,166,18],"19953":[140,17,167,14],"19961":[140,17,167,14],"19969":[174,5,176,6],"19977":[177,5,179,6],"19985":[197,5,199,6],"19993":[173,35,201,2],"20001":[173,35,201,2],"20009":[207,9,209,10],"20017":[210,9,212,10],"20025":[214,13,219,14],"20033":[213,9,222,10],"20041":[205,5,223,6],"20049":[205,5,223,6],"20057":[202,24,224,2],"20065":[202,24,224,2],"20073":[232,9,233,37],"20081":[234,9,235,40],"20089":[236,16,236,84],"20097":[231,5,237,6],"20105":[238,5,240,6],"20113":[241,5,243,6],"20121":[246,9,247,30],"20129":[248,9,251,10],"20137":[245,22,253,6],"20145":[245,22,253,6],"20153":[230,25,257,2],"20161":[230,25,257,2],"20169":[261,9,265,10],"20177":[259,5,266,6],"20185":[267,16,267,114],"20193":[268,5,270,6],"20201":[272,20,272,73],"20209":[273,9,275,10],"20217":[280,13,282,14],"20225":[278,16,285,10],"20233":[276,9,285,10],"20241":[271,5,287,6],"20249":[288,5,290,6],"20257":[295,16,295,95],"20265":[292,5,296,6],"20273":[297,5,299,6],"20281":[300,5,302,6],"20289":[258,26,304,2],"20297":[258,26,304,2],"20305":[307,5,309,6],"20313":[307,5,309,6],"20321":[305,29,311,2],"20329":[305,29,311,2],"20337":[313,5,314,36],"20345":[318,9,319,28],"20353":[316,5,320,6],"20361":[312,34,322,2],"20369":[312,34,322,2],"20377":[324,5,325,35],"20385":[323,33,327,2],"20393":[323,33,327,2],"20401":[329,5,330,23],"20409":[331,5,332,26],"20417":[333,5,334,25],"20425":[335,5,336,23],"20433":[337,5,341,6],"20441":[328,29,342,2],"20449":[328,29,342,2],"20457":[347,16,347,62],"20465":[348,9,350,10],"20473":[346,5,351,6],"20481":[346,5,351,6],"20489":[343,35,353,2],"20497":[343,35,353,2],"20505":[356,5,358,6],"20513":[361,5,362,20],"20521":[368,13,372,14],"20529":[367,9,374,10],"20537":[375,9,376,22],"20545":[377,9,380,10],"20553":[364,5,384,6],"20561":[364,5,384,6],"20569":[386,5,388,6],"20577":[389,5,391,6],"20585":[354,1,393,2],"20593":[354,1,393,2],"20601":[394,1,397,2],"20609":[394,1,397,2],"20617":[398,26,404,2],"20625":[398,26,404,2],"20633":[407,5,410,6],"20641":[405,24,412,2],"20649":[405,24,412,2],"20657":[414,5,417,6],"20665":[421,13,423,14],"20673":[421,13,423,14],"20681":[418,5,425,6],"20689":[431,33,433,14],"20697":[431,33,433,14],"20705":[428,9,434,10],"20713":[428,9,434,10],"20721":[413,25,436,2],"20729":[413,25,436,2],"20737":[437,27,440,2],"20745":[437,27,440,2],"20753":[442,5,446,33],"20761":[441,27,448,2],"20769":[441,27,448,2],"20777":[450,5,454,33],"20785":[449,27,456,2],"20793":[449,27,456,2],"20801":[459,5,460,32],"20809":[457,26,466,2],"20817":[457,26,466,2],"20825":[468,5,470,6],"20833":[476,29,476,63],"20841":[471,13,471,16],"20849":[472,10,472,16],"20857":[475,10,475,16],"20865":[467,24,482,2],"20873":[467,24,482,2],"20881":[483,24,485,2],"20889":[483,24,485,2],"20897":[488,10,490,6],"20905":[488,10,490,6],"20913":[491,10,493,6],"20921":[491,10,493,6],"20929":[500,9,502,10],"20937":[519,31,519,52],"20945":[520,63,520,92],"20953":[520,28,520,92],"20961":[521,21,525,22],"20969":[527,21,529,22],"20977":[516,17,534,18],"20985":[512,20,535,14],"20993":[510,13,535,14],"21001":[507,9,536,10],"21009":[507,9,536,10],"21017":[541,17,542,48],"21025":[540,37,543,14],"21033":[540,37,543,14],"21041":[537,9,545,10],"21049":[499,26,546,6],"21057":[499,26,546,6],"21065":[556,13,559,14],"21073":[556,13,559,14],"21081":[556,13,559,14],"21089":[551,9,564,10],"21097":[551,9,564,10],"21105":[551,9,564,10],"21113":[549,5,565,6],"21121":[549,5,565,6],"21129":[495,28,566,2],"21137":[495,28,566,2],"21145":[571,35,571,95],"21153":[570,42,573,6],"21161":[570,42,573,6],"21169":[567,28,574,2],"21177":[567,28,574,2],"21185":[575,32,577,2],"21193":[575,32,577,2],"21201":[579,5,581,6],"21209":[584,13,586,14],"21217":[583,22,587,10],"21225":[583,22,587,10],"21233":[582,5,588,6],"21241":[578,27,589,2],"21249":[578,27,589,2],"21257":[593,5,595,6],"21265":[603,21,605,22],"21273":[607,25,611,26],"21281":[606,21,612,22],"21289":[602,17,613,18],"21297":[601,13,615,14],"21305":[598,9,616,10],"21313":[596,12,617,6],"21321":[596,12,617,6],"21329":[590,31,618,2],"21337":[590,31,618,2],"21345":[1,1,621,43],"21353":[1,1,621,43],"nBranches":312,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema_jalangi_.js","code":"/*!\n * Module dependencies.\n */\n\nvar readPref = require('./drivers').ReadPreference;\nvar EventEmitter = require('events').EventEmitter;\nvar VirtualType = require('./virtualtype');\nvar utils = require('./utils');\nvar MongooseTypes;\nvar Kareem = require('kareem');\nvar async = require('async');\nvar PromiseProvider = require('./promise_provider');\n\nvar IS_QUERY_HOOK = {\n  count: true,\n  find: true,\n  findOne: true,\n  findOneAndUpdate: true,\n  findOneAndRemove: true,\n  update: true\n};\n\n/**\n * Schema constructor.\n *\n * ####Example:\n *\n *     var child = new Schema({ name: String });\n *     var schema = new Schema({ name: String, age: Number, children: [child] });\n *     var Tree = mongoose.model('Tree', schema);\n *\n *     // setting schema options\n *     new Schema({ name: String }, { _id: false, autoIndex: false })\n *\n * ####Options:\n *\n * - [autoIndex](/docs/guide.html#autoIndex): bool - defaults to null (which means use the connection's autoIndex option)\n * - [bufferCommands](/docs/guide.html#bufferCommands): bool - defaults to true\n * - [capped](/docs/guide.html#capped): bool - defaults to false\n * - [collection](/docs/guide.html#collection): string - no default\n * - [emitIndexErrors](/docs/guide.html#emitIndexErrors): bool - defaults to false.\n * - [id](/docs/guide.html#id): bool - defaults to true\n * - [_id](/docs/guide.html#_id): bool - defaults to true\n * - `minimize`: bool - controls [document#toObject](#document_Document-toObject) behavior when called manually - defaults to true\n * - [read](/docs/guide.html#read): string\n * - [safe](/docs/guide.html#safe): bool - defaults to true.\n * - [shardKey](/docs/guide.html#shardKey): bool - defaults to `null`\n * - [strict](/docs/guide.html#strict): bool - defaults to true\n * - [toJSON](/docs/guide.html#toJSON) - object - no default\n * - [toObject](/docs/guide.html#toObject) - object - no default\n * - [typeKey](/docs/guide.html#typeKey) - string - defaults to 'type'\n * - [validateBeforeSave](/docs/guide.html#validateBeforeSave) - bool - defaults to `true`\n * - [versionKey](/docs/guide.html#versionKey): bool - defaults to \"__v\"\n *\n * ####Note:\n *\n * _When nesting schemas, (`children` in the example above), always declare the child schema first before passing it into its parent._\n *\n * @param {Object} definition\n * @inherits NodeJS EventEmitter http://nodejs.org/api/events.html#events_class_events_eventemitter\n * @event `init`: Emitted after the schema is compiled into a `Model`.\n * @api public\n */\n\nfunction Schema(obj, options) {\n  if (!(this instanceof Schema))\n    return new Schema(obj, options);\n\n  this.paths = {};\n  this.subpaths = {};\n  this.virtuals = {};\n  this.nested = {};\n  this.inherits = {};\n  this.callQueue = [];\n  this._indexes = [];\n  this.methods = {};\n  this.statics = {};\n  this.tree = {};\n  this._requiredpaths = undefined;\n  this.discriminatorMapping = undefined;\n  this._indexedpaths = undefined;\n\n  this.s = {\n    hooks: new Kareem(),\n    queryHooks: IS_QUERY_HOOK\n  };\n\n  this.options = this.defaultOptions(options);\n\n  // build paths\n  if (obj) {\n    this.add(obj);\n  }\n\n  // check if _id's value is a subdocument (gh-2276)\n  var _idSubDoc = obj && obj._id && utils.isObject(obj._id);\n\n  // ensure the documents get an auto _id unless disabled\n  var auto_id = !this.paths['_id'] &&\n    (!this.options.noId && this.options._id) && !_idSubDoc;\n\n  if (auto_id) {\n    obj = { _id: { auto: true } };\n    obj._id[this.options.typeKey] = Schema.ObjectId;\n    this.add(obj);\n  }\n\n  // ensure the documents receive an id getter unless disabled\n  var autoid = !this.paths['id'] &&\n    (!this.options.noVirtualId && this.options.id);\n  if (autoid) {\n    this.virtual('id').get(idGetter);\n  }\n\n  for (var i = 0; i < this._defaultMiddleware.length; ++i) {\n    var m = this._defaultMiddleware[i];\n    this[m.kind](m.hook, !!m.isAsync, m.fn);\n  }\n\n  // adds updatedAt and createdAt timestamps to documents if enabled\n  var timestamps = this.options.timestamps;\n  if (timestamps) {\n    var createdAt = timestamps.createdAt || 'createdAt',\n        updatedAt = timestamps.updatedAt || 'updatedAt',\n        schemaAdditions = {};\n\n    schemaAdditions[updatedAt] = Date;\n\n    if (!this.paths[createdAt]) {\n      schemaAdditions[createdAt] = Date;\n    }\n\n    this.add(schemaAdditions);\n\n    this.pre('save', function(next) {\n      var defaultTimestamp = new Date();\n\n      if (!this[createdAt]) {\n        this[createdAt] = auto_id ? this._id.getTimestamp() : defaultTimestamp;\n      }\n\n      this[updatedAt] = this.isNew ? this[createdAt] : defaultTimestamp;\n\n      next();\n    });\n\n    var genUpdates = function() {\n      var now = new Date();\n      var updates = {$set: {}, $setOnInsert: {}};\n      updates.$set[updatedAt] = now;\n      updates.$setOnInsert[createdAt] = now;\n\n      return updates;\n    };\n\n    this.pre('findOneAndUpdate', function(next) {\n      this.findOneAndUpdate({}, genUpdates());\n      next();\n    });\n\n    this.pre('update', function(next) {\n      this.update({}, genUpdates());\n      next();\n    });\n  }\n\n}\n\n/*!\n * Returns this documents _id cast to a string.\n */\n\nfunction idGetter() {\n  if (this.$__._id) {\n    return this.$__._id;\n  }\n\n  return this.$__._id = null == this._id\n    ? null\n    : String(this._id);\n}\n\n/*!\n * Inherit from EventEmitter.\n */\nSchema.prototype = Object.create( EventEmitter.prototype );\nSchema.prototype.constructor = Schema;\n\n/**\n * Default middleware attached to a schema. Cannot be changed.\n *\n * This field is used to make sure discriminators don't get multiple copies of\n * built-in middleware. Declared as a constant because changing this at runtime\n * may lead to instability with Model.prototype.discriminator().\n *\n * @api private\n * @property _defaultMiddleware\n */\nObject.defineProperty(Schema.prototype, '_defaultMiddleware', {\n  configurable: false,\n  enumerable: false,\n  writable: false,\n  value: [{\n    kind: 'pre',\n    hook: 'save',\n    fn: function(next, options) {\n      // Nested docs have their own presave\n      if (this.ownerDocument) {\n        return next();\n      }\n\n      var hasValidateBeforeSaveOption = options &&\n        (typeof options === 'object') &&\n        ('validateBeforeSave' in options);\n\n      var shouldValidate;\n      if (hasValidateBeforeSaveOption) {\n        shouldValidate = !!options.validateBeforeSave;\n      } else {\n        shouldValidate = this.schema.options.validateBeforeSave;\n      }\n\n      // Validate\n      if (shouldValidate) {\n        // HACK: use $__original_validate to avoid promises so bluebird doesn't\n        // complain\n        if (this.$__original_validate) {\n          this.$__original_validate({ __noPromise: true }, function(error) {\n            next(error);\n          });\n        } else {\n          this.validate({ __noPromise: true }, function(error) {\n            next(error);\n          });\n        }\n      } else {\n        next();\n      }\n    }\n  }, {\n    kind: 'pre',\n    hook: 'save',\n    isAsync: true,\n    fn: function(next, done) {\n      var Promise = PromiseProvider.get(),\n          subdocs = this.$__getAllSubdocs();\n\n      if (!subdocs.length || this.$__preSavingFromParent) {\n        done();\n        next();\n        return;\n      }\n\n      new Promise.ES6(function(resolve, reject) {\n        async.each(subdocs, function(subdoc, cb) {\n          subdoc.$__preSavingFromParent = true;\n          subdoc.save(function(err) {\n            cb(err);\n          });\n        }, function(error) {\n          for (var i = 0; i < subdocs.length; ++i) {\n            delete subdocs[i].$__preSavingFromParent;\n          }\n          if (error) {\n            reject(error);\n            return;\n          }\n          resolve();\n        });\n      }).then(function() {\n        next();\n        done();\n      }, done);\n    }\n  }]\n});\n\n/**\n * Schema as flat paths\n *\n * ####Example:\n *     {\n *         '_id'        : SchemaType,\n *       , 'nested.key' : SchemaType,\n *     }\n *\n * @api private\n * @property paths\n */\n\nSchema.prototype.paths;\n\n/**\n * Schema as a tree\n *\n * ####Example:\n *     {\n *         '_id'     : ObjectId\n *       , 'nested'  : {\n *             'key' : String\n *         }\n *     }\n *\n * @api private\n * @property tree\n */\n\nSchema.prototype.tree;\n\n/**\n * Returns default options for this schema, merged with `options`.\n *\n * @param {Object} options\n * @return {Object}\n * @api private\n */\n\nSchema.prototype.defaultOptions = function(options) {\n  if (options && false === options.safe) {\n    options.safe = { w: 0 };\n  }\n\n  if (options && options.safe && 0 === options.safe.w) {\n    // if you turn off safe writes, then versioning goes off as well\n    options.versionKey = false;\n  }\n\n  options = utils.options({\n    strict: true,\n    bufferCommands: true,\n    capped: false, // { size, max, autoIndexId }\n    versionKey: '__v',\n    discriminatorKey: '__t',\n    minimize: true,\n    autoIndex: null,\n    shardKey: null,\n    read: null,\n    validateBeforeSave: true,\n    // the following are only applied at construction time\n    noId: false, // deprecated, use { _id: false }\n    _id: true,\n    noVirtualId: false, // deprecated, use { id: false }\n    id: true,\n    typeKey: 'type'\n  }, options);\n\n  if (options.read) {\n    options.read = readPref(options.read);\n  }\n\n  return options;\n};\n\n/**\n * Adds key path / schema type pairs to this schema.\n *\n * ####Example:\n *\n *     var ToySchema = new Schema;\n *     ToySchema.add({ name: 'string', color: 'string', price: 'number' });\n *\n * @param {Object} obj\n * @param {String} prefix\n * @api public\n */\n\nSchema.prototype.add = function add(obj, prefix) {\n  prefix = prefix || '';\n  var keys = Object.keys(obj);\n\n  for (var i = 0; i < keys.length; ++i) {\n    var key = keys[i];\n\n    if (null == obj[key]) {\n      throw new TypeError('Invalid value for schema path `' + prefix + key + '`');\n    }\n\n    if (Array.isArray(obj[key]) && obj[key].length === 1 && null == obj[key][0]) {\n      throw new TypeError('Invalid value for schema Array path `' + prefix + key + '`');\n    }\n\n    if (utils.isObject(obj[key]) &&\n        (!obj[key].constructor || 'Object' == utils.getFunctionName(obj[key].constructor)) &&\n        (!obj[key][this.options.typeKey] || (this.options.typeKey === 'type' && obj[key].type.type))) {\n      if (Object.keys(obj[key]).length) {\n        // nested object { last: { name: String }}\n        this.nested[prefix + key] = true;\n        this.add(obj[key], prefix + key + '.');\n      } else {\n        this.path(prefix + key, obj[key]); // mixed type\n      }\n    } else {\n      this.path(prefix + key, obj[key]);\n    }\n  }\n};\n\n/**\n * Reserved document keys.\n *\n * Keys in this object are names that are rejected in schema declarations b/c they conflict with mongoose functionality. Using these key name will throw an error.\n *\n *      on, emit, _events, db, get, set, init, isNew, errors, schema, options, modelName, collection, _pres, _posts, toObject\n *\n * _NOTE:_ Use of these terms as method names is permitted, but play at your own risk, as they may be existing mongoose document methods you are stomping on.\n *\n *      var schema = new Schema(..);\n *      schema.methods.init = function () {} // potentially breaking\n */\n\nSchema.reserved = Object.create(null);\nvar reserved = Schema.reserved;\n// EventEmitter\nreserved.emit =\nreserved.on =\nreserved.once =\n// document properties and functions\nreserved.collection =\nreserved.db =\nreserved.errors =\nreserved.init =\nreserved.isModified =\nreserved.isNew =\nreserved.get =\nreserved.modelName =\nreserved.save =\nreserved.schema =\nreserved.set =\nreserved.toObject =\nreserved.validate =\n// hooks.js\nreserved._pres = reserved._posts = 1;\n\n/**\n * Document keys to print warnings for\n */\n\nvar warnings = {};\nwarnings.increment = '`increment` should not be used as a schema path name ' +\n  'unless you have disabled versioning.';\n\n/**\n * Gets/sets schema paths.\n *\n * Sets a path (if arity 2)\n * Gets a path (if arity 1)\n *\n * ####Example\n *\n *     schema.path('name') // returns a SchemaType\n *     schema.path('name', Number) // changes the schemaType of `name` to Number\n *\n * @param {String} path\n * @param {Object} constructor\n * @api public\n */\n\nSchema.prototype.path = function(path, obj) {\n  if (obj == undefined) {\n    if (this.paths[path]) return this.paths[path];\n    if (this.subpaths[path]) return this.subpaths[path];\n\n    // subpaths?\n    return /\\.\\d+\\.?.*$/.test(path)\n      ? getPositionalPath(this, path)\n      : undefined;\n  }\n\n  // some path names conflict with document methods\n  if (reserved[path]) {\n    throw new Error(\"`\" + path + \"` may not be used as a schema pathname\");\n  }\n\n  if (warnings[path]) {\n    console.log('WARN: ' + warnings[path]);\n  }\n\n  // update the tree\n  var subpaths = path.split(/\\./),\n      last = subpaths.pop(),\n      branch = this.tree;\n\n  subpaths.forEach(function(sub, i) {\n    if (!branch[sub]) branch[sub] = {};\n    if ('object' != typeof branch[sub]) {\n      var msg = 'Cannot set nested path `' + path + '`. '\n              + 'Parent path `'\n              + subpaths.slice(0, i).concat([sub]).join('.')\n              + '` already set to type ' + branch[sub].name\n              + '.';\n      throw new Error(msg);\n    }\n    branch = branch[sub];\n  });\n\n  branch[last] = utils.clone(obj);\n\n  this.paths[path] = Schema.interpretAsType(path, obj, this.options);\n  return this;\n};\n\n/**\n * Converts type arguments into Mongoose Types.\n *\n * @param {String} path\n * @param {Object} obj constructor\n * @api private\n */\n\nSchema.interpretAsType = function(path, obj, options) {\n  if (obj.constructor) {\n    var constructorName = utils.getFunctionName(obj.constructor);\n    if (constructorName != 'Object') {\n      var oldObj = obj;\n      obj = {};\n      obj[options.typeKey] = oldObj;\n    }\n  }\n\n  // Get the type making sure to allow keys named \"type\"\n  // and default to mixed if not specified.\n  // { type: { type: String, default: 'freshcut' } }\n  var type = obj[options.typeKey] && (options.typeKey !== 'type' || !obj.type.type)\n    ? obj[options.typeKey]\n    : {};\n\n  if ('Object' == utils.getFunctionName(type.constructor) || 'mixed' == type) {\n    return new MongooseTypes.Mixed(path, obj);\n  }\n\n  if (Array.isArray(type) || Array == type || 'array' == type) {\n    // if it was specified through { type } look for `cast`\n    var cast = (Array == type || 'array' == type)\n      ? obj.cast\n      : type[0];\n\n    if (cast instanceof Schema) {\n      return new MongooseTypes.DocumentArray(path, cast, obj);\n    }\n\n    if ('string' == typeof cast) {\n      cast = MongooseTypes[cast.charAt(0).toUpperCase() + cast.substring(1)];\n    } else if (cast && (!cast[options.typeKey] || (options.typeKey === 'type' && cast.type.type))\n                    && 'Object' == utils.getFunctionName(cast.constructor)\n                    && Object.keys(cast).length) {\n\n      // The `minimize` and `typeKey` options propagate to child schemas\n      // declared inline, like `{ arr: [{ val: { $type: String } }] }`.\n      // See gh-3560\n      var childSchemaOptions = { minimize: options.minimize };\n      if (options.typeKey) {\n        childSchemaOptions.typeKey = options.typeKey;\n      }\n      var childSchema = new Schema(cast, childSchemaOptions);\n      return new MongooseTypes.DocumentArray(path, childSchema, obj);\n    }\n\n    return new MongooseTypes.Array(path, cast || MongooseTypes.Mixed, obj);\n  }\n\n  if (type instanceof Schema) {\n    return new MongooseTypes.Embedded(type, path, obj);\n  }\n\n  var name;\n  if (Buffer.isBuffer(type)) {\n    name = 'Buffer';\n  } else {\n    name = 'string' == typeof type\n      ? type\n      // If not string, `type` is a function. Outside of IE, function.name\n      // gives you the function name. In IE, you need to compute it\n      : type.schemaName || utils.getFunctionName(type);\n  }\n\n  if (name) {\n    name = name.charAt(0).toUpperCase() + name.substring(1);\n  }\n\n  if (undefined == MongooseTypes[name]) {\n    throw new TypeError('Undefined type `' + name + '` at `' + path +\n        '`\\n  Did you try nesting Schemas? ' +\n        'You can only nest using refs or arrays.');\n  }\n\n  return new MongooseTypes[name](path, obj);\n};\n\n/**\n * Iterates the schemas paths similar to Array#forEach.\n *\n * The callback is passed the pathname and schemaType as arguments on each iteration.\n *\n * @param {Function} fn callback function\n * @return {Schema} this\n * @api public\n */\n\nSchema.prototype.eachPath = function(fn) {\n  var keys = Object.keys(this.paths),\n      len = keys.length;\n\n  for (var i = 0; i < len; ++i) {\n    fn(keys[i], this.paths[keys[i]]);\n  }\n\n  return this;\n};\n\n/**\n * Returns an Array of path strings that are required by this schema.\n *\n * @api public\n * @param {Boolean} invalidate refresh the cache\n * @return {Array}\n */\n\nSchema.prototype.requiredPaths = function requiredPaths(invalidate) {\n  if (this._requiredpaths && !invalidate) return this._requiredpaths;\n\n  var paths = Object.keys(this.paths),\n      i = paths.length,\n      ret = [];\n\n  while (i--) {\n    var path = paths[i];\n    if (this.paths[path].isRequired) ret.push(path);\n  }\n\n  return this._requiredpaths = ret;\n};\n\n/**\n * Returns indexes from fields and schema-level indexes (cached).\n *\n * @api private\n * @return {Array}\n */\n\nSchema.prototype.indexedPaths = function indexedPaths() {\n  if (this._indexedpaths) return this._indexedpaths;\n\n  return this._indexedpaths = this.indexes();\n};\n\n/**\n * Returns the pathType of `path` for this schema.\n *\n * Given a path, returns whether it is a real, virtual, nested, or ad-hoc/undefined path.\n *\n * @param {String} path\n * @return {String}\n * @api public\n */\n\nSchema.prototype.pathType = function(path) {\n  if (path in this.paths) return 'real';\n  if (path in this.virtuals) return 'virtual';\n  if (path in this.nested) return 'nested';\n  if (path in this.subpaths) return 'real';\n\n  if (/\\.\\d+\\.|\\.\\d+$/.test(path)) {\n    return getPositionalPathType(this, path);\n  } else {\n    return 'adhocOrUndefined';\n  }\n};\n\n/**\n * Returns true iff this path is a child of a mixed schema.\n *\n * @param {String} path\n * @return {Boolean}\n * @api private\n */\n\nSchema.prototype.hasMixedParent = function(path) {\n  var subpaths = path.split(/\\./g);\n  path = '';\n  for (var i = 0; i < subpaths.length; ++i) {\n    path = i > 0 ? path + '.' + subpaths[i] : subpaths[i];\n    if (path in this.paths &&\n        this.paths[path] instanceof MongooseTypes.Mixed) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n/*!\n * ignore\n */\n\nfunction getPositionalPathType(self, path) {\n  var subpaths = path.split(/\\.(\\d+)\\.|\\.(\\d+)$/).filter(Boolean);\n  if (subpaths.length < 2) {\n    return self.paths[subpaths[0]];\n  }\n\n  var val = self.path(subpaths[0]);\n  var isNested = false;\n  if (!val) return val;\n\n  var last = subpaths.length - 1,\n      subpath,\n      i = 1;\n\n  for (; i < subpaths.length; ++i) {\n    isNested = false;\n    subpath = subpaths[i];\n\n    if (i === last && val && !val.schema && !/\\D/.test(subpath)) {\n      if (val instanceof MongooseTypes.Array) {\n        // StringSchema, NumberSchema, etc\n        val = val.caster;\n      } else {\n        val = undefined;\n      }\n      break;\n    }\n\n    // ignore if its just a position segment: path.0.subpath\n    if (!/\\D/.test(subpath)) continue;\n\n    if (!(val && val.schema)) {\n      val = undefined;\n      break;\n    }\n\n    var type = val.schema.pathType(subpath);\n    isNested = (type === 'nested');\n    val = val.schema.path(subpath);\n  }\n\n  self.subpaths[path] = val;\n  if (val) {\n    return 'real';\n  }\n  if (isNested) {\n    return 'nested';\n  }\n  return 'adhocOrUndefined';\n}\n\n\n/*!\n * ignore\n */\n\nfunction getPositionalPath(self, path) {\n  getPositionalPathType(self, path);\n  return self.subpaths[path];\n}\n\n/**\n * Adds a method call to the queue.\n *\n * @param {String} name name of the document method to call later\n * @param {Array} args arguments to pass to the method\n * @api public\n */\n\nSchema.prototype.queue = function(name, args) {\n  this.callQueue.push([name, args]);\n  return this;\n};\n\n/**\n * Defines a pre hook for the document.\n *\n * ####Example\n *\n *     var toySchema = new Schema(..);\n *\n *     toySchema.pre('save', function (next) {\n *       if (!this.created) this.created = new Date;\n *       next();\n *     })\n *\n *     toySchema.pre('validate', function (next) {\n *       if (this.name != 'Woody') this.name = 'Woody';\n *       next();\n *     })\n *\n * @param {String} method\n * @param {Function} callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.pre = function() {\n  var name = arguments[0];\n  if (IS_QUERY_HOOK[name]) {\n    this.s.hooks.pre.apply(this.s.hooks, arguments);\n    return this;\n  }\n  return this.queue('pre', arguments);\n};\n\n/**\n * Defines a post hook for the document\n *\n * Post hooks fire `on` the event emitted from document instances of Models compiled from this schema.\n *\n *     var schema = new Schema(..);\n *     schema.post('save', function (doc) {\n *       console.log('this fired after a document was saved');\n *     });\n *\n *     var Model = mongoose.model('Model', schema);\n *\n *     var m = new Model(..);\n *     m.save(function (err) {\n *       console.log('this fires after the `post` hook');\n *     });\n *\n * @param {String} method name of the method to hook\n * @param {Function} fn callback\n * @see hooks.js https://github.com/bnoguchi/hooks-js/tree/31ec571cef0332e21121ee7157e0cf9728572cc3\n * @api public\n */\n\nSchema.prototype.post = function(method, fn) {\n  if (IS_QUERY_HOOK[method]) {\n    this.s.hooks.post.apply(this.s.hooks, arguments);\n    return this;\n  }\n  // assuming that all callbacks with arity < 2 are synchronous post hooks\n  if (fn.length < 2) {\n    return this.queue('on', [arguments[0], function(doc) {\n      return fn.call(doc, doc);\n    }]);\n  }\n\n  return this.queue('post', [arguments[0], function(next) {\n    // wrap original function so that the callback goes last,\n    // for compatibility with old code that is using synchronous post hooks\n    var self = this;\n    var args = Array.prototype.slice.call(arguments, 1);\n    fn.call(this, this, function(err) {\n      return next.apply(self, [err].concat(args));\n    });\n  }]);\n};\n\n/**\n * Registers a plugin for this schema.\n *\n * @param {Function} plugin callback\n * @param {Object} [opts]\n * @see plugins\n * @api public\n */\n\nSchema.prototype.plugin = function(fn, opts) {\n  fn(this, opts);\n  return this;\n};\n\n/**\n * Adds an instance method to documents constructed from Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = kittySchema = new Schema(..);\n *\n *     schema.method('meow', function () {\n *       console.log('meeeeeoooooooooooow');\n *     })\n *\n *     var Kitty = mongoose.model('Kitty', schema);\n *\n *     var fizz = new Kitty;\n *     fizz.meow(); // meeeeeooooooooooooow\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as methods.\n *\n *     schema.method({\n *         purr: function () {}\n *       , scratch: function () {}\n *     });\n *\n *     // later\n *     fizz.purr();\n *     fizz.scratch();\n *\n * @param {String|Object} method name\n * @param {Function} [fn]\n * @api public\n */\n\nSchema.prototype.method = function(name, fn) {\n  if ('string' != typeof name)\n    for (var i in name)\n      this.methods[i] = name[i];\n  else\n    this.methods[name] = fn;\n  return this;\n};\n\n/**\n * Adds static \"class\" methods to Models compiled from this schema.\n *\n * ####Example\n *\n *     var schema = new Schema(..);\n *     schema.static('findByName', function (name, callback) {\n *       return this.find({ name: name }, callback);\n *     });\n *\n *     var Drink = mongoose.model('Drink', schema);\n *     Drink.findByName('sanpellegrino', function (err, drinks) {\n *       //\n *     });\n *\n * If a hash of name/fn pairs is passed as the only argument, each name/fn pair will be added as statics.\n *\n * @param {String} name\n * @param {Function} fn\n * @api public\n */\n\nSchema.prototype.static = function(name, fn) {\n  if ('string' != typeof name)\n    for (var i in name)\n      this.statics[i] = name[i];\n  else\n    this.statics[name] = fn;\n  return this;\n};\n\n/**\n * Defines an index (most likely compound) for this schema.\n *\n * ####Example\n *\n *     schema.index({ first: 1, last: -1 })\n *\n * @param {Object} fields\n * @param {Object} [options] Options to pass to [MongoDB driver's `createIndex()` function](http://mongodb.github.io/node-mongodb-native/2.0/api/Collection.html#createIndex)\n * @param {String} [options.expires=null] Mongoose-specific syntactic sugar, uses [ms](https://www.npmjs.com/package/ms) to convert `expires` option into seconds for the `expireAfterSeconds` in the above link.\n * @api public\n */\n\nSchema.prototype.index = function(fields, options) {\n  options || (options = {});\n\n  if (options.expires)\n    utils.expires(options);\n\n  this._indexes.push([fields, options]);\n  return this;\n};\n\n/**\n * Sets/gets a schema option.\n *\n * ####Example\n *\n *     schema.set('strict'); // 'true' by default\n *     schema.set('strict', false); // Sets 'strict' to false\n *     schema.set('strict'); // 'false'\n *\n * @param {String} key option name\n * @param {Object} [value] if not passed, the current option value is returned\n * @see Schema ./\n * @api public\n */\n\nSchema.prototype.set = function(key, value, _tags) {\n  if (1 === arguments.length) {\n    return this.options[key];\n  }\n\n  switch (key) {\n    case 'read':\n      this.options[key] = readPref(value, _tags);\n      break;\n    case 'safe':\n      this.options[key] = false === value\n        ? { w: 0 }\n        : value;\n      break;\n    default:\n      this.options[key] = value;\n  }\n\n  return this;\n};\n\n/**\n * Gets a schema option.\n *\n * @param {String} key option name\n * @api public\n */\n\nSchema.prototype.get = function(key) {\n  return this.options[key];\n};\n\n/**\n * The allowed index types\n *\n * @static indexTypes\n * @receiver Schema\n * @api public\n */\n\nvar indexTypes = '2d 2dsphere hashed text'.split(' ');\n\nObject.defineProperty(Schema, 'indexTypes', {\n  get: function() { return indexTypes; },\n  set: function() { throw new Error('Cannot overwrite Schema.indexTypes'); }\n});\n\n/**\n * Compiles indexes from fields and schema-level indexes\n *\n * @api public\n */\n\nSchema.prototype.indexes = function() {\n  'use strict';\n\n  var indexes = [];\n  var seenPrefix = {};\n\n  var collectIndexes = function(schema, prefix) {\n    if (seenPrefix[prefix]) {\n      return;\n    }\n    seenPrefix[prefix] = true;\n\n    prefix = prefix || '';\n    var key, path, index, field, isObject, options, type;\n    var keys = Object.keys(schema.paths);\n\n    for (var i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      path = schema.paths[key];\n\n      if (path instanceof MongooseTypes.DocumentArray) {\n        collectIndexes(path.schema, key + '.');\n      } else if (path.$isSingleNested) {\n        collectIndexes(path.schema, key + '.');\n      } else {\n        index = path._index;\n\n        if (false !== index && null != index) {\n          field = {};\n          isObject = utils.isObject(index);\n          options = isObject ? index : {};\n          type = 'string' == typeof index ? index :\n            isObject ? index.type :\n            false;\n\n          if (type && ~Schema.indexTypes.indexOf(type)) {\n            field[prefix + key] = type;\n          } else {\n            field[prefix + key] = 1;\n          }\n\n          delete options.type;\n          if (!('background' in options)) {\n            options.background = true;\n          }\n\n          indexes.push([field, options]);\n        }\n      }\n    }\n\n    if (prefix) {\n      fixSubIndexPaths(schema, prefix);\n    } else {\n      schema._indexes.forEach(function(index) {\n        if (!('background' in index[1])) index[1].background = true;\n      });\n      indexes = indexes.concat(schema._indexes);\n    }\n\n  };\n\n  collectIndexes(this);\n  return indexes;\n\n  /*!\n   * Checks for indexes added to subdocs using Schema.index().\n   * These indexes need their paths prefixed properly.\n   *\n   * schema._indexes = [ [indexObj, options], [indexObj, options] ..]\n   */\n\n  function fixSubIndexPaths(schema, prefix) {\n    var subindexes = schema._indexes,\n        len = subindexes.length,\n        indexObj,\n        newindex,\n        klen,\n        keys,\n        key,\n        i = 0,\n        j;\n\n    for (i = 0; i < len; ++i) {\n      indexObj = subindexes[i][0];\n      keys = Object.keys(indexObj);\n      klen = keys.length;\n      newindex = {};\n\n      // use forward iteration, order matters\n      for (j = 0; j < klen; ++j) {\n        key = keys[j];\n        newindex[prefix + key] = indexObj[key];\n      }\n\n      indexes.push([newindex, subindexes[i][1]]);\n    }\n  }\n};\n\n/**\n * Creates a virtual type with the given name.\n *\n * @param {String} name\n * @param {Object} [options]\n * @return {VirtualType}\n */\n\nSchema.prototype.virtual = function(name, options) {\n  var virtuals = this.virtuals;\n  var parts = name.split('.');\n  return virtuals[name] = parts.reduce(function(mem, part, i) {\n    mem[part] || (mem[part] = (i === parts.length - 1)\n                            ? new VirtualType(options, name)\n                            : {});\n    return mem[part];\n  }, this.tree);\n};\n\n/**\n * Returns the virtual type with the given `name`.\n *\n * @param {String} name\n * @return {VirtualType}\n */\n\nSchema.prototype.virtualpath = function(name) {\n  return this.virtuals[name];\n};\n\n/**\n * Removes the given `path` (or [`paths`]).\n *\n * @param {String|Array} path\n *\n * @api public\n */\nSchema.prototype.remove = function(path) {\n  if (typeof path === 'string') {\n    path = [path];\n  }\n  if (Array.isArray(path)) {\n    path.forEach(function(name) {\n      if (this.path(name)) {\n        delete this.paths[name];\n      }\n    }, this);\n  }\n};\n\n/*!\n * ignore\n */\n\nSchema.prototype._getSchema = function(path) {\n  var schema = this;\n  var pathschema = schema.path(path);\n\n  if (pathschema) {\n    return pathschema;\n  }\n\n  // look for arrays\n  return (function search(parts, schema) {\n    var p = parts.length + 1,\n        foundschema,\n        trypath;\n\n    while (p--) {\n      trypath = parts.slice(0, p).join('.');\n      foundschema = schema.path(trypath);\n      if (foundschema) {\n        if (foundschema.caster) {\n          // array of Mixed?\n          if (foundschema.caster instanceof MongooseTypes.Mixed) {\n            return foundschema.caster;\n          }\n\n          // Now that we found the array, we need to check if there\n          // are remaining document paths to look up for casting.\n          // Also we need to handle array.$.path since schema.path\n          // doesn't work for that.\n          // If there is no foundschema.schema we are dealing with\n          // a path like array.$\n          if (p !== parts.length && foundschema.schema) {\n            if ('$' === parts[p]) {\n              // comments.$.comments.$.title\n              return search(parts.slice(p + 1), foundschema.schema);\n            } else {\n              // this is the last path of the selector\n              return search(parts.slice(p), foundschema.schema);\n            }\n          }\n        }\n        return foundschema;\n      }\n    }\n  })(path.split('.'), schema);\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = exports = Schema;\n\n// require down here because of reference issues\n\n/**\n * The various built-in Mongoose Schema Types.\n *\n * ####Example:\n *\n *     var mongoose = require('mongoose');\n *     var ObjectId = mongoose.Schema.Types.ObjectId;\n *\n * ####Types:\n *\n * - [String](#schema-string-js)\n * - [Number](#schema-number-js)\n * - [Boolean](#schema-boolean-js) | Bool\n * - [Array](#schema-array-js)\n * - [Buffer](#schema-buffer-js)\n * - [Date](#schema-date-js)\n * - [ObjectId](#schema-objectid-js) | Oid\n * - [Mixed](#schema-mixed-js)\n *\n * Using this exposed access to the `Mixed` SchemaType, we can use them in our schema.\n *\n *     var Mixed = mongoose.Schema.Types.Mixed;\n *     new mongoose.Schema({ _user: Mixed })\n *\n * @api public\n */\n\nSchema.Types = MongooseTypes = require('./schema/index');\n\n/*!\n * ignore\n */\n\nexports.ObjectId = MongooseTypes.ObjectId;\n"};
jalangiLabel2633:
    while (true) {
        try {
            J$.Se(19377, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema.js');
            function Schema(obj, options) {
                jalangiLabel2585:
                    while (true) {
                        try {
                            J$.Fe(2889, arguments.callee, this, arguments);
                            arguments = J$.N(2897, 'arguments', arguments, 4);
                            obj = J$.N(2905, 'obj', obj, 4);
                            options = J$.N(2913, 'options', options, 4);
                            J$.N(2921, '_idSubDoc', _idSubDoc, 0);
                            J$.N(2929, 'auto_id', auto_id, 0);
                            J$.N(2937, 'autoid', autoid, 0);
                            J$.N(2945, 'i', i, 0);
                            J$.N(2953, 'm', m, 0);
                            J$.N(2961, 'timestamps', timestamps, 0);
                            J$.N(2969, 'createdAt', createdAt, 0);
                            J$.N(2977, 'updatedAt', updatedAt, 0);
                            J$.N(2985, 'schemaAdditions', schemaAdditions, 0);
                            J$.N(2993, 'genUpdates', genUpdates, 0);
                            if (J$.X1(19561, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(449, 'this', this, 0), J$.R(457, 'Schema', Schema, 1), 0)))))
                                return J$.X1(505, J$.Rt(497, J$.F(489, J$.R(465, 'Schema', Schema, 1), 1)(J$.R(473, 'obj', obj, 0), J$.R(481, 'options', options, 0))));
                            J$.X1(537, J$.P(529, J$.R(513, 'this', this, 0), 'paths', J$.T(521, {}, 11, false), 0));
                            J$.X1(569, J$.P(561, J$.R(545, 'this', this, 0), 'subpaths', J$.T(553, {}, 11, false), 0));
                            J$.X1(601, J$.P(593, J$.R(577, 'this', this, 0), 'virtuals', J$.T(585, {}, 11, false), 0));
                            J$.X1(633, J$.P(625, J$.R(609, 'this', this, 0), 'nested', J$.T(617, {}, 11, false), 0));
                            J$.X1(665, J$.P(657, J$.R(641, 'this', this, 0), 'inherits', J$.T(649, {}, 11, false), 0));
                            J$.X1(697, J$.P(689, J$.R(673, 'this', this, 0), 'callQueue', J$.T(681, [], 10, false), 0));
                            J$.X1(729, J$.P(721, J$.R(705, 'this', this, 0), '_indexes', J$.T(713, [], 10, false), 0));
                            J$.X1(761, J$.P(753, J$.R(737, 'this', this, 0), 'methods', J$.T(745, {}, 11, false), 0));
                            J$.X1(793, J$.P(785, J$.R(769, 'this', this, 0), 'statics', J$.T(777, {}, 11, false), 0));
                            J$.X1(825, J$.P(817, J$.R(801, 'this', this, 0), 'tree', J$.T(809, {}, 11, false), 0));
                            J$.X1(857, J$.P(849, J$.R(833, 'this', this, 0), '_requiredpaths', J$.T(841, undefined, 24, false), 0));
                            J$.X1(889, J$.P(881, J$.R(865, 'this', this, 0), 'discriminatorMapping', J$.T(873, undefined, 24, false), 0));
                            J$.X1(921, J$.P(913, J$.R(897, 'this', this, 0), '_indexedpaths', J$.T(905, undefined, 24, false), 0));
                            J$.X1(977, J$.P(969, J$.R(929, 'this', this, 0), 's', J$.T(961, {
                                hooks: J$.F(945, J$.R(937, 'Kareem', Kareem, 1), 1)(),
                                queryHooks: J$.R(953, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 1)
                            }, 11, false), 0));
                            J$.X1(1025, J$.P(1017, J$.R(985, 'this', this, 0), 'options', J$.M(1009, J$.R(993, 'this', this, 0), 'defaultOptions', 0)(J$.R(1001, 'options', options, 0)), 0));
                            if (J$.X1(19569, J$.C(16, J$.R(1033, 'obj', obj, 0)))) {
                                J$.X1(1065, J$.M(1057, J$.R(1041, 'this', this, 0), 'add', 0)(J$.R(1049, 'obj', obj, 0)));
                            }
                            var _idSubDoc = J$.X1(1137, J$.W(1129, '_idSubDoc', J$.C(32, J$.C(24, J$.R(1073, 'obj', obj, 0)) ? J$.G(1089, J$.R(1081, 'obj', obj, 0), '_id', 0) : J$._()) ? J$.M(1121, J$.R(1097, 'utils', utils, 1), 'isObject', 0)(J$.G(1113, J$.R(1105, 'obj', obj, 0), '_id', 0)) : J$._(), _idSubDoc, 1));
                            var auto_id = J$.X1(1241, J$.W(1233, 'auto_id', J$.C(56, J$.C(48, J$.U(26, '!', J$.G(1169, J$.G(1153, J$.R(1145, 'this', this, 0), 'paths', 0), J$.T(1161, '_id', 21, false), 4))) ? J$.C(40, J$.U(34, '!', J$.G(1193, J$.G(1185, J$.R(1177, 'this', this, 0), 'options', 0), 'noId', 0))) ? J$.G(1217, J$.G(1209, J$.R(1201, 'this', this, 0), 'options', 0), '_id', 0) : J$._() : J$._()) ? J$.U(42, '!', J$.R(1225, '_idSubDoc', _idSubDoc, 0)) : J$._(), auto_id, 1));
                            if (J$.X1(19577, J$.C(64, J$.R(1249, 'auto_id', auto_id, 0)))) {
                                J$.X1(1289, obj = J$.W(1281, 'obj', J$.T(1273, {
                                    _id: J$.T(1265, {
                                        auto: J$.T(1257, true, 23, false)
                                    }, 11, false)
                                }, 11, false), obj, 0));
                                J$.X1(1361, J$.P(1353, J$.G(1305, J$.R(1297, 'obj', obj, 0), '_id', 0), J$.G(1329, J$.G(1321, J$.R(1313, 'this', this, 0), 'options', 0), 'typeKey', 0), J$.G(1345, J$.R(1337, 'Schema', Schema, 1), 'ObjectId', 0), 2));
                                J$.X1(1393, J$.M(1385, J$.R(1369, 'this', this, 0), 'add', 0)(J$.R(1377, 'obj', obj, 0)));
                            }
                            var autoid = J$.X1(1489, J$.W(1481, 'autoid', J$.C(80, J$.U(50, '!', J$.G(1425, J$.G(1409, J$.R(1401, 'this', this, 0), 'paths', 0), J$.T(1417, 'id', 21, false), 4))) ? J$.C(72, J$.U(58, '!', J$.G(1449, J$.G(1441, J$.R(1433, 'this', this, 0), 'options', 0), 'noVirtualId', 0))) ? J$.G(1473, J$.G(1465, J$.R(1457, 'this', this, 0), 'options', 0), 'id', 0) : J$._() : J$._(), autoid, 1));
                            if (J$.X1(19585, J$.C(88, J$.R(1497, 'autoid', autoid, 0)))) {
                                J$.X1(1545, J$.M(1537, J$.M(1521, J$.R(1505, 'this', this, 0), 'virtual', 0)(J$.T(1513, 'id', 21, false)), 'get', 0)(J$.R(1529, 'idGetter', idGetter, 1)));
                            }
                            for (var i = J$.X1(1569, J$.W(1561, 'i', J$.T(1553, 0, 22, false), i, 1)); J$.X1(19593, J$.C(96, J$.B(66, '<', J$.R(1577, 'i', i, 0), J$.G(1601, J$.G(1593, J$.R(1585, 'this', this, 0), '_defaultMiddleware', 0), 'length', 0), 0))); J$.X1(19601, i = J$.W(1625, 'i', J$.B(82, '+', J$.U(74, '+', J$.R(1617, 'i', i, 0)), J$.T(1609, 1, 22, false), 0), i, 0))) {
                                var m = J$.X1(1673, J$.W(1665, 'm', J$.G(1657, J$.G(1641, J$.R(1633, 'this', this, 0), '_defaultMiddleware', 0), J$.R(1649, 'i', i, 0), 4), m, 1));
                                J$.X1(1761, J$.M(1753, J$.R(1681, 'this', this, 0), J$.G(1697, J$.R(1689, 'm', m, 0), 'kind', 0), 1)(J$.G(1713, J$.R(1705, 'm', m, 0), 'hook', 0), J$.U(98, '!', J$.U(90, '!', J$.G(1729, J$.R(1721, 'm', m, 0), 'isAsync', 0))), J$.G(1745, J$.R(1737, 'm', m, 0), 'fn', 0)));
                            }
                            var timestamps = J$.X1(1801, J$.W(1793, 'timestamps', J$.G(1785, J$.G(1777, J$.R(1769, 'this', this, 0), 'options', 0), 'timestamps', 0), timestamps, 1));
                            if (J$.X1(19705, J$.C(152, J$.R(1809, 'timestamps', timestamps, 0)))) {
                                var createdAt = J$.X1(1881, J$.W(1873, 'createdAt', J$.C(104, J$.G(1825, J$.R(1817, 'timestamps', timestamps, 0), 'createdAt', 0)) ? J$._() : J$.T(1833, 'createdAt', 21, false), createdAt, 1)), updatedAt = J$.X1(1897, J$.W(1889, 'updatedAt', J$.C(112, J$.G(1849, J$.R(1841, 'timestamps', timestamps, 0), 'updatedAt', 0)) ? J$._() : J$.T(1857, 'updatedAt', 21, false), updatedAt, 1)), schemaAdditions = J$.X1(1913, J$.W(1905, 'schemaAdditions', J$.T(1865, {}, 11, false), schemaAdditions, 1));
                                J$.X1(1953, J$.P(1945, J$.R(1921, 'schemaAdditions', schemaAdditions, 0), J$.R(1929, 'updatedAt', updatedAt, 0), J$.R(1937, 'Date', Date, 2), 2));
                                if (J$.X1(19609, J$.C(120, J$.U(106, '!', J$.G(1985, J$.G(1969, J$.R(1961, 'this', this, 0), 'paths', 0), J$.R(1977, 'createdAt', createdAt, 0), 4))))) {
                                    J$.X1(2025, J$.P(2017, J$.R(1993, 'schemaAdditions', schemaAdditions, 0), J$.R(2001, 'createdAt', createdAt, 0), J$.R(2009, 'Date', Date, 2), 2));
                                }
                                J$.X1(2057, J$.M(2049, J$.R(2033, 'this', this, 0), 'add', 0)(J$.R(2041, 'schemaAdditions', schemaAdditions, 0)));
                                J$.X1(2361, J$.M(2353, J$.R(2065, 'this', this, 0), 'pre', 0)(J$.T(2073, 'save', 21, false), J$.T(2345, function (next) {
                                    jalangiLabel2581:
                                        while (true) {
                                            try {
                                                J$.Fe(2313, arguments.callee, this, arguments);
                                                arguments = J$.N(2321, 'arguments', arguments, 4);
                                                next = J$.N(2329, 'next', next, 4);
                                                J$.N(2337, 'defaultTimestamp', defaultTimestamp, 0);
                                                var defaultTimestamp = J$.X1(2105, J$.W(2097, 'defaultTimestamp', J$.F(2089, J$.R(2081, 'Date', Date, 2), 1)(), defaultTimestamp, 1));
                                                if (J$.X1(19625, J$.C(136, J$.U(114, '!', J$.G(2129, J$.R(2113, 'this', this, 0), J$.R(2121, 'createdAt', createdAt, 0), 4))))) {
                                                    J$.X1(2201, J$.P(2193, J$.R(2137, 'this', this, 0), J$.R(2145, 'createdAt', createdAt, 0), J$.X1(19617, J$.C(128, J$.R(2153, 'auto_id', auto_id, 0))) ? J$.M(2177, J$.G(2169, J$.R(2161, 'this', this, 0), '_id', 0), 'getTimestamp', 0)() : J$.R(2185, 'defaultTimestamp', defaultTimestamp, 0), 2));
                                                }
                                                J$.X1(2281, J$.P(2273, J$.R(2209, 'this', this, 0), J$.R(2217, 'updatedAt', updatedAt, 0), J$.X1(19633, J$.C(144, J$.G(2233, J$.R(2225, 'this', this, 0), 'isNew', 0))) ? J$.G(2257, J$.R(2241, 'this', this, 0), J$.R(2249, 'createdAt', createdAt, 0), 4) : J$.R(2265, 'defaultTimestamp', defaultTimestamp, 0), 2));
                                                J$.X1(2305, J$.F(2297, J$.R(2289, 'next', next, 0), 0)());
                                            } catch (J$e) {
                                                J$.Ex(19641, J$e);
                                            } finally {
                                                if (J$.Fr(19649))
                                                    continue jalangiLabel2581;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2313)));
                                var genUpdates = J$.X1(2609, J$.W(2601, 'genUpdates', J$.T(2593, function () {
                                    jalangiLabel2582:
                                        while (true) {
                                            try {
                                                J$.Fe(2561, arguments.callee, this, arguments);
                                                arguments = J$.N(2569, 'arguments', arguments, 4);
                                                J$.N(2577, 'now', now, 0);
                                                J$.N(2585, 'updates', updates, 0);
                                                var now = J$.X1(2393, J$.W(2385, 'now', J$.F(2377, J$.R(2369, 'Date', Date, 2), 1)(), now, 1));
                                                var updates = J$.X1(2433, J$.W(2425, 'updates', J$.T(2417, {
                                                    $set: J$.T(2401, {}, 11, false),
                                                    $setOnInsert: J$.T(2409, {}, 11, false)
                                                }, 11, false), updates, 1));
                                                J$.X1(2481, J$.P(2473, J$.G(2449, J$.R(2441, 'updates', updates, 0), '$set', 0), J$.R(2457, 'updatedAt', updatedAt, 0), J$.R(2465, 'now', now, 0), 2));
                                                J$.X1(2529, J$.P(2521, J$.G(2497, J$.R(2489, 'updates', updates, 0), '$setOnInsert', 0), J$.R(2505, 'createdAt', createdAt, 0), J$.R(2513, 'now', now, 0), 2));
                                                return J$.X1(2553, J$.Rt(2545, J$.R(2537, 'updates', updates, 0)));
                                            } catch (J$e) {
                                                J$.Ex(19657, J$e);
                                            } finally {
                                                if (J$.Fr(19665))
                                                    continue jalangiLabel2582;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2561), genUpdates, 1));
                                J$.X1(2745, J$.M(2737, J$.R(2617, 'this', this, 0), 'pre', 0)(J$.T(2625, 'findOneAndUpdate', 21, false), J$.T(2729, function (next) {
                                    jalangiLabel2583:
                                        while (true) {
                                            try {
                                                J$.Fe(2705, arguments.callee, this, arguments);
                                                arguments = J$.N(2713, 'arguments', arguments, 4);
                                                next = J$.N(2721, 'next', next, 4);
                                                J$.X1(2673, J$.M(2665, J$.R(2633, 'this', this, 0), 'findOneAndUpdate', 0)(J$.T(2641, {}, 11, false), J$.F(2657, J$.R(2649, 'genUpdates', genUpdates, 0), 0)()));
                                                J$.X1(2697, J$.F(2689, J$.R(2681, 'next', next, 0), 0)());
                                            } catch (J$e) {
                                                J$.Ex(19673, J$e);
                                            } finally {
                                                if (J$.Fr(19681))
                                                    continue jalangiLabel2583;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2705)));
                                J$.X1(2881, J$.M(2873, J$.R(2753, 'this', this, 0), 'pre', 0)(J$.T(2761, 'update', 21, false), J$.T(2865, function (next) {
                                    jalangiLabel2584:
                                        while (true) {
                                            try {
                                                J$.Fe(2841, arguments.callee, this, arguments);
                                                arguments = J$.N(2849, 'arguments', arguments, 4);
                                                next = J$.N(2857, 'next', next, 4);
                                                J$.X1(2809, J$.M(2801, J$.R(2769, 'this', this, 0), 'update', 0)(J$.T(2777, {}, 11, false), J$.F(2793, J$.R(2785, 'genUpdates', genUpdates, 0), 0)()));
                                                J$.X1(2833, J$.F(2825, J$.R(2817, 'next', next, 0), 0)());
                                            } catch (J$e) {
                                                J$.Ex(19689, J$e);
                                            } finally {
                                                if (J$.Fr(19697))
                                                    continue jalangiLabel2584;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 2841)));
                            }
                        } catch (J$e) {
                            J$.Ex(19713, J$e);
                        } finally {
                            if (J$.Fr(19721))
                                continue jalangiLabel2585;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function idGetter() {
                jalangiLabel2586:
                    while (true) {
                        try {
                            J$.Fe(3169, arguments.callee, this, arguments);
                            arguments = J$.N(3177, 'arguments', arguments, 4);
                            if (J$.X1(19729, J$.C(160, J$.G(3017, J$.G(3009, J$.R(3001, 'this', this, 0), '$__', 0), '_id', 0)))) {
                                return J$.X1(3057, J$.Rt(3049, J$.G(3041, J$.G(3033, J$.R(3025, 'this', this, 0), '$__', 0), '_id', 0)));
                            }
                            return J$.X1(3161, J$.Rt(3153, J$.P(3145, J$.G(3073, J$.R(3065, 'this', this, 0), '$__', 0), '_id', J$.X1(19737, J$.C(168, J$.B(122, '==', J$.T(3081, null, 25, false), J$.G(3097, J$.R(3089, 'this', this, 0), '_id', 0), 0))) ? J$.T(3105, null, 25, false) : J$.F(3137, J$.R(3113, 'String', String, 2), 0)(J$.G(3129, J$.R(3121, 'this', this, 0), '_id', 0)), 0)));
                        } catch (J$e) {
                            J$.Ex(19745, J$e);
                        } finally {
                            if (J$.Fr(19753))
                                continue jalangiLabel2586;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getPositionalPathType(self, path) {
                jalangiLabel2606:
                    while (true) {
                        try {
                            J$.Fe(12449, arguments.callee, this, arguments);
                            arguments = J$.N(12457, 'arguments', arguments, 4);
                            self = J$.N(12465, 'self', self, 4);
                            path = J$.N(12473, 'path', path, 4);
                            J$.N(12481, 'subpaths', subpaths, 0);
                            J$.N(12489, 'val', val, 0);
                            J$.N(12497, 'isNested', isNested, 0);
                            J$.N(12505, 'last', last, 0);
                            J$.N(12513, 'subpath', subpath, 0);
                            J$.N(12521, 'i', i, 0);
                            J$.N(12529, 'type', type, 0);
                            var subpaths = J$.X1(11585, J$.W(11577, 'subpaths', J$.M(11569, J$.M(11553, J$.R(11537, 'path', path, 0), 'split', 0)(J$.T(11545, /\.(\d+)\.|\.(\d+)$/, 14, false)), 'filter', 0)(J$.R(11561, 'Boolean', Boolean, 2)), subpaths, 1));
                            if (J$.X1(20505, J$.C(816, J$.B(874, '<', J$.G(11601, J$.R(11593, 'subpaths', subpaths, 0), 'length', 0), J$.T(11609, 2, 22, false), 0)))) {
                                return J$.X1(11673, J$.Rt(11665, J$.G(11657, J$.G(11625, J$.R(11617, 'self', self, 0), 'paths', 0), J$.G(11649, J$.R(11633, 'subpaths', subpaths, 0), J$.T(11641, 0, 22, false), 4), 4)));
                            }
                            var val = J$.X1(11729, J$.W(11721, 'val', J$.M(11713, J$.R(11681, 'self', self, 0), 'path', 0)(J$.G(11705, J$.R(11689, 'subpaths', subpaths, 0), J$.T(11697, 0, 22, false), 4)), val, 1));
                            var isNested = J$.X1(11753, J$.W(11745, 'isNested', J$.T(11737, false, 23, false), isNested, 1));
                            if (J$.X1(20513, J$.C(824, J$.U(882, '!', J$.R(11761, 'val', val, 0)))))
                                return J$.X1(11785, J$.Rt(11777, J$.R(11769, 'val', val, 0)));
                            var last = J$.X1(11833, J$.W(11825, 'last', J$.B(890, '-', J$.G(11801, J$.R(11793, 'subpaths', subpaths, 0), 'length', 0), J$.T(11809, 1, 22, false), 0), last, 1)), subpath, i = J$.X1(11849, J$.W(11841, 'i', J$.T(11817, 1, 22, false), i, 1));
                            for (; J$.X1(20553, J$.C(896, J$.B(898, '<', J$.R(11857, 'i', i, 0), J$.G(11873, J$.R(11865, 'subpaths', subpaths, 0), 'length', 0), 0))); J$.X1(20561, i = J$.W(11897, 'i', J$.B(914, '+', J$.U(906, '+', J$.R(11889, 'i', i, 0)), J$.T(11881, 1, 22, false), 0), i, 0))) {
                                J$.X1(11921, isNested = J$.W(11913, 'isNested', J$.T(11905, false, 23, false), isNested, 0));
                                J$.X1(11961, subpath = J$.W(11953, 'subpath', J$.G(11945, J$.R(11929, 'subpaths', subpaths, 0), J$.R(11937, 'i', i, 0), 4), subpath, 0));
                                if (J$.X1(20529, J$.C(864, J$.C(848, J$.C(840, J$.C(832, J$.B(922, '===', J$.R(11969, 'i', i, 0), J$.R(11977, 'last', last, 0), 0)) ? J$.R(11985, 'val', val, 0) : J$._()) ? J$.U(930, '!', J$.G(12001, J$.R(11993, 'val', val, 0), 'schema', 0)) : J$._()) ? J$.U(938, '!', J$.M(12025, J$.T(12009, /\D/, 14, false), 'test', 0)(J$.R(12017, 'subpath', subpath, 0))) : J$._()))) {
                                    if (J$.X1(20521, J$.C(856, J$.B(946, 'instanceof', J$.R(12033, 'val', val, 0), J$.G(12049, J$.R(12041, 'MongooseTypes', MongooseTypes, 1), 'Array', 0), 0)))) {
                                        J$.X1(12081, val = J$.W(12073, 'val', J$.G(12065, J$.R(12057, 'val', val, 0), 'caster', 0), val, 0));
                                    } else {
                                        J$.X1(12105, val = J$.W(12097, 'val', J$.T(12089, undefined, 24, false), val, 0));
                                    }
                                    break;
                                }
                                if (J$.X1(20537, J$.C(872, J$.U(954, '!', J$.M(12129, J$.T(12113, /\D/, 14, false), 'test', 0)(J$.R(12121, 'subpath', subpath, 0))))))
                                    continue;
                                if (J$.X1(20545, J$.C(888, J$.U(962, '!', J$.C(880, J$.R(12137, 'val', val, 0)) ? J$.G(12153, J$.R(12145, 'val', val, 0), 'schema', 0) : J$._())))) {
                                    J$.X1(12177, val = J$.W(12169, 'val', J$.T(12161, undefined, 24, false), val, 0));
                                    break;
                                }
                                var type = J$.X1(12225, J$.W(12217, 'type', J$.M(12209, J$.G(12193, J$.R(12185, 'val', val, 0), 'schema', 0), 'pathType', 0)(J$.R(12201, 'subpath', subpath, 0)), type, 1));
                                J$.X1(12257, isNested = J$.W(12249, 'isNested', J$.B(970, '===', J$.R(12233, 'type', type, 0), J$.T(12241, 'nested', 21, false), 0), isNested, 0));
                                J$.X1(12305, val = J$.W(12297, 'val', J$.M(12289, J$.G(12273, J$.R(12265, 'val', val, 0), 'schema', 0), 'path', 0)(J$.R(12281, 'subpath', subpath, 0)), val, 0));
                            }
                            J$.X1(12353, J$.P(12345, J$.G(12321, J$.R(12313, 'self', self, 0), 'subpaths', 0), J$.R(12329, 'path', path, 0), J$.R(12337, 'val', val, 0), 2));
                            if (J$.X1(20569, J$.C(904, J$.R(12361, 'val', val, 0)))) {
                                return J$.X1(12385, J$.Rt(12377, J$.T(12369, 'real', 21, false)));
                            }
                            if (J$.X1(20577, J$.C(912, J$.R(12393, 'isNested', isNested, 0)))) {
                                return J$.X1(12417, J$.Rt(12409, J$.T(12401, 'nested', 21, false)));
                            }
                            return J$.X1(12441, J$.Rt(12433, J$.T(12425, 'adhocOrUndefined', 21, false)));
                        } catch (J$e) {
                            J$.Ex(20585, J$e);
                        } finally {
                            if (J$.Fr(20593))
                                continue jalangiLabel2606;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getPositionalPath(self, path) {
                jalangiLabel2607:
                    while (true) {
                        try {
                            J$.Fe(12625, arguments.callee, this, arguments);
                            arguments = J$.N(12633, 'arguments', arguments, 4);
                            self = J$.N(12641, 'self', self, 4);
                            path = J$.N(12649, 'path', path, 4);
                            J$.X1(12569, J$.F(12561, J$.R(12537, 'getPositionalPathType', getPositionalPathType, 1), 0)(J$.R(12545, 'self', self, 0), J$.R(12553, 'path', path, 0)));
                            return J$.X1(12617, J$.Rt(12609, J$.G(12601, J$.G(12585, J$.R(12577, 'self', self, 0), 'subpaths', 0), J$.R(12593, 'path', path, 0), 4)));
                        } catch (J$e) {
                            J$.Ex(20601, J$e);
                        } finally {
                            if (J$.Fr(20609))
                                continue jalangiLabel2607;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(19385, '__secret__S$', __secret__S$, 0);
            J$.N(19393, '__secret__traits__', __secret__traits__, 0);
            J$.N(19401, 'readPref', readPref, 0);
            J$.N(19409, 'EventEmitter', EventEmitter, 0);
            J$.N(19417, 'VirtualType', VirtualType, 0);
            J$.N(19425, 'utils', utils, 0);
            J$.N(19433, 'MongooseTypes', MongooseTypes, 0);
            J$.N(19441, 'Kareem', Kareem, 0);
            J$.N(19449, 'async', async, 0);
            J$.N(19457, 'PromiseProvider', PromiseProvider, 0);
            J$.N(19465, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 0);
            Schema = J$.N(19481, 'Schema', J$.T(19473, Schema, 12, false, 2889), 0);
            idGetter = J$.N(19497, 'idGetter', J$.T(19489, idGetter, 12, false, 3169), 0);
            J$.N(19505, 'reserved', reserved, 0);
            J$.N(19513, 'warnings', warnings, 0);
            getPositionalPathType = J$.N(19529, 'getPositionalPathType', J$.T(19521, getPositionalPathType, 12, false, 12449), 0);
            getPositionalPath = J$.N(19545, 'getPositionalPath', J$.T(19537, getPositionalPath, 12, false, 12625), 0);
            J$.N(19553, 'indexTypes', indexTypes, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var readPref = J$.X1(121, J$.W(113, 'readPref', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './drivers', 21, false)), 'ReadPreference', 0), readPref, 3));
            var EventEmitter = J$.X1(169, J$.W(161, 'EventEmitter', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'events', 21, false)), 'EventEmitter', 0), EventEmitter, 3));
            var VirtualType = J$.X1(209, J$.W(201, 'VirtualType', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, './virtualtype', 21, false)), VirtualType, 3));
            var utils = J$.X1(249, J$.W(241, 'utils', J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, './utils', 21, false)), utils, 3));
            var MongooseTypes;
            var Kareem = J$.X1(289, J$.W(281, 'Kareem', J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, 'kareem', 21, false)), Kareem, 3));
            var async = J$.X1(329, J$.W(321, 'async', J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.T(305, 'async', 21, false)), async, 3));
            var PromiseProvider = J$.X1(369, J$.W(361, 'PromiseProvider', J$.F(353, J$.R(337, 'require', require, 2), 0)(J$.T(345, './promise_provider', 21, false)), PromiseProvider, 3));
            var IS_QUERY_HOOK = J$.X1(441, J$.W(433, 'IS_QUERY_HOOK', J$.T(425, {
                count: J$.T(377, true, 23, false),
                find: J$.T(385, true, 23, false),
                findOne: J$.T(393, true, 23, false),
                findOneAndUpdate: J$.T(401, true, 23, false),
                findOneAndRemove: J$.T(409, true, 23, false),
                update: J$.T(417, true, 23, false)
            }, 11, false), IS_QUERY_HOOK, 3));
            J$.X1(3233, J$.P(3225, J$.R(3185, 'Schema', Schema, 1), 'prototype', J$.M(3217, J$.R(3193, 'Object', Object, 2), 'create', 0)(J$.G(3209, J$.R(3201, 'EventEmitter', EventEmitter, 1), 'prototype', 0)), 0));
            J$.X1(3273, J$.P(3265, J$.G(3249, J$.R(3241, 'Schema', Schema, 1), 'prototype', 0), 'constructor', J$.R(3257, 'Schema', Schema, 1), 0));
            J$.X1(4705, J$.M(4697, J$.R(3281, 'Object', Object, 2), 'defineProperty', 0)(J$.G(3297, J$.R(3289, 'Schema', Schema, 1), 'prototype', 0), J$.T(3305, '_defaultMiddleware', 21, false), J$.T(4689, {
                configurable: J$.T(3313, false, 23, false),
                enumerable: J$.T(3321, false, 23, false),
                writable: J$.T(3329, false, 23, false),
                value: J$.T(4681, [
                    J$.T(3857, {
                        kind: J$.T(3337, 'pre', 21, false),
                        hook: J$.T(3345, 'save', 21, false),
                        fn: J$.T(3849, function (next, options) {
                            jalangiLabel2589:
                                while (true) {
                                    try {
                                        J$.Fe(3801, arguments.callee, this, arguments);
                                        arguments = J$.N(3809, 'arguments', arguments, 4);
                                        next = J$.N(3817, 'next', next, 4);
                                        options = J$.N(3825, 'options', options, 4);
                                        J$.N(3833, 'hasValidateBeforeSaveOption', hasValidateBeforeSaveOption, 0);
                                        J$.N(3841, 'shouldValidate', shouldValidate, 0);
                                        if (J$.X1(19761, J$.C(176, J$.G(3361, J$.R(3353, 'this', this, 0), 'ownerDocument', 0)))) {
                                            return J$.X1(3393, J$.Rt(3385, J$.F(3377, J$.R(3369, 'next', next, 0), 0)()));
                                        }
                                        var hasValidateBeforeSaveOption = J$.X1(3449, J$.W(3441, 'hasValidateBeforeSaveOption', J$.C(192, J$.C(184, J$.R(3401, 'options', options, 0)) ? J$.B(138, '===', J$.U(130, 'typeof', J$.R(3409, 'options', options, 0)), J$.T(3417, 'object', 21, false), 0) : J$._()) ? J$.B(146, 'in', J$.T(3425, 'validateBeforeSave', 21, false), J$.R(3433, 'options', options, 0), 0) : J$._(), hasValidateBeforeSaveOption, 1));
                                        var shouldValidate;
                                        if (J$.X1(19769, J$.C(200, J$.R(3457, 'hasValidateBeforeSaveOption', hasValidateBeforeSaveOption, 0)))) {
                                            J$.X1(3489, shouldValidate = J$.W(3481, 'shouldValidate', J$.U(162, '!', J$.U(154, '!', J$.G(3473, J$.R(3465, 'options', options, 0), 'validateBeforeSave', 0))), shouldValidate, 0));
                                        } else {
                                            J$.X1(3537, shouldValidate = J$.W(3529, 'shouldValidate', J$.G(3521, J$.G(3513, J$.G(3505, J$.R(3497, 'this', this, 0), 'schema', 0), 'options', 0), 'validateBeforeSave', 0), shouldValidate, 0));
                                        }
                                        if (J$.X1(19817, J$.C(216, J$.R(3545, 'shouldValidate', shouldValidate, 0)))) {
                                            if (J$.X1(19809, J$.C(208, J$.G(3561, J$.R(3553, 'this', this, 0), '$__original_validate', 0)))) {
                                                J$.X1(3665, J$.M(3657, J$.R(3569, 'this', this, 0), '$__original_validate', 0)(J$.T(3585, {
                                                    __noPromise: J$.T(3577, true, 23, false)
                                                }, 11, false), J$.T(3649, function (error) {
                                                    jalangiLabel2587:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3625, arguments.callee, this, arguments);
                                                                arguments = J$.N(3633, 'arguments', arguments, 4);
                                                                error = J$.N(3641, 'error', error, 4);
                                                                J$.X1(3617, J$.F(3609, J$.R(3593, 'next', next, 0), 0)(J$.R(3601, 'error', error, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(19777, J$e);
                                                            } finally {
                                                                if (J$.Fr(19785))
                                                                    continue jalangiLabel2587;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3625)));
                                            } else {
                                                J$.X1(3769, J$.M(3761, J$.R(3673, 'this', this, 0), 'validate', 0)(J$.T(3689, {
                                                    __noPromise: J$.T(3681, true, 23, false)
                                                }, 11, false), J$.T(3753, function (error) {
                                                    jalangiLabel2588:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(3729, arguments.callee, this, arguments);
                                                                arguments = J$.N(3737, 'arguments', arguments, 4);
                                                                error = J$.N(3745, 'error', error, 4);
                                                                J$.X1(3721, J$.F(3713, J$.R(3697, 'next', next, 0), 0)(J$.R(3705, 'error', error, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(19793, J$e);
                                                            } finally {
                                                                if (J$.Fr(19801))
                                                                    continue jalangiLabel2588;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 3729)));
                                            }
                                        } else {
                                            J$.X1(3793, J$.F(3785, J$.R(3777, 'next', next, 0), 0)());
                                        }
                                    } catch (J$e) {
                                        J$.Ex(19825, J$e);
                                    } finally {
                                        if (J$.Fr(19833))
                                            continue jalangiLabel2589;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false, 3801)
                    }, 11, false),
                    J$.T(4673, {
                        kind: J$.T(3865, 'pre', 21, false),
                        hook: J$.T(3873, 'save', 21, false),
                        isAsync: J$.T(3881, true, 23, false),
                        fn: J$.T(4665, function (next, done) {
                            jalangiLabel2595:
                                while (true) {
                                    try {
                                        J$.Fe(4617, arguments.callee, this, arguments);
                                        arguments = J$.N(4625, 'arguments', arguments, 4);
                                        next = J$.N(4633, 'next', next, 4);
                                        done = J$.N(4641, 'done', done, 4);
                                        J$.N(4649, 'Promise', Promise, 0);
                                        J$.N(4657, 'subdocs', subdocs, 0);
                                        var Promise = J$.X1(3929, J$.W(3921, 'Promise', J$.M(3897, J$.R(3889, 'PromiseProvider', PromiseProvider, 1), 'get', 0)(), Promise, 1)), subdocs = J$.X1(3945, J$.W(3937, 'subdocs', J$.M(3913, J$.R(3905, 'this', this, 0), '$__getAllSubdocs', 0)(), subdocs, 1));
                                        if (J$.X1(19841, J$.C(232, J$.C(224, J$.U(170, '!', J$.G(3961, J$.R(3953, 'subdocs', subdocs, 0), 'length', 0))) ? J$._() : J$.G(3977, J$.R(3969, 'this', this, 0), '$__preSavingFromParent', 0)))) {
                                            J$.X1(4001, J$.F(3993, J$.R(3985, 'done', done, 0), 0)());
                                            J$.X1(4025, J$.F(4017, J$.R(4009, 'next', next, 0), 0)());
                                            return J$.X1(4041, J$.Rt(4033, undefined));
                                        }
                                        J$.X1(4609, J$.M(4601, J$.M(4513, J$.R(4049, 'Promise', Promise, 0), 'ES6', 2)(J$.T(4505, function (resolve, reject) {
                                            jalangiLabel2593:
                                                while (true) {
                                                    try {
                                                        J$.Fe(4473, arguments.callee, this, arguments);
                                                        arguments = J$.N(4481, 'arguments', arguments, 4);
                                                        resolve = J$.N(4489, 'resolve', resolve, 4);
                                                        reject = J$.N(4497, 'reject', reject, 4);
                                                        J$.X1(4465, J$.M(4457, J$.R(4057, 'async', async, 1), 'each', 0)(J$.R(4065, 'subdocs', subdocs, 0), J$.T(4225, function (subdoc, cb) {
                                                            jalangiLabel2591:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4193, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4201, 'arguments', arguments, 4);
                                                                        subdoc = J$.N(4209, 'subdoc', subdoc, 4);
                                                                        cb = J$.N(4217, 'cb', cb, 4);
                                                                        J$.X1(4097, J$.P(4089, J$.R(4073, 'subdoc', subdoc, 0), '$__preSavingFromParent', J$.T(4081, true, 23, false), 0));
                                                                        J$.X1(4185, J$.M(4177, J$.R(4105, 'subdoc', subdoc, 0), 'save', 0)(J$.T(4169, function (err) {
                                                                            jalangiLabel2590:
                                                                                while (true) {
                                                                                    try {
                                                                                        J$.Fe(4145, arguments.callee, this, arguments);
                                                                                        arguments = J$.N(4153, 'arguments', arguments, 4);
                                                                                        err = J$.N(4161, 'err', err, 4);
                                                                                        J$.X1(4137, J$.F(4129, J$.R(4113, 'cb', cb, 0), 0)(J$.R(4121, 'err', err, 0)));
                                                                                    } catch (J$e) {
                                                                                        J$.Ex(19849, J$e);
                                                                                    } finally {
                                                                                        if (J$.Fr(19857))
                                                                                            continue jalangiLabel2590;
                                                                                        else
                                                                                            return J$.Ra();
                                                                                    }
                                                                                }
                                                                        }, 12, false, 4145)));
                                                                    } catch (J$e) {
                                                                        J$.Ex(19865, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(19873))
                                                                            continue jalangiLabel2591;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false, 4193), J$.T(4449, function (error) {
                                                            jalangiLabel2592:
                                                                while (true) {
                                                                    try {
                                                                        J$.Fe(4417, arguments.callee, this, arguments);
                                                                        arguments = J$.N(4425, 'arguments', arguments, 4);
                                                                        error = J$.N(4433, 'error', error, 4);
                                                                        J$.N(4441, 'i', i, 0);
                                                                        for (var i = J$.X1(4249, J$.W(4241, 'i', J$.T(4233, 0, 22, false), i, 1)); J$.X1(19881, J$.C(240, J$.B(178, '<', J$.R(4257, 'i', i, 0), J$.G(4273, J$.R(4265, 'subdocs', subdocs, 0), 'length', 0), 0))); J$.X1(19889, i = J$.W(4297, 'i', J$.B(194, '+', J$.U(186, '+', J$.R(4289, 'i', i, 0)), J$.T(4281, 1, 22, false), 0), i, 0))) {
                                                                            J$.X1(4329, J$.B(202, 'delete', J$.G(4321, J$.R(4305, 'subdocs', subdocs, 0), J$.R(4313, 'i', i, 0), 4), '$__preSavingFromParent', 0));
                                                                        }
                                                                        if (J$.X1(19897, J$.C(248, J$.R(4337, 'error', error, 0)))) {
                                                                            J$.X1(4369, J$.F(4361, J$.R(4345, 'reject', reject, 0), 0)(J$.R(4353, 'error', error, 0)));
                                                                            return J$.X1(4385, J$.Rt(4377, undefined));
                                                                        }
                                                                        J$.X1(4409, J$.F(4401, J$.R(4393, 'resolve', resolve, 0), 0)());
                                                                    } catch (J$e) {
                                                                        J$.Ex(19905, J$e);
                                                                    } finally {
                                                                        if (J$.Fr(19913))
                                                                            continue jalangiLabel2592;
                                                                        else
                                                                            return J$.Ra();
                                                                    }
                                                                }
                                                        }, 12, false, 4417)));
                                                    } catch (J$e) {
                                                        J$.Ex(19921, J$e);
                                                    } finally {
                                                        if (J$.Fr(19929))
                                                            continue jalangiLabel2593;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false, 4473)), 'then', 0)(J$.T(4585, function () {
                                            jalangiLabel2594:
                                                while (true) {
                                                    try {
                                                        J$.Fe(4569, arguments.callee, this, arguments);
                                                        arguments = J$.N(4577, 'arguments', arguments, 4);
                                                        J$.X1(4537, J$.F(4529, J$.R(4521, 'next', next, 0), 0)());
                                                        J$.X1(4561, J$.F(4553, J$.R(4545, 'done', done, 0), 0)());
                                                    } catch (J$e) {
                                                        J$.Ex(19937, J$e);
                                                    } finally {
                                                        if (J$.Fr(19945))
                                                            continue jalangiLabel2594;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false, 4569), J$.R(4593, 'done', done, 0)));
                                    } catch (J$e) {
                                        J$.Ex(19953, J$e);
                                    } finally {
                                        if (J$.Fr(19961))
                                            continue jalangiLabel2595;
                                        else
                                            return J$.Ra();
                                    }
                                }
                        }, 12, false, 4617)
                    }, 11, false)
                ], 10, false)
            }, 11, false)));
            J$.X1(4737, J$.G(4729, J$.G(4721, J$.R(4713, 'Schema', Schema, 1), 'prototype', 0), 'paths', 0));
            J$.X1(4769, J$.G(4761, J$.G(4753, J$.R(4745, 'Schema', Schema, 1), 'prototype', 0), 'tree', 0));
            J$.X1(5257, J$.P(5249, J$.G(4785, J$.R(4777, 'Schema', Schema, 1), 'prototype', 0), 'defaultOptions', J$.T(5241, function (options) {
                jalangiLabel2596:
                    while (true) {
                        try {
                            J$.Fe(5217, arguments.callee, this, arguments);
                            arguments = J$.N(5225, 'arguments', arguments, 4);
                            options = J$.N(5233, 'options', options, 4);
                            if (J$.X1(19969, J$.C(264, J$.C(256, J$.R(4793, 'options', options, 0)) ? J$.B(210, '===', J$.T(4801, false, 23, false), J$.G(4817, J$.R(4809, 'options', options, 0), 'safe', 0), 0) : J$._()))) {
                                J$.X1(4857, J$.P(4849, J$.R(4825, 'options', options, 0), 'safe', J$.T(4841, {
                                    w: J$.T(4833, 0, 22, false)
                                }, 11, false), 0));
                            }
                            if (J$.X1(19977, J$.C(288, J$.C(280, J$.C(272, J$.R(4865, 'options', options, 0)) ? J$.G(4881, J$.R(4873, 'options', options, 0), 'safe', 0) : J$._()) ? J$.B(218, '===', J$.T(4889, 0, 22, false), J$.G(4913, J$.G(4905, J$.R(4897, 'options', options, 0), 'safe', 0), 'w', 0), 0) : J$._()))) {
                                J$.X1(4945, J$.P(4937, J$.R(4921, 'options', options, 0), 'versionKey', J$.T(4929, false, 23, false), 0));
                            }
                            J$.X1(5113, options = J$.W(5105, 'options', J$.M(5097, J$.R(4953, 'utils', utils, 1), 'options', 0)(J$.T(5081, {
                                strict: J$.T(4961, true, 23, false),
                                bufferCommands: J$.T(4969, true, 23, false),
                                capped: J$.T(4977, false, 23, false),
                                versionKey: J$.T(4985, '__v', 21, false),
                                discriminatorKey: J$.T(4993, '__t', 21, false),
                                minimize: J$.T(5001, true, 23, false),
                                autoIndex: J$.T(5009, null, 25, false),
                                shardKey: J$.T(5017, null, 25, false),
                                read: J$.T(5025, null, 25, false),
                                validateBeforeSave: J$.T(5033, true, 23, false),
                                noId: J$.T(5041, false, 23, false),
                                _id: J$.T(5049, true, 23, false),
                                noVirtualId: J$.T(5057, false, 23, false),
                                id: J$.T(5065, true, 23, false),
                                typeKey: J$.T(5073, 'type', 21, false)
                            }, 11, false), J$.R(5089, 'options', options, 0)), options, 0));
                            if (J$.X1(19985, J$.C(296, J$.G(5129, J$.R(5121, 'options', options, 0), 'read', 0)))) {
                                J$.X1(5185, J$.P(5177, J$.R(5137, 'options', options, 0), 'read', J$.F(5169, J$.R(5145, 'readPref', readPref, 1), 0)(J$.G(5161, J$.R(5153, 'options', options, 0), 'read', 0)), 0));
                            }
                            return J$.X1(5209, J$.Rt(5201, J$.R(5193, 'options', options, 0)));
                        } catch (J$e) {
                            J$.Ex(19993, J$e);
                        } finally {
                            if (J$.Fr(20001))
                                continue jalangiLabel2596;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5217), 0));
            J$.X1(6393, J$.P(6385, J$.G(5273, J$.R(5265, 'Schema', Schema, 1), 'prototype', 0), 'add', J$.T(6377, function add(obj, prefix) {
                jalangiLabel2597:
                    while (true) {
                        try {
                            J$.Fe(6313, arguments.callee, this, arguments);
                            arguments = J$.N(6321, 'arguments', arguments, 4);
                            add = J$.N(6329, 'add', add, 0);
                            obj = J$.N(6337, 'obj', obj, 4);
                            prefix = J$.N(6345, 'prefix', prefix, 4);
                            J$.N(6353, 'keys', keys, 0);
                            J$.N(6361, 'i', i, 0);
                            J$.N(6369, 'key', key, 0);
                            J$.X1(5305, prefix = J$.W(5297, 'prefix', J$.C(304, J$.R(5281, 'prefix', prefix, 0)) ? J$._() : J$.T(5289, '', 21, false), prefix, 0));
                            var keys = J$.X1(5345, J$.W(5337, 'keys', J$.M(5329, J$.R(5313, 'Object', Object, 2), 'keys', 0)(J$.R(5321, 'obj', obj, 0)), keys, 1));
                            for (var i = J$.X1(5369, J$.W(5361, 'i', J$.T(5353, 0, 22, false), i, 1)); J$.X1(20041, J$.C(400, J$.B(226, '<', J$.R(5377, 'i', i, 0), J$.G(5393, J$.R(5385, 'keys', keys, 0), 'length', 0), 0))); J$.X1(20049, i = J$.W(5417, 'i', J$.B(242, '+', J$.U(234, '+', J$.R(5409, 'i', i, 0)), J$.T(5401, 1, 22, false), 0), i, 0))) {
                                var key = J$.X1(5457, J$.W(5449, 'key', J$.G(5441, J$.R(5425, 'keys', keys, 0), J$.R(5433, 'i', i, 0), 4), key, 1));
                                if (J$.X1(20009, J$.C(312, J$.B(250, '==', J$.T(5465, null, 25, false), J$.G(5489, J$.R(5473, 'obj', obj, 0), J$.R(5481, 'key', key, 0), 4), 0)))) {
                                    throw J$.X1(5553, J$.Th(5545, J$.F(5537, J$.R(5497, 'TypeError', TypeError, 2), 1)(J$.B(274, '+', J$.B(266, '+', J$.B(258, '+', J$.T(5505, 'Invalid value for schema path `', 21, false), J$.R(5513, 'prefix', prefix, 0), 0), J$.R(5521, 'key', key, 0), 0), J$.T(5529, '`', 21, false), 0))));
                                }
                                if (J$.X1(20017, J$.C(336, J$.C(328, J$.C(320, J$.M(5593, J$.R(5561, 'Array', Array, 2), 'isArray', 0)(J$.G(5585, J$.R(5569, 'obj', obj, 0), J$.R(5577, 'key', key, 0), 4))) ? J$.B(282, '===', J$.G(5625, J$.G(5617, J$.R(5601, 'obj', obj, 0), J$.R(5609, 'key', key, 0), 4), 'length', 0), J$.T(5633, 1, 22, false), 0) : J$._()) ? J$.B(290, '==', J$.T(5641, null, 25, false), J$.G(5681, J$.G(5665, J$.R(5649, 'obj', obj, 0), J$.R(5657, 'key', key, 0), 4), J$.T(5673, 0, 22, false), 4), 0) : J$._()))) {
                                    throw J$.X1(5745, J$.Th(5737, J$.F(5729, J$.R(5689, 'TypeError', TypeError, 2), 1)(J$.B(314, '+', J$.B(306, '+', J$.B(298, '+', J$.T(5697, 'Invalid value for schema Array path `', 21, false), J$.R(5705, 'prefix', prefix, 0), 0), J$.R(5713, 'key', key, 0), 0), J$.T(5721, '`', 21, false), 0))));
                                }
                                if (J$.X1(20033, J$.C(392, J$.C(376, J$.C(352, J$.M(5785, J$.R(5753, 'utils', utils, 1), 'isObject', 0)(J$.G(5777, J$.R(5761, 'obj', obj, 0), J$.R(5769, 'key', key, 0), 4))) ? J$.C(344, J$.U(322, '!', J$.G(5817, J$.G(5809, J$.R(5793, 'obj', obj, 0), J$.R(5801, 'key', key, 0), 4), 'constructor', 0))) ? J$._() : J$.B(330, '==', J$.T(5825, 'Object', 21, false), J$.M(5873, J$.R(5833, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(5865, J$.G(5857, J$.R(5841, 'obj', obj, 0), J$.R(5849, 'key', key, 0), 4), 'constructor', 0)), 0) : J$._()) ? J$.C(368, J$.U(338, '!', J$.G(5929, J$.G(5897, J$.R(5881, 'obj', obj, 0), J$.R(5889, 'key', key, 0), 4), J$.G(5921, J$.G(5913, J$.R(5905, 'this', this, 0), 'options', 0), 'typeKey', 0), 4))) ? J$._() : J$.C(360, J$.B(346, '===', J$.G(5953, J$.G(5945, J$.R(5937, 'this', this, 0), 'options', 0), 'typeKey', 0), J$.T(5961, 'type', 21, false), 0)) ? J$.G(6001, J$.G(5993, J$.G(5985, J$.R(5969, 'obj', obj, 0), J$.R(5977, 'key', key, 0), 4), 'type', 0), 'type', 0) : J$._() : J$._()))) {
                                    if (J$.X1(20025, J$.C(384, J$.G(6049, J$.M(6041, J$.R(6009, 'Object', Object, 2), 'keys', 0)(J$.G(6033, J$.R(6017, 'obj', obj, 0), J$.R(6025, 'key', key, 0), 4)), 'length', 0)))) {
                                        J$.X1(6105, J$.P(6097, J$.G(6065, J$.R(6057, 'this', this, 0), 'nested', 0), J$.B(354, '+', J$.R(6073, 'prefix', prefix, 0), J$.R(6081, 'key', key, 0), 0), J$.T(6089, true, 23, false), 2));
                                        J$.X1(6177, J$.M(6169, J$.R(6113, 'this', this, 0), 'add', 0)(J$.G(6137, J$.R(6121, 'obj', obj, 0), J$.R(6129, 'key', key, 0), 4), J$.B(370, '+', J$.B(362, '+', J$.R(6145, 'prefix', prefix, 0), J$.R(6153, 'key', key, 0), 0), J$.T(6161, '.', 21, false), 0)));
                                    } else {
                                        J$.X1(6241, J$.M(6233, J$.R(6185, 'this', this, 0), 'path', 0)(J$.B(378, '+', J$.R(6193, 'prefix', prefix, 0), J$.R(6201, 'key', key, 0), 0), J$.G(6225, J$.R(6209, 'obj', obj, 0), J$.R(6217, 'key', key, 0), 4)));
                                    }
                                } else {
                                    J$.X1(6305, J$.M(6297, J$.R(6249, 'this', this, 0), 'path', 0)(J$.B(386, '+', J$.R(6257, 'prefix', prefix, 0), J$.R(6265, 'key', key, 0), 0), J$.G(6289, J$.R(6273, 'obj', obj, 0), J$.R(6281, 'key', key, 0), 4)));
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(20057, J$e);
                        } finally {
                            if (J$.Fr(20065))
                                continue jalangiLabel2597;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 6313), 0));
            J$.X1(6441, J$.P(6433, J$.R(6401, 'Schema', Schema, 1), 'reserved', J$.M(6425, J$.R(6409, 'Object', Object, 2), 'create', 0)(J$.T(6417, null, 25, false)), 0));
            var reserved = J$.X1(6473, J$.W(6465, 'reserved', J$.G(6457, J$.R(6449, 'Schema', Schema, 1), 'reserved', 0), reserved, 3));
            J$.X1(6777, J$.P(6769, J$.R(6481, 'reserved', reserved, 1), 'emit', J$.P(6761, J$.R(6489, 'reserved', reserved, 1), 'on', J$.P(6753, J$.R(6497, 'reserved', reserved, 1), 'once', J$.P(6745, J$.R(6505, 'reserved', reserved, 1), 'collection', J$.P(6737, J$.R(6513, 'reserved', reserved, 1), 'db', J$.P(6729, J$.R(6521, 'reserved', reserved, 1), 'errors', J$.P(6721, J$.R(6529, 'reserved', reserved, 1), 'init', J$.P(6713, J$.R(6537, 'reserved', reserved, 1), 'isModified', J$.P(6705, J$.R(6545, 'reserved', reserved, 1), 'isNew', J$.P(6697, J$.R(6553, 'reserved', reserved, 1), 'get', J$.P(6689, J$.R(6561, 'reserved', reserved, 1), 'modelName', J$.P(6681, J$.R(6569, 'reserved', reserved, 1), 'save', J$.P(6673, J$.R(6577, 'reserved', reserved, 1), 'schema', J$.P(6665, J$.R(6585, 'reserved', reserved, 1), 'set', J$.P(6657, J$.R(6593, 'reserved', reserved, 1), 'toObject', J$.P(6649, J$.R(6601, 'reserved', reserved, 1), 'validate', J$.P(6641, J$.R(6609, 'reserved', reserved, 1), '_pres', J$.P(6633, J$.R(6617, 'reserved', reserved, 1), '_posts', J$.T(6625, 1, 22, false), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0), 0));
            var warnings = J$.X1(6801, J$.W(6793, 'warnings', J$.T(6785, {}, 11, false), warnings, 3));
            J$.X1(6841, J$.P(6833, J$.R(6809, 'warnings', warnings, 1), 'increment', J$.B(394, '+', J$.T(6817, '`increment` should not be used as a schema path name ', 21, false), J$.T(6825, 'unless you have disabled versioning.', 21, false), 0), 0));
            J$.X1(8041, J$.P(8033, J$.G(6857, J$.R(6849, 'Schema', Schema, 1), 'prototype', 0), 'path', J$.T(8025, function (path, obj) {
                jalangiLabel2599:
                    while (true) {
                        try {
                            J$.Fe(7969, arguments.callee, this, arguments);
                            arguments = J$.N(7977, 'arguments', arguments, 4);
                            path = J$.N(7985, 'path', path, 4);
                            obj = J$.N(7993, 'obj', obj, 4);
                            J$.N(8001, 'subpaths', subpaths, 0);
                            J$.N(8009, 'last', last, 0);
                            J$.N(8017, 'branch', branch, 0);
                            if (J$.X1(20097, J$.C(432, J$.B(402, '==', J$.R(6865, 'obj', obj, 0), J$.T(6873, undefined, 24, false), 0)))) {
                                if (J$.X1(20073, J$.C(408, J$.G(6905, J$.G(6889, J$.R(6881, 'this', this, 0), 'paths', 0), J$.R(6897, 'path', path, 0), 4))))
                                    return J$.X1(6953, J$.Rt(6945, J$.G(6937, J$.G(6921, J$.R(6913, 'this', this, 0), 'paths', 0), J$.R(6929, 'path', path, 0), 4)));
                                if (J$.X1(20081, J$.C(416, J$.G(6985, J$.G(6969, J$.R(6961, 'this', this, 0), 'subpaths', 0), J$.R(6977, 'path', path, 0), 4))))
                                    return J$.X1(7033, J$.Rt(7025, J$.G(7017, J$.G(7001, J$.R(6993, 'this', this, 0), 'subpaths', 0), J$.R(7009, 'path', path, 0), 4)));
                                return J$.X1(7113, J$.Rt(7105, J$.X1(20089, J$.C(424, J$.M(7057, J$.T(7041, /\.\d+\.?.*$/, 14, false), 'test', 0)(J$.R(7049, 'path', path, 0)))) ? J$.F(7089, J$.R(7065, 'getPositionalPath', getPositionalPath, 1), 0)(J$.R(7073, 'this', this, 0), J$.R(7081, 'path', path, 0)) : J$.T(7097, undefined, 24, false)));
                            }
                            if (J$.X1(20105, J$.C(440, J$.G(7137, J$.R(7121, 'reserved', reserved, 1), J$.R(7129, 'path', path, 0), 4)))) {
                                throw J$.X1(7193, J$.Th(7185, J$.F(7177, J$.R(7145, 'Error', Error, 2), 1)(J$.B(418, '+', J$.B(410, '+', J$.T(7153, '`', 21, false), J$.R(7161, 'path', path, 0), 0), J$.T(7169, '` may not be used as a schema pathname', 21, false), 0))));
                            }
                            if (J$.X1(20113, J$.C(448, J$.G(7217, J$.R(7201, 'warnings', warnings, 1), J$.R(7209, 'path', path, 0), 4)))) {
                                J$.X1(7273, J$.M(7265, J$.R(7225, 'console', console, 2), 'log', 0)(J$.B(426, '+', J$.T(7233, 'WARN: ', 21, false), J$.G(7257, J$.R(7241, 'warnings', warnings, 1), J$.R(7249, 'path', path, 0), 4), 0)));
                            }
                            var subpaths = J$.X1(7345, J$.W(7337, 'subpaths', J$.M(7297, J$.R(7281, 'path', path, 0), 'split', 0)(J$.T(7289, /\./, 14, false)), subpaths, 1)), last = J$.X1(7361, J$.W(7353, 'last', J$.M(7313, J$.R(7305, 'subpaths', subpaths, 0), 'pop', 0)(), last, 1)), branch = J$.X1(7377, J$.W(7369, 'branch', J$.G(7329, J$.R(7321, 'this', this, 0), 'tree', 0), branch, 1));
                            J$.X1(7793, J$.M(7785, J$.R(7385, 'subpaths', subpaths, 0), 'forEach', 0)(J$.T(7777, function (sub, i) {
                                jalangiLabel2598:
                                    while (true) {
                                        try {
                                            J$.Fe(7737, arguments.callee, this, arguments);
                                            arguments = J$.N(7745, 'arguments', arguments, 4);
                                            sub = J$.N(7753, 'sub', sub, 4);
                                            i = J$.N(7761, 'i', i, 4);
                                            J$.N(7769, 'msg', msg, 0);
                                            if (J$.X1(20121, J$.C(456, J$.U(434, '!', J$.G(7409, J$.R(7393, 'branch', branch, 0), J$.R(7401, 'sub', sub, 0), 4)))))
                                                J$.X1(7449, J$.P(7441, J$.R(7417, 'branch', branch, 0), J$.R(7425, 'sub', sub, 0), J$.T(7433, {}, 11, false), 2));
                                            if (J$.X1(20129, J$.C(464, J$.B(450, '!=', J$.T(7457, 'object', 21, false), J$.U(442, 'typeof', J$.G(7481, J$.R(7465, 'branch', branch, 0), J$.R(7473, 'sub', sub, 0), 4)), 0)))) {
                                                var msg = J$.X1(7649, J$.W(7641, 'msg', J$.B(506, '+', J$.B(498, '+', J$.B(490, '+', J$.B(482, '+', J$.B(474, '+', J$.B(466, '+', J$.B(458, '+', J$.T(7489, 'Cannot set nested path `', 21, false), J$.R(7497, 'path', path, 0), 0), J$.T(7505, '`. ', 21, false), 0), J$.T(7513, 'Parent path `', 21, false), 0), J$.M(7585, J$.M(7569, J$.M(7545, J$.R(7521, 'subpaths', subpaths, 0), 'slice', 0)(J$.T(7529, 0, 22, false), J$.R(7537, 'i', i, 0)), 'concat', 0)(J$.T(7561, [J$.R(7553, 'sub', sub, 0)], 10, false)), 'join', 0)(J$.T(7577, '.', 21, false)), 0), J$.T(7593, '` already set to type ', 21, false), 0), J$.G(7625, J$.G(7617, J$.R(7601, 'branch', branch, 0), J$.R(7609, 'sub', sub, 0), 4), 'name', 0), 0), J$.T(7633, '.', 21, false), 0), msg, 1));
                                                throw J$.X1(7689, J$.Th(7681, J$.F(7673, J$.R(7657, 'Error', Error, 2), 1)(J$.R(7665, 'msg', msg, 0))));
                                            }
                                            J$.X1(7729, branch = J$.W(7721, 'branch', J$.G(7713, J$.R(7697, 'branch', branch, 0), J$.R(7705, 'sub', sub, 0), 4), branch, 0));
                                        } catch (J$e) {
                                            J$.Ex(20137, J$e);
                                        } finally {
                                            if (J$.Fr(20145))
                                                continue jalangiLabel2598;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 7737)));
                            J$.X1(7849, J$.P(7841, J$.R(7801, 'branch', branch, 0), J$.R(7809, 'last', last, 0), J$.M(7833, J$.R(7817, 'utils', utils, 1), 'clone', 0)(J$.R(7825, 'obj', obj, 0)), 2));
                            J$.X1(7937, J$.P(7929, J$.G(7865, J$.R(7857, 'this', this, 0), 'paths', 0), J$.R(7873, 'path', path, 0), J$.M(7921, J$.R(7881, 'Schema', Schema, 1), 'interpretAsType', 0)(J$.R(7889, 'path', path, 0), J$.R(7897, 'obj', obj, 0), J$.G(7913, J$.R(7905, 'this', this, 0), 'options', 0)), 2));
                            return J$.X1(7961, J$.Rt(7953, J$.R(7945, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20153, J$e);
                        } finally {
                            if (J$.Fr(20161))
                                continue jalangiLabel2599;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 7969), 0));
            J$.X1(9785, J$.P(9777, J$.R(8049, 'Schema', Schema, 1), 'interpretAsType', J$.T(9769, function (path, obj, options) {
                jalangiLabel2600:
                    while (true) {
                        try {
                            J$.Fe(9673, arguments.callee, this, arguments);
                            arguments = J$.N(9681, 'arguments', arguments, 4);
                            path = J$.N(9689, 'path', path, 4);
                            obj = J$.N(9697, 'obj', obj, 4);
                            options = J$.N(9705, 'options', options, 4);
                            J$.N(9713, 'constructorName', constructorName, 0);
                            J$.N(9721, 'oldObj', oldObj, 0);
                            J$.N(9729, 'type', type, 0);
                            J$.N(9737, 'cast', cast, 0);
                            J$.N(9745, 'childSchemaOptions', childSchemaOptions, 0);
                            J$.N(9753, 'childSchema', childSchema, 0);
                            J$.N(9761, 'name', name, 0);
                            if (J$.X1(20177, J$.C(480, J$.G(8065, J$.R(8057, 'obj', obj, 0), 'constructor', 0)))) {
                                var constructorName = J$.X1(8113, J$.W(8105, 'constructorName', J$.M(8097, J$.R(8073, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(8089, J$.R(8081, 'obj', obj, 0), 'constructor', 0)), constructorName, 1));
                                if (J$.X1(20169, J$.C(472, J$.B(514, '!=', J$.R(8121, 'constructorName', constructorName, 0), J$.T(8129, 'Object', 21, false), 0)))) {
                                    var oldObj = J$.X1(8153, J$.W(8145, 'oldObj', J$.R(8137, 'obj', obj, 0), oldObj, 1));
                                    J$.X1(8177, obj = J$.W(8169, 'obj', J$.T(8161, {}, 11, false), obj, 0));
                                    J$.X1(8225, J$.P(8217, J$.R(8185, 'obj', obj, 0), J$.G(8201, J$.R(8193, 'options', options, 0), 'typeKey', 0), J$.R(8209, 'oldObj', oldObj, 0), 2));
                                }
                            }
                            var type = J$.X1(8361, J$.W(8353, 'type', J$.X1(20185, J$.C(504, J$.C(496, J$.G(8257, J$.R(8233, 'obj', obj, 0), J$.G(8249, J$.R(8241, 'options', options, 0), 'typeKey', 0), 4)) ? J$.C(488, J$.B(522, '!==', J$.G(8273, J$.R(8265, 'options', options, 0), 'typeKey', 0), J$.T(8281, 'type', 21, false), 0)) ? J$._() : J$.U(530, '!', J$.G(8305, J$.G(8297, J$.R(8289, 'obj', obj, 0), 'type', 0), 'type', 0)) : J$._())) ? J$.G(8337, J$.R(8313, 'obj', obj, 0), J$.G(8329, J$.R(8321, 'options', options, 0), 'typeKey', 0), 4) : J$.T(8345, {}, 11, false), type, 1));
                            if (J$.X1(20193, J$.C(520, J$.C(512, J$.B(538, '==', J$.T(8369, 'Object', 21, false), J$.M(8401, J$.R(8377, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(8393, J$.R(8385, 'type', type, 0), 'constructor', 0)), 0)) ? J$._() : J$.B(546, '==', J$.T(8409, 'mixed', 21, false), J$.R(8417, 'type', type, 0), 0)))) {
                                return J$.X1(8465, J$.Rt(8457, J$.M(8449, J$.R(8425, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 2)(J$.R(8433, 'path', path, 0), J$.R(8441, 'obj', obj, 0))));
                            }
                            if (J$.X1(20241, J$.C(640, J$.C(536, J$.C(528, J$.M(8489, J$.R(8473, 'Array', Array, 2), 'isArray', 0)(J$.R(8481, 'type', type, 0))) ? J$._() : J$.B(554, '==', J$.R(8497, 'Array', Array, 2), J$.R(8505, 'type', type, 0), 0)) ? J$._() : J$.B(562, '==', J$.T(8513, 'array', 21, false), J$.R(8521, 'type', type, 0), 0)))) {
                                var cast = J$.X1(8609, J$.W(8601, 'cast', J$.X1(20201, J$.C(552, J$.C(544, J$.B(570, '==', J$.R(8529, 'Array', Array, 2), J$.R(8537, 'type', type, 0), 0)) ? J$._() : J$.B(578, '==', J$.T(8545, 'array', 21, false), J$.R(8553, 'type', type, 0), 0))) ? J$.G(8569, J$.R(8561, 'obj', obj, 0), 'cast', 0) : J$.G(8593, J$.R(8577, 'type', type, 0), J$.T(8585, 0, 22, false), 4), cast, 1));
                                if (J$.X1(20209, J$.C(560, J$.B(586, 'instanceof', J$.R(8617, 'cast', cast, 0), J$.R(8625, 'Schema', Schema, 1), 0)))) {
                                    return J$.X1(8681, J$.Rt(8673, J$.M(8665, J$.R(8633, 'MongooseTypes', MongooseTypes, 1), 'DocumentArray', 2)(J$.R(8641, 'path', path, 0), J$.R(8649, 'cast', cast, 0), J$.R(8657, 'obj', obj, 0))));
                                }
                                if (J$.X1(20233, J$.C(624, J$.B(602, '==', J$.T(8689, 'string', 21, false), J$.U(594, 'typeof', J$.R(8697, 'cast', cast, 0)), 0)))) {
                                    J$.X1(8785, cast = J$.W(8777, 'cast', J$.G(8769, J$.R(8705, 'MongooseTypes', MongooseTypes, 1), J$.B(610, '+', J$.M(8737, J$.M(8729, J$.R(8713, 'cast', cast, 0), 'charAt', 0)(J$.T(8721, 0, 22, false)), 'toUpperCase', 0)(), J$.M(8761, J$.R(8745, 'cast', cast, 0), 'substring', 0)(J$.T(8753, 1, 22, false)), 0), 4), cast, 0));
                                } else if (J$.X1(20225, J$.C(616, J$.C(600, J$.C(592, J$.C(584, J$.R(8793, 'cast', cast, 0)) ? J$.C(576, J$.U(618, '!', J$.G(8825, J$.R(8801, 'cast', cast, 0), J$.G(8817, J$.R(8809, 'options', options, 0), 'typeKey', 0), 4))) ? J$._() : J$.C(568, J$.B(626, '===', J$.G(8841, J$.R(8833, 'options', options, 0), 'typeKey', 0), J$.T(8849, 'type', 21, false), 0)) ? J$.G(8873, J$.G(8865, J$.R(8857, 'cast', cast, 0), 'type', 0), 'type', 0) : J$._() : J$._()) ? J$.B(634, '==', J$.T(8881, 'Object', 21, false), J$.M(8913, J$.R(8889, 'utils', utils, 1), 'getFunctionName', 0)(J$.G(8905, J$.R(8897, 'cast', cast, 0), 'constructor', 0)), 0) : J$._()) ? J$.G(8945, J$.M(8937, J$.R(8921, 'Object', Object, 2), 'keys', 0)(J$.R(8929, 'cast', cast, 0)), 'length', 0) : J$._()))) {
                                    var childSchemaOptions = J$.X1(8985, J$.W(8977, 'childSchemaOptions', J$.T(8969, {
                                        minimize: J$.G(8961, J$.R(8953, 'options', options, 0), 'minimize', 0)
                                    }, 11, false), childSchemaOptions, 1));
                                    if (J$.X1(20217, J$.C(608, J$.G(9001, J$.R(8993, 'options', options, 0), 'typeKey', 0)))) {
                                        J$.X1(9041, J$.P(9033, J$.R(9009, 'childSchemaOptions', childSchemaOptions, 0), 'typeKey', J$.G(9025, J$.R(9017, 'options', options, 0), 'typeKey', 0), 0));
                                    }
                                    var childSchema = J$.X1(9089, J$.W(9081, 'childSchema', J$.F(9073, J$.R(9049, 'Schema', Schema, 1), 1)(J$.R(9057, 'cast', cast, 0), J$.R(9065, 'childSchemaOptions', childSchemaOptions, 0)), childSchema, 1));
                                    return J$.X1(9145, J$.Rt(9137, J$.M(9129, J$.R(9097, 'MongooseTypes', MongooseTypes, 1), 'DocumentArray', 2)(J$.R(9105, 'path', path, 0), J$.R(9113, 'childSchema', childSchema, 0), J$.R(9121, 'obj', obj, 0))));
                                }
                                return J$.X1(9217, J$.Rt(9209, J$.M(9201, J$.R(9153, 'MongooseTypes', MongooseTypes, 1), 'Array', 2)(J$.R(9161, 'path', path, 0), J$.C(632, J$.R(9169, 'cast', cast, 0)) ? J$._() : J$.G(9185, J$.R(9177, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 0), J$.R(9193, 'obj', obj, 0))));
                            }
                            if (J$.X1(20249, J$.C(648, J$.B(642, 'instanceof', J$.R(9225, 'type', type, 0), J$.R(9233, 'Schema', Schema, 1), 0)))) {
                                return J$.X1(9289, J$.Rt(9281, J$.M(9273, J$.R(9241, 'MongooseTypes', MongooseTypes, 1), 'Embedded', 2)(J$.R(9249, 'type', type, 0), J$.R(9257, 'path', path, 0), J$.R(9265, 'obj', obj, 0))));
                            }
                            var name;
                            if (J$.X1(20265, J$.C(672, J$.M(9313, J$.R(9297, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(9305, 'type', type, 0))))) {
                                J$.X1(9337, name = J$.W(9329, 'name', J$.T(9321, 'Buffer', 21, false), name, 0));
                            } else {
                                J$.X1(9417, name = J$.W(9409, 'name', J$.X1(20257, J$.C(664, J$.B(658, '==', J$.T(9345, 'string', 21, false), J$.U(650, 'typeof', J$.R(9353, 'type', type, 0)), 0))) ? J$.R(9361, 'type', type, 0) : J$.C(656, J$.G(9377, J$.R(9369, 'type', type, 0), 'schemaName', 0)) ? J$._() : J$.M(9401, J$.R(9385, 'utils', utils, 1), 'getFunctionName', 0)(J$.R(9393, 'type', type, 0)), name, 0));
                            }
                            if (J$.X1(20273, J$.C(680, J$.R(9425, 'name', name, 0)))) {
                                J$.X1(9497, name = J$.W(9489, 'name', J$.B(666, '+', J$.M(9457, J$.M(9449, J$.R(9433, 'name', name, 0), 'charAt', 0)(J$.T(9441, 0, 22, false)), 'toUpperCase', 0)(), J$.M(9481, J$.R(9465, 'name', name, 0), 'substring', 0)(J$.T(9473, 1, 22, false)), 0), name, 0));
                            }
                            if (J$.X1(20281, J$.C(688, J$.B(674, '==', J$.T(9505, undefined, 24, false), J$.G(9529, J$.R(9513, 'MongooseTypes', MongooseTypes, 1), J$.R(9521, 'name', name, 0), 4), 0)))) {
                                throw J$.X1(9609, J$.Th(9601, J$.F(9593, J$.R(9537, 'TypeError', TypeError, 2), 1)(J$.B(714, '+', J$.B(706, '+', J$.B(698, '+', J$.B(690, '+', J$.B(682, '+', J$.T(9545, 'Undefined type `', 21, false), J$.R(9553, 'name', name, 0), 0), J$.T(9561, '` at `', 21, false), 0), J$.R(9569, 'path', path, 0), 0), J$.T(9577, '`\n  Did you try nesting Schemas? ', 21, false), 0), J$.T(9585, 'You can only nest using refs or arrays.', 21, false), 0))));
                            }
                            return J$.X1(9665, J$.Rt(9657, J$.M(9649, J$.R(9617, 'MongooseTypes', MongooseTypes, 1), J$.R(9625, 'name', name, 0), 3)(J$.R(9633, 'path', path, 0), J$.R(9641, 'obj', obj, 0))));
                        } catch (J$e) {
                            J$.Ex(20289, J$e);
                        } finally {
                            if (J$.Fr(20297))
                                continue jalangiLabel2600;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 9673), 0));
            J$.X1(10137, J$.P(10129, J$.G(9801, J$.R(9793, 'Schema', Schema, 1), 'prototype', 0), 'eachPath', J$.T(10121, function (fn) {
                jalangiLabel2601:
                    while (true) {
                        try {
                            J$.Fe(10073, arguments.callee, this, arguments);
                            arguments = J$.N(10081, 'arguments', arguments, 4);
                            fn = J$.N(10089, 'fn', fn, 4);
                            J$.N(10097, 'keys', keys, 0);
                            J$.N(10105, 'len', len, 0);
                            J$.N(10113, 'i', i, 0);
                            var keys = J$.X1(9865, J$.W(9857, 'keys', J$.M(9833, J$.R(9809, 'Object', Object, 2), 'keys', 0)(J$.G(9825, J$.R(9817, 'this', this, 0), 'paths', 0)), keys, 1)), len = J$.X1(9881, J$.W(9873, 'len', J$.G(9849, J$.R(9841, 'keys', keys, 0), 'length', 0), len, 1));
                            for (var i = J$.X1(9905, J$.W(9897, 'i', J$.T(9889, 0, 22, false), i, 1)); J$.X1(20305, J$.C(696, J$.B(722, '<', J$.R(9913, 'i', i, 0), J$.R(9921, 'len', len, 0), 0))); J$.X1(20313, i = J$.W(9945, 'i', J$.B(738, '+', J$.U(730, '+', J$.R(9937, 'i', i, 0)), J$.T(9929, 1, 22, false), 0), i, 0))) {
                                J$.X1(10041, J$.F(10033, J$.R(9953, 'fn', fn, 0), 0)(J$.G(9977, J$.R(9961, 'keys', keys, 0), J$.R(9969, 'i', i, 0), 4), J$.G(10025, J$.G(9993, J$.R(9985, 'this', this, 0), 'paths', 0), J$.G(10017, J$.R(10001, 'keys', keys, 0), J$.R(10009, 'i', i, 0), 4), 4)));
                            }
                            return J$.X1(10065, J$.Rt(10057, J$.R(10049, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20321, J$e);
                        } finally {
                            if (J$.Fr(20329))
                                continue jalangiLabel2601;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10073), 0));
            J$.X1(10585, J$.P(10577, J$.G(10153, J$.R(10145, 'Schema', Schema, 1), 'prototype', 0), 'requiredPaths', J$.T(10569, function requiredPaths(invalidate) {
                jalangiLabel2602:
                    while (true) {
                        try {
                            J$.Fe(10505, arguments.callee, this, arguments);
                            arguments = J$.N(10513, 'arguments', arguments, 4);
                            requiredPaths = J$.N(10521, 'requiredPaths', requiredPaths, 0);
                            invalidate = J$.N(10529, 'invalidate', invalidate, 4);
                            J$.N(10537, 'paths', paths, 0);
                            J$.N(10545, 'i', i, 0);
                            J$.N(10553, 'ret', ret, 0);
                            J$.N(10561, 'path', path, 0);
                            if (J$.X1(20337, J$.C(712, J$.C(704, J$.G(10169, J$.R(10161, 'this', this, 0), '_requiredpaths', 0)) ? J$.U(746, '!', J$.R(10177, 'invalidate', invalidate, 0)) : J$._())))
                                return J$.X1(10209, J$.Rt(10201, J$.G(10193, J$.R(10185, 'this', this, 0), '_requiredpaths', 0)));
                            var paths = J$.X1(10281, J$.W(10273, 'paths', J$.M(10241, J$.R(10217, 'Object', Object, 2), 'keys', 0)(J$.G(10233, J$.R(10225, 'this', this, 0), 'paths', 0)), paths, 1)), i = J$.X1(10297, J$.W(10289, 'i', J$.G(10257, J$.R(10249, 'paths', paths, 0), 'length', 0), i, 1)), ret = J$.X1(10313, J$.W(10305, 'ret', J$.T(10265, [], 10, false), ret, 1));
                            while (J$.X1(20353, J$.C(728, J$.B(770, '+', i = J$.W(10337, 'i', J$.B(762, '-', J$.U(754, '+', J$.R(10329, 'i', i, 0)), J$.T(10321, 1, 22, false), 0), i, 0), J$.T(10345, 1, 22, false), 0)))) {
                                var path = J$.X1(10385, J$.W(10377, 'path', J$.G(10369, J$.R(10353, 'paths', paths, 0), J$.R(10361, 'i', i, 0), 4), path, 1));
                                if (J$.X1(20345, J$.C(720, J$.G(10425, J$.G(10417, J$.G(10401, J$.R(10393, 'this', this, 0), 'paths', 0), J$.R(10409, 'path', path, 0), 4), 'isRequired', 0))))
                                    J$.X1(10457, J$.M(10449, J$.R(10433, 'ret', ret, 0), 'push', 0)(J$.R(10441, 'path', path, 0)));
                            }
                            return J$.X1(10497, J$.Rt(10489, J$.P(10481, J$.R(10465, 'this', this, 0), '_requiredpaths', J$.R(10473, 'ret', ret, 0), 0)));
                        } catch (J$e) {
                            J$.Ex(20361, J$e);
                        } finally {
                            if (J$.Fr(20369))
                                continue jalangiLabel2602;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10505), 0));
            J$.X1(10745, J$.P(10737, J$.G(10601, J$.R(10593, 'Schema', Schema, 1), 'prototype', 0), 'indexedPaths', J$.T(10729, function indexedPaths() {
                jalangiLabel2603:
                    while (true) {
                        try {
                            J$.Fe(10705, arguments.callee, this, arguments);
                            arguments = J$.N(10713, 'arguments', arguments, 4);
                            indexedPaths = J$.N(10721, 'indexedPaths', indexedPaths, 0);
                            if (J$.X1(20377, J$.C(736, J$.G(10617, J$.R(10609, 'this', this, 0), '_indexedpaths', 0))))
                                return J$.X1(10649, J$.Rt(10641, J$.G(10633, J$.R(10625, 'this', this, 0), '_indexedpaths', 0)));
                            return J$.X1(10697, J$.Rt(10689, J$.P(10681, J$.R(10657, 'this', this, 0), '_indexedpaths', J$.M(10673, J$.R(10665, 'this', this, 0), 'indexes', 0)(), 0)));
                        } catch (J$e) {
                            J$.Ex(20385, J$e);
                        } finally {
                            if (J$.Fr(20393))
                                continue jalangiLabel2603;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 10705), 0));
            J$.X1(11097, J$.P(11089, J$.G(10761, J$.R(10753, 'Schema', Schema, 1), 'prototype', 0), 'pathType', J$.T(11081, function (path) {
                jalangiLabel2604:
                    while (true) {
                        try {
                            J$.Fe(11057, arguments.callee, this, arguments);
                            arguments = J$.N(11065, 'arguments', arguments, 4);
                            path = J$.N(11073, 'path', path, 4);
                            if (J$.X1(20401, J$.C(744, J$.B(778, 'in', J$.R(10769, 'path', path, 0), J$.G(10785, J$.R(10777, 'this', this, 0), 'paths', 0), 0))))
                                return J$.X1(10809, J$.Rt(10801, J$.T(10793, 'real', 21, false)));
                            if (J$.X1(20409, J$.C(752, J$.B(786, 'in', J$.R(10817, 'path', path, 0), J$.G(10833, J$.R(10825, 'this', this, 0), 'virtuals', 0), 0))))
                                return J$.X1(10857, J$.Rt(10849, J$.T(10841, 'virtual', 21, false)));
                            if (J$.X1(20417, J$.C(760, J$.B(794, 'in', J$.R(10865, 'path', path, 0), J$.G(10881, J$.R(10873, 'this', this, 0), 'nested', 0), 0))))
                                return J$.X1(10905, J$.Rt(10897, J$.T(10889, 'nested', 21, false)));
                            if (J$.X1(20425, J$.C(768, J$.B(802, 'in', J$.R(10913, 'path', path, 0), J$.G(10929, J$.R(10921, 'this', this, 0), 'subpaths', 0), 0))))
                                return J$.X1(10953, J$.Rt(10945, J$.T(10937, 'real', 21, false)));
                            if (J$.X1(20433, J$.C(776, J$.M(10977, J$.T(10961, /\.\d+\.|\.\d+$/, 14, false), 'test', 0)(J$.R(10969, 'path', path, 0))))) {
                                return J$.X1(11025, J$.Rt(11017, J$.F(11009, J$.R(10985, 'getPositionalPathType', getPositionalPathType, 1), 0)(J$.R(10993, 'this', this, 0), J$.R(11001, 'path', path, 0))));
                            } else {
                                return J$.X1(11049, J$.Rt(11041, J$.T(11033, 'adhocOrUndefined', 21, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(20441, J$e);
                        } finally {
                            if (J$.Fr(20449))
                                continue jalangiLabel2604;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11057), 0));
            J$.X1(11529, J$.P(11521, J$.G(11113, J$.R(11105, 'Schema', Schema, 1), 'prototype', 0), 'hasMixedParent', J$.T(11513, function (path) {
                jalangiLabel2605:
                    while (true) {
                        try {
                            J$.Fe(11473, arguments.callee, this, arguments);
                            arguments = J$.N(11481, 'arguments', arguments, 4);
                            path = J$.N(11489, 'path', path, 4);
                            J$.N(11497, 'subpaths', subpaths, 0);
                            J$.N(11505, 'i', i, 0);
                            var subpaths = J$.X1(11153, J$.W(11145, 'subpaths', J$.M(11137, J$.R(11121, 'path', path, 0), 'split', 0)(J$.T(11129, /\./g, 14, false)), subpaths, 1));
                            J$.X1(11177, path = J$.W(11169, 'path', J$.T(11161, '', 21, false), path, 0));
                            for (var i = J$.X1(11201, J$.W(11193, 'i', J$.T(11185, 0, 22, false), i, 1)); J$.X1(20473, J$.C(808, J$.B(810, '<', J$.R(11209, 'i', i, 0), J$.G(11225, J$.R(11217, 'subpaths', subpaths, 0), 'length', 0), 0))); J$.X1(20481, i = J$.W(11249, 'i', J$.B(826, '+', J$.U(818, '+', J$.R(11241, 'i', i, 0)), J$.T(11233, 1, 22, false), 0), i, 0))) {
                                J$.X1(11345, path = J$.W(11337, 'path', J$.X1(20457, J$.C(784, J$.B(834, '>', J$.R(11257, 'i', i, 0), J$.T(11265, 0, 22, false), 0))) ? J$.B(850, '+', J$.B(842, '+', J$.R(11273, 'path', path, 0), J$.T(11281, '.', 21, false), 0), J$.G(11305, J$.R(11289, 'subpaths', subpaths, 0), J$.R(11297, 'i', i, 0), 4), 0) : J$.G(11329, J$.R(11313, 'subpaths', subpaths, 0), J$.R(11321, 'i', i, 0), 4), path, 0));
                                if (J$.X1(20465, J$.C(800, J$.C(792, J$.B(858, 'in', J$.R(11353, 'path', path, 0), J$.G(11369, J$.R(11361, 'this', this, 0), 'paths', 0), 0)) ? J$.B(866, 'instanceof', J$.G(11401, J$.G(11385, J$.R(11377, 'this', this, 0), 'paths', 0), J$.R(11393, 'path', path, 0), 4), J$.G(11417, J$.R(11409, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 0), 0) : J$._()))) {
                                    return J$.X1(11441, J$.Rt(11433, J$.T(11425, true, 23, false)));
                                }
                            }
                            return J$.X1(11465, J$.Rt(11457, J$.T(11449, false, 23, false)));
                        } catch (J$e) {
                            J$.Ex(20489, J$e);
                        } finally {
                            if (J$.Fr(20497))
                                continue jalangiLabel2605;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 11473), 0));
            J$.X1(12801, J$.P(12793, J$.G(12665, J$.R(12657, 'Schema', Schema, 1), 'prototype', 0), 'queue', J$.T(12785, function (name, args) {
                jalangiLabel2608:
                    while (true) {
                        try {
                            J$.Fe(12753, arguments.callee, this, arguments);
                            arguments = J$.N(12761, 'arguments', arguments, 4);
                            name = J$.N(12769, 'name', name, 4);
                            args = J$.N(12777, 'args', args, 4);
                            J$.X1(12721, J$.M(12713, J$.G(12681, J$.R(12673, 'this', this, 0), 'callQueue', 0), 'push', 0)(J$.T(12705, [
                                J$.R(12689, 'name', name, 0),
                                J$.R(12697, 'args', args, 0)
                            ], 10, false)));
                            return J$.X1(12745, J$.Rt(12737, J$.R(12729, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20617, J$e);
                        } finally {
                            if (J$.Fr(20625))
                                continue jalangiLabel2608;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 12753), 0));
            J$.X1(13081, J$.P(13073, J$.G(12817, J$.R(12809, 'Schema', Schema, 1), 'prototype', 0), 'pre', J$.T(13065, function () {
                jalangiLabel2609:
                    while (true) {
                        try {
                            J$.Fe(13041, arguments.callee, this, arguments);
                            arguments = J$.N(13049, 'arguments', arguments, 4);
                            J$.N(13057, 'name', name, 0);
                            var name = J$.X1(12857, J$.W(12849, 'name', J$.G(12841, J$.R(12825, 'arguments', arguments, 2), J$.T(12833, 0, 22, false), 4), name, 1));
                            if (J$.X1(20633, J$.C(920, J$.G(12881, J$.R(12865, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 1), J$.R(12873, 'name', name, 0), 4)))) {
                                J$.X1(12961, J$.M(12953, J$.G(12913, J$.G(12905, J$.G(12897, J$.R(12889, 'this', this, 0), 's', 0), 'hooks', 0), 'pre', 0), 'apply', 0)(J$.G(12937, J$.G(12929, J$.R(12921, 'this', this, 0), 's', 0), 'hooks', 0), J$.R(12945, 'arguments', arguments, 2)));
                                return J$.X1(12985, J$.Rt(12977, J$.R(12969, 'this', this, 0)));
                            }
                            return J$.X1(13033, J$.Rt(13025, J$.M(13017, J$.R(12993, 'this', this, 0), 'queue', 0)(J$.T(13001, 'pre', 21, false), J$.R(13009, 'arguments', arguments, 2))));
                        } catch (J$e) {
                            J$.Ex(20641, J$e);
                        } finally {
                            if (J$.Fr(20649))
                                continue jalangiLabel2609;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13041), 0));
            J$.X1(13809, J$.P(13801, J$.G(13097, J$.R(13089, 'Schema', Schema, 1), 'prototype', 0), 'post', J$.T(13793, function (method, fn) {
                jalangiLabel2613:
                    while (true) {
                        try {
                            J$.Fe(13761, arguments.callee, this, arguments);
                            arguments = J$.N(13769, 'arguments', arguments, 4);
                            method = J$.N(13777, 'method', method, 4);
                            fn = J$.N(13785, 'fn', fn, 4);
                            if (J$.X1(20657, J$.C(928, J$.G(13121, J$.R(13105, 'IS_QUERY_HOOK', IS_QUERY_HOOK, 1), J$.R(13113, 'method', method, 0), 4)))) {
                                J$.X1(13201, J$.M(13193, J$.G(13153, J$.G(13145, J$.G(13137, J$.R(13129, 'this', this, 0), 's', 0), 'hooks', 0), 'post', 0), 'apply', 0)(J$.G(13177, J$.G(13169, J$.R(13161, 'this', this, 0), 's', 0), 'hooks', 0), J$.R(13185, 'arguments', arguments, 2)));
                                return J$.X1(13225, J$.Rt(13217, J$.R(13209, 'this', this, 0)));
                            }
                            if (J$.X1(20681, J$.C(936, J$.B(978, '<', J$.G(13241, J$.R(13233, 'fn', fn, 0), 'length', 0), J$.T(13249, 2, 22, false), 0)))) {
                                return J$.X1(13401, J$.Rt(13393, J$.M(13385, J$.R(13257, 'this', this, 0), 'queue', 0)(J$.T(13265, 'on', 21, false), J$.T(13377, [
                                    J$.G(13289, J$.R(13273, 'arguments', arguments, 2), J$.T(13281, 0, 22, false), 4),
                                    J$.T(13369, function (doc) {
                                        jalangiLabel2610:
                                            while (true) {
                                                try {
                                                    J$.Fe(13345, arguments.callee, this, arguments);
                                                    arguments = J$.N(13353, 'arguments', arguments, 4);
                                                    doc = J$.N(13361, 'doc', doc, 4);
                                                    return J$.X1(13337, J$.Rt(13329, J$.M(13321, J$.R(13297, 'fn', fn, 0), 'call', 0)(J$.R(13305, 'doc', doc, 0), J$.R(13313, 'doc', doc, 0))));
                                                } catch (J$e) {
                                                    J$.Ex(20665, J$e);
                                                } finally {
                                                    if (J$.Fr(20673))
                                                        continue jalangiLabel2610;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 13345)
                                ], 10, false))));
                            }
                            return J$.X1(13753, J$.Rt(13745, J$.M(13737, J$.R(13409, 'this', this, 0), 'queue', 0)(J$.T(13417, 'post', 21, false), J$.T(13729, [
                                J$.G(13441, J$.R(13425, 'arguments', arguments, 2), J$.T(13433, 0, 22, false), 4),
                                J$.T(13721, function (next) {
                                    jalangiLabel2612:
                                        while (true) {
                                            try {
                                                J$.Fe(13681, arguments.callee, this, arguments);
                                                arguments = J$.N(13689, 'arguments', arguments, 4);
                                                next = J$.N(13697, 'next', next, 4);
                                                J$.N(13705, 'self', self, 0);
                                                J$.N(13713, 'args', args, 0);
                                                var self = J$.X1(13465, J$.W(13457, 'self', J$.R(13449, 'this', this, 0), self, 1));
                                                var args = J$.X1(13529, J$.W(13521, 'args', J$.M(13513, J$.G(13489, J$.G(13481, J$.R(13473, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(13497, 'arguments', arguments, 2), J$.T(13505, 1, 22, false)), args, 1));
                                                J$.X1(13673, J$.M(13665, J$.R(13537, 'fn', fn, 0), 'call', 0)(J$.R(13545, 'this', this, 0), J$.R(13553, 'this', this, 0), J$.T(13657, function (err) {
                                                    jalangiLabel2611:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(13633, arguments.callee, this, arguments);
                                                                arguments = J$.N(13641, 'arguments', arguments, 4);
                                                                err = J$.N(13649, 'err', err, 4);
                                                                return J$.X1(13625, J$.Rt(13617, J$.M(13609, J$.R(13561, 'next', next, 0), 'apply', 0)(J$.R(13569, 'self', self, 0), J$.M(13601, J$.T(13585, [J$.R(13577, 'err', err, 0)], 10, false), 'concat', 0)(J$.R(13593, 'args', args, 0)))));
                                                            } catch (J$e) {
                                                                J$.Ex(20689, J$e);
                                                            } finally {
                                                                if (J$.Fr(20697))
                                                                    continue jalangiLabel2611;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 13633)));
                                            } catch (J$e) {
                                                J$.Ex(20705, J$e);
                                            } finally {
                                                if (J$.Fr(20713))
                                                    continue jalangiLabel2612;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 13681)
                            ], 10, false))));
                        } catch (J$e) {
                            J$.Ex(20721, J$e);
                        } finally {
                            if (J$.Fr(20729))
                                continue jalangiLabel2613;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13761), 0));
            J$.X1(13945, J$.P(13937, J$.G(13825, J$.R(13817, 'Schema', Schema, 1), 'prototype', 0), 'plugin', J$.T(13929, function (fn, opts) {
                jalangiLabel2614:
                    while (true) {
                        try {
                            J$.Fe(13897, arguments.callee, this, arguments);
                            arguments = J$.N(13905, 'arguments', arguments, 4);
                            fn = J$.N(13913, 'fn', fn, 4);
                            opts = J$.N(13921, 'opts', opts, 4);
                            J$.X1(13865, J$.F(13857, J$.R(13833, 'fn', fn, 0), 0)(J$.R(13841, 'this', this, 0), J$.R(13849, 'opts', opts, 0)));
                            return J$.X1(13889, J$.Rt(13881, J$.R(13873, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20737, J$e);
                        } finally {
                            if (J$.Fr(20745))
                                continue jalangiLabel2614;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 13897), 0));
            J$.X1(14209, J$.P(14201, J$.G(13961, J$.R(13953, 'Schema', Schema, 1), 'prototype', 0), 'method', J$.T(14193, function (name, fn) {
                jalangiLabel2615:
                    while (true) {
                        try {
                            J$.Fe(14153, arguments.callee, this, arguments);
                            arguments = J$.N(14161, 'arguments', arguments, 4);
                            name = J$.N(14169, 'name', name, 4);
                            fn = J$.N(14177, 'fn', fn, 4);
                            J$.N(14185, 'i', i, 0);
                            if (J$.X1(20753, J$.C(944, J$.B(994, '!=', J$.T(13969, 'string', 21, false), J$.U(986, 'typeof', J$.R(13977, 'name', name, 0)), 0))))
                                for (J$._tm_p in J$.H(14057, J$.R(13985, 'name', name, 0))) {
                                var i = J$.X1(14073, J$.W(14065, 'i', J$._tm_p, i, 1));
                                {
                                    J$.X1(14049, J$.P(14041, J$.G(14001, J$.R(13993, 'this', this, 0), 'methods', 0), J$.R(14009, 'i', i, 0), J$.G(14033, J$.R(14017, 'name', name, 0), J$.R(14025, 'i', i, 0), 4), 2));
                                }
                            }
                            else
                                J$.X1(14121, J$.P(14113, J$.G(14089, J$.R(14081, 'this', this, 0), 'methods', 0), J$.R(14097, 'name', name, 0), J$.R(14105, 'fn', fn, 0), 2));
                            return J$.X1(14145, J$.Rt(14137, J$.R(14129, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20761, J$e);
                        } finally {
                            if (J$.Fr(20769))
                                continue jalangiLabel2615;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14153), 0));
            J$.X1(14473, J$.P(14465, J$.G(14225, J$.R(14217, 'Schema', Schema, 1), 'prototype', 0), 'static', J$.T(14457, function (name, fn) {
                jalangiLabel2616:
                    while (true) {
                        try {
                            J$.Fe(14417, arguments.callee, this, arguments);
                            arguments = J$.N(14425, 'arguments', arguments, 4);
                            name = J$.N(14433, 'name', name, 4);
                            fn = J$.N(14441, 'fn', fn, 4);
                            J$.N(14449, 'i', i, 0);
                            if (J$.X1(20777, J$.C(952, J$.B(1010, '!=', J$.T(14233, 'string', 21, false), J$.U(1002, 'typeof', J$.R(14241, 'name', name, 0)), 0))))
                                for (J$._tm_p in J$.H(14321, J$.R(14249, 'name', name, 0))) {
                                var i = J$.X1(14337, J$.W(14329, 'i', J$._tm_p, i, 1));
                                {
                                    J$.X1(14313, J$.P(14305, J$.G(14265, J$.R(14257, 'this', this, 0), 'statics', 0), J$.R(14273, 'i', i, 0), J$.G(14297, J$.R(14281, 'name', name, 0), J$.R(14289, 'i', i, 0), 4), 2));
                                }
                            }
                            else
                                J$.X1(14385, J$.P(14377, J$.G(14353, J$.R(14345, 'this', this, 0), 'statics', 0), J$.R(14361, 'name', name, 0), J$.R(14369, 'fn', fn, 0), 2));
                            return J$.X1(14409, J$.Rt(14401, J$.R(14393, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20785, J$e);
                        } finally {
                            if (J$.Fr(20793))
                                continue jalangiLabel2616;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14417), 0));
            J$.X1(14705, J$.P(14697, J$.G(14489, J$.R(14481, 'Schema', Schema, 1), 'prototype', 0), 'index', J$.T(14689, function (fields, options) {
                jalangiLabel2617:
                    while (true) {
                        try {
                            J$.Fe(14657, arguments.callee, this, arguments);
                            arguments = J$.N(14665, 'arguments', arguments, 4);
                            fields = J$.N(14673, 'fields', fields, 4);
                            options = J$.N(14681, 'options', options, 4);
                            J$.X1(14521, J$.C(960, J$.R(14497, 'options', options, 0)) ? J$._() : options = J$.W(14513, 'options', J$.T(14505, {}, 11, false), options, 0));
                            if (J$.X1(20801, J$.C(968, J$.G(14537, J$.R(14529, 'options', options, 0), 'expires', 0))))
                                J$.X1(14569, J$.M(14561, J$.R(14545, 'utils', utils, 1), 'expires', 0)(J$.R(14553, 'options', options, 0)));
                            J$.X1(14625, J$.M(14617, J$.G(14585, J$.R(14577, 'this', this, 0), '_indexes', 0), 'push', 0)(J$.T(14609, [
                                J$.R(14593, 'fields', fields, 0),
                                J$.R(14601, 'options', options, 0)
                            ], 10, false)));
                            return J$.X1(14649, J$.Rt(14641, J$.R(14633, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20809, J$e);
                        } finally {
                            if (J$.Fr(20817))
                                continue jalangiLabel2617;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 14657), 0));
            J$.X1(15105, J$.P(15097, J$.G(14721, J$.R(14713, 'Schema', Schema, 1), 'prototype', 0), 'set', J$.T(15089, function (key, value, _tags) {
                jalangiLabel2618:
                    while (true) {
                        try {
                            J$.Fe(15049, arguments.callee, this, arguments);
                            arguments = J$.N(15057, 'arguments', arguments, 4);
                            key = J$.N(15065, 'key', key, 4);
                            value = J$.N(15073, 'value', value, 4);
                            _tags = J$.N(15081, '_tags', _tags, 4);
                            if (J$.X1(20825, J$.C(976, J$.B(1018, '===', J$.T(14729, 1, 22, false), J$.G(14745, J$.R(14737, 'arguments', arguments, 2), 'length', 0), 0)))) {
                                return J$.X1(14793, J$.Rt(14785, J$.G(14777, J$.G(14761, J$.R(14753, 'this', this, 0), 'options', 0), J$.R(14769, 'key', key, 0), 4)));
                            }
                            switch (J$.X1(20841, J$.C1(992, J$.R(14801, 'key', key, 0)))) {
                            case J$.X1(20849, J$.C2(1000, J$.T(14881, 'read', 21, false))):
                                J$.X1(14873, J$.P(14865, J$.G(14817, J$.R(14809, 'this', this, 0), 'options', 0), J$.R(14825, 'key', key, 0), J$.F(14857, J$.R(14833, 'readPref', readPref, 1), 0)(J$.R(14841, 'value', value, 0), J$.R(14849, '_tags', _tags, 0)), 2));
                                break;
                            case J$.X1(20857, J$.C2(1008, J$.T(14969, 'safe', 21, false))):
                                J$.X1(14961, J$.P(14953, J$.G(14897, J$.R(14889, 'this', this, 0), 'options', 0), J$.R(14905, 'key', key, 0), J$.X1(20833, J$.C(984, J$.B(1026, '===', J$.T(14913, false, 23, false), J$.R(14921, 'value', value, 0), 0))) ? J$.T(14937, {
                                    w: J$.T(14929, 0, 22, false)
                                }, 11, false) : J$.R(14945, 'value', value, 0), 2));
                                break;
                            default:
                                J$.X1(15017, J$.P(15009, J$.G(14985, J$.R(14977, 'this', this, 0), 'options', 0), J$.R(14993, 'key', key, 0), J$.R(15001, 'value', value, 0), 2));
                            }
                            return J$.X1(15041, J$.Rt(15033, J$.R(15025, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(20865, J$e);
                        } finally {
                            if (J$.Fr(20873))
                                continue jalangiLabel2618;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15049), 0));
            J$.X1(15217, J$.P(15209, J$.G(15121, J$.R(15113, 'Schema', Schema, 1), 'prototype', 0), 'get', J$.T(15201, function (key) {
                jalangiLabel2619:
                    while (true) {
                        try {
                            J$.Fe(15177, arguments.callee, this, arguments);
                            arguments = J$.N(15185, 'arguments', arguments, 4);
                            key = J$.N(15193, 'key', key, 4);
                            return J$.X1(15169, J$.Rt(15161, J$.G(15153, J$.G(15137, J$.R(15129, 'this', this, 0), 'options', 0), J$.R(15145, 'key', key, 0), 4)));
                        } catch (J$e) {
                            J$.Ex(20881, J$e);
                        } finally {
                            if (J$.Fr(20889))
                                continue jalangiLabel2619;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 15177), 0));
            var indexTypes = J$.X1(15257, J$.W(15249, 'indexTypes', J$.M(15241, J$.T(15225, '2d 2dsphere hashed text', 21, false), 'split', 0)(J$.T(15233, ' ', 21, false)), indexTypes, 3));
            J$.X1(15417, J$.M(15409, J$.R(15265, 'Object', Object, 2), 'defineProperty', 0)(J$.R(15273, 'Schema', Schema, 1), J$.T(15281, 'indexTypes', 21, false), J$.T(15401, {
                get: J$.T(15329, function () {
                    jalangiLabel2620:
                        while (true) {
                            try {
                                J$.Fe(15313, arguments.callee, this, arguments);
                                arguments = J$.N(15321, 'arguments', arguments, 4);
                                return J$.X1(15305, J$.Rt(15297, J$.R(15289, 'indexTypes', indexTypes, 1)));
                            } catch (J$e) {
                                J$.Ex(20897, J$e);
                            } finally {
                                if (J$.Fr(20905))
                                    continue jalangiLabel2620;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 15313),
                set: J$.T(15393, function () {
                    jalangiLabel2621:
                        while (true) {
                            try {
                                J$.Fe(15377, arguments.callee, this, arguments);
                                arguments = J$.N(15385, 'arguments', arguments, 4);
                                throw J$.X1(15369, J$.Th(15361, J$.F(15353, J$.R(15337, 'Error', Error, 2), 1)(J$.T(15345, 'Cannot overwrite Schema.indexTypes', 21, false))));
                            } catch (J$e) {
                                J$.Ex(20913, J$e);
                            } finally {
                                if (J$.Fr(20921))
                                    continue jalangiLabel2621;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 15377)
            }, 11, false)));
            J$.X1(17601, J$.P(17593, J$.G(15433, J$.R(15425, 'Schema', Schema, 1), 'prototype', 0), 'indexes', J$.T(17585, function () {
                jalangiLabel2625:
                    while (true) {
                        try {
                            J$.Fe(17529, arguments.callee, this, arguments);
                            function fixSubIndexPaths(schema, prefix) {
                                jalangiLabel2624:
                                    while (true) {
                                        try {
                                            J$.Fe(17425, arguments.callee, this, arguments);
                                            arguments = J$.N(17433, 'arguments', arguments, 4);
                                            schema = J$.N(17441, 'schema', schema, 4);
                                            prefix = J$.N(17449, 'prefix', prefix, 4);
                                            J$.N(17457, 'subindexes', subindexes, 0);
                                            J$.N(17465, 'len', len, 0);
                                            J$.N(17473, 'indexObj', indexObj, 0);
                                            J$.N(17481, 'newindex', newindex, 0);
                                            J$.N(17489, 'klen', klen, 0);
                                            J$.N(17497, 'keys', keys, 0);
                                            J$.N(17505, 'key', key, 0);
                                            J$.N(17513, 'i', i, 0);
                                            J$.N(17521, 'j', j, 0);
                                            var subindexes = J$.X1(16937, J$.W(16929, 'subindexes', J$.G(16897, J$.R(16889, 'schema', schema, 0), '_indexes', 0), subindexes, 1)), len = J$.X1(16953, J$.W(16945, 'len', J$.G(16913, J$.R(16905, 'subindexes', subindexes, 0), 'length', 0), len, 1)), indexObj, newindex, klen, keys, key, i = J$.X1(16969, J$.W(16961, 'i', J$.T(16921, 0, 22, false), i, 1)), j;
                                            for (J$.X1(21097, i = J$.W(16985, 'i', J$.T(16977, 0, 22, false), i, 0)); J$.X1(21089, J$.C(1144, J$.B(1178, '<', J$.R(16993, 'i', i, 0), J$.R(17001, 'len', len, 0), 0))); J$.X1(21105, i = J$.W(17025, 'i', J$.B(1194, '+', J$.U(1186, '+', J$.R(17017, 'i', i, 0)), J$.T(17009, 1, 22, false), 0), i, 0))) {
                                                J$.X1(17081, indexObj = J$.W(17073, 'indexObj', J$.G(17065, J$.G(17049, J$.R(17033, 'subindexes', subindexes, 0), J$.R(17041, 'i', i, 0), 4), J$.T(17057, 0, 22, false), 4), indexObj, 0));
                                                J$.X1(17121, keys = J$.W(17113, 'keys', J$.M(17105, J$.R(17089, 'Object', Object, 2), 'keys', 0)(J$.R(17097, 'indexObj', indexObj, 0)), keys, 0));
                                                J$.X1(17153, klen = J$.W(17145, 'klen', J$.G(17137, J$.R(17129, 'keys', keys, 0), 'length', 0), klen, 0));
                                                J$.X1(17177, newindex = J$.W(17169, 'newindex', J$.T(17161, {}, 11, false), newindex, 0));
                                                for (J$.X1(21073, j = J$.W(17193, 'j', J$.T(17185, 0, 22, false), j, 0)); J$.X1(21065, J$.C(1136, J$.B(1202, '<', J$.R(17201, 'j', j, 0), J$.R(17209, 'klen', klen, 0), 0))); J$.X1(21081, j = J$.W(17233, 'j', J$.B(1218, '+', J$.U(1210, '+', J$.R(17225, 'j', j, 0)), J$.T(17217, 1, 22, false), 0), j, 0))) {
                                                    J$.X1(17273, key = J$.W(17265, 'key', J$.G(17257, J$.R(17241, 'keys', keys, 0), J$.R(17249, 'j', j, 0), 4), key, 0));
                                                    J$.X1(17337, J$.P(17329, J$.R(17281, 'newindex', newindex, 0), J$.B(1226, '+', J$.R(17289, 'prefix', prefix, 0), J$.R(17297, 'key', key, 0), 0), J$.G(17321, J$.R(17305, 'indexObj', indexObj, 0), J$.R(17313, 'key', key, 0), 4), 2));
                                                }
                                                J$.X1(17417, J$.M(17409, J$.R(17345, 'indexes', indexes, 0), 'push', 0)(J$.T(17401, [
                                                    J$.R(17353, 'newindex', newindex, 0),
                                                    J$.G(17393, J$.G(17377, J$.R(17361, 'subindexes', subindexes, 0), J$.R(17369, 'i', i, 0), 4), J$.T(17385, 1, 22, false), 4)
                                                ], 10, false)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21113, J$e);
                                        } finally {
                                            if (J$.Fr(21121))
                                                continue jalangiLabel2624;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(17537, 'arguments', arguments, 4);
                            J$.N(17545, 'indexes', indexes, 0);
                            J$.N(17553, 'seenPrefix', seenPrefix, 0);
                            J$.N(17561, 'collectIndexes', collectIndexes, 0);
                            fixSubIndexPaths = J$.N(17577, 'fixSubIndexPaths', J$.T(17569, fixSubIndexPaths, 12, false, 17425), 0);
                            J$.X1(15449, J$.T(15441, 'use strict', 21, false));
                            var indexes = J$.X1(15473, J$.W(15465, 'indexes', J$.T(15457, [], 10, false), indexes, 1));
                            var seenPrefix = J$.X1(15497, J$.W(15489, 'seenPrefix', J$.T(15481, {}, 11, false), seenPrefix, 1));
                            var collectIndexes = J$.X1(16825, J$.W(16817, 'collectIndexes', J$.T(16809, function (schema, prefix) {
                                jalangiLabel2623:
                                    while (true) {
                                        try {
                                            J$.Fe(16705, arguments.callee, this, arguments);
                                            arguments = J$.N(16713, 'arguments', arguments, 4);
                                            schema = J$.N(16721, 'schema', schema, 4);
                                            prefix = J$.N(16729, 'prefix', prefix, 4);
                                            J$.N(16737, 'key', key, 0);
                                            J$.N(16745, 'path', path, 0);
                                            J$.N(16753, 'index', index, 0);
                                            J$.N(16761, 'field', field, 0);
                                            J$.N(16769, 'isObject', isObject, 0);
                                            J$.N(16777, 'options', options, 0);
                                            J$.N(16785, 'type', type, 0);
                                            J$.N(16793, 'keys', keys, 0);
                                            J$.N(16801, 'i', i, 0);
                                            if (J$.X1(20929, J$.C(1016, J$.G(15521, J$.R(15505, 'seenPrefix', seenPrefix, 0), J$.R(15513, 'prefix', prefix, 0), 4)))) {
                                                return J$.X1(15537, J$.Rt(15529, undefined));
                                            }
                                            J$.X1(15577, J$.P(15569, J$.R(15545, 'seenPrefix', seenPrefix, 0), J$.R(15553, 'prefix', prefix, 0), J$.T(15561, true, 23, false), 2));
                                            J$.X1(15609, prefix = J$.W(15601, 'prefix', J$.C(1024, J$.R(15585, 'prefix', prefix, 0)) ? J$._() : J$.T(15593, '', 21, false), prefix, 0));
                                            var key, path, index, field, isObject, options, type;
                                            var keys = J$.X1(15657, J$.W(15649, 'keys', J$.M(15641, J$.R(15617, 'Object', Object, 2), 'keys', 0)(J$.G(15633, J$.R(15625, 'schema', schema, 0), 'paths', 0)), keys, 1));
                                            for (var i = J$.X1(15681, J$.W(15673, 'i', J$.T(15665, 0, 22, false), i, 1)); J$.X1(21001, J$.C(1112, J$.B(1034, '<', J$.R(15689, 'i', i, 0), J$.G(15705, J$.R(15697, 'keys', keys, 0), 'length', 0), 0))); J$.X1(21009, i = J$.W(15729, 'i', J$.B(1050, '+', J$.U(1042, '+', J$.R(15721, 'i', i, 0)), J$.T(15713, 1, 22, false), 0), i, 0))) {
                                                J$.X1(15769, key = J$.W(15761, 'key', J$.G(15753, J$.R(15737, 'keys', keys, 0), J$.R(15745, 'i', i, 0), 4), key, 0));
                                                J$.X1(15817, path = J$.W(15809, 'path', J$.G(15801, J$.G(15785, J$.R(15777, 'schema', schema, 0), 'paths', 0), J$.R(15793, 'key', key, 0), 4), path, 0));
                                                if (J$.X1(20993, J$.C(1104, J$.B(1058, 'instanceof', J$.R(15825, 'path', path, 0), J$.G(15841, J$.R(15833, 'MongooseTypes', MongooseTypes, 1), 'DocumentArray', 0), 0)))) {
                                                    J$.X1(15897, J$.F(15889, J$.R(15849, 'collectIndexes', collectIndexes, 0), 0)(J$.G(15865, J$.R(15857, 'path', path, 0), 'schema', 0), J$.B(1066, '+', J$.R(15873, 'key', key, 0), J$.T(15881, '.', 21, false), 0)));
                                                } else if (J$.X1(20985, J$.C(1096, J$.G(15913, J$.R(15905, 'path', path, 0), '$isSingleNested', 0)))) {
                                                    J$.X1(15969, J$.F(15961, J$.R(15921, 'collectIndexes', collectIndexes, 0), 0)(J$.G(15937, J$.R(15929, 'path', path, 0), 'schema', 0), J$.B(1074, '+', J$.R(15945, 'key', key, 0), J$.T(15953, '.', 21, false), 0)));
                                                } else {
                                                    J$.X1(16001, index = J$.W(15993, 'index', J$.G(15985, J$.R(15977, 'path', path, 0), '_index', 0), index, 0));
                                                    if (J$.X1(20977, J$.C(1088, J$.C(1032, J$.B(1082, '!==', J$.T(16009, false, 23, false), J$.R(16017, 'index', index, 0), 0)) ? J$.B(1090, '!=', J$.T(16025, null, 25, false), J$.R(16033, 'index', index, 0), 0) : J$._()))) {
                                                        J$.X1(16057, field = J$.W(16049, 'field', J$.T(16041, {}, 11, false), field, 0));
                                                        J$.X1(16097, isObject = J$.W(16089, 'isObject', J$.M(16081, J$.R(16065, 'utils', utils, 1), 'isObject', 0)(J$.R(16073, 'index', index, 0)), isObject, 0));
                                                        J$.X1(16137, options = J$.W(16129, 'options', J$.X1(20937, J$.C(1040, J$.R(16105, 'isObject', isObject, 0))) ? J$.R(16113, 'index', index, 0) : J$.T(16121, {}, 11, false), options, 0));
                                                        J$.X1(16209, type = J$.W(16201, 'type', J$.X1(20953, J$.C(1056, J$.B(1106, '==', J$.T(16145, 'string', 21, false), J$.U(1098, 'typeof', J$.R(16153, 'index', index, 0)), 0))) ? J$.R(16161, 'index', index, 0) : J$.X1(20945, J$.C(1048, J$.R(16169, 'isObject', isObject, 0))) ? J$.G(16185, J$.R(16177, 'index', index, 0), 'type', 0) : J$.T(16193, false, 23, false), type, 0));
                                                        if (J$.X1(20961, J$.C(1072, J$.C(1064, J$.R(16217, 'type', type, 0)) ? J$.U(1114, '~', J$.M(16249, J$.G(16233, J$.R(16225, 'Schema', Schema, 1), 'indexTypes', 0), 'indexOf', 0)(J$.R(16241, 'type', type, 0))) : J$._()))) {
                                                            J$.X1(16297, J$.P(16289, J$.R(16257, 'field', field, 0), J$.B(1122, '+', J$.R(16265, 'prefix', prefix, 0), J$.R(16273, 'key', key, 0), 0), J$.R(16281, 'type', type, 0), 2));
                                                        } else {
                                                            J$.X1(16345, J$.P(16337, J$.R(16305, 'field', field, 0), J$.B(1130, '+', J$.R(16313, 'prefix', prefix, 0), J$.R(16321, 'key', key, 0), 0), J$.T(16329, 1, 22, false), 2));
                                                        }
                                                        J$.X1(16361, J$.B(1138, 'delete', J$.R(16353, 'options', options, 0), 'type', 0));
                                                        if (J$.X1(20969, J$.C(1080, J$.U(1154, '!', J$.B(1146, 'in', J$.T(16369, 'background', 21, false), J$.R(16377, 'options', options, 0), 0))))) {
                                                            J$.X1(16409, J$.P(16401, J$.R(16385, 'options', options, 0), 'background', J$.T(16393, true, 23, false), 0));
                                                        }
                                                        J$.X1(16457, J$.M(16449, J$.R(16417, 'indexes', indexes, 0), 'push', 0)(J$.T(16441, [
                                                            J$.R(16425, 'field', field, 0),
                                                            J$.R(16433, 'options', options, 0)
                                                        ], 10, false)));
                                                    }
                                                }
                                            }
                                            if (J$.X1(21041, J$.C(1128, J$.R(16465, 'prefix', prefix, 0)))) {
                                                J$.X1(16505, J$.F(16497, J$.R(16473, 'fixSubIndexPaths', fixSubIndexPaths, 0), 0)(J$.R(16481, 'schema', schema, 0), J$.R(16489, 'prefix', prefix, 0)));
                                            } else {
                                                J$.X1(16649, J$.M(16641, J$.G(16521, J$.R(16513, 'schema', schema, 0), '_indexes', 0), 'forEach', 0)(J$.T(16633, function (index) {
                                                    jalangiLabel2622:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(16609, arguments.callee, this, arguments);
                                                                arguments = J$.N(16617, 'arguments', arguments, 4);
                                                                index = J$.N(16625, 'index', index, 4);
                                                                if (J$.X1(21017, J$.C(1120, J$.U(1170, '!', J$.B(1162, 'in', J$.T(16529, 'background', 21, false), J$.G(16553, J$.R(16537, 'index', index, 0), J$.T(16545, 1, 22, false), 4), 0)))))
                                                                    J$.X1(16601, J$.P(16593, J$.G(16577, J$.R(16561, 'index', index, 0), J$.T(16569, 1, 22, false), 4), 'background', J$.T(16585, true, 23, false), 0));
                                                            } catch (J$e) {
                                                                J$.Ex(21025, J$e);
                                                            } finally {
                                                                if (J$.Fr(21033))
                                                                    continue jalangiLabel2622;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 16609)));
                                                J$.X1(16697, indexes = J$.W(16689, 'indexes', J$.M(16681, J$.R(16657, 'indexes', indexes, 0), 'concat', 0)(J$.G(16673, J$.R(16665, 'schema', schema, 0), '_indexes', 0)), indexes, 0));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21049, J$e);
                                        } finally {
                                            if (J$.Fr(21057))
                                                continue jalangiLabel2623;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 16705), collectIndexes, 1));
                            J$.X1(16857, J$.F(16849, J$.R(16833, 'collectIndexes', collectIndexes, 0), 0)(J$.R(16841, 'this', this, 0)));
                            return J$.X1(16881, J$.Rt(16873, J$.R(16865, 'indexes', indexes, 0)));
                        } catch (J$e) {
                            J$.Ex(21129, J$e);
                        } finally {
                            if (J$.Fr(21137))
                                continue jalangiLabel2625;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17529), 0));
            J$.X1(18049, J$.P(18041, J$.G(17617, J$.R(17609, 'Schema', Schema, 1), 'prototype', 0), 'virtual', J$.T(18033, function (name, options) {
                jalangiLabel2627:
                    while (true) {
                        try {
                            J$.Fe(17985, arguments.callee, this, arguments);
                            arguments = J$.N(17993, 'arguments', arguments, 4);
                            name = J$.N(18001, 'name', name, 4);
                            options = J$.N(18009, 'options', options, 4);
                            J$.N(18017, 'virtuals', virtuals, 0);
                            J$.N(18025, 'parts', parts, 0);
                            var virtuals = J$.X1(17649, J$.W(17641, 'virtuals', J$.G(17633, J$.R(17625, 'this', this, 0), 'virtuals', 0), virtuals, 1));
                            var parts = J$.X1(17689, J$.W(17681, 'parts', J$.M(17673, J$.R(17657, 'name', name, 0), 'split', 0)(J$.T(17665, '.', 21, false)), parts, 1));
                            return J$.X1(17977, J$.Rt(17969, J$.P(17961, J$.R(17697, 'virtuals', virtuals, 0), J$.R(17705, 'name', name, 0), J$.M(17953, J$.R(17713, 'parts', parts, 0), 'reduce', 0)(J$.T(17929, function (mem, part, i) {
                                jalangiLabel2626:
                                    while (true) {
                                        try {
                                            J$.Fe(17889, arguments.callee, this, arguments);
                                            arguments = J$.N(17897, 'arguments', arguments, 4);
                                            mem = J$.N(17905, 'mem', mem, 4);
                                            part = J$.N(17913, 'part', part, 4);
                                            i = J$.N(17921, 'i', i, 4);
                                            J$.X1(17841, J$.C(1160, J$.G(17737, J$.R(17721, 'mem', mem, 0), J$.R(17729, 'part', part, 0), 4)) ? J$._() : J$.P(17833, J$.R(17745, 'mem', mem, 0), J$.R(17753, 'part', part, 0), J$.X1(21145, J$.C(1152, J$.B(1242, '===', J$.R(17761, 'i', i, 0), J$.B(1234, '-', J$.G(17777, J$.R(17769, 'parts', parts, 0), 'length', 0), J$.T(17785, 1, 22, false), 0), 0))) ? J$.F(17817, J$.R(17793, 'VirtualType', VirtualType, 1), 1)(J$.R(17801, 'options', options, 0), J$.R(17809, 'name', name, 0)) : J$.T(17825, {}, 11, false), 2));
                                            return J$.X1(17881, J$.Rt(17873, J$.G(17865, J$.R(17849, 'mem', mem, 0), J$.R(17857, 'part', part, 0), 4)));
                                        } catch (J$e) {
                                            J$.Ex(21153, J$e);
                                        } finally {
                                            if (J$.Fr(21161))
                                                continue jalangiLabel2626;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 17889), J$.G(17945, J$.R(17937, 'this', this, 0), 'tree', 0)), 2)));
                        } catch (J$e) {
                            J$.Ex(21169, J$e);
                        } finally {
                            if (J$.Fr(21177))
                                continue jalangiLabel2627;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 17985), 0));
            J$.X1(18161, J$.P(18153, J$.G(18065, J$.R(18057, 'Schema', Schema, 1), 'prototype', 0), 'virtualpath', J$.T(18145, function (name) {
                jalangiLabel2628:
                    while (true) {
                        try {
                            J$.Fe(18121, arguments.callee, this, arguments);
                            arguments = J$.N(18129, 'arguments', arguments, 4);
                            name = J$.N(18137, 'name', name, 4);
                            return J$.X1(18113, J$.Rt(18105, J$.G(18097, J$.G(18081, J$.R(18073, 'this', this, 0), 'virtuals', 0), J$.R(18089, 'name', name, 0), 4)));
                        } catch (J$e) {
                            J$.Ex(21185, J$e);
                        } finally {
                            if (J$.Fr(21193))
                                continue jalangiLabel2628;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18121), 0));
            J$.X1(18417, J$.P(18409, J$.G(18177, J$.R(18169, 'Schema', Schema, 1), 'prototype', 0), 'remove', J$.T(18401, function (path) {
                jalangiLabel2630:
                    while (true) {
                        try {
                            J$.Fe(18377, arguments.callee, this, arguments);
                            arguments = J$.N(18385, 'arguments', arguments, 4);
                            path = J$.N(18393, 'path', path, 4);
                            if (J$.X1(21201, J$.C(1168, J$.B(1258, '===', J$.U(1250, 'typeof', J$.R(18185, 'path', path, 0)), J$.T(18193, 'string', 21, false), 0)))) {
                                J$.X1(18225, path = J$.W(18217, 'path', J$.T(18209, [J$.R(18201, 'path', path, 0)], 10, false), path, 0));
                            }
                            if (J$.X1(21233, J$.C(1184, J$.M(18249, J$.R(18233, 'Array', Array, 2), 'isArray', 0)(J$.R(18241, 'path', path, 0))))) {
                                J$.X1(18369, J$.M(18361, J$.R(18257, 'path', path, 0), 'forEach', 0)(J$.T(18345, function (name) {
                                    jalangiLabel2629:
                                        while (true) {
                                            try {
                                                J$.Fe(18321, arguments.callee, this, arguments);
                                                arguments = J$.N(18329, 'arguments', arguments, 4);
                                                name = J$.N(18337, 'name', name, 4);
                                                if (J$.X1(21209, J$.C(1176, J$.M(18281, J$.R(18265, 'this', this, 0), 'path', 0)(J$.R(18273, 'name', name, 0))))) {
                                                    J$.X1(18313, J$.B(1266, 'delete', J$.G(18297, J$.R(18289, 'this', this, 0), 'paths', 0), J$.R(18305, 'name', name, 0), 4));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(21217, J$e);
                                            } finally {
                                                if (J$.Fr(21225))
                                                    continue jalangiLabel2629;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 18321), J$.R(18353, 'this', this, 0)));
                            }
                        } catch (J$e) {
                            J$.Ex(21241, J$e);
                        } finally {
                            if (J$.Fr(21249))
                                continue jalangiLabel2630;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 18377), 0));
            J$.X1(19233, J$.P(19225, J$.G(18433, J$.R(18425, 'Schema', Schema, 1), 'prototype', 0), '_getSchema', J$.T(19217, function (path) {
                jalangiLabel2632:
                    while (true) {
                        try {
                            J$.Fe(19177, arguments.callee, this, arguments);
                            arguments = J$.N(19185, 'arguments', arguments, 4);
                            path = J$.N(19193, 'path', path, 4);
                            J$.N(19201, 'schema', schema, 0);
                            J$.N(19209, 'pathschema', pathschema, 0);
                            var schema = J$.X1(18457, J$.W(18449, 'schema', J$.R(18441, 'this', this, 0), schema, 1));
                            var pathschema = J$.X1(18497, J$.W(18489, 'pathschema', J$.M(18481, J$.R(18465, 'schema', schema, 0), 'path', 0)(J$.R(18473, 'path', path, 0)), pathschema, 1));
                            if (J$.X1(21257, J$.C(1192, J$.R(18505, 'pathschema', pathschema, 0)))) {
                                return J$.X1(18529, J$.Rt(18521, J$.R(18513, 'pathschema', pathschema, 0)));
                            }
                            return J$.X1(19169, J$.Rt(19161, J$.F(19153, J$.T(19113, function search(parts, schema) {
                                jalangiLabel2631:
                                    while (true) {
                                        try {
                                            J$.Fe(19049, arguments.callee, this, arguments);
                                            arguments = J$.N(19057, 'arguments', arguments, 4);
                                            search = J$.N(19065, 'search', search, 0);
                                            parts = J$.N(19073, 'parts', parts, 4);
                                            schema = J$.N(19081, 'schema', schema, 4);
                                            J$.N(19089, 'p', p, 0);
                                            J$.N(19097, 'foundschema', foundschema, 0);
                                            J$.N(19105, 'trypath', trypath, 0);
                                            var p = J$.X1(18569, J$.W(18561, 'p', J$.B(1274, '+', J$.G(18545, J$.R(18537, 'parts', parts, 0), 'length', 0), J$.T(18553, 1, 22, false), 0), p, 1)), foundschema, trypath;
                                            while (J$.X1(21305, J$.C(1248, J$.B(1298, '+', p = J$.W(18593, 'p', J$.B(1290, '-', J$.U(1282, '+', J$.R(18585, 'p', p, 0)), J$.T(18577, 1, 22, false), 0), p, 0), J$.T(18601, 1, 22, false), 0)))) {
                                                J$.X1(18665, trypath = J$.W(18657, 'trypath', J$.M(18649, J$.M(18633, J$.R(18609, 'parts', parts, 0), 'slice', 0)(J$.T(18617, 0, 22, false), J$.R(18625, 'p', p, 0)), 'join', 0)(J$.T(18641, '.', 21, false)), trypath, 0));
                                                J$.X1(18705, foundschema = J$.W(18697, 'foundschema', J$.M(18689, J$.R(18673, 'schema', schema, 0), 'path', 0)(J$.R(18681, 'trypath', trypath, 0)), foundschema, 0));
                                                if (J$.X1(21297, J$.C(1240, J$.R(18713, 'foundschema', foundschema, 0)))) {
                                                    if (J$.X1(21289, J$.C(1232, J$.G(18729, J$.R(18721, 'foundschema', foundschema, 0), 'caster', 0)))) {
                                                        if (J$.X1(21265, J$.C(1200, J$.B(1306, 'instanceof', J$.G(18745, J$.R(18737, 'foundschema', foundschema, 0), 'caster', 0), J$.G(18761, J$.R(18753, 'MongooseTypes', MongooseTypes, 1), 'Mixed', 0), 0)))) {
                                                            return J$.X1(18793, J$.Rt(18785, J$.G(18777, J$.R(18769, 'foundschema', foundschema, 0), 'caster', 0)));
                                                        }
                                                        if (J$.X1(21281, J$.C(1224, J$.C(1208, J$.B(1314, '!==', J$.R(18801, 'p', p, 0), J$.G(18817, J$.R(18809, 'parts', parts, 0), 'length', 0), 0)) ? J$.G(18833, J$.R(18825, 'foundschema', foundschema, 0), 'schema', 0) : J$._()))) {
                                                            if (J$.X1(21273, J$.C(1216, J$.B(1322, '===', J$.T(18841, '$', 21, false), J$.G(18865, J$.R(18849, 'parts', parts, 0), J$.R(18857, 'p', p, 0), 4), 0)))) {
                                                                return J$.X1(18945, J$.Rt(18937, J$.F(18929, J$.R(18873, 'search', search, 0), 0)(J$.M(18905, J$.R(18881, 'parts', parts, 0), 'slice', 0)(J$.B(1330, '+', J$.R(18889, 'p', p, 0), J$.T(18897, 1, 22, false), 0)), J$.G(18921, J$.R(18913, 'foundschema', foundschema, 0), 'schema', 0))));
                                                            } else {
                                                                return J$.X1(19017, J$.Rt(19009, J$.F(19001, J$.R(18953, 'search', search, 0), 0)(J$.M(18977, J$.R(18961, 'parts', parts, 0), 'slice', 0)(J$.R(18969, 'p', p, 0)), J$.G(18993, J$.R(18985, 'foundschema', foundschema, 0), 'schema', 0))));
                                                            }
                                                        }
                                                    }
                                                    return J$.X1(19041, J$.Rt(19033, J$.R(19025, 'foundschema', foundschema, 0)));
                                                }
                                            }
                                        } catch (J$e) {
                                            J$.Ex(21313, J$e);
                                        } finally {
                                            if (J$.Fr(21321))
                                                continue jalangiLabel2631;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 19049), 0)(J$.M(19137, J$.R(19121, 'path', path, 0), 'split', 0)(J$.T(19129, '.', 21, false)), J$.R(19145, 'schema', schema, 0))));
                        } catch (J$e) {
                            J$.Ex(21329, J$e);
                        } finally {
                            if (J$.Fr(21337))
                                continue jalangiLabel2632;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 19177), 0));
            J$.X1(19273, J$.P(19265, J$.R(19241, 'module', module, 2), 'exports', exports = J$.W(19257, 'exports', J$.R(19249, 'Schema', Schema, 1), J$.I(typeof exports === 'undefined' ? undefined : exports), 4), 0));
            J$.X1(19329, J$.P(19321, J$.R(19281, 'Schema', Schema, 1), 'Types', MongooseTypes = J$.W(19313, 'MongooseTypes', J$.F(19305, J$.R(19289, 'require', require, 2), 0)(J$.T(19297, './schema/index', 21, false)), MongooseTypes, 2), 0));
            J$.X1(19369, J$.P(19361, J$.R(19337, 'exports', exports, 2), 'ObjectId', J$.G(19353, J$.R(19345, 'MongooseTypes', MongooseTypes, 1), 'ObjectId', 0), 0));
        } catch (J$e) {
            J$.Ex(21345, J$e);
        } finally {
            if (J$.Sr(21353)) {
                J$.L();
                continue jalangiLabel2633;
            } else {
                J$.L();
                break jalangiLabel2633;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
