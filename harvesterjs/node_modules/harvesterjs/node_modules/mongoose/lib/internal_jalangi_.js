J$.iids = {"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,20,3,27],"89":[3,28,3,44],"97":[3,20,3,45],"105":[3,20,3,45],"113":[3,20,3,45],"121":[4,20,4,32],"129":[4,38,4,47],"137":[4,49,4,57],"145":[4,59,4,65],"153":[4,67,4,76],"161":[4,78,4,86],"169":[4,20,4,87],"171":[4,20,4,37],"177":[4,20,4,87],"185":[4,20,4,87],"193":[5,1,5,7],"201":[5,28,5,41],"209":[5,28,5,41],"217":[5,1,5,41],"225":[5,1,5,42],"233":[7,5,7,9],"241":[7,23,7,32],"249":[7,5,7,32],"257":[7,5,7,33],"265":[8,5,8,9],"273":[8,21,8,30],"281":[8,5,8,30],"289":[8,5,8,31],"297":[9,5,9,9],"305":[9,21,9,30],"313":[9,5,9,30],"321":[9,5,9,31],"329":[10,5,10,9],"337":[10,22,10,31],"345":[10,5,10,31],"353":[10,5,10,32],"361":[11,5,11,9],"369":[11,28,11,37],"377":[11,5,11,37],"385":[11,5,11,38],"393":[12,5,12,9],"401":[12,23,12,32],"409":[12,5,12,32],"417":[12,5,12,33],"425":[13,5,13,9],"433":[13,21,13,30],"441":[13,5,13,30],"449":[13,5,13,31],"457":[14,5,14,9],"465":[14,22,14,31],"473":[14,5,14,31],"481":[14,5,14,32],"489":[15,5,15,9],"497":[15,20,15,29],"505":[15,5,15,29],"513":[15,5,15,30],"521":[16,5,16,9],"529":[16,20,16,22],"537":[16,5,16,22],"545":[16,5,16,23],"553":[17,5,17,9],"561":[17,16,17,25],"569":[17,5,17,25],"577":[17,5,17,26],"585":[18,5,18,9],"593":[18,21,18,30],"601":[18,5,18,30],"609":[18,5,18,31],"617":[19,5,19,9],"625":[19,22,19,31],"633":[19,5,19,31],"641":[19,5,19,32],"649":[20,5,20,9],"657":[20,25,20,30],"665":[20,5,20,30],"673":[20,5,20,31],"681":[21,5,21,9],"689":[21,18,21,27],"697":[21,5,21,27],"705":[21,5,21,28],"713":[22,5,22,9],"721":[22,28,22,40],"729":[22,24,22,42],"737":[22,5,22,42],"745":[22,5,22,43],"753":[23,5,23,9],"761":[23,26,23,35],"769":[23,5,23,35],"777":[23,5,23,36],"785":[24,5,24,9],"793":[24,21,24,30],"801":[24,5,24,30],"809":[24,5,24,31],"817":[6,1,25,2],"825":[6,1,25,2],"833":[1,1,25,2],"841":[1,1,25,2],"849":[1,1,25,2],"857":[1,1,25,2],"865":[1,1,25,2],"873":[6,1,25,2],"881":[1,1,25,2],"889":[6,1,25,2],"897":[6,1,25,2],"905":[1,1,25,2],"913":[1,1,25,2],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/internal.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/internal_jalangi_.js","code":"/*!\n * Dependencies\n */\n\nvar StateMachine = require('./statemachine');\nvar ActiveRoster = StateMachine.ctor('require', 'modify', 'init', 'default', 'ignore');\n\nmodule.exports = exports = InternalCache;\n\nfunction InternalCache() {\n  this.strictMode = undefined;\n  this.selected = undefined;\n  this.shardval = undefined;\n  this.saveError = undefined;\n  this.validationError = undefined;\n  this.adhocPaths = undefined;\n  this.removing = undefined;\n  this.inserting = undefined;\n  this.version = undefined;\n  this.getters = {};\n  this._id = undefined;\n  this.populate = undefined; // what we want to populate in this doc\n  this.populated = undefined;// the _ids that have been populated\n  this.wasPopulated = false; // if this doc was the result of a population\n  this.scope = undefined;\n  this.activePaths = new ActiveRoster;\n\n  // embedded docs\n  this.ownerDocument = undefined;\n  this.fullPath = undefined;\n}\n"};
jalangiLabel5027:
    while (true) {
        try {
            J$.Se(833, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/internal_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/internal.js');
            function InternalCache() {
                jalangiLabel5026:
                    while (true) {
                        try {
                            J$.Fe(817, arguments.callee, this, arguments);
                            arguments = J$.N(825, 'arguments', arguments, 4);
                            J$.X1(257, J$.P(249, J$.R(233, 'this', this, 0), 'strictMode', J$.T(241, undefined, 24, false), 0));
                            J$.X1(289, J$.P(281, J$.R(265, 'this', this, 0), 'selected', J$.T(273, undefined, 24, false), 0));
                            J$.X1(321, J$.P(313, J$.R(297, 'this', this, 0), 'shardval', J$.T(305, undefined, 24, false), 0));
                            J$.X1(353, J$.P(345, J$.R(329, 'this', this, 0), 'saveError', J$.T(337, undefined, 24, false), 0));
                            J$.X1(385, J$.P(377, J$.R(361, 'this', this, 0), 'validationError', J$.T(369, undefined, 24, false), 0));
                            J$.X1(417, J$.P(409, J$.R(393, 'this', this, 0), 'adhocPaths', J$.T(401, undefined, 24, false), 0));
                            J$.X1(449, J$.P(441, J$.R(425, 'this', this, 0), 'removing', J$.T(433, undefined, 24, false), 0));
                            J$.X1(481, J$.P(473, J$.R(457, 'this', this, 0), 'inserting', J$.T(465, undefined, 24, false), 0));
                            J$.X1(513, J$.P(505, J$.R(489, 'this', this, 0), 'version', J$.T(497, undefined, 24, false), 0));
                            J$.X1(545, J$.P(537, J$.R(521, 'this', this, 0), 'getters', J$.T(529, {}, 11, false), 0));
                            J$.X1(577, J$.P(569, J$.R(553, 'this', this, 0), '_id', J$.T(561, undefined, 24, false), 0));
                            J$.X1(609, J$.P(601, J$.R(585, 'this', this, 0), 'populate', J$.T(593, undefined, 24, false), 0));
                            J$.X1(641, J$.P(633, J$.R(617, 'this', this, 0), 'populated', J$.T(625, undefined, 24, false), 0));
                            J$.X1(673, J$.P(665, J$.R(649, 'this', this, 0), 'wasPopulated', J$.T(657, false, 23, false), 0));
                            J$.X1(705, J$.P(697, J$.R(681, 'this', this, 0), 'scope', J$.T(689, undefined, 24, false), 0));
                            J$.X1(745, J$.P(737, J$.R(713, 'this', this, 0), 'activePaths', J$.F(729, J$.R(721, 'ActiveRoster', ActiveRoster, 1), 1)(), 0));
                            J$.X1(777, J$.P(769, J$.R(753, 'this', this, 0), 'ownerDocument', J$.T(761, undefined, 24, false), 0));
                            J$.X1(809, J$.P(801, J$.R(785, 'this', this, 0), 'fullPath', J$.T(793, undefined, 24, false), 0));
                        } catch (J$e) {
                            J$.Ex(889, J$e);
                        } finally {
                            if (J$.Fr(897))
                                continue jalangiLabel5026;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(841, '__secret__S$', __secret__S$, 0);
            J$.N(849, '__secret__traits__', __secret__traits__, 0);
            J$.N(857, 'StateMachine', StateMachine, 0);
            J$.N(865, 'ActiveRoster', ActiveRoster, 0);
            InternalCache = J$.N(881, 'InternalCache', J$.T(873, InternalCache, 12, false, 817), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var StateMachine = J$.X1(113, J$.W(105, 'StateMachine', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './statemachine', 21, false)), StateMachine, 3));
            var ActiveRoster = J$.X1(185, J$.W(177, 'ActiveRoster', J$.M(169, J$.R(121, 'StateMachine', StateMachine, 1), 'ctor', 0)(J$.T(129, 'require', 21, false), J$.T(137, 'modify', 21, false), J$.T(145, 'init', 21, false), J$.T(153, 'default', 21, false), J$.T(161, 'ignore', 21, false)), ActiveRoster, 3));
            J$.X1(225, J$.P(217, J$.R(193, 'module', module, 2), 'exports', exports = J$.W(209, 'exports', J$.R(201, 'InternalCache', InternalCache, 1), J$.I(typeof exports === 'undefined' ? undefined : exports), 4), 0));
        } catch (J$e) {
            J$.Ex(905, J$e);
        } finally {
            if (J$.Sr(913)) {
                J$.L();
                continue jalangiLabel5027;
            } else {
                J$.L();
                break jalangiLabel5027;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
