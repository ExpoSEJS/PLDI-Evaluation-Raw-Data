J$.iids = {"8":[19,19,19,40],"9":[1,20,1,27],"10":[17,16,17,29],"16":[16,9,16,50],"17":[1,28,1,32],"18":[19,17,19,41],"24":[25,13,25,26],"25":[1,20,1,33],"26":[19,16,19,41],"32":[28,9,28,58],"33":[1,20,1,33],"34":[25,13,25,26],"40":[29,13,29,38],"41":[1,20,1,33],"42":[29,13,29,38],"48":[35,20,35,42],"49":[2,26,2,38],"50":[35,20,35,42],"56":[33,13,33,35],"57":[2,26,2,45],"58":[52,13,52,19],"64":[39,21,39,38],"65":[2,26,2,45],"66":[52,23,52,46],"72":[24,9,24,50],"73":[2,26,2,45],"74":[59,16,59,39],"80":[45,9,45,27],"81":[3,13,3,20],"82":[64,13,64,34],"88":[45,9,45,27],"89":[3,21,3,31],"90":[64,13,64,47],"96":[48,9,48,40],"97":[3,13,3,32],"98":[70,9,70,23],"104":[48,9,48,40],"105":[3,13,3,32],"106":[72,16,72,28],"112":[52,13,52,46],"113":[3,13,3,32],"114":[73,9,73,25],"120":[52,13,52,46],"121":[4,22,4,29],"122":[73,29,73,45],"128":[64,13,64,47],"129":[4,30,4,40],"130":[93,9,93,31],"136":[59,16,59,39],"137":[4,22,4,41],"138":[95,13,95,21],"144":[51,9,51,31],"145":[4,22,4,48],"146":[96,29,96,57],"152":[70,9,70,23],"153":[4,22,4,48],"154":[96,29,96,75],"160":[73,9,73,45],"161":[4,22,4,48],"168":[73,9,73,69],"169":[5,18,5,25],"176":[73,9,73,69],"177":[5,26,5,41],"184":[95,13,95,21],"185":[5,18,5,42],"192":[93,9,93,31],"193":[5,18,5,42],"201":[5,18,5,42],"209":[6,14,6,28],"217":[6,14,6,35],"225":[6,14,6,35],"233":[6,14,6,35],"241":[7,17,7,27],"249":[7,17,7,37],"257":[7,17,7,37],"265":[7,17,7,37],"273":[10,5,10,15],"281":[10,21,10,25],"289":[10,27,10,30],"297":[10,32,10,39],"305":[10,41,10,49],"313":[10,5,10,50],"315":[10,5,10,20],"321":[10,5,10,51],"329":[9,1,11,2],"337":[9,1,11,2],"345":[9,1,11,2],"353":[9,1,11,2],"361":[12,1,12,13],"369":[12,27,12,35],"377":[12,1,12,35],"385":[12,1,12,36],"393":[13,1,13,13],"401":[13,26,13,32],"409":[13,40,13,50],"417":[13,40,13,60],"425":[13,26,13,61],"427":[13,26,13,39],"433":[13,1,13,61],"441":[13,1,13,62],"449":[14,1,14,13],"457":[14,1,14,23],"465":[14,38,14,50],"473":[14,1,14,50],"481":[14,1,14,51],"489":[15,1,15,13],"497":[15,1,15,23],"505":[16,9,16,19],"513":[16,27,16,31],"521":[16,33,16,38],"529":[16,40,16,43],"537":[16,45,16,49],"545":[16,9,16,50],"547":[16,9,16,26],"553":[17,16,17,20],"561":[17,24,17,29],"569":[17,16,17,29],"577":[17,9,17,30],"585":[19,19,19,24],"593":[19,28,19,33],"601":[19,28,19,40],"609":[19,16,19,41],"617":[19,9,19,42],"625":[15,40,21,2],"633":[15,40,21,2],"641":[15,40,21,2],"649":[15,40,21,2],"657":[15,40,21,2],"665":[15,1,21,2],"673":[15,1,21,3],"681":[22,1,22,13],"689":[22,1,22,23],"697":[24,9,24,19],"705":[24,27,24,31],"713":[24,33,24,38],"721":[24,40,24,43],"729":[24,45,24,49],"737":[24,9,24,50],"739":[24,9,24,26],"745":[25,13,25,17],"753":[25,21,25,26],"761":[26,20,26,25],"769":[26,20,26,25],"777":[26,13,26,26],"785":[28,9,28,17],"793":[28,33,28,40],"801":[28,41,28,56],"809":[28,33,28,57],"817":[28,33,28,57],"825":[28,9,28,59],"833":[29,13,29,18],"841":[29,30,29,38],"849":[30,13,30,18],"857":[30,13,30,22],"865":[30,38,30,42],"873":[30,13,30,42],"881":[30,13,30,43],"889":[31,20,31,25],"897":[31,20,31,25],"905":[31,13,31,26],"913":[33,13,33,19],"921":[33,29,33,34],"929":[33,13,33,35],"931":[33,13,33,28],"937":[34,20,34,25],"945":[34,20,34,25],"953":[34,13,34,26],"961":[35,21,35,26],"969":[35,36,35,41],"977":[35,21,35,42],"979":[35,21,35,35],"985":[36,23,36,32],"993":[36,33,36,41],"1001":[36,43,36,48],"1009":[36,50,36,54],"1017":[36,50,36,59],"1025":[36,19,36,60],"1033":[36,19,36,60],"1041":[36,13,36,61],"1049":[38,20,38,23],"1057":[38,36,38,40],"1065":[38,36,38,45],"1073":[38,20,38,46],"1075":[38,20,38,35],"1081":[38,20,38,46],"1089":[38,20,38,46],"1097":[39,21,39,24],"1105":[39,21,39,38],"1113":[39,41,39,44],"1121":[39,41,39,60],"1123":[39,41,39,58],"1129":[39,63,39,66],"1137":[39,21,39,66],"1145":[39,21,39,66],"1153":[40,19,40,24],"1161":[40,35,40,39],"1169":[40,41,40,45],"1177":[40,19,40,46],"1179":[40,19,40,34],"1185":[40,19,40,46],"1193":[40,19,40,46],"1201":[41,19,41,22],"1209":[41,19,41,30],"1217":[41,37,41,42],"1225":[41,15,41,43],"1227":[41,19,41,36],"1233":[41,15,41,43],"1241":[41,9,41,44],"1249":[42,9,42,12],"1257":[42,9,42,16],"1265":[42,32,42,36],"1273":[42,9,42,36],"1281":[42,9,42,37],"1289":[43,16,43,19],"1297":[43,16,43,19],"1305":[43,9,43,20],"1313":[45,9,45,14],"1321":[45,18,45,23],"1329":[45,18,45,27],"1337":[46,17,46,22],"1345":[46,17,46,26],"1353":[46,17,46,26],"1361":[46,9,46,27],"1369":[48,9,48,14],"1377":[48,18,48,23],"1385":[48,18,48,40],"1393":[49,16,49,21],"1401":[49,16,49,21],"1409":[49,9,49,22],"1417":[51,9,51,15],"1425":[51,25,51,30],"1433":[51,9,51,31],"1435":[51,9,51,24],"1441":[52,14,52,19],"1449":[52,24,52,29],"1457":[52,24,52,46],"1465":[53,25,53,39],"1473":[53,40,53,45],"1481":[54,17,54,21],"1489":[54,17,54,26],"1497":[55,17,55,20],"1505":[53,47,56,14],"1513":[53,21,56,15],"1521":[53,21,56,15],"1529":[53,13,56,16],"1537":[58,16,58,21],"1545":[58,16,58,21],"1553":[58,9,58,22],"1561":[59,16,59,21],"1569":[59,33,59,39],"1577":[60,19,60,33],"1585":[60,34,60,39],"1593":[60,46,60,50],"1601":[60,34,60,51],"1603":[60,34,60,45],"1609":[61,13,61,17],"1617":[61,13,61,22],"1625":[62,13,62,16],"1633":[60,53,63,10],"1641":[60,15,63,11],"1649":[60,15,63,11],"1657":[60,9,63,12],"1665":[64,20,64,25],"1673":[64,20,64,34],"1681":[64,39,64,47],"1689":[65,23,65,32],"1697":[65,33,65,41],"1705":[65,43,65,48],"1713":[65,50,65,54],"1721":[65,50,65,59],"1729":[65,19,65,60],"1737":[65,19,65,60],"1745":[65,13,65,61],"1753":[67,9,67,12],"1761":[67,24,67,29],"1769":[67,24,67,38],"1777":[67,9,67,38],"1785":[67,9,67,39],"1793":[68,16,68,19],"1801":[68,16,68,19],"1809":[68,9,68,20],"1817":[70,9,70,13],"1825":[70,18,70,23],"1833":[71,16,71,21],"1841":[71,16,71,21],"1849":[71,9,71,22],"1857":[72,23,72,28],"1865":[72,16,72,28],"1873":[72,16,72,28],"1881":[73,9,73,17],"1889":[73,21,73,25],"1897":[73,29,73,37],"1905":[73,41,73,45],"1913":[73,49,73,54],"1921":[73,63,73,68],"1929":[73,49,73,69],"1931":[73,49,73,62],"1937":[74,19,74,33],"1945":[74,34,74,39],"1953":[75,13,75,17],"1961":[75,13,75,22],"1969":[76,13,76,16],"1977":[74,41,77,10],"1985":[74,15,77,11],"1993":[74,15,77,11],"2001":[74,9,77,12],"2009":[78,16,78,19],"2017":[78,16,78,19],"2025":[78,9,78,20],"2033":[80,15,80,24],"2041":[80,25,80,33],"2049":[80,35,80,40],"2057":[80,42,80,46],"2065":[80,42,80,51],"2073":[80,11,80,52],"2081":[80,11,80,52],"2089":[80,5,80,53],"2097":[22,31,81,2],"2105":[22,31,81,2],"2113":[22,31,81,2],"2121":[22,31,81,2],"2129":[22,31,81,2],"2137":[22,31,81,2],"2145":[22,31,81,2],"2153":[22,31,81,2],"2161":[22,31,81,2],"2169":[22,31,81,2],"2177":[22,31,81,2],"2185":[22,1,81,2],"2193":[22,1,81,3],"2201":[83,12,83,16],"2209":[83,30,83,33],"2217":[83,12,83,34],"2219":[83,12,83,29],"2225":[83,12,83,34],"2233":[83,5,83,35],"2241":[82,1,84,2],"2249":[82,1,84,2],"2257":[82,1,84,2],"2265":[85,1,85,13],"2273":[85,1,85,23],"2281":[85,47,85,52],"2289":[85,61,85,71],"2297":[85,61,85,81],"2305":[85,61,85,102],"2313":[86,12,86,24],"2321":[87,13,87,25],"2329":[88,12,88,24],"2337":[89,13,89,25],"2345":[85,104,90,2],"2353":[85,47,90,3],"2355":[85,47,85,60],"2361":[85,1,90,3],"2369":[85,1,90,4],"2377":[91,1,91,13],"2385":[91,1,91,23],"2393":[93,9,93,18],"2401":[93,9,93,25],"2409":[93,30,93,31],"2417":[94,19,94,23],"2425":[94,19,94,44],"2433":[94,45,94,57],"2441":[94,19,94,58],"2449":[94,19,94,58],"2457":[94,9,94,59],"2465":[95,14,95,21],"2473":[96,23,96,28],"2481":[96,29,96,42],"2489":[96,45,96,57],"2497":[96,60,96,75],"2505":[96,19,96,76],"2513":[96,19,96,76],"2521":[96,13,96,77],"2529":[97,16,97,23],"2537":[97,29,97,33],"2545":[97,35,97,38],"2553":[97,16,97,39],"2555":[97,16,97,28],"2561":[97,16,97,39],"2569":[97,9,97,40],"2577":[99,15,99,27],"2585":[99,15,99,27],"2593":[99,9,99,28],"2601":[100,16,100,20],"2609":[100,26,100,29],"2617":[100,16,100,30],"2619":[100,16,100,25],"2625":[100,16,100,41],"2627":[100,16,100,39],"2633":[100,16,100,41],"2641":[100,9,100,42],"2649":[91,39,102,2],"2657":[91,39,102,2],"2665":[91,39,102,2],"2673":[91,39,102,2],"2681":[91,39,102,2],"2689":[91,39,102,2],"2697":[91,1,102,2],"2705":[91,1,102,3],"2713":[103,1,103,7],"2721":[103,18,103,30],"2729":[103,1,103,30],"2737":[103,1,103,31],"2745":[1,1,103,31],"2753":[1,1,103,31],"2761":[1,1,103,31],"2769":[1,1,103,31],"2777":[1,1,103,31],"2785":[1,1,103,31],"2793":[1,1,103,31],"2801":[1,1,103,31],"2809":[1,1,103,31],"2817":[9,1,11,2],"2825":[1,1,103,31],"2833":[82,1,84,2],"2841":[1,1,103,31],"2849":[9,1,11,2],"2857":[9,1,11,2],"2865":[16,5,20,6],"2873":[15,40,21,2],"2881":[15,40,21,2],"2889":[25,9,27,10],"2897":[29,9,32,10],"2905":[35,16,37,10],"2913":[33,9,37,10],"2921":[39,21,39,66],"2929":[24,5,44,6],"2937":[45,5,47,6],"2945":[48,5,50,6],"2953":[52,9,57,10],"2961":[64,9,66,10],"2969":[59,12,69,6],"2977":[51,5,69,6],"2985":[70,5,71,22],"2993":[73,5,79,6],"3001":[22,31,81,2],"3009":[22,31,81,2],"3017":[82,1,84,2],"3025":[82,1,84,2],"3033":[95,9,96,77],"3041":[93,5,101,6],"3049":[91,39,102,2],"3057":[91,39,102,2],"3065":[1,1,103,31],"3073":[1,1,103,31],"nBranches":48,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/buffer.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/buffer_jalangi_.js","code":"/*!\n * Module dependencies.\n */\n\nvar utils = require('../utils');\n\nvar MongooseBuffer = require('../types').Buffer;\nvar SchemaType = require('../schematype');\n\nvar Binary = MongooseBuffer.Binary;\nvar CastError = SchemaType.CastError;\nvar Document;\n\n/**\n * Buffer SchemaType constructor\n *\n * @param {String} key\n * @param {SchemaType} cast\n * @inherits SchemaType\n * @api private\n */\n\nfunction SchemaBuffer(key, options) {\n  SchemaType.call(this, key, options, 'Buffer');\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api private\n */\nSchemaBuffer.schemaName = 'Buffer';\n\n/*!\n * Inherits from SchemaType.\n */\nSchemaBuffer.prototype = Object.create( SchemaType.prototype );\nSchemaBuffer.prototype.constructor = SchemaBuffer;\n\n/**\n * Check required\n *\n * @api private\n */\n\nSchemaBuffer.prototype.checkRequired = function(value, doc) {\n  if (SchemaType._isRef(this, value, doc, true)) {\n    return null != value;\n  } else {\n    return !!(value && value.length);\n  }\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} doc document that triggers the casting\n * @param {Boolean} init\n * @api private\n */\n\nSchemaBuffer.prototype.cast = function(value, doc, init) {\n  var ret;\n  if (SchemaType._isRef(this, value, doc, init)) {\n    // wait! we may need to cast this to a document\n\n    if (null == value) {\n      return value;\n    }\n\n    // lazy load\n    Document || (Document = require('./../document'));\n\n    if (value instanceof Document) {\n      value.$__.wasPopulated = true;\n      return value;\n    }\n\n    // setting a populated path\n    if (Buffer.isBuffer(value)) {\n      return value;\n    } else if (!utils.isObject(value)) {\n      throw new CastError('buffer', value, this.path);\n    }\n\n    // Handle the case where user directly sets a populated\n    // path to a plain object; cast to the Model used in\n    // the population query.\n    var path = doc.$__fullPath(this.path);\n    var owner = doc.ownerDocument ? doc.ownerDocument() : doc;\n    var pop = owner.populated(path, true);\n    ret = new pop.options.model(value);\n    ret.$__.wasPopulated = true;\n    return ret;\n  }\n\n  // documents\n  if (value && value._id) {\n    value = value._id;\n  }\n\n  if (value && value.isMongooseBuffer) {\n    return value;\n  }\n\n  if (Buffer.isBuffer(value)) {\n    if (!value || !value.isMongooseBuffer) {\n      value = new MongooseBuffer(value, [this.path, doc]);\n    }\n\n    return value;\n  } else if (value instanceof Binary) {\n    ret = new MongooseBuffer(value.value(true), [this.path, doc]);\n    if (typeof value.sub_type !== 'number') {\n      throw new CastError('buffer', value, this.path);\n    }\n    ret._subtype = value.sub_type;\n    return ret;\n  }\n\n  if (null === value) return value;\n\n  var type = typeof value;\n  if ('string' == type || 'number' == type || Array.isArray(value)) {\n    ret = new MongooseBuffer(value, [this.path, doc]);\n    return ret;\n  }\n\n  throw new CastError('buffer', value, this.path);\n};\n\n/*!\n * ignore\n */\nfunction handleSingle(val) {\n  return this.castForQuery(val);\n}\n\nSchemaBuffer.prototype.$conditionalHandlers =\n  utils.options(SchemaType.prototype.$conditionalHandlers, {\n    '$gt' : handleSingle,\n    '$gte': handleSingle,\n    '$lt' : handleSingle,\n    '$lte': handleSingle\n  });\n\n/**\n * Casts contents for queries.\n *\n * @param {String} $conditional\n * @param {any} [value]\n * @api private\n */\n\nSchemaBuffer.prototype.castForQuery = function($conditional, val) {\n  var handler;\n  if (arguments.length === 2) {\n    handler = this.$conditionalHandlers[$conditional];\n    if (!handler)\n      throw new Error(\"Can't use \" + $conditional + \" with Buffer.\");\n    return handler.call(this, val);\n  } else {\n    val = $conditional;\n    return this.cast(val).toObject();\n  }\n};\n\n/*!\n * Module exports.\n */\n\nmodule.exports = SchemaBuffer;\n"};
jalangiLabel4865:
    while (true) {
        try {
            J$.Se(2745, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/buffer_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/buffer.js');
            function SchemaBuffer(key, options) {
                jalangiLabel4860:
                    while (true) {
                        try {
                            J$.Fe(329, arguments.callee, this, arguments);
                            arguments = J$.N(337, 'arguments', arguments, 4);
                            key = J$.N(345, 'key', key, 4);
                            options = J$.N(353, 'options', options, 4);
                            J$.X1(321, J$.M(313, J$.R(273, 'SchemaType', SchemaType, 1), 'call', 0)(J$.R(281, 'this', this, 0), J$.R(289, 'key', key, 0), J$.R(297, 'options', options, 0), J$.T(305, 'Buffer', 21, false)));
                        } catch (J$e) {
                            J$.Ex(2849, J$e);
                        } finally {
                            if (J$.Fr(2857))
                                continue jalangiLabel4860;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function handleSingle(val) {
                jalangiLabel4863:
                    while (true) {
                        try {
                            J$.Fe(2241, arguments.callee, this, arguments);
                            arguments = J$.N(2249, 'arguments', arguments, 4);
                            val = J$.N(2257, 'val', val, 4);
                            return J$.X1(2233, J$.Rt(2225, J$.M(2217, J$.R(2201, 'this', this, 0), 'castForQuery', 0)(J$.R(2209, 'val', val, 0))));
                        } catch (J$e) {
                            J$.Ex(3017, J$e);
                        } finally {
                            if (J$.Fr(3025))
                                continue jalangiLabel4863;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2753, '__secret__S$', __secret__S$, 0);
            J$.N(2761, '__secret__traits__', __secret__traits__, 0);
            J$.N(2769, 'utils', utils, 0);
            J$.N(2777, 'MongooseBuffer', MongooseBuffer, 0);
            J$.N(2785, 'SchemaType', SchemaType, 0);
            J$.N(2793, 'Binary', Binary, 0);
            J$.N(2801, 'CastError', CastError, 0);
            J$.N(2809, 'Document', Document, 0);
            SchemaBuffer = J$.N(2825, 'SchemaBuffer', J$.T(2817, SchemaBuffer, 12, false, 329), 0);
            handleSingle = J$.N(2841, 'handleSingle', J$.T(2833, handleSingle, 12, false, 2241), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var utils = J$.X1(113, J$.W(105, 'utils', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../utils', 21, false)), utils, 3));
            var MongooseBuffer = J$.X1(161, J$.W(153, 'MongooseBuffer', J$.G(145, J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, '../types', 21, false)), 'Buffer', 0), MongooseBuffer, 3));
            var SchemaType = J$.X1(201, J$.W(193, 'SchemaType', J$.F(185, J$.R(169, 'require', require, 2), 0)(J$.T(177, '../schematype', 21, false)), SchemaType, 3));
            var Binary = J$.X1(233, J$.W(225, 'Binary', J$.G(217, J$.R(209, 'MongooseBuffer', MongooseBuffer, 1), 'Binary', 0), Binary, 3));
            var CastError = J$.X1(265, J$.W(257, 'CastError', J$.G(249, J$.R(241, 'SchemaType', SchemaType, 1), 'CastError', 0), CastError, 3));
            var Document;
            J$.X1(385, J$.P(377, J$.R(361, 'SchemaBuffer', SchemaBuffer, 1), 'schemaName', J$.T(369, 'Buffer', 21, false), 0));
            J$.X1(441, J$.P(433, J$.R(393, 'SchemaBuffer', SchemaBuffer, 1), 'prototype', J$.M(425, J$.R(401, 'Object', Object, 2), 'create', 0)(J$.G(417, J$.R(409, 'SchemaType', SchemaType, 1), 'prototype', 0)), 0));
            J$.X1(481, J$.P(473, J$.G(457, J$.R(449, 'SchemaBuffer', SchemaBuffer, 1), 'prototype', 0), 'constructor', J$.R(465, 'SchemaBuffer', SchemaBuffer, 1), 0));
            J$.X1(673, J$.P(665, J$.G(497, J$.R(489, 'SchemaBuffer', SchemaBuffer, 1), 'prototype', 0), 'checkRequired', J$.T(657, function (value, doc) {
                jalangiLabel4861:
                    while (true) {
                        try {
                            J$.Fe(625, arguments.callee, this, arguments);
                            arguments = J$.N(633, 'arguments', arguments, 4);
                            value = J$.N(641, 'value', value, 4);
                            doc = J$.N(649, 'doc', doc, 4);
                            if (J$.X1(2865, J$.C(16, J$.M(545, J$.R(505, 'SchemaType', SchemaType, 1), '_isRef', 0)(J$.R(513, 'this', this, 0), J$.R(521, 'value', value, 0), J$.R(529, 'doc', doc, 0), J$.T(537, true, 23, false))))) {
                                return J$.X1(577, J$.Rt(569, J$.B(10, '!=', J$.T(553, null, 25, false), J$.R(561, 'value', value, 0), 0)));
                            } else {
                                return J$.X1(617, J$.Rt(609, J$.U(26, '!', J$.U(18, '!', J$.C(8, J$.R(585, 'value', value, 0)) ? J$.G(601, J$.R(593, 'value', value, 0), 'length', 0) : J$._()))));
                            }
                        } catch (J$e) {
                            J$.Ex(2873, J$e);
                        } finally {
                            if (J$.Fr(2881))
                                continue jalangiLabel4861;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 625), 0));
            J$.X1(2193, J$.P(2185, J$.G(689, J$.R(681, 'SchemaBuffer', SchemaBuffer, 1), 'prototype', 0), 'cast', J$.T(2177, function (value, doc, init) {
                jalangiLabel4862:
                    while (true) {
                        try {
                            J$.Fe(2097, arguments.callee, this, arguments);
                            arguments = J$.N(2105, 'arguments', arguments, 4);
                            value = J$.N(2113, 'value', value, 4);
                            doc = J$.N(2121, 'doc', doc, 4);
                            init = J$.N(2129, 'init', init, 4);
                            J$.N(2137, 'ret', ret, 0);
                            J$.N(2145, 'path', path, 0);
                            J$.N(2153, 'owner', owner, 0);
                            J$.N(2161, 'pop', pop, 0);
                            J$.N(2169, 'type', type, 0);
                            var ret;
                            if (J$.X1(2929, J$.C(72, J$.M(737, J$.R(697, 'SchemaType', SchemaType, 1), '_isRef', 0)(J$.R(705, 'this', this, 0), J$.R(713, 'value', value, 0), J$.R(721, 'doc', doc, 0), J$.R(729, 'init', init, 0))))) {
                                if (J$.X1(2889, J$.C(24, J$.B(34, '==', J$.T(745, null, 25, false), J$.R(753, 'value', value, 0), 0)))) {
                                    return J$.X1(777, J$.Rt(769, J$.R(761, 'value', value, 0)));
                                }
                                J$.X1(825, J$.C(32, J$.R(785, 'Document', Document, 1)) ? J$._() : Document = J$.W(817, 'Document', J$.F(809, J$.R(793, 'require', require, 2), 0)(J$.T(801, './../document', 21, false)), Document, 2));
                                if (J$.X1(2897, J$.C(40, J$.B(42, 'instanceof', J$.R(833, 'value', value, 0), J$.R(841, 'Document', Document, 1), 0)))) {
                                    J$.X1(881, J$.P(873, J$.G(857, J$.R(849, 'value', value, 0), '$__', 0), 'wasPopulated', J$.T(865, true, 23, false), 0));
                                    return J$.X1(905, J$.Rt(897, J$.R(889, 'value', value, 0)));
                                }
                                if (J$.X1(2913, J$.C(56, J$.M(929, J$.R(913, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(921, 'value', value, 0))))) {
                                    return J$.X1(953, J$.Rt(945, J$.R(937, 'value', value, 0)));
                                } else if (J$.X1(2905, J$.C(48, J$.U(50, '!', J$.M(977, J$.R(961, 'utils', utils, 1), 'isObject', 0)(J$.R(969, 'value', value, 0)))))) {
                                    throw J$.X1(1041, J$.Th(1033, J$.F(1025, J$.R(985, 'CastError', CastError, 1), 1)(J$.T(993, 'buffer', 21, false), J$.R(1001, 'value', value, 0), J$.G(1017, J$.R(1009, 'this', this, 0), 'path', 0))));
                                }
                                var path = J$.X1(1089, J$.W(1081, 'path', J$.M(1073, J$.R(1049, 'doc', doc, 0), '$__fullPath', 0)(J$.G(1065, J$.R(1057, 'this', this, 0), 'path', 0)), path, 1));
                                var owner = J$.X1(1145, J$.W(1137, 'owner', J$.X1(2921, J$.C(64, J$.G(1105, J$.R(1097, 'doc', doc, 0), 'ownerDocument', 0))) ? J$.M(1121, J$.R(1113, 'doc', doc, 0), 'ownerDocument', 0)() : J$.R(1129, 'doc', doc, 0), owner, 1));
                                var pop = J$.X1(1193, J$.W(1185, 'pop', J$.M(1177, J$.R(1153, 'owner', owner, 0), 'populated', 0)(J$.R(1161, 'path', path, 0), J$.T(1169, true, 23, false)), pop, 1));
                                J$.X1(1241, ret = J$.W(1233, 'ret', J$.M(1225, J$.G(1209, J$.R(1201, 'pop', pop, 0), 'options', 0), 'model', 2)(J$.R(1217, 'value', value, 0)), ret, 0));
                                J$.X1(1281, J$.P(1273, J$.G(1257, J$.R(1249, 'ret', ret, 0), '$__', 0), 'wasPopulated', J$.T(1265, true, 23, false), 0));
                                return J$.X1(1305, J$.Rt(1297, J$.R(1289, 'ret', ret, 0)));
                            }
                            if (J$.X1(2937, J$.C(88, J$.C(80, J$.R(1313, 'value', value, 0)) ? J$.G(1329, J$.R(1321, 'value', value, 0), '_id', 0) : J$._()))) {
                                J$.X1(1361, value = J$.W(1353, 'value', J$.G(1345, J$.R(1337, 'value', value, 0), '_id', 0), value, 0));
                            }
                            if (J$.X1(2945, J$.C(104, J$.C(96, J$.R(1369, 'value', value, 0)) ? J$.G(1385, J$.R(1377, 'value', value, 0), 'isMongooseBuffer', 0) : J$._()))) {
                                return J$.X1(1409, J$.Rt(1401, J$.R(1393, 'value', value, 0)));
                            }
                            if (J$.X1(2977, J$.C(144, J$.M(1433, J$.R(1417, 'Buffer', Buffer, 2), 'isBuffer', 0)(J$.R(1425, 'value', value, 0))))) {
                                if (J$.X1(2953, J$.C(120, J$.C(112, J$.U(58, '!', J$.R(1441, 'value', value, 0))) ? J$._() : J$.U(66, '!', J$.G(1457, J$.R(1449, 'value', value, 0), 'isMongooseBuffer', 0))))) {
                                    J$.X1(1529, value = J$.W(1521, 'value', J$.F(1513, J$.R(1465, 'MongooseBuffer', MongooseBuffer, 1), 1)(J$.R(1473, 'value', value, 0), J$.T(1505, [
                                        J$.G(1489, J$.R(1481, 'this', this, 0), 'path', 0),
                                        J$.R(1497, 'doc', doc, 0)
                                    ], 10, false)), value, 0));
                                }
                                return J$.X1(1553, J$.Rt(1545, J$.R(1537, 'value', value, 0)));
                            } else if (J$.X1(2969, J$.C(136, J$.B(74, 'instanceof', J$.R(1561, 'value', value, 0), J$.R(1569, 'Binary', Binary, 1), 0)))) {
                                J$.X1(1657, ret = J$.W(1649, 'ret', J$.F(1641, J$.R(1577, 'MongooseBuffer', MongooseBuffer, 1), 1)(J$.M(1601, J$.R(1585, 'value', value, 0), 'value', 0)(J$.T(1593, true, 23, false)), J$.T(1633, [
                                    J$.G(1617, J$.R(1609, 'this', this, 0), 'path', 0),
                                    J$.R(1625, 'doc', doc, 0)
                                ], 10, false)), ret, 0));
                                if (J$.X1(2961, J$.C(128, J$.B(90, '!==', J$.U(82, 'typeof', J$.G(1673, J$.R(1665, 'value', value, 0), 'sub_type', 0)), J$.T(1681, 'number', 21, false), 0)))) {
                                    throw J$.X1(1745, J$.Th(1737, J$.F(1729, J$.R(1689, 'CastError', CastError, 1), 1)(J$.T(1697, 'buffer', 21, false), J$.R(1705, 'value', value, 0), J$.G(1721, J$.R(1713, 'this', this, 0), 'path', 0))));
                                }
                                J$.X1(1785, J$.P(1777, J$.R(1753, 'ret', ret, 0), '_subtype', J$.G(1769, J$.R(1761, 'value', value, 0), 'sub_type', 0), 0));
                                return J$.X1(1809, J$.Rt(1801, J$.R(1793, 'ret', ret, 0)));
                            }
                            if (J$.X1(2985, J$.C(152, J$.B(98, '===', J$.T(1817, null, 25, false), J$.R(1825, 'value', value, 0), 0))))
                                return J$.X1(1849, J$.Rt(1841, J$.R(1833, 'value', value, 0)));
                            var type = J$.X1(1873, J$.W(1865, 'type', J$.U(106, 'typeof', J$.R(1857, 'value', value, 0)), type, 1));
                            if (J$.X1(2993, J$.C(176, J$.C(168, J$.C(160, J$.B(114, '==', J$.T(1881, 'string', 21, false), J$.R(1889, 'type', type, 0), 0)) ? J$._() : J$.B(122, '==', J$.T(1897, 'number', 21, false), J$.R(1905, 'type', type, 0), 0)) ? J$._() : J$.M(1929, J$.R(1913, 'Array', Array, 2), 'isArray', 0)(J$.R(1921, 'value', value, 0))))) {
                                J$.X1(2001, ret = J$.W(1993, 'ret', J$.F(1985, J$.R(1937, 'MongooseBuffer', MongooseBuffer, 1), 1)(J$.R(1945, 'value', value, 0), J$.T(1977, [
                                    J$.G(1961, J$.R(1953, 'this', this, 0), 'path', 0),
                                    J$.R(1969, 'doc', doc, 0)
                                ], 10, false)), ret, 0));
                                return J$.X1(2025, J$.Rt(2017, J$.R(2009, 'ret', ret, 0)));
                            }
                            throw J$.X1(2089, J$.Th(2081, J$.F(2073, J$.R(2033, 'CastError', CastError, 1), 1)(J$.T(2041, 'buffer', 21, false), J$.R(2049, 'value', value, 0), J$.G(2065, J$.R(2057, 'this', this, 0), 'path', 0))));
                        } catch (J$e) {
                            J$.Ex(3001, J$e);
                        } finally {
                            if (J$.Fr(3009))
                                continue jalangiLabel4862;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2097), 0));
            J$.X1(2369, J$.P(2361, J$.G(2273, J$.R(2265, 'SchemaBuffer', SchemaBuffer, 1), 'prototype', 0), '$conditionalHandlers', J$.M(2353, J$.R(2281, 'utils', utils, 1), 'options', 0)(J$.G(2305, J$.G(2297, J$.R(2289, 'SchemaType', SchemaType, 1), 'prototype', 0), '$conditionalHandlers', 0), J$.T(2345, {
                '$gt': J$.R(2313, 'handleSingle', handleSingle, 1),
                '$gte': J$.R(2321, 'handleSingle', handleSingle, 1),
                '$lt': J$.R(2329, 'handleSingle', handleSingle, 1),
                '$lte': J$.R(2337, 'handleSingle', handleSingle, 1)
            }, 11, false)), 0));
            J$.X1(2705, J$.P(2697, J$.G(2385, J$.R(2377, 'SchemaBuffer', SchemaBuffer, 1), 'prototype', 0), 'castForQuery', J$.T(2689, function ($conditional, val) {
                jalangiLabel4864:
                    while (true) {
                        try {
                            J$.Fe(2649, arguments.callee, this, arguments);
                            arguments = J$.N(2657, 'arguments', arguments, 4);
                            $conditional = J$.N(2665, '$conditional', $conditional, 4);
                            val = J$.N(2673, 'val', val, 4);
                            J$.N(2681, 'handler', handler, 0);
                            var handler;
                            if (J$.X1(3041, J$.C(192, J$.B(130, '===', J$.G(2401, J$.R(2393, 'arguments', arguments, 2), 'length', 0), J$.T(2409, 2, 22, false), 0)))) {
                                J$.X1(2457, handler = J$.W(2449, 'handler', J$.G(2441, J$.G(2425, J$.R(2417, 'this', this, 0), '$conditionalHandlers', 0), J$.R(2433, '$conditional', $conditional, 0), 4), handler, 0));
                                if (J$.X1(3033, J$.C(184, J$.U(138, '!', J$.R(2465, 'handler', handler, 0)))))
                                    throw J$.X1(2521, J$.Th(2513, J$.F(2505, J$.R(2473, 'Error', Error, 2), 1)(J$.B(154, '+', J$.B(146, '+', J$.T(2481, 'Can\'t use ', 21, false), J$.R(2489, '$conditional', $conditional, 0), 0), J$.T(2497, ' with Buffer.', 21, false), 0))));
                                return J$.X1(2569, J$.Rt(2561, J$.M(2553, J$.R(2529, 'handler', handler, 0), 'call', 0)(J$.R(2537, 'this', this, 0), J$.R(2545, 'val', val, 0))));
                            } else {
                                J$.X1(2593, val = J$.W(2585, 'val', J$.R(2577, '$conditional', $conditional, 0), val, 0));
                                return J$.X1(2641, J$.Rt(2633, J$.M(2625, J$.M(2617, J$.R(2601, 'this', this, 0), 'cast', 0)(J$.R(2609, 'val', val, 0)), 'toObject', 0)()));
                            }
                        } catch (J$e) {
                            J$.Ex(3049, J$e);
                        } finally {
                            if (J$.Fr(3057))
                                continue jalangiLabel4864;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2649), 0));
            J$.X1(2737, J$.P(2729, J$.R(2713, 'module', module, 2), 'exports', J$.R(2721, 'SchemaBuffer', SchemaBuffer, 1), 0));
        } catch (J$e) {
            J$.Ex(3065, J$e);
        } finally {
            if (J$.Sr(3073)) {
                J$.L();
                continue jalangiLabel4865;
            } else {
                J$.L();
                break jalangiLabel4865;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
