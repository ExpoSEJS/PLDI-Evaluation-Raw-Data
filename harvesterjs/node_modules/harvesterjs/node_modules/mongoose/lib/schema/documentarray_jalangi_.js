J$.iids = {"8":[27,13,27,32],"9":[1,20,1,27],"10":[27,13,27,32],"16":[37,13,37,16],"17":[1,28,1,32],"18":[42,13,42,19],"24":[40,21,40,42],"25":[1,20,1,33],"26":[44,38,44,45],"32":[42,13,42,19],"33":[1,20,1,33],"34":[44,47,44,50],"40":[47,17,47,37],"41":[1,20,1,33],"48":[46,17,46,21],"49":[2,26,2,38],"50":[46,17,46,21],"56":[51,21,51,24],"57":[2,26,2,45],"58":[47,17,47,24],"64":[54,17,54,37],"65":[2,26,2,45],"72":[44,38,44,45],"73":[2,26,2,45],"74":[54,17,54,24],"80":[61,9,61,24],"81":[3,17,3,24],"88":[63,17,63,38],"89":[3,25,3,34],"90":[64,9,64,15],"96":[64,9,64,15],"97":[3,17,3,35],"98":[66,34,66,41],"104":[67,13,67,24],"105":[3,17,3,35],"106":[66,43,66,46],"112":[70,13,70,17],"113":[3,17,3,35],"120":[73,13,73,32],"121":[4,17,4,24],"122":[70,13,70,17],"128":[66,34,66,41],"129":[4,25,4,40],"130":[81,9,81,30],"136":[82,13,82,26],"137":[4,17,4,41],"138":[82,14,82,18],"144":[82,13,82,26],"145":[4,17,4,41],"146":[82,13,82,18],"152":[81,9,81,30],"153":[4,17,4,41],"154":[87,9,87,50],"160":[87,11,87,49],"161":[5,29,5,36],"162":[96,12,96,15],"168":[89,13,89,35],"169":[5,37,5,61],"176":[89,13,89,35],"177":[5,29,5,62],"178":[96,12,96,15],"184":[87,9,87,50],"185":[5,29,5,62],"186":[97,15,97,46],"192":[97,13,97,59],"193":[5,29,5,62],"194":[97,13,97,47],"200":[99,17,99,82],"201":[6,18,6,25],"202":[124,9,124,26],"208":[107,21,107,35],"209":[6,26,6,41],"210":[126,16,126,32],"216":[107,21,107,35],"217":[6,18,6,42],"218":[127,12,127,15],"224":[98,17,98,21],"225":[6,18,6,42],"232":[97,13,97,59],"233":[6,18,6,42],"234":[127,12,127,15],"240":[96,12,96,15],"241":[7,19,7,26],"242":[129,13,129,36],"248":[124,11,124,25],"249":[7,27,7,46],"256":[124,9,124,26],"257":[7,19,7,47],"264":[130,13,130,40],"265":[7,19,7,47],"272":[129,13,129,36],"273":[7,19,7,47],"280":[127,12,127,15],"281":[10,9,10,20],"288":[134,12,134,31],"289":[10,27,10,31],"296":[134,12,134,44],"297":[10,33,10,42],"305":[10,9,10,43],"307":[10,9,10,26],"313":[10,9,10,44],"321":[9,5,11,6],"329":[9,5,11,6],"337":[12,5,12,21],"345":[12,34,12,40],"353":[12,48,12,59],"361":[12,48,12,69],"369":[12,34,12,70],"371":[12,34,12,47],"377":[12,5,12,70],"385":[12,5,12,71],"393":[13,5,13,21],"401":[13,5,13,31],"409":[13,45,13,51],"417":[13,5,13,52],"419":[13,5,13,44],"425":[13,5,13,53],"433":[14,5,14,21],"441":[14,31,14,37],"449":[14,5,14,37],"457":[14,5,14,38],"465":[15,19,15,25],"473":[15,19,15,33],"481":[16,9,16,25],"489":[16,9,16,35],"497":[16,36,16,37],"505":[16,41,16,47],"513":[16,41,16,55],"521":[16,56,16,57],"529":[16,41,16,58],"537":[16,9,16,58],"545":[16,9,16,59],"553":[15,19,15,33],"561":[15,5,16,59],"569":[15,5,16,59],"577":[17,15,17,21],"585":[17,15,17,29],"593":[18,9,18,25],"601":[18,26,18,27],"609":[18,31,18,37],"617":[18,31,18,45],"625":[18,46,18,47],"633":[18,31,18,48],"641":[18,9,18,48],"649":[18,9,18,49],"657":[17,15,17,29],"665":[17,5,18,49],"673":[17,5,18,49],"681":[19,5,19,21],"689":[19,32,19,39],"697":[19,5,19,39],"705":[19,5,19,40],"713":[20,5,20,9],"721":[20,19,20,25],"729":[20,5,20,25],"737":[20,5,20,26],"745":[21,5,21,14],"753":[21,20,21,24],"761":[21,26,21,29],"769":[21,31,21,47],"777":[21,49,21,56],"785":[21,5,21,57],"787":[21,5,21,19],"793":[21,5,21,58],"801":[22,5,22,9],"809":[22,19,22,25],"817":[22,5,22,25],"825":[22,5,22,26],"833":[23,16,23,20],"841":[23,16,23,25],"849":[23,16,23,25],"857":[23,16,23,25],"865":[24,14,24,18],"873":[24,14,24,31],"881":[24,14,24,31],"889":[24,14,24,31],"897":[25,5,25,9],"905":[26,19,26,21],"913":[26,27,26,31],"921":[26,19,26,32],"923":[26,19,26,26],"929":[26,19,26,32],"937":[26,19,26,32],"945":[27,14,27,19],"953":[27,28,27,31],"961":[27,14,27,32],"963":[27,14,27,27],"969":[28,20,28,23],"977":[28,19,28,24],"985":[28,19,28,24],"993":[28,13,28,25],"1001":[29,20,29,41],"1009":[29,42,29,45],"1017":[29,47,29,51],"1025":[29,53,29,57],"1033":[29,16,29,58],"1041":[29,16,29,58],"1049":[29,9,29,59],"1057":[25,18,30,6],"1065":[25,18,30,6],"1073":[25,18,30,6],"1081":[25,18,30,6],"1089":[25,5,30,7],"1091":[25,5,25,17],"1097":[25,5,30,8],"1105":[8,1,31,2],"1113":[8,1,31,2],"1121":[8,1,31,2],"1129":[8,1,31,2],"1137":[8,1,31,2],"1145":[9,5,11,6],"1153":[8,1,31,2],"1161":[8,1,31,2],"1169":[8,1,31,2],"1177":[8,1,31,2],"1185":[32,1,32,14],"1193":[32,28,32,43],"1201":[32,1,32,43],"1209":[32,1,32,44],"1217":[33,1,33,14],"1225":[33,27,33,33],"1233":[33,41,33,50],"1241":[33,41,33,60],"1249":[33,27,33,61],"1251":[33,27,33,40],"1257":[33,1,33,61],"1265":[33,1,33,62],"1273":[34,1,34,14],"1281":[34,1,34,24],"1289":[34,39,34,52],"1297":[34,1,34,52],"1305":[34,1,34,53],"1313":[35,1,35,14],"1321":[35,1,35,24],"1329":[36,5,36,15],"1337":[36,5,36,25],"1345":[36,5,36,36],"1353":[36,42,36,46],"1361":[36,48,36,53],"1369":[37,13,37,16],"1377":[38,20,38,22],"1385":[38,23,38,26],"1393":[38,20,38,27],"1401":[38,20,38,27],"1409":[38,13,38,28],"1417":[40,21,40,26],"1425":[40,30,40,35],"1433":[40,30,40,42],"1441":[40,21,40,42],"1449":[40,21,40,42],"1457":[42,14,42,19],"1465":[43,20,43,22],"1473":[43,20,43,24],"1481":[43,20,43,24],"1489":[43,13,43,25],"1497":[44,22,44,23],"1505":[44,31,44,36],"1513":[44,22,44,23],"1521":[44,22,44,23],"1529":[44,31,44,36],"1537":[44,31,44,36],"1545":[44,38,44,39],"1553":[44,42,44,45],"1569":[44,49,44,50],"1577":[44,47,44,50],"1585":[45,23,45,28],"1593":[45,29,45,30],"1601":[45,23,45,31],"1609":[45,23,45,31],"1617":[45,23,45,31],"1625":[46,18,46,21],"1641":[47,19,47,24],"1649":[47,17,47,24],"1657":[47,28,47,30],"1665":[47,31,47,36],"1673":[47,28,47,37],"1681":[47,17,47,38],"1689":[50,13,50,16],"1697":[51,21,51,24],"1705":[52,29,52,32],"1713":[52,29,52,32],"1721":[52,21,52,33],"1737":[54,19,54,24],"1745":[54,17,54,24],"1753":[54,28,54,30],"1761":[54,31,54,36],"1769":[54,28,54,37],"1777":[54,17,54,38],"1785":[50,26,55,14],"1793":[50,26,55,14],"1801":[50,26,55,14],"1809":[50,26,55,14],"1817":[50,13,55,15],"1819":[50,13,50,25],"1825":[50,13,55,16],"1833":[36,55,57,6],"1841":[36,55,57,6],"1849":[36,55,57,6],"1857":[36,55,57,6],"1865":[36,55,57,6],"1873":[36,55,57,6],"1881":[36,55,57,6],"1889":[36,55,57,6],"1897":[36,55,57,6],"1905":[57,8,57,13],"1913":[36,5,57,14],"1915":[36,5,36,41],"1921":[36,5,57,15],"1929":[35,38,58,2],"1937":[35,38,58,2],"1945":[35,38,58,2],"1953":[35,38,58,2],"1961":[35,38,58,2],"1969":[35,38,58,2],"1977":[35,1,58,2],"1985":[35,1,58,3],"1993":[59,1,59,14],"2001":[59,1,59,24],"2009":[60,27,60,37],"2017":[60,27,60,47],"2025":[60,27,60,62],"2033":[60,68,60,72],"2041":[60,74,60,79],"2049":[60,81,60,86],"2057":[60,27,60,87],"2059":[60,27,60,67],"2065":[60,27,60,87],"2073":[60,27,60,87],"2081":[61,9,61,24],"2089":[62,16,62,31],"2097":[62,16,62,31],"2105":[62,9,62,32],"2113":[63,17,63,22],"2121":[63,26,63,31],"2129":[63,26,63,38],"2137":[63,54,63,58],"2145":[63,17,63,38],"2153":[63,17,63,38],"2161":[63,54,63,58],"2169":[63,54,63,58],"2177":[64,10,64,15],"2185":[65,9,65,16],"2193":[65,9,65,16],"2201":[66,18,66,19],"2209":[66,27,66,32],"2217":[66,18,66,19],"2225":[66,18,66,19],"2233":[66,27,66,32],"2241":[66,27,66,32],"2249":[66,34,66,35],"2257":[66,38,66,41],"2273":[66,45,66,46],"2281":[66,43,66,46],"2289":[67,13,67,24],"2297":[69,19,69,24],"2305":[69,25,69,26],"2313":[69,19,69,27],"2321":[69,19,69,27],"2329":[69,19,69,27],"2337":[70,14,70,17],"2345":[72,35,72,38],"2353":[72,35,72,53],"2355":[72,35,72,51],"2361":[72,35,72,53],"2369":[72,35,72,53],"2377":[73,13,73,32],"2385":[74,27,74,46],"2393":[74,27,74,46],"2401":[74,13,74,47],"2409":[77,12,77,23],"2417":[77,12,77,23],"2425":[77,5,77,24],"2433":[59,42,78,2],"2441":[59,42,78,2],"2449":[59,42,78,2],"2457":[59,42,78,2],"2465":[59,42,78,2],"2473":[59,42,78,2],"2481":[59,42,78,2],"2489":[59,42,78,2],"2497":[59,42,78,2],"2505":[59,42,78,2],"2513":[59,42,78,2],"2521":[59,42,78,2],"2529":[59,1,78,2],"2537":[59,1,78,3],"2545":[79,1,79,14],"2553":[79,1,79,24],"2561":[81,10,81,15],"2569":[81,24,81,29],"2577":[81,10,81,30],"2579":[81,10,81,23],"2585":[82,15,82,18],"2593":[82,22,82,26],"2601":[83,13,83,16],"2609":[83,30,83,34],"2617":[83,30,83,39],"2625":[83,13,83,40],"2627":[83,13,83,29],"2633":[83,13,83,41],"2641":[85,16,85,20],"2649":[85,27,85,32],"2657":[85,26,85,33],"2665":[85,35,85,38],"2673":[85,40,85,44],"2681":[85,46,85,50],"2689":[85,16,85,51],"2691":[85,16,85,25],"2697":[85,16,85,51],"2705":[85,9,85,52],"2713":[87,11,87,16],"2721":[87,20,87,25],"2729":[87,20,87,49],"2737":[88,21,88,42],"2745":[88,43,88,48],"2753":[88,50,88,54],"2761":[88,50,88,59],"2769":[88,61,88,64],"2777":[88,17,88,65],"2785":[88,17,88,65],"2793":[88,9,88,66],"2801":[89,13,89,17],"2809":[89,21,89,25],"2817":[89,21,89,35],"2825":[90,29,90,33],"2833":[90,29,90,43],"2841":[91,17,91,20],"2849":[91,36,91,39],"2857":[91,41,91,45],"2865":[91,41,91,55],"2873":[91,56,91,59],"2881":[91,41,91,60],"2889":[91,17,91,61],"2891":[91,17,91,35],"2897":[91,17,91,62],"2905":[90,29,90,43],"2913":[90,13,92,14],"2921":[90,13,92,14],"2929":[95,9,95,14],"2937":[95,9,95,21],"2945":[95,9,95,21],"2953":[95,5,95,22],"2969":[96,12,96,13],"2977":[96,12,96,15],"2993":[97,15,97,20],"3001":[97,21,97,22],"3009":[97,15,97,23],"3017":[97,35,97,46],"3025":[97,51,97,56],"3033":[97,57,97,58],"3041":[97,51,97,59],"3049":[98,17,98,21],"3057":[99,17,99,25],"3065":[99,41,99,51],"3073":[99,52,99,56],"3081":[99,58,99,61],"3089":[99,58,99,65],"3097":[99,58,99,74],"3105":[99,76,99,80],"3113":[99,41,99,81],"3121":[99,41,99,81],"3129":[99,17,99,83],"3137":[100,30,100,34],"3145":[100,53,100,57],"3153":[100,59,100,64],"3161":[100,66,100,70],"3169":[100,72,100,80],"3177":[100,82,100,83],"3185":[100,26,100,84],"3187":[100,30,100,52],"3193":[100,26,100,84],"3201":[100,17,100,85],"3209":[101,17,101,22],"3217":[101,23,101,24],"3225":[101,28,101,34],"3233":[101,40,101,45],"3241":[101,46,101,47],"3249":[101,40,101,48],"3257":[101,28,101,49],"3259":[101,28,101,39],"3265":[101,17,101,49],"3273":[101,17,101,50],"3281":[104,30,104,34],"3289":[104,38,104,43],"3297":[104,44,104,45],"3305":[104,38,104,46],"3313":[104,38,104,50],"3321":[104,30,104,51],"3323":[104,30,104,37],"3329":[104,30,104,51],"3337":[104,21,104,52],"3345":[105,19,106,18],"3353":[107,21,107,25],"3361":[107,29,107,35],"3369":[108,21,108,27],"3377":[108,32,108,37],"3385":[108,38,108,39],"3393":[108,32,108,40],"3401":[108,21,108,41],"3403":[108,21,108,31],"3409":[108,21,108,42],"3417":[109,21,109,26],"3425":[109,27,109,28],"3433":[109,32,109,38],"3441":[109,21,109,38],"3449":[109,21,109,39],"3457":[112,38,112,42],"3465":[112,61,112,66],"3473":[112,67,112,68],"3481":[112,61,112,69],"3489":[112,71,112,76],"3497":[112,78,112,87],"3505":[112,89,112,98],"3513":[112,100,112,101],"3521":[112,34,112,102],"3523":[112,38,112,60],"3529":[112,34,112,102],"3537":[112,25,112,103],"3545":[113,25,113,30],"3553":[113,31,113,32],"3561":[113,36,113,42],"3569":[113,25,113,42],"3577":[113,25,113,43],"3585":[115,35,115,44],"3593":[115,45,115,55],"3601":[115,57,115,62],"3609":[115,63,115,64],"3617":[115,57,115,65],"3625":[115,67,115,72],"3633":[115,67,115,78],"3641":[115,31,115,79],"3649":[115,31,115,79],"3657":[115,25,115,80],"3665":[114,23,116,22],"3673":[121,12,121,17],"3681":[121,12,121,17],"3689":[121,5,121,18],"3697":[79,32,122,2],"3705":[79,32,122,2],"3713":[79,32,122,2],"3721":[79,32,122,2],"3729":[79,32,122,2],"3737":[79,32,122,2],"3745":[79,32,122,2],"3753":[79,32,122,2],"3761":[79,32,122,2],"3769":[79,32,122,2],"3777":[79,32,122,2],"3785":[79,1,122,2],"3793":[79,1,122,3],"3801":[124,11,124,15],"3809":[124,19,124,25],"3817":[125,16,125,25],"3825":[125,16,125,25],"3833":[125,9,125,26],"3841":[126,16,126,21],"3849":[126,16,126,26],"3857":[126,29,126,32],"3865":[126,41,126,47],"3873":[126,53,126,59],"3881":[126,41,126,60],"3883":[126,41,126,52],"3889":[126,66,126,70],"3897":[126,66,126,77],"3905":[126,90,126,92],"3913":[126,16,126,32],"3921":[126,16,126,32],"3929":[126,41,126,60],"3937":[126,41,126,60],"3945":[126,66,126,77],"3953":[126,66,126,77],"3961":[126,90,126,92],"3969":[126,90,126,92],"3985":[127,12,127,13],"3993":[127,12,127,15],"4009":[128,15,128,19],"4017":[128,20,128,21],"4025":[128,15,128,22],"4033":[128,15,128,22],"4041":[128,9,128,23],"4049":[129,13,129,14],"4057":[129,19,129,22],"4065":[129,31,129,35],"4073":[129,19,129,36],"4075":[129,19,129,30],"4081":[130,13,130,20],"4089":[130,35,130,39],"4097":[130,35,130,39],"4105":[130,13,130,41],"4113":[131,13,131,21],"4121":[131,22,131,25],"4129":[131,36,131,40],"4137":[131,36,131,47],"4145":[131,22,131,48],"4147":[131,22,131,35],"4153":[131,52,131,58],"4161":[131,59,131,62],"4169":[131,52,131,63],"4177":[131,13,131,63],"4185":[131,13,131,64],"4193":[134,12,134,19],"4201":[134,23,134,31],"4209":[134,35,134,44],"4217":[134,12,134,44],"4225":[134,5,134,45],"4233":[123,1,135,2],"4241":[123,1,135,2],"4249":[123,1,135,2],"4257":[123,1,135,2],"4265":[123,1,135,2],"4273":[123,1,135,2],"4281":[123,1,135,2],"4289":[123,1,135,2],"4297":[123,1,135,2],"4305":[123,1,135,2],"4313":[123,1,135,2],"4321":[136,1,136,7],"4329":[136,18,136,31],"4337":[136,1,136,31],"4345":[136,1,136,32],"4353":[1,1,136,32],"4361":[1,1,136,32],"4369":[1,1,136,32],"4377":[1,1,136,32],"4385":[1,1,136,32],"4393":[1,1,136,32],"4401":[1,1,136,32],"4409":[1,1,136,32],"4417":[8,1,31,2],"4425":[1,1,136,32],"4433":[123,1,135,2],"4441":[1,1,136,32],"4449":[9,5,11,6],"4457":[9,5,11,6],"4465":[27,9,28,25],"4473":[25,18,30,6],"4481":[25,18,30,6],"4489":[8,1,31,2],"4497":[8,1,31,2],"4505":[37,9,39,10],"4513":[42,9,43,25],"4521":[46,13,49,14],"4529":[51,17,53,18],"4537":[50,26,55,14],"4545":[50,26,55,14],"4553":[44,9,56,10],"4561":[44,9,56,10],"4569":[36,55,57,6],"4577":[36,55,57,6],"4585":[35,38,58,2],"4593":[35,38,58,2],"4601":[61,5,62,32],"4609":[64,5,65,16],"4617":[67,9,68,19],"4625":[70,9,71,22],"4633":[73,9,75,10],"4641":[66,5,76,6],"4649":[66,5,76,6],"4657":[59,42,78,2],"4665":[59,42,78,2],"4673":[82,9,84,10],"4681":[81,5,86,6],"4689":[89,9,93,10],"4697":[87,5,94,6],"4705":[107,17,117,18],"4713":[98,13,118,14],"4721":[97,9,119,10],"4729":[96,5,120,6],"4737":[79,32,122,2],"4745":[79,32,122,2],"4753":[124,5,125,26],"4761":[129,9,132,10],"4769":[127,5,133,6],"4777":[123,1,135,2],"4785":[123,1,135,2],"4793":[1,1,136,32],"4801":[1,1,136,32],"nBranches":74,"originalCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/documentarray.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/documentarray_jalangi_.js","code":"/* eslint no-empty: 1 */\n\n/*!\n * Module dependencies.\n */\n\nvar ArrayType = require('./array');\nvar CastError = require('../error/cast');\nvar MongooseDocumentArray = require('../types/documentarray');\nvar SchemaType = require('../schematype');\nvar Subdocument = require('../types/embedded');\n\n/**\n * SubdocsArray SchemaType constructor\n *\n * @param {String} key\n * @param {Schema} schema\n * @param {Object} options\n * @inherits SchemaArray\n * @api private\n */\n\nfunction DocumentArray(key, schema, options) {\n  // compile an embedded document for this schema\n  function EmbeddedDocument() {\n    Subdocument.apply(this, arguments);\n  }\n\n  EmbeddedDocument.prototype = Object.create(Subdocument.prototype);\n  EmbeddedDocument.prototype.$__setSchema(schema);\n  EmbeddedDocument.schema = schema;\n\n  // apply methods\n  for (var i in schema.methods)\n    EmbeddedDocument.prototype[i] = schema.methods[i];\n\n  // apply statics\n  for (i in schema.statics)\n    EmbeddedDocument[i] = schema.statics[i];\n\n  EmbeddedDocument.options = options;\n  this.schema = schema;\n\n  ArrayType.call(this, key, EmbeddedDocument, options);\n\n  this.schema = schema;\n  var path = this.path;\n  var fn = this.defaultValue;\n\n  this.default(function() {\n    var arr = fn.call(this);\n    if (!Array.isArray(arr)) arr = [arr];\n    return new MongooseDocumentArray(arr, path, this);\n  });\n}\n\n/**\n * This schema type's name, to defend against minifiers that mangle\n * function names.\n *\n * @api private\n */\nDocumentArray.schemaName = 'DocumentArray';\n\n/*!\n * Inherits from ArrayType.\n */\nDocumentArray.prototype = Object.create( ArrayType.prototype );\nDocumentArray.prototype.constructor = DocumentArray;\n\n/**\n * Performs local validations first, then validations on each embedded doc\n *\n * @api private\n */\n\nDocumentArray.prototype.doValidate = function(array, fn, scope) {\n  SchemaType.prototype.doValidate.call(this, array, function(err) {\n    if (err) {\n      return fn(err);\n    }\n\n    var count = array && array.length;\n    var error;\n\n    if (!count) return fn();\n\n    // handle sparse arrays, do not use array.forEach which does not\n    // iterate over sparse elements yet reports array.length including\n    // them :(\n\n    for (var i = 0, len = count; i < len; ++i) {\n      // sidestep sparse entries\n      var doc = array[i];\n      if (!doc) {\n        --count || fn(error);\n        continue;\n      }\n\n      doc.validate(function(err) {\n        if (err) {\n          error = err;\n        }\n        --count || fn(error);\n      });\n    }\n  }, scope);\n};\n\n/**\n * Performs local validations first, then validations on each embedded doc.\n *\n * ####Note:\n *\n * This method ignores the asynchronous validators.\n *\n * @return {MongooseError|undefined}\n * @api private\n */\n\nDocumentArray.prototype.doValidateSync = function(array, scope) {\n  var schemaTypeError = SchemaType.prototype.doValidateSync.call(this, array, scope);\n  if (schemaTypeError) return schemaTypeError;\n\n  var count = array && array.length,\n      resultError = null;\n\n  if (!count) return;\n\n  // handle sparse arrays, do not use array.forEach which does not\n  // iterate over sparse elements yet reports array.length including\n  // them :(\n\n  for (var i = 0, len = count; i < len; ++i) {\n    // only first error\n    if ( resultError ) break;\n    // sidestep sparse entries\n    var doc = array[i];\n    if (!doc) continue;\n\n    var subdocValidateError = doc.validateSync();\n\n    if (subdocValidateError) {\n      resultError = subdocValidateError;\n    }\n  }\n\n  return resultError;\n};\n\n/**\n * Casts contents\n *\n * @param {Object} value\n * @param {Document} document that triggers the casting\n * @api private\n */\n\nDocumentArray.prototype.cast = function(value, doc, init, prev) {\n  var selected,\n      subdoc,\n      i;\n\n  if (!Array.isArray(value)) {\n    // gh-2442 mark whole array as modified if we're initializing a doc from\n    // the db and the path isn't an array in the document\n    if (!!doc && init) {\n      doc.markModified(this.path);\n    }\n    return this.cast([value], doc, init, prev);\n  }\n\n  if (!(value && value.isMongooseDocumentArray)) {\n    value = new MongooseDocumentArray(value, this.path, doc);\n    if (prev && prev._handlers) {\n      for (var key in prev._handlers) {\n        doc.removeListener(key, prev._handlers[key]);\n      }\n    }\n  }\n\n  i = value.length;\n\n  while (i--) {\n    if (!(value[i] instanceof Subdocument) && value[i]) {\n      if (init) {\n        selected || (selected = scopePaths(this, doc.$__.selected, init));\n        subdoc = new this.casterConstructor(null, value, true, selected, i);\n        value[i] = subdoc.init(value[i]);\n      } else {\n        try {\n          subdoc = prev.id(value[i]._id);\n        } catch (e) {}\n\n        if (prev && subdoc) {\n          // handle resetting doc with existing id but differing data\n          // doc.array = [{ doc: 'val' }]\n          subdoc.set(value[i]);\n          // if set() is hooked it will have no return value\n          // see gh-746\n          value[i] = subdoc;\n        } else {\n          try {\n            subdoc = new this.casterConstructor(value[i], value, undefined,\n              undefined, i);\n            // if set() is hooked it will have no return value\n            // see gh-746\n            value[i] = subdoc;\n          } catch (error) {\n            throw new CastError('embedded', value[i], value._path);\n          }\n        }\n      }\n    }\n  }\n\n  return value;\n};\n\n/*!\n * Scopes paths selected in a query to this array.\n * Necessary for proper default application of subdocument values.\n *\n * @param {DocumentArray} array - the array to scope `fields` paths\n * @param {Object|undefined} fields - the root fields selected in the query\n * @param {Boolean|undefined} init - if we are being created part of a query result\n */\n\nfunction scopePaths(array, fields, init) {\n  if (!(init && fields)) return undefined;\n\n  var path = array.path + '.',\n      keys = Object.keys(fields),\n      i = keys.length,\n      selected = {},\n      hasKeys,\n      key;\n\n  while (i--) {\n    key = keys[i];\n    if (0 === key.indexOf(path)) {\n      hasKeys || (hasKeys = true);\n      selected[key.substring(path.length)] = fields[key];\n    }\n  }\n\n  return hasKeys && selected || undefined;\n}\n\n/*!\n * Module exports.\n */\n\nmodule.exports = DocumentArray;\n"};
jalangiLabel4814:
    while (true) {
        try {
            J$.Se(4353, '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/documentarray_jalangi_.js', '/home/blake/ExpoSE/Targets/harvesterjs/node_modules/harvesterjs/node_modules/mongoose/lib/schema/documentarray.js');
            function DocumentArray(key, schema, options) {
                jalangiLabel4807:
                    while (true) {
                        try {
                            J$.Fe(1105, arguments.callee, this, arguments);
                            function EmbeddedDocument() {
                                jalangiLabel4805:
                                    while (true) {
                                        try {
                                            J$.Fe(321, arguments.callee, this, arguments);
                                            arguments = J$.N(329, 'arguments', arguments, 4);
                                            J$.X1(313, J$.M(305, J$.R(281, 'Subdocument', Subdocument, 1), 'apply', 0)(J$.R(289, 'this', this, 0), J$.R(297, 'arguments', arguments, 2)));
                                        } catch (J$e) {
                                            J$.Ex(4449, J$e);
                                        } finally {
                                            if (J$.Fr(4457))
                                                continue jalangiLabel4805;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1113, 'arguments', arguments, 4);
                            key = J$.N(1121, 'key', key, 4);
                            schema = J$.N(1129, 'schema', schema, 4);
                            options = J$.N(1137, 'options', options, 4);
                            EmbeddedDocument = J$.N(1153, 'EmbeddedDocument', J$.T(1145, EmbeddedDocument, 12, false, 321), 0);
                            J$.N(1161, 'i', i, 0);
                            J$.N(1169, 'path', path, 0);
                            J$.N(1177, 'fn', fn, 0);
                            J$.X1(385, J$.P(377, J$.R(337, 'EmbeddedDocument', EmbeddedDocument, 0), 'prototype', J$.M(369, J$.R(345, 'Object', Object, 2), 'create', 0)(J$.G(361, J$.R(353, 'Subdocument', Subdocument, 1), 'prototype', 0)), 0));
                            J$.X1(425, J$.M(417, J$.G(401, J$.R(393, 'EmbeddedDocument', EmbeddedDocument, 0), 'prototype', 0), '$__setSchema', 0)(J$.R(409, 'schema', schema, 0)));
                            J$.X1(457, J$.P(449, J$.R(433, 'EmbeddedDocument', EmbeddedDocument, 0), 'schema', J$.R(441, 'schema', schema, 0), 0));
                            for (J$._tm_p in J$.H(553, J$.G(473, J$.R(465, 'schema', schema, 0), 'methods', 0))) {
                                var i = J$.X1(569, J$.W(561, 'i', J$._tm_p, i, 1));
                                {
                                    J$.X1(545, J$.P(537, J$.G(489, J$.R(481, 'EmbeddedDocument', EmbeddedDocument, 0), 'prototype', 0), J$.R(497, 'i', i, 0), J$.G(529, J$.G(513, J$.R(505, 'schema', schema, 0), 'methods', 0), J$.R(521, 'i', i, 0), 4), 2));
                                }
                            }
                            for (J$._tm_p in J$.H(657, J$.G(585, J$.R(577, 'schema', schema, 0), 'statics', 0))) {
                                J$.X1(673, i = J$.W(665, 'i', J$._tm_p, i, 0));
                                {
                                    J$.X1(649, J$.P(641, J$.R(593, 'EmbeddedDocument', EmbeddedDocument, 0), J$.R(601, 'i', i, 0), J$.G(633, J$.G(617, J$.R(609, 'schema', schema, 0), 'statics', 0), J$.R(625, 'i', i, 0), 4), 2));
                                }
                            }
                            J$.X1(705, J$.P(697, J$.R(681, 'EmbeddedDocument', EmbeddedDocument, 0), 'options', J$.R(689, 'options', options, 0), 0));
                            J$.X1(737, J$.P(729, J$.R(713, 'this', this, 0), 'schema', J$.R(721, 'schema', schema, 0), 0));
                            J$.X1(793, J$.M(785, J$.R(745, 'ArrayType', ArrayType, 1), 'call', 0)(J$.R(753, 'this', this, 0), J$.R(761, 'key', key, 0), J$.R(769, 'EmbeddedDocument', EmbeddedDocument, 0), J$.R(777, 'options', options, 0)));
                            J$.X1(825, J$.P(817, J$.R(801, 'this', this, 0), 'schema', J$.R(809, 'schema', schema, 0), 0));
                            var path = J$.X1(857, J$.W(849, 'path', J$.G(841, J$.R(833, 'this', this, 0), 'path', 0), path, 1));
                            var fn = J$.X1(889, J$.W(881, 'fn', J$.G(873, J$.R(865, 'this', this, 0), 'defaultValue', 0), fn, 1));
                            J$.X1(1097, J$.M(1089, J$.R(897, 'this', this, 0), 'default', 0)(J$.T(1081, function () {
                                jalangiLabel4806:
                                    while (true) {
                                        try {
                                            J$.Fe(1057, arguments.callee, this, arguments);
                                            arguments = J$.N(1065, 'arguments', arguments, 4);
                                            J$.N(1073, 'arr', arr, 0);
                                            var arr = J$.X1(937, J$.W(929, 'arr', J$.M(921, J$.R(905, 'fn', fn, 0), 'call', 0)(J$.R(913, 'this', this, 0)), arr, 1));
                                            if (J$.X1(4465, J$.C(8, J$.U(10, '!', J$.M(961, J$.R(945, 'Array', Array, 2), 'isArray', 0)(J$.R(953, 'arr', arr, 0))))))
                                                J$.X1(993, arr = J$.W(985, 'arr', J$.T(977, [J$.R(969, 'arr', arr, 0)], 10, false), arr, 0));
                                            return J$.X1(1049, J$.Rt(1041, J$.F(1033, J$.R(1001, 'MongooseDocumentArray', MongooseDocumentArray, 1), 1)(J$.R(1009, 'arr', arr, 0), J$.R(1017, 'path', path, 0), J$.R(1025, 'this', this, 0))));
                                        } catch (J$e) {
                                            J$.Ex(4473, J$e);
                                        } finally {
                                            if (J$.Fr(4481))
                                                continue jalangiLabel4806;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1057)));
                        } catch (J$e) {
                            J$.Ex(4489, J$e);
                        } finally {
                            if (J$.Fr(4497))
                                continue jalangiLabel4807;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function scopePaths(array, fields, init) {
                jalangiLabel4813:
                    while (true) {
                        try {
                            J$.Fe(4233, arguments.callee, this, arguments);
                            arguments = J$.N(4241, 'arguments', arguments, 4);
                            array = J$.N(4249, 'array', array, 4);
                            fields = J$.N(4257, 'fields', fields, 4);
                            init = J$.N(4265, 'init', init, 4);
                            J$.N(4273, 'path', path, 0);
                            J$.N(4281, 'keys', keys, 0);
                            J$.N(4289, 'i', i, 0);
                            J$.N(4297, 'selected', selected, 0);
                            J$.N(4305, 'hasKeys', hasKeys, 0);
                            J$.N(4313, 'key', key, 0);
                            if (J$.X1(4753, J$.C(256, J$.U(202, '!', J$.C(248, J$.R(3801, 'init', init, 0)) ? J$.R(3809, 'fields', fields, 0) : J$._()))))
                                return J$.X1(3833, J$.Rt(3825, J$.T(3817, undefined, 24, false)));
                            var path = J$.X1(3921, J$.W(3913, 'path', J$.B(210, '+', J$.G(3849, J$.R(3841, 'array', array, 0), 'path', 0), J$.T(3857, '.', 21, false), 0), path, 1)), keys = J$.X1(3937, J$.W(3929, 'keys', J$.M(3881, J$.R(3865, 'Object', Object, 2), 'keys', 0)(J$.R(3873, 'fields', fields, 0)), keys, 1)), i = J$.X1(3953, J$.W(3945, 'i', J$.G(3897, J$.R(3889, 'keys', keys, 0), 'length', 0), i, 1)), selected = J$.X1(3969, J$.W(3961, 'selected', J$.T(3905, {}, 11, false), selected, 1)), hasKeys, key;
                            while (J$.X1(4769, J$.C(280, J$.B(234, '+', i = J$.W(3993, 'i', J$.B(226, '-', J$.U(218, '+', J$.R(3985, 'i', i, 0)), J$.T(3977, 1, 22, false), 0), i, 0), J$.T(4001, 1, 22, false), 0)))) {
                                J$.X1(4041, key = J$.W(4033, 'key', J$.G(4025, J$.R(4009, 'keys', keys, 0), J$.R(4017, 'i', i, 0), 4), key, 0));
                                if (J$.X1(4761, J$.C(272, J$.B(242, '===', J$.T(4049, 0, 22, false), J$.M(4073, J$.R(4057, 'key', key, 0), 'indexOf', 0)(J$.R(4065, 'path', path, 0)), 0)))) {
                                    J$.X1(4105, J$.C(264, J$.R(4081, 'hasKeys', hasKeys, 0)) ? J$._() : hasKeys = J$.W(4097, 'hasKeys', J$.T(4089, true, 23, false), hasKeys, 0));
                                    J$.X1(4185, J$.P(4177, J$.R(4113, 'selected', selected, 0), J$.M(4145, J$.R(4121, 'key', key, 0), 'substring', 0)(J$.G(4137, J$.R(4129, 'path', path, 0), 'length', 0)), J$.G(4169, J$.R(4153, 'fields', fields, 0), J$.R(4161, 'key', key, 0), 4), 2));
                                }
                            }
                            return J$.X1(4225, J$.Rt(4217, J$.C(296, J$.C(288, J$.R(4193, 'hasKeys', hasKeys, 0)) ? J$.R(4201, 'selected', selected, 0) : J$._()) ? J$._() : J$.T(4209, undefined, 24, false)));
                        } catch (J$e) {
                            J$.Ex(4777, J$e);
                        } finally {
                            if (J$.Fr(4785))
                                continue jalangiLabel4813;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(4361, '__secret__S$', __secret__S$, 0);
            J$.N(4369, '__secret__traits__', __secret__traits__, 0);
            J$.N(4377, 'ArrayType', ArrayType, 0);
            J$.N(4385, 'CastError', CastError, 0);
            J$.N(4393, 'MongooseDocumentArray', MongooseDocumentArray, 0);
            J$.N(4401, 'SchemaType', SchemaType, 0);
            J$.N(4409, 'Subdocument', Subdocument, 0);
            DocumentArray = J$.N(4425, 'DocumentArray', J$.T(4417, DocumentArray, 12, false, 1105), 0);
            scopePaths = J$.N(4441, 'scopePaths', J$.T(4433, scopePaths, 12, false, 4233), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var ArrayType = J$.X1(113, J$.W(105, 'ArrayType', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './array', 21, false)), ArrayType, 3));
            var CastError = J$.X1(153, J$.W(145, 'CastError', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, '../error/cast', 21, false)), CastError, 3));
            var MongooseDocumentArray = J$.X1(193, J$.W(185, 'MongooseDocumentArray', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, '../types/documentarray', 21, false)), MongooseDocumentArray, 3));
            var SchemaType = J$.X1(233, J$.W(225, 'SchemaType', J$.F(217, J$.R(201, 'require', require, 2), 0)(J$.T(209, '../schematype', 21, false)), SchemaType, 3));
            var Subdocument = J$.X1(273, J$.W(265, 'Subdocument', J$.F(257, J$.R(241, 'require', require, 2), 0)(J$.T(249, '../types/embedded', 21, false)), Subdocument, 3));
            J$.X1(1209, J$.P(1201, J$.R(1185, 'DocumentArray', DocumentArray, 1), 'schemaName', J$.T(1193, 'DocumentArray', 21, false), 0));
            J$.X1(1265, J$.P(1257, J$.R(1217, 'DocumentArray', DocumentArray, 1), 'prototype', J$.M(1249, J$.R(1225, 'Object', Object, 2), 'create', 0)(J$.G(1241, J$.R(1233, 'ArrayType', ArrayType, 1), 'prototype', 0)), 0));
            J$.X1(1305, J$.P(1297, J$.G(1281, J$.R(1273, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'constructor', J$.R(1289, 'DocumentArray', DocumentArray, 1), 0));
            J$.X1(1985, J$.P(1977, J$.G(1321, J$.R(1313, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'doValidate', J$.T(1969, function (array, fn, scope) {
                jalangiLabel4810:
                    while (true) {
                        try {
                            J$.Fe(1929, arguments.callee, this, arguments);
                            arguments = J$.N(1937, 'arguments', arguments, 4);
                            array = J$.N(1945, 'array', array, 4);
                            fn = J$.N(1953, 'fn', fn, 4);
                            scope = J$.N(1961, 'scope', scope, 4);
                            J$.X1(1921, J$.M(1913, J$.G(1345, J$.G(1337, J$.R(1329, 'SchemaType', SchemaType, 1), 'prototype', 0), 'doValidate', 0), 'call', 0)(J$.R(1353, 'this', this, 0), J$.R(1361, 'array', array, 0), J$.T(1897, function (err) {
                                jalangiLabel4809:
                                    while (true) {
                                        try {
                                            J$.Fe(1833, arguments.callee, this, arguments);
                                            arguments = J$.N(1841, 'arguments', arguments, 4);
                                            err = J$.N(1849, 'err', err, 4);
                                            J$.N(1857, 'count', count, 0);
                                            J$.N(1865, 'error', error, 0);
                                            J$.N(1873, 'i', i, 0);
                                            J$.N(1881, 'len', len, 0);
                                            J$.N(1889, 'doc', doc, 0);
                                            if (J$.X1(4505, J$.C(16, J$.R(1369, 'err', err, 0)))) {
                                                return J$.X1(1409, J$.Rt(1401, J$.F(1393, J$.R(1377, 'fn', fn, 0), 0)(J$.R(1385, 'err', err, 0))));
                                            }
                                            var count = J$.X1(1449, J$.W(1441, 'count', J$.C(24, J$.R(1417, 'array', array, 0)) ? J$.G(1433, J$.R(1425, 'array', array, 0), 'length', 0) : J$._(), count, 1));
                                            var error;
                                            if (J$.X1(4513, J$.C(32, J$.U(18, '!', J$.R(1457, 'count', count, 0)))))
                                                return J$.X1(1489, J$.Rt(1481, J$.F(1473, J$.R(1465, 'fn', fn, 0), 0)()));
                                            for (var i = J$.X1(1521, J$.W(1513, 'i', J$.T(1497, 0, 22, false), i, 1)), len = J$.X1(1537, J$.W(1529, 'len', J$.R(1505, 'count', count, 0), len, 1)); J$.X1(4553, J$.C(72, J$.B(26, '<', J$.R(1545, 'i', i, 0), J$.R(1553, 'len', len, 0), 0))); J$.X1(4561, i = J$.W(1577, 'i', J$.B(42, '+', J$.U(34, '+', J$.R(1569, 'i', i, 0)), J$.T(1561, 1, 22, false), 0), i, 0))) {
                                                var doc = J$.X1(1617, J$.W(1609, 'doc', J$.G(1601, J$.R(1585, 'array', array, 0), J$.R(1593, 'i', i, 0), 4), doc, 1));
                                                if (J$.X1(4521, J$.C(48, J$.U(50, '!', J$.R(1625, 'doc', doc, 0))))) {
                                                    J$.X1(1681, J$.C(40, count = J$.W(1649, 'count', J$.B(66, '-', J$.U(58, '+', J$.R(1641, 'count', count, 0)), J$.T(1633, 1, 22, false), 0), count, 0)) ? J$._() : J$.F(1673, J$.R(1657, 'fn', fn, 0), 0)(J$.R(1665, 'error', error, 0)));
                                                    continue;
                                                }
                                                J$.X1(1825, J$.M(1817, J$.R(1689, 'doc', doc, 0), 'validate', 0)(J$.T(1809, function (err) {
                                                    jalangiLabel4808:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(1785, arguments.callee, this, arguments);
                                                                arguments = J$.N(1793, 'arguments', arguments, 4);
                                                                err = J$.N(1801, 'err', err, 4);
                                                                if (J$.X1(4529, J$.C(56, J$.R(1697, 'err', err, 0)))) {
                                                                    J$.X1(1721, error = J$.W(1713, 'error', J$.R(1705, 'err', err, 0), error, 0));
                                                                }
                                                                J$.X1(1777, J$.C(64, count = J$.W(1745, 'count', J$.B(82, '-', J$.U(74, '+', J$.R(1737, 'count', count, 0)), J$.T(1729, 1, 22, false), 0), count, 0)) ? J$._() : J$.F(1769, J$.R(1753, 'fn', fn, 0), 0)(J$.R(1761, 'error', error, 0)));
                                                            } catch (J$e) {
                                                                J$.Ex(4537, J$e);
                                                            } finally {
                                                                if (J$.Fr(4545))
                                                                    continue jalangiLabel4808;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }, 12, false, 1785)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(4569, J$e);
                                        } finally {
                                            if (J$.Fr(4577))
                                                continue jalangiLabel4809;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1833), J$.R(1905, 'scope', scope, 0)));
                        } catch (J$e) {
                            J$.Ex(4585, J$e);
                        } finally {
                            if (J$.Fr(4593))
                                continue jalangiLabel4810;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1929), 0));
            J$.X1(2537, J$.P(2529, J$.G(2001, J$.R(1993, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'doValidateSync', J$.T(2521, function (array, scope) {
                jalangiLabel4811:
                    while (true) {
                        try {
                            J$.Fe(2433, arguments.callee, this, arguments);
                            arguments = J$.N(2441, 'arguments', arguments, 4);
                            array = J$.N(2449, 'array', array, 4);
                            scope = J$.N(2457, 'scope', scope, 4);
                            J$.N(2465, 'schemaTypeError', schemaTypeError, 0);
                            J$.N(2473, 'count', count, 0);
                            J$.N(2481, 'resultError', resultError, 0);
                            J$.N(2489, 'i', i, 0);
                            J$.N(2497, 'len', len, 0);
                            J$.N(2505, 'doc', doc, 0);
                            J$.N(2513, 'subdocValidateError', subdocValidateError, 0);
                            var schemaTypeError = J$.X1(2073, J$.W(2065, 'schemaTypeError', J$.M(2057, J$.G(2025, J$.G(2017, J$.R(2009, 'SchemaType', SchemaType, 1), 'prototype', 0), 'doValidateSync', 0), 'call', 0)(J$.R(2033, 'this', this, 0), J$.R(2041, 'array', array, 0), J$.R(2049, 'scope', scope, 0)), schemaTypeError, 1));
                            if (J$.X1(4601, J$.C(80, J$.R(2081, 'schemaTypeError', schemaTypeError, 0))))
                                return J$.X1(2105, J$.Rt(2097, J$.R(2089, 'schemaTypeError', schemaTypeError, 0)));
                            var count = J$.X1(2153, J$.W(2145, 'count', J$.C(88, J$.R(2113, 'array', array, 0)) ? J$.G(2129, J$.R(2121, 'array', array, 0), 'length', 0) : J$._(), count, 1)), resultError = J$.X1(2169, J$.W(2161, 'resultError', J$.T(2137, null, 25, false), resultError, 1));
                            if (J$.X1(4609, J$.C(96, J$.U(90, '!', J$.R(2177, 'count', count, 0)))))
                                return J$.X1(2193, J$.Rt(2185, undefined));
                            for (var i = J$.X1(2225, J$.W(2217, 'i', J$.T(2201, 0, 22, false), i, 1)), len = J$.X1(2241, J$.W(2233, 'len', J$.R(2209, 'count', count, 0), len, 1)); J$.X1(4641, J$.C(128, J$.B(98, '<', J$.R(2249, 'i', i, 0), J$.R(2257, 'len', len, 0), 0))); J$.X1(4649, i = J$.W(2281, 'i', J$.B(114, '+', J$.U(106, '+', J$.R(2273, 'i', i, 0)), J$.T(2265, 1, 22, false), 0), i, 0))) {
                                if (J$.X1(4617, J$.C(104, J$.R(2289, 'resultError', resultError, 0))))
                                    break;
                                var doc = J$.X1(2329, J$.W(2321, 'doc', J$.G(2313, J$.R(2297, 'array', array, 0), J$.R(2305, 'i', i, 0), 4), doc, 1));
                                if (J$.X1(4625, J$.C(112, J$.U(122, '!', J$.R(2337, 'doc', doc, 0)))))
                                    continue;
                                var subdocValidateError = J$.X1(2369, J$.W(2361, 'subdocValidateError', J$.M(2353, J$.R(2345, 'doc', doc, 0), 'validateSync', 0)(), subdocValidateError, 1));
                                if (J$.X1(4633, J$.C(120, J$.R(2377, 'subdocValidateError', subdocValidateError, 0)))) {
                                    J$.X1(2401, resultError = J$.W(2393, 'resultError', J$.R(2385, 'subdocValidateError', subdocValidateError, 0), resultError, 0));
                                }
                            }
                            return J$.X1(2425, J$.Rt(2417, J$.R(2409, 'resultError', resultError, 0)));
                        } catch (J$e) {
                            J$.Ex(4657, J$e);
                        } finally {
                            if (J$.Fr(4665))
                                continue jalangiLabel4811;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2433), 0));
            J$.X1(3793, J$.P(3785, J$.G(2553, J$.R(2545, 'DocumentArray', DocumentArray, 1), 'prototype', 0), 'cast', J$.T(3777, function (value, doc, init, prev) {
                jalangiLabel4812:
                    while (true) {
                        try {
                            J$.Fe(3697, arguments.callee, this, arguments);
                            arguments = J$.N(3705, 'arguments', arguments, 4);
                            value = J$.N(3713, 'value', value, 4);
                            doc = J$.N(3721, 'doc', doc, 4);
                            init = J$.N(3729, 'init', init, 4);
                            prev = J$.N(3737, 'prev', prev, 4);
                            J$.N(3745, 'selected', selected, 0);
                            J$.N(3753, 'subdoc', subdoc, 0);
                            J$.N(3761, 'i', i, 0);
                            J$.N(3769, 'key', key, 0);
                            var selected, subdoc, i;
                            if (J$.X1(4681, J$.C(152, J$.U(130, '!', J$.M(2577, J$.R(2561, 'Array', Array, 2), 'isArray', 0)(J$.R(2569, 'value', value, 0)))))) {
                                if (J$.X1(4673, J$.C(144, J$.C(136, J$.U(146, '!', J$.U(138, '!', J$.R(2585, 'doc', doc, 0)))) ? J$.R(2593, 'init', init, 0) : J$._()))) {
                                    J$.X1(2633, J$.M(2625, J$.R(2601, 'doc', doc, 0), 'markModified', 0)(J$.G(2617, J$.R(2609, 'this', this, 0), 'path', 0)));
                                }
                                return J$.X1(2705, J$.Rt(2697, J$.M(2689, J$.R(2641, 'this', this, 0), 'cast', 0)(J$.T(2657, [J$.R(2649, 'value', value, 0)], 10, false), J$.R(2665, 'doc', doc, 0), J$.R(2673, 'init', init, 0), J$.R(2681, 'prev', prev, 0))));
                            }
                            if (J$.X1(4697, J$.C(184, J$.U(154, '!', J$.C(160, J$.R(2713, 'value', value, 0)) ? J$.G(2729, J$.R(2721, 'value', value, 0), 'isMongooseDocumentArray', 0) : J$._())))) {
                                J$.X1(2793, value = J$.W(2785, 'value', J$.F(2777, J$.R(2737, 'MongooseDocumentArray', MongooseDocumentArray, 1), 1)(J$.R(2745, 'value', value, 0), J$.G(2761, J$.R(2753, 'this', this, 0), 'path', 0), J$.R(2769, 'doc', doc, 0)), value, 0));
                                if (J$.X1(4689, J$.C(176, J$.C(168, J$.R(2801, 'prev', prev, 0)) ? J$.G(2817, J$.R(2809, 'prev', prev, 0), '_handlers', 0) : J$._()))) {
                                    for (J$._tm_p in J$.H(2905, J$.G(2833, J$.R(2825, 'prev', prev, 0), '_handlers', 0))) {
                                        var key = J$.X1(2921, J$.W(2913, 'key', J$._tm_p, key, 1));
                                        {
                                            {
                                                J$.X1(2897, J$.M(2889, J$.R(2841, 'doc', doc, 0), 'removeListener', 0)(J$.R(2849, 'key', key, 0), J$.G(2881, J$.G(2865, J$.R(2857, 'prev', prev, 0), '_handlers', 0), J$.R(2873, 'key', key, 0), 4)));
                                            }
                                        }
                                    }
                                }
                            }
                            J$.X1(2953, i = J$.W(2945, 'i', J$.G(2937, J$.R(2929, 'value', value, 0), 'length', 0), i, 0));
                            while (J$.X1(4729, J$.C(240, J$.B(178, '+', i = J$.W(2977, 'i', J$.B(170, '-', J$.U(162, '+', J$.R(2969, 'i', i, 0)), J$.T(2961, 1, 22, false), 0), i, 0), J$.T(2985, 1, 22, false), 0)))) {
                                if (J$.X1(4721, J$.C(232, J$.C(192, J$.U(194, '!', J$.B(186, 'instanceof', J$.G(3009, J$.R(2993, 'value', value, 0), J$.R(3001, 'i', i, 0), 4), J$.R(3017, 'Subdocument', Subdocument, 1), 0))) ? J$.G(3041, J$.R(3025, 'value', value, 0), J$.R(3033, 'i', i, 0), 4) : J$._()))) {
                                    if (J$.X1(4713, J$.C(224, J$.R(3049, 'init', init, 0)))) {
                                        J$.X1(3129, J$.C(200, J$.R(3057, 'selected', selected, 0)) ? J$._() : selected = J$.W(3121, 'selected', J$.F(3113, J$.R(3065, 'scopePaths', scopePaths, 1), 0)(J$.R(3073, 'this', this, 0), J$.G(3097, J$.G(3089, J$.R(3081, 'doc', doc, 0), '$__', 0), 'selected', 0), J$.R(3105, 'init', init, 0)), selected, 0));
                                        J$.X1(3201, subdoc = J$.W(3193, 'subdoc', J$.M(3185, J$.R(3137, 'this', this, 0), 'casterConstructor', 2)(J$.T(3145, null, 25, false), J$.R(3153, 'value', value, 0), J$.T(3161, true, 23, false), J$.R(3169, 'selected', selected, 0), J$.R(3177, 'i', i, 0)), subdoc, 0));
                                        J$.X1(3273, J$.P(3265, J$.R(3209, 'value', value, 0), J$.R(3217, 'i', i, 0), J$.M(3257, J$.R(3225, 'subdoc', subdoc, 0), 'init', 0)(J$.G(3249, J$.R(3233, 'value', value, 0), J$.R(3241, 'i', i, 0), 4)), 2));
                                    } else {
                                        try {
                                            J$.X1(3337, subdoc = J$.W(3329, 'subdoc', J$.M(3321, J$.R(3281, 'prev', prev, 0), 'id', 0)(J$.G(3313, J$.G(3305, J$.R(3289, 'value', value, 0), J$.R(3297, 'i', i, 0), 4), '_id', 0)), subdoc, 0));
                                        } catch (e) {
                                            e = J$.N(3345, 'e', e, 1);
                                        }
                                        if (J$.X1(4705, J$.C(216, J$.C(208, J$.R(3353, 'prev', prev, 0)) ? J$.R(3361, 'subdoc', subdoc, 0) : J$._()))) {
                                            J$.X1(3409, J$.M(3401, J$.R(3369, 'subdoc', subdoc, 0), 'set', 0)(J$.G(3393, J$.R(3377, 'value', value, 0), J$.R(3385, 'i', i, 0), 4)));
                                            J$.X1(3449, J$.P(3441, J$.R(3417, 'value', value, 0), J$.R(3425, 'i', i, 0), J$.R(3433, 'subdoc', subdoc, 0), 2));
                                        } else {
                                            try {
                                                J$.X1(3537, subdoc = J$.W(3529, 'subdoc', J$.M(3521, J$.R(3457, 'this', this, 0), 'casterConstructor', 2)(J$.G(3481, J$.R(3465, 'value', value, 0), J$.R(3473, 'i', i, 0), 4), J$.R(3489, 'value', value, 0), J$.T(3497, undefined, 24, false), J$.T(3505, undefined, 24, false), J$.R(3513, 'i', i, 0)), subdoc, 0));
                                                J$.X1(3577, J$.P(3569, J$.R(3545, 'value', value, 0), J$.R(3553, 'i', i, 0), J$.R(3561, 'subdoc', subdoc, 0), 2));
                                            } catch (error) {
                                                error = J$.N(3665, 'error', error, 1);
                                                throw J$.X1(3657, J$.Th(3649, J$.F(3641, J$.R(3585, 'CastError', CastError, 1), 1)(J$.T(3593, 'embedded', 21, false), J$.G(3617, J$.R(3601, 'value', value, 0), J$.R(3609, 'i', i, 0), 4), J$.G(3633, J$.R(3625, 'value', value, 0), '_path', 0))));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.X1(3689, J$.Rt(3681, J$.R(3673, 'value', value, 0)));
                        } catch (J$e) {
                            J$.Ex(4737, J$e);
                        } finally {
                            if (J$.Fr(4745))
                                continue jalangiLabel4812;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3697), 0));
            J$.X1(4345, J$.P(4337, J$.R(4321, 'module', module, 2), 'exports', J$.R(4329, 'DocumentArray', DocumentArray, 1), 0));
        } catch (J$e) {
            J$.Ex(4793, J$e);
        } finally {
            if (J$.Sr(4801)) {
                J$.L();
                continue jalangiLabel4814;
            } else {
                J$.L();
                break jalangiLabel4814;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
