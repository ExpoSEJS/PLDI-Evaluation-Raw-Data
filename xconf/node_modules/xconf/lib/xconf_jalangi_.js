J$.iids = {"8":[8,9,8,33],"9":[1,20,1,27],"10":[8,11,8,32],"16":[13,9,13,27],"17":[1,28,1,32],"18":[8,9,8,33],"24":[31,13,31,70],"25":[1,20,1,33],"26":[13,9,13,27],"33":[1,20,1,33],"34":[31,28,31,43],"41":[1,20,1,33],"42":[31,13,31,70],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,13,3,20],"89":[3,21,3,32],"97":[3,13,3,33],"105":[3,13,3,33],"113":[3,13,3,33],"121":[4,13,4,20],"129":[4,21,4,28],"137":[4,13,4,29],"145":[4,13,4,29],"153":[4,13,4,29],"161":[5,10,5,17],"169":[5,18,5,22],"177":[5,10,5,23],"185":[5,10,5,23],"193":[5,10,5,23],"201":[6,12,6,19],"209":[6,20,6,26],"217":[6,12,6,27],"225":[6,12,6,27],"233":[6,12,6,27],"241":[8,11,8,15],"249":[8,27,8,32],"257":[9,20,9,25],"265":[9,16,9,27],"273":[9,16,9,27],"281":[9,9,9,28],"289":[10,5,10,9],"297":[10,19,10,21],"305":[10,5,10,21],"313":[10,5,10,22],"321":[7,13,11,2],"329":[7,13,11,2],"337":[7,13,11,2],"345":[7,13,11,2],"353":[7,13,11,2],"361":[12,1,12,6],"369":[12,1,12,16],"377":[13,9,13,13],"385":[13,18,13,27],"393":[14,16,14,20],"401":[14,16,14,27],"409":[14,16,14,27],"417":[14,9,14,28],"425":[15,12,15,17],"433":[15,22,15,26],"441":[15,22,15,33],"449":[15,35,15,39],"457":[15,12,15,40],"459":[15,12,15,21],"465":[15,12,15,40],"473":[15,5,15,41],"481":[12,23,16,2],"489":[12,23,16,2],"497":[12,23,16,2],"505":[12,23,16,2],"513":[12,1,16,2],"521":[12,1,16,3],"529":[17,1,17,6],"537":[17,1,17,16],"545":[18,5,18,10],"553":[18,15,18,19],"561":[18,15,18,26],"569":[18,28,18,32],"577":[18,34,18,39],"585":[18,5,18,40],"587":[18,5,18,14],"593":[18,5,18,41],"601":[19,12,19,16],"609":[19,12,19,16],"617":[19,5,19,17],"625":[17,23,20,2],"633":[17,23,20,2],"641":[17,23,20,2],"649":[17,23,20,2],"657":[17,23,20,2],"665":[17,1,20,2],"673":[17,1,20,3],"681":[21,1,21,6],"689":[21,1,21,16],"697":[22,16,22,23],"705":[22,24,22,28],"713":[22,16,22,29],"721":[22,16,22,29],"729":[22,16,22,29],"737":[23,16,23,21],"745":[23,22,23,26],"753":[23,22,23,33],"761":[23,35,23,39],"769":[23,16,23,40],"777":[23,16,23,40],"785":[23,16,23,40],"793":[24,5,24,9],"801":[24,19,24,23],"809":[24,5,24,23],"817":[24,5,24,24],"825":[25,12,25,16],"833":[25,12,25,16],"841":[25,5,25,17],"849":[21,24,26,2],"857":[21,24,26,2],"865":[21,24,26,2],"873":[21,24,26,2],"881":[21,24,26,2],"889":[21,24,26,2],"897":[21,1,26,2],"905":[21,1,26,3],"913":[27,1,27,6],"921":[27,1,27,16],"929":[28,16,28,20],"937":[28,16,28,20],"945":[28,16,28,20],"953":[29,17,29,19],"961":[29,32,29,35],"969":[29,17,29,36],"971":[29,17,29,31],"977":[29,17,29,36],"985":[29,17,29,36],"993":[30,5,30,10],"1001":[30,5,30,17],"1003":[30,5,30,15],"1009":[31,13,31,17],"1017":[31,28,31,32],"1025":[31,28,31,39],"1033":[31,42,31,43],"1041":[31,13,31,44],"1043":[31,13,31,27],"1049":[31,13,31,58],"1051":[31,13,31,56],"1057":[31,63,31,70],"1065":[32,13,32,17],"1073":[32,23,32,27],"1081":[32,33,32,36],"1089":[32,38,32,42],"1097":[32,23,32,43],"1099":[32,23,32,32],"1105":[32,13,32,44],"1107":[32,13,32,22],"1113":[32,13,32,45],"1121":[30,26,33,6],"1129":[30,26,33,6],"1137":[30,26,33,6],"1145":[30,26,33,6],"1153":[30,5,33,7],"1155":[30,5,30,25],"1161":[30,5,33,8],"1169":[34,12,34,16],"1177":[34,12,34,16],"1185":[34,5,34,17],"1193":[27,23,35,2],"1201":[27,23,35,2],"1209":[27,23,35,2],"1217":[27,23,35,2],"1225":[27,23,35,2],"1233":[27,23,35,2],"1241":[27,1,35,2],"1249":[27,1,35,3],"1257":[36,1,36,7],"1265":[36,18,36,23],"1273":[36,1,36,23],"1281":[36,1,36,24],"1289":[1,1,36,24],"1297":[1,1,36,24],"1305":[1,1,36,24],"1313":[1,1,36,24],"1321":[1,1,36,24],"1329":[1,1,36,24],"1337":[1,1,36,24],"1345":[1,1,36,24],"1353":[8,5,9,28],"1361":[7,13,11,2],"1369":[7,13,11,2],"1377":[13,5,14,28],"1385":[12,23,16,2],"1393":[12,23,16,2],"1401":[17,23,20,2],"1409":[17,23,20,2],"1417":[21,24,26,2],"1425":[21,24,26,2],"1433":[31,9,32,45],"1441":[30,26,33,6],"1449":[30,26,33,6],"1457":[27,23,35,2],"1465":[27,23,35,2],"1473":[1,1,36,24],"1481":[1,1,36,24],"nBranches":6,"originalCodeFileName":"/home/blake/ExpoSE/Targets/xconf/node_modules/xconf/lib/xconf.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/xconf/node_modules/xconf/lib/xconf_jalangi_.js","code":"var merge = require('deepmerge');\nvar dotty = require('dotty');\nvar fs = require('fs');\nvar path = require('path');\n\n/**\n * Main XConf class\n *\n * @class XConf\n * @constructor\n * @chainable\n */\nvar XConf = function(){\n\n    if(!(this instanceof XConf))\n        return new XConf();\n\n    /**\n     * This object holds all the configs from each instance\n     *\n     * @property __conf\n     * @private\n     * @type Object\n     */\n     this.__conf = {};\n};\n\n/**\n * Gets the value of a configuration\n *\n * @method Get\n * @public\n * @param {String | Array} name The key to get\n * @return {Mixed} The value of the key or undefined if not found\n */\nXConf.prototype.get = function(name){\n    if(name === undefined)\n        return this.__conf;\n\n    return dotty.get(this.__conf, name);\n};\n\n/**\n * Sets the value of a configuration\n *\n * @method Set\n * @public\n * @chainable\n * @param {String | Array} name The key to set\n * @param {Mixed} value The value of the key to set\n * @return {Object} This class as a chain\n */\nXConf.prototype.set = function(name, value){\n    dotty.put(this.__conf, name, value);\n\n    return this;\n};\n\n/**\n * Parses a JSON file and merge it into the main config object\n *\n * @method File\n * @public\n * @chainable\n * @param {String} file The path to the file\n * @return {Object} This class as a chain\n */\nXConf.prototype.file = function(file){\n    var json = require(file);\n    var save = merge(this.__conf, json);\n    this.__conf = save;\n\n    return this;\n};\n\n/**\n * Parses all JSON files inside a directory\n *\n * @method Dir\n * @public\n * @chainable\n * @param {String} dir The path to the directory\n * @return {Object} This class as a chain\n */\nXConf.prototype.dir = function(dir){\n    var self = this;\n    var files = fs.readdirSync(dir);\n    files.sort().forEach(function(file){\n        if(file.substring(file.length - 5).toLowerCase() === '.json')\n            self.file(path.join(dir, file));\n    });\n\n    return this;\n};\n\nmodule.exports = XConf;\n"};
jalangiLabel49:
    while (true) {
        try {
            J$.Se(1289, '/home/blake/ExpoSE/Targets/xconf/node_modules/xconf/lib/xconf_jalangi_.js', '/home/blake/ExpoSE/Targets/xconf/node_modules/xconf/lib/xconf.js');
            J$.N(1297, '__secret__S$', __secret__S$, 0);
            J$.N(1305, '__secret__traits__', __secret__traits__, 0);
            J$.N(1313, 'merge', merge, 0);
            J$.N(1321, 'dotty', dotty, 0);
            J$.N(1329, 'fs', fs, 0);
            J$.N(1337, 'path', path, 0);
            J$.N(1345, 'XConf', XConf, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var merge = J$.X1(113, J$.W(105, 'merge', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'deepmerge', 21, false)), merge, 3));
            var dotty = J$.X1(153, J$.W(145, 'dotty', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'dotty', 21, false)), dotty, 3));
            var fs = J$.X1(193, J$.W(185, 'fs', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, 'fs', 21, false)), fs, 3));
            var path = J$.X1(233, J$.W(225, 'path', J$.F(217, J$.R(201, 'require', require, 2), 0)(J$.T(209, 'path', 21, false)), path, 3));
            var XConf = J$.X1(353, J$.W(345, 'XConf', J$.T(337, function () {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            if (J$.X1(1353, J$.C(8, J$.U(18, '!', J$.B(10, 'instanceof', J$.R(241, 'this', this, 0), J$.R(249, 'XConf', XConf, 1), 0)))))
                                return J$.X1(281, J$.Rt(273, J$.F(265, J$.R(257, 'XConf', XConf, 1), 1)()));
                            J$.X1(313, J$.P(305, J$.R(289, 'this', this, 0), '__conf', J$.T(297, {}, 11, false), 0));
                        } catch (J$e) {
                            J$.Ex(1361, J$e);
                        } finally {
                            if (J$.Fr(1369))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 321), XConf, 3));
            J$.X1(521, J$.P(513, J$.G(369, J$.R(361, 'XConf', XConf, 1), 'prototype', 0), 'get', J$.T(505, function (name) {
                jalangiLabel44:
                    while (true) {
                        try {
                            J$.Fe(481, arguments.callee, this, arguments);
                            arguments = J$.N(489, 'arguments', arguments, 4);
                            name = J$.N(497, 'name', name, 4);
                            if (J$.X1(1377, J$.C(16, J$.B(26, '===', J$.R(377, 'name', name, 0), J$.T(385, undefined, 24, false), 0))))
                                return J$.X1(417, J$.Rt(409, J$.G(401, J$.R(393, 'this', this, 0), '__conf', 0)));
                            return J$.X1(473, J$.Rt(465, J$.M(457, J$.R(425, 'dotty', dotty, 1), 'get', 0)(J$.G(441, J$.R(433, 'this', this, 0), '__conf', 0), J$.R(449, 'name', name, 0))));
                        } catch (J$e) {
                            J$.Ex(1385, J$e);
                        } finally {
                            if (J$.Fr(1393))
                                continue jalangiLabel44;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 481), 0));
            J$.X1(673, J$.P(665, J$.G(537, J$.R(529, 'XConf', XConf, 1), 'prototype', 0), 'set', J$.T(657, function (name, value) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(625, arguments.callee, this, arguments);
                            arguments = J$.N(633, 'arguments', arguments, 4);
                            name = J$.N(641, 'name', name, 4);
                            value = J$.N(649, 'value', value, 4);
                            J$.X1(593, J$.M(585, J$.R(545, 'dotty', dotty, 1), 'put', 0)(J$.G(561, J$.R(553, 'this', this, 0), '__conf', 0), J$.R(569, 'name', name, 0), J$.R(577, 'value', value, 0)));
                            return J$.X1(617, J$.Rt(609, J$.R(601, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1401, J$e);
                        } finally {
                            if (J$.Fr(1409))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 625), 0));
            J$.X1(905, J$.P(897, J$.G(689, J$.R(681, 'XConf', XConf, 1), 'prototype', 0), 'file', J$.T(889, function (file) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(849, arguments.callee, this, arguments);
                            arguments = J$.N(857, 'arguments', arguments, 4);
                            file = J$.N(865, 'file', file, 4);
                            J$.N(873, 'json', json, 0);
                            J$.N(881, 'save', save, 0);
                            var json = J$.X1(729, J$.W(721, 'json', J$.F(713, J$.R(697, 'require', require, 2), 0)(J$.R(705, 'file', file, 0)), json, 1));
                            var save = J$.X1(785, J$.W(777, 'save', J$.F(769, J$.R(737, 'merge', merge, 1), 0)(J$.G(753, J$.R(745, 'this', this, 0), '__conf', 0), J$.R(761, 'json', json, 0)), save, 1));
                            J$.X1(817, J$.P(809, J$.R(793, 'this', this, 0), '__conf', J$.R(801, 'save', save, 0), 0));
                            return J$.X1(841, J$.Rt(833, J$.R(825, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1417, J$e);
                        } finally {
                            if (J$.Fr(1425))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 849), 0));
            J$.X1(1249, J$.P(1241, J$.G(921, J$.R(913, 'XConf', XConf, 1), 'prototype', 0), 'dir', J$.T(1233, function (dir) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(1193, arguments.callee, this, arguments);
                            arguments = J$.N(1201, 'arguments', arguments, 4);
                            dir = J$.N(1209, 'dir', dir, 4);
                            J$.N(1217, 'self', self, 0);
                            J$.N(1225, 'files', files, 0);
                            var self = J$.X1(945, J$.W(937, 'self', J$.R(929, 'this', this, 0), self, 1));
                            var files = J$.X1(985, J$.W(977, 'files', J$.M(969, J$.R(953, 'fs', fs, 1), 'readdirSync', 0)(J$.R(961, 'dir', dir, 0)), files, 1));
                            J$.X1(1161, J$.M(1153, J$.M(1001, J$.R(993, 'files', files, 0), 'sort', 0)(), 'forEach', 0)(J$.T(1145, function (file) {
                                jalangiLabel47:
                                    while (true) {
                                        try {
                                            J$.Fe(1121, arguments.callee, this, arguments);
                                            arguments = J$.N(1129, 'arguments', arguments, 4);
                                            file = J$.N(1137, 'file', file, 4);
                                            if (J$.X1(1433, J$.C(24, J$.B(42, '===', J$.M(1049, J$.M(1041, J$.R(1009, 'file', file, 0), 'substring', 0)(J$.B(34, '-', J$.G(1025, J$.R(1017, 'file', file, 0), 'length', 0), J$.T(1033, 5, 22, false), 0)), 'toLowerCase', 0)(), J$.T(1057, '.json', 21, false), 0))))
                                                J$.X1(1113, J$.M(1105, J$.R(1065, 'self', self, 0), 'file', 0)(J$.M(1097, J$.R(1073, 'path', path, 1), 'join', 0)(J$.R(1081, 'dir', dir, 0), J$.R(1089, 'file', file, 0))));
                                        } catch (J$e) {
                                            J$.Ex(1441, J$e);
                                        } finally {
                                            if (J$.Fr(1449))
                                                continue jalangiLabel47;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1121)));
                            return J$.X1(1185, J$.Rt(1177, J$.R(1169, 'this', this, 0)));
                        } catch (J$e) {
                            J$.Ex(1457, J$e);
                        } finally {
                            if (J$.Fr(1465))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1193), 0));
            J$.X1(1281, J$.P(1273, J$.R(1257, 'module', module, 2), 'exports', J$.R(1265, 'XConf', XConf, 1), 0));
        } catch (J$e) {
            J$.Ex(1473, J$e);
        } finally {
            if (J$.Sr(1481)) {
                J$.L();
                continue jalangiLabel49;
            } else {
                J$.L();
                break jalangiLabel49;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
