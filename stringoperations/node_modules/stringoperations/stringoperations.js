!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define("stringoperations",["exports"],r):r(e.stringoperations=e.stringoperations||{})}(this,function(e){"use strict";function r(e,r){var t=arguments.length<=2||void 0===arguments[2]?0:arguments[2];if(!(e instanceof RegExp))throw new TypeError("First argument to 'allIndexesOf' must be of type 'RegExp'");if("string"!=typeof r)throw new TypeError("Second argument to 'allIndexesOf' must be of type 'string'!");if("number"!=typeof t)throw new TypeError("third argument to 'allIndexesOf' must be of type 'number'!");if(t<0||t>=r.length)throw new RangeError("Given 'startingFrom' value: "+t+" is out of bounds!");for(var n=[],o=void 0;null!=(o=e.exec(r));)o.index>=t&&n.push(o.index);return n}function t(e){if("string"!=typeof e)throw new TypeError("Given argument to 'capitalize' must be of type 'string'!");return e.slice(0,1).toUpperCase()+e.slice(1)}function n(e){var r=!(arguments.length<=1||void 0===arguments[1])&&arguments[1];if("string"!=typeof e)throw new TypeError("Given argument to 'removeWhitespace' must be of type 'string'!");return r?e.replace(/[\t]/g," ").replace(/[\n\r]/g,"").replace(/[ ]{2,}/g," "):e.replace(/[ \n\t\r]/g,"")}function o(e){if("string"!=typeof e)throw new TypeError("Given argument to 'lowerCaseFirst' must be of type 'string'!");return e.slice(0,1).toLowerCase()+e.slice(1)}function i(e){if("string"!=typeof e)throw new TypeError("Given argument to 'camelCase' must be of type 'string'!");return o(e.replace(/[-_+]+/g," ").replace(/[ ]{2,}/g," ").replace(/[^\w\sa-zæøåàáäâëêéèïîíìöòóôüúùû&]/gi,"").replace(/[A-Z]{2,}/g,function(e){return e.toLowerCase()}).replace(/ (.)/g,function(e){return e.toUpperCase()}).replace(/ /g,""))}function s(e){if("string"!=typeof e)throw new TypeError("Given argument to 'kebabCase' must be of type 'string'!");var r=e;return/[a-zæøåàáäâëêéèïîíìöòóôüúùû]/.test(r)||(r=e.toLowerCase()),r.replace(/(?:_)[A-ZÅÀÁÂÄÆËÊÉÈÏÎÍÌÖÔÒÓØÜÛÚÙ]{2,}|[A-Z]{2,}(?=_)/g,function(e){return" "+e.toLowerCase()}).replace(/[-_+]/g," ").replace(/[ \t\r]*[A-ZÅÀÁÂÄÆËÊÉÈÏÎÍÌÖÔÒÓØÜÛÚÙ]+[ \t\r]+/g,function(e){return" "+e.toLowerCase()+" "}).replace(/[A-ZÅÀÁÂÄÆËÊÉÈÏÎÍÌÖÔÒÓØÜÛÚÙ]/g,function(e){return" "+e.toLowerCase()}).replace(/^[ \t\r]+/g,"").replace(/\s{2,}/g," ").replace(/\s+/g,"-")}function a(e){if("string"!=typeof e)throw new TypeError("Given argument to 'parseTypeFromString' must be of type 'string'!");if("true"===e)return!0;if("false"===e)return!1;if(/^[\d\.]+$/.test(e))return parseFloat(e);if("null"===e)return null;if("undefined"!==e)return"NaN"===e?NaN:"Infinity"===e?1/0:e}e.allIndexesOf=r,e.capitalize=t,e.removeWhitespace=n,e.lowerCaseFirst=o,e.camelCase=i,e.kebabCase=s,e.parsePrimitiveFromString=a,Object.defineProperty(e,"__esModule",{value:!0})});