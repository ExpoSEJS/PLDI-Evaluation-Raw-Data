{"8":[8,14,8,29],"9":[1,20,1,27],"10":[5,80,5,98],"16":[6,9,6,28],"17":[1,28,1,32],"18":[6,9,6,28],"24":[11,13,11,31],"25":[1,20,1,33],"26":[8,14,8,29],"32":[22,21,22,43],"33":[1,20,1,33],"34":[11,13,11,31],"41":[1,20,1,33],"42":[22,25,22,43],"49":[2,26,2,38],"50":[22,21,22,43],"57":[2,26,2,45],"58":[22,45,22,48],"65":[2,26,2,45],"73":[2,26,2,45],"74":[22,45,22,48],"81":[3,16,3,23],"89":[3,24,3,34],"97":[3,16,3,35],"105":[3,16,3,35],"113":[3,16,3,35],"121":[4,1,4,7],"129":[5,19,5,21],"137":[5,19,5,27],"145":[5,33,5,42],"153":[5,19,5,43],"155":[5,19,5,32],"161":[5,53,5,60],"169":[5,61,5,62],"177":[5,53,5,63],"185":[5,72,5,79],"193":[5,80,5,87],"201":[5,80,5,94],"209":[5,97,5,98],"217":[5,72,5,99],"225":[5,111,5,119],"233":[5,120,5,125],"241":[5,127,5,131],"249":[5,111,5,132],"257":[5,19,5,43],"265":[5,19,5,43],"273":[5,53,5,63],"281":[5,53,5,63],"289":[5,72,5,99],"297":[5,72,5,99],"305":[5,111,5,132],"313":[5,111,5,132],"321":[6,9,6,16],"329":[6,9,6,23],"337":[6,27,6,28],"345":[7,16,7,23],"353":[7,24,7,25],"361":[7,16,7,26],"369":[7,16,7,26],"377":[7,9,7,27],"385":[8,15,8,22],"393":[8,15,8,29],"401":[9,19,9,24],"409":[9,25,9,57],"417":[9,15,9,58],"425":[9,15,9,58],"433":[9,9,9,59],"441":[11,13,11,20],"449":[11,13,11,27],"457":[11,30,11,31],"465":[12,13,12,20],"473":[12,13,12,20],"481":[13,9,13,16],"489":[13,17,13,18],"497":[13,9,13,19],"505":[13,25,13,32],"513":[13,33,13,34],"521":[13,25,13,35],"529":[13,9,13,36],"531":[13,9,13,24],"537":[13,9,13,37],"545":[14,9,14,16],"553":[14,17,14,24],"561":[14,31,14,32],"569":[14,17,14,33],"571":[14,17,14,30],"577":[14,9,14,34],"585":[14,9,14,35],"593":[10,5,15,6],"601":[10,5,15,6],"609":[10,5,15,6],"617":[16,5,16,12],"625":[16,13,16,20],"633":[16,5,16,21],"641":[16,5,16,22],"649":[18,20,18,22],"657":[18,20,18,28],"665":[18,34,18,43],"673":[18,20,18,44],"675":[18,20,18,33],"681":[18,20,18,44],"689":[18,20,18,44],"697":[19,9,19,13],"705":[19,22,19,29],"713":[19,9,19,30],"715":[19,9,19,21],"721":[19,9,19,31],"729":[20,9,20,16],"737":[20,9,20,21],"745":[20,28,20,35],"753":[20,37,20,41],"761":[20,9,20,42],"763":[20,9,20,27],"769":[20,9,20,43],"777":[17,5,21,6],"785":[17,5,21,6],"793":[17,5,21,6],"801":[22,18,22,19],"809":[22,18,22,19],"817":[22,18,22,19],"825":[22,21,22,22],"833":[22,25,22,32],"841":[22,25,22,39],"849":[22,42,22,43],"865":[22,45,22,46],"873":[22,45,22,48],"889":[23,9,23,16],"897":[23,17,23,18],"905":[23,9,23,19],"913":[23,23,23,30],"921":[23,32,23,39],"929":[23,9,23,40],"931":[23,9,23,22],"937":[23,9,23,41],"945":[24,12,24,19],"953":[24,12,24,19],"961":[24,5,24,20],"969":[4,18,25,2],"977":[4,18,25,2],"985":[4,18,25,2],"993":[4,18,25,2],"1001":[4,18,25,2],"1009":[4,18,25,2],"1017":[10,5,15,6],"1025":[4,18,25,2],"1033":[17,5,21,6],"1041":[4,18,25,2],"1049":[4,18,25,2],"1057":[4,18,25,2],"1065":[4,1,25,2],"1073":[4,1,25,3],"1081":[1,1,25,3],"1089":[1,1,25,3],"1097":[1,1,25,3],"1105":[1,1,25,3],"1113":[8,10,9,59],"1121":[6,5,9,59],"1129":[11,9,12,20],"1137":[10,5,15,6],"1145":[10,5,15,6],"1153":[17,5,21,6],"1161":[17,5,21,6],"1169":[22,5,23,41],"1177":[22,5,23,41],"1185":[4,18,25,2],"1193":[4,18,25,2],"1201":[1,1,25,3],"1209":[1,1,25,3],"nBranches":8,"originalCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/stream-combiner/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/stream-combiner/index_jalangi_.js","code":"var duplexer = require('duplexer')\n\nmodule.exports = function () {\n\n  var streams = [].slice.call(arguments)\n    , first = streams[0]\n    , last = streams[streams.length - 1]\n    , thepipe = duplexer(first, last)\n\n  if(streams.length == 1)\n    return streams[0]\n  else if (!streams.length)\n    throw new Error('connect called with empty args')\n\n  //pipe all the streams together\n\n  function recurse (streams) {\n    if(streams.length < 2)\n      return\n    streams[0].pipe(streams[1])\n    recurse(streams.slice(1))  \n  }\n  \n  recurse(streams)\n \n  function onerror () {\n    var args = [].slice.call(arguments)\n    args.unshift('error')\n    thepipe.emit.apply(thepipe, args)\n  }\n  \n  //es.duplex already reemits the error from the first and last stream.\n  //add a listener for the inner streams in the pipeline.\n  for(var i = 1; i < streams.length - 1; i ++)\n    streams[i].on('error', onerror)\n\n  return thepipe\n}\n\n"}