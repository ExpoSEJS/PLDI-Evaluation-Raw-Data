J$.iids = {"8":[8,14,8,29],"9":[1,20,1,27],"10":[5,80,5,98],"16":[6,9,6,28],"17":[1,28,1,32],"18":[6,9,6,28],"24":[11,13,11,31],"25":[1,20,1,33],"26":[8,14,8,29],"32":[22,21,22,43],"33":[1,20,1,33],"34":[11,13,11,31],"41":[1,20,1,33],"42":[22,25,22,43],"49":[2,26,2,38],"50":[22,21,22,43],"57":[2,26,2,45],"58":[22,45,22,48],"65":[2,26,2,45],"73":[2,26,2,45],"74":[22,45,22,48],"81":[3,16,3,23],"89":[3,24,3,34],"97":[3,16,3,35],"105":[3,16,3,35],"113":[3,16,3,35],"121":[4,1,4,7],"129":[5,19,5,21],"137":[5,19,5,27],"145":[5,33,5,42],"153":[5,19,5,43],"155":[5,19,5,32],"161":[5,53,5,60],"169":[5,61,5,62],"177":[5,53,5,63],"185":[5,72,5,79],"193":[5,80,5,87],"201":[5,80,5,94],"209":[5,97,5,98],"217":[5,72,5,99],"225":[5,111,5,119],"233":[5,120,5,125],"241":[5,127,5,131],"249":[5,111,5,132],"257":[5,19,5,43],"265":[5,19,5,43],"273":[5,53,5,63],"281":[5,53,5,63],"289":[5,72,5,99],"297":[5,72,5,99],"305":[5,111,5,132],"313":[5,111,5,132],"321":[6,9,6,16],"329":[6,9,6,23],"337":[6,27,6,28],"345":[7,16,7,23],"353":[7,24,7,25],"361":[7,16,7,26],"369":[7,16,7,26],"377":[7,9,7,27],"385":[8,15,8,22],"393":[8,15,8,29],"401":[9,19,9,24],"409":[9,25,9,57],"417":[9,15,9,58],"425":[9,15,9,58],"433":[9,9,9,59],"441":[11,13,11,20],"449":[11,13,11,27],"457":[11,30,11,31],"465":[12,13,12,20],"473":[12,13,12,20],"481":[13,9,13,16],"489":[13,17,13,18],"497":[13,9,13,19],"505":[13,25,13,32],"513":[13,33,13,34],"521":[13,25,13,35],"529":[13,9,13,36],"531":[13,9,13,24],"537":[13,9,13,37],"545":[14,9,14,16],"553":[14,17,14,24],"561":[14,31,14,32],"569":[14,17,14,33],"571":[14,17,14,30],"577":[14,9,14,34],"585":[14,9,14,35],"593":[10,5,15,6],"601":[10,5,15,6],"609":[10,5,15,6],"617":[16,5,16,12],"625":[16,13,16,20],"633":[16,5,16,21],"641":[16,5,16,22],"649":[18,20,18,22],"657":[18,20,18,28],"665":[18,34,18,43],"673":[18,20,18,44],"675":[18,20,18,33],"681":[18,20,18,44],"689":[18,20,18,44],"697":[19,9,19,13],"705":[19,22,19,29],"713":[19,9,19,30],"715":[19,9,19,21],"721":[19,9,19,31],"729":[20,9,20,16],"737":[20,9,20,21],"745":[20,28,20,35],"753":[20,37,20,41],"761":[20,9,20,42],"763":[20,9,20,27],"769":[20,9,20,43],"777":[17,5,21,6],"785":[17,5,21,6],"793":[17,5,21,6],"801":[22,18,22,19],"809":[22,18,22,19],"817":[22,18,22,19],"825":[22,21,22,22],"833":[22,25,22,32],"841":[22,25,22,39],"849":[22,42,22,43],"865":[22,45,22,46],"873":[22,45,22,48],"889":[23,9,23,16],"897":[23,17,23,18],"905":[23,9,23,19],"913":[23,23,23,30],"921":[23,32,23,39],"929":[23,9,23,40],"931":[23,9,23,22],"937":[23,9,23,41],"945":[24,12,24,19],"953":[24,12,24,19],"961":[24,5,24,20],"969":[4,18,25,2],"977":[4,18,25,2],"985":[4,18,25,2],"993":[4,18,25,2],"1001":[4,18,25,2],"1009":[4,18,25,2],"1017":[10,5,15,6],"1025":[4,18,25,2],"1033":[17,5,21,6],"1041":[4,18,25,2],"1049":[4,18,25,2],"1057":[4,18,25,2],"1065":[4,1,25,2],"1073":[4,1,25,3],"1081":[1,1,25,3],"1089":[1,1,25,3],"1097":[1,1,25,3],"1105":[1,1,25,3],"1113":[8,10,9,59],"1121":[6,5,9,59],"1129":[11,9,12,20],"1137":[10,5,15,6],"1145":[10,5,15,6],"1153":[17,5,21,6],"1161":[17,5,21,6],"1169":[22,5,23,41],"1177":[22,5,23,41],"1185":[4,18,25,2],"1193":[4,18,25,2],"1201":[1,1,25,3],"1209":[1,1,25,3],"nBranches":8,"originalCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/stream-combiner/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/stream-combiner/index_jalangi_.js","code":"var duplexer = require('duplexer')\n\nmodule.exports = function () {\n\n  var streams = [].slice.call(arguments)\n    , first = streams[0]\n    , last = streams[streams.length - 1]\n    , thepipe = duplexer(first, last)\n\n  if(streams.length == 1)\n    return streams[0]\n  else if (!streams.length)\n    throw new Error('connect called with empty args')\n\n  //pipe all the streams together\n\n  function recurse (streams) {\n    if(streams.length < 2)\n      return\n    streams[0].pipe(streams[1])\n    recurse(streams.slice(1))  \n  }\n  \n  recurse(streams)\n \n  function onerror () {\n    var args = [].slice.call(arguments)\n    args.unshift('error')\n    thepipe.emit.apply(thepipe, args)\n  }\n  \n  //es.duplex already reemits the error from the first and last stream.\n  //add a listener for the inner streams in the pipeline.\n  for(var i = 1; i < streams.length - 1; i ++)\n    streams[i].on('error', onerror)\n\n  return thepipe\n}\n\n"};
jalangiLabel339:
    while (true) {
        try {
            J$.Se(1081, '/home/blake/ExpoSE/Targets/json-tools/node_modules/stream-combiner/index_jalangi_.js', '/home/blake/ExpoSE/Targets/json-tools/node_modules/stream-combiner/index.js');
            J$.N(1089, '__secret__S$', __secret__S$, 0);
            J$.N(1097, '__secret__traits__', __secret__traits__, 0);
            J$.N(1105, 'duplexer', duplexer, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var duplexer = J$.X1(113, J$.W(105, 'duplexer', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'duplexer', 21, false)), duplexer, 3));
            J$.X1(1073, J$.P(1065, J$.R(121, 'module', module, 2), 'exports', J$.T(1057, function () {
                jalangiLabel338:
                    while (true) {
                        try {
                            J$.Fe(969, arguments.callee, this, arguments);
                            function recurse(streams) {
                                jalangiLabel336:
                                    while (true) {
                                        try {
                                            J$.Fe(593, arguments.callee, this, arguments);
                                            arguments = J$.N(601, 'arguments', arguments, 4);
                                            streams = J$.N(609, 'streams', streams, 4);
                                            if (J$.X1(1129, J$.C(24, J$.B(34, '<', J$.G(449, J$.R(441, 'streams', streams, 0), 'length', 0), J$.T(457, 2, 22, false), 0))))
                                                return J$.X1(473, J$.Rt(465, undefined));
                                            J$.X1(537, J$.M(529, J$.G(497, J$.R(481, 'streams', streams, 0), J$.T(489, 0, 22, false), 4), 'pipe', 0)(J$.G(521, J$.R(505, 'streams', streams, 0), J$.T(513, 1, 22, false), 4)));
                                            J$.X1(585, J$.F(577, J$.R(545, 'recurse', recurse, 0), 0)(J$.M(569, J$.R(553, 'streams', streams, 0), 'slice', 0)(J$.T(561, 1, 22, false))));
                                        } catch (J$e) {
                                            J$.Ex(1137, J$e);
                                        } finally {
                                            if (J$.Fr(1145))
                                                continue jalangiLabel336;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function onerror() {
                                jalangiLabel337:
                                    while (true) {
                                        try {
                                            J$.Fe(777, arguments.callee, this, arguments);
                                            arguments = J$.N(785, 'arguments', arguments, 4);
                                            J$.N(793, 'args', args, 0);
                                            var args = J$.X1(689, J$.W(681, 'args', J$.M(673, J$.G(657, J$.T(649, [], 10, false), 'slice', 0), 'call', 0)(J$.R(665, 'arguments', arguments, 2)), args, 1));
                                            J$.X1(721, J$.M(713, J$.R(697, 'args', args, 0), 'unshift', 0)(J$.T(705, 'error', 21, false)));
                                            J$.X1(769, J$.M(761, J$.G(737, J$.R(729, 'thepipe', thepipe, 0), 'emit', 0), 'apply', 0)(J$.R(745, 'thepipe', thepipe, 0), J$.R(753, 'args', args, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1153, J$e);
                                        } finally {
                                            if (J$.Fr(1161))
                                                continue jalangiLabel337;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(977, 'arguments', arguments, 4);
                            J$.N(985, 'streams', streams, 0);
                            J$.N(993, 'first', first, 0);
                            J$.N(1001, 'last', last, 0);
                            J$.N(1009, 'thepipe', thepipe, 0);
                            recurse = J$.N(1025, 'recurse', J$.T(1017, recurse, 12, false, 593), 0);
                            onerror = J$.N(1041, 'onerror', J$.T(1033, onerror, 12, false, 777), 0);
                            J$.N(1049, 'i', i, 0);
                            var streams = J$.X1(265, J$.W(257, 'streams', J$.M(153, J$.G(137, J$.T(129, [], 10, false), 'slice', 0), 'call', 0)(J$.R(145, 'arguments', arguments, 2)), streams, 1)), first = J$.X1(281, J$.W(273, 'first', J$.G(177, J$.R(161, 'streams', streams, 0), J$.T(169, 0, 22, false), 4), first, 1)), last = J$.X1(297, J$.W(289, 'last', J$.G(217, J$.R(185, 'streams', streams, 0), J$.B(10, '-', J$.G(201, J$.R(193, 'streams', streams, 0), 'length', 0), J$.T(209, 1, 22, false), 0), 4), last, 1)), thepipe = J$.X1(313, J$.W(305, 'thepipe', J$.F(249, J$.R(225, 'duplexer', duplexer, 1), 0)(J$.R(233, 'first', first, 0), J$.R(241, 'last', last, 0)), thepipe, 1));
                            if (J$.X1(1121, J$.C(16, J$.B(18, '==', J$.G(329, J$.R(321, 'streams', streams, 0), 'length', 0), J$.T(337, 1, 22, false), 0))))
                                return J$.X1(377, J$.Rt(369, J$.G(361, J$.R(345, 'streams', streams, 0), J$.T(353, 0, 22, false), 4)));
                            else if (J$.X1(1113, J$.C(8, J$.U(26, '!', J$.G(393, J$.R(385, 'streams', streams, 0), 'length', 0)))))
                                throw J$.X1(433, J$.Th(425, J$.F(417, J$.R(401, 'Error', Error, 2), 1)(J$.T(409, 'connect called with empty args', 21, false))));
                            J$.X1(641, J$.F(633, J$.R(617, 'recurse', recurse, 0), 0)(J$.R(625, 'streams', streams, 0)));
                            for (var i = J$.X1(817, J$.W(809, 'i', J$.T(801, 1, 22, false), i, 1)); J$.X1(1169, J$.C(32, J$.B(50, '<', J$.R(825, 'i', i, 0), J$.B(42, '-', J$.G(841, J$.R(833, 'streams', streams, 0), 'length', 0), J$.T(849, 1, 22, false), 0), 0))); J$.X1(1177, J$.B(74, '-', i = J$.W(873, 'i', J$.B(66, '+', J$.U(58, '+', J$.R(865, 'i', i, 0)), J$.T(857, 1, 22, false), 0), i, 0), J$.T(881, 1, 22, false), 0)))
                                J$.X1(937, J$.M(929, J$.G(905, J$.R(889, 'streams', streams, 0), J$.R(897, 'i', i, 0), 4), 'on', 0)(J$.T(913, 'error', 21, false), J$.R(921, 'onerror', onerror, 0)));
                            return J$.X1(961, J$.Rt(953, J$.R(945, 'thepipe', thepipe, 0)));
                        } catch (J$e) {
                            J$.Ex(1185, J$e);
                        } finally {
                            if (J$.Fr(1193))
                                continue jalangiLabel338;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 969), 0));
        } catch (J$e) {
            J$.Ex(1201, J$e);
        } finally {
            if (J$.Sr(1209)) {
                J$.L();
                continue jalangiLabel339;
            } else {
                J$.L();
                break jalangiLabel339;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
