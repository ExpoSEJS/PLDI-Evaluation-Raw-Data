J$.iids = {"8":[9,9,9,38],"9":[1,20,1,27],"10":[9,24,9,38],"16":[11,9,11,17],"17":[1,28,1,32],"18":[9,9,9,38],"24":[20,17,20,45],"25":[1,20,1,33],"26":[11,9,11,17],"32":[14,13,14,19],"33":[1,20,1,33],"34":[20,33,20,45],"40":[28,25,28,42],"41":[1,20,1,33],"42":[20,17,20,45],"48":[36,13,36,24],"49":[2,26,2,38],"50":[26,23,26,37],"56":[38,13,38,26],"57":[2,26,2,45],"58":[28,25,28,42],"65":[2,26,2,45],"66":[28,44,28,47],"73":[2,26,2,45],"81":[3,15,3,22],"82":[28,44,28,47],"89":[3,23,3,32],"90":[38,13,38,26],"97":[3,15,3,33],"105":[3,15,3,33],"113":[3,15,3,33],"121":[4,15,4,22],"129":[4,23,4,39],"137":[4,15,4,40],"145":[4,15,4,54],"153":[4,15,4,54],"161":[4,15,4,54],"169":[5,1,5,7],"177":[5,18,5,23],"185":[5,1,5,23],"193":[5,1,5,24],"201":[7,23,7,30],"209":[7,19,7,32],"217":[7,19,7,32],"225":[7,19,7,32],"233":[8,17,8,19],"241":[8,17,8,19],"249":[8,17,8,19],"257":[9,9,9,19],"265":[9,31,9,38],"273":[10,18,10,25],"281":[10,18,10,25],"289":[10,37,10,41],"297":[10,37,10,41],"305":[10,9,10,25],"313":[10,9,10,42],"321":[11,10,11,17],"329":[12,19,12,26],"337":[12,19,12,26],"345":[12,9,12,27],"353":[14,13,14,19],"361":[16,25,16,31],"369":[16,32,16,37],"377":[16,25,16,38],"385":[16,25,16,38],"393":[16,17,16,39],"401":[18,24,18,30],"409":[18,36,18,43],"417":[18,45,18,48],"425":[18,24,18,49],"427":[18,24,18,35],"433":[18,24,18,49],"441":[18,17,18,50],"449":[17,15,19,14],"457":[20,17,20,28],"465":[20,40,20,45],"473":[21,17,21,23],"481":[21,30,21,35],"489":[21,17,21,36],"491":[21,17,21,29],"497":[21,17,21,37],"505":[23,13,23,19],"513":[23,26,23,31],"521":[23,13,23,32],"523":[23,13,23,25],"529":[23,13,23,33],"537":[13,5,24,6],"545":[13,5,24,6],"553":[13,5,24,6],"561":[13,5,24,6],"569":[26,23,26,28],"577":[26,31,26,37],"585":[26,45,26,52],"593":[26,22,26,53],"595":[26,22,26,44],"601":[26,22,26,53],"609":[26,22,26,53],"617":[27,17,27,23],"625":[27,17,27,29],"627":[27,17,27,27],"633":[27,17,27,29],"641":[27,9,27,30],"649":[28,22,28,23],"657":[28,22,28,23],"665":[28,22,28,23],"673":[28,25,28,26],"681":[28,29,28,35],"689":[28,29,28,42],"705":[28,44,28,45],"713":[28,44,28,47],"729":[29,25,29,31],"737":[29,32,29,33],"745":[29,25,29,34],"753":[29,25,29,34],"761":[29,25,29,34],"769":[30,13,30,17],"777":[30,18,30,24],"785":[30,26,30,31],"793":[30,13,30,32],"801":[30,13,30,33],"809":[25,5,32,6],"817":[25,5,32,6],"825":[25,5,32,6],"833":[25,5,32,6],"841":[25,5,32,6],"849":[25,5,32,6],"857":[25,5,32,6],"865":[33,12,33,19],"873":[34,9,34,13],"881":[34,14,34,18],"889":[34,20,34,27],"897":[34,34,34,35],"905":[34,20,34,36],"907":[34,20,34,33],"913":[34,9,34,37],"921":[34,9,34,38],"929":[33,20,35,6],"937":[33,20,35,6],"945":[33,20,35,6],"953":[33,20,35,6],"961":[36,13,36,20],"969":[36,13,36,24],"977":[37,13,37,17],"985":[37,18,37,22],"993":[37,24,37,31],"1001":[37,24,37,37],"1003":[37,24,37,35],"1009":[37,13,37,38],"1017":[37,13,37,39],"1025":[38,13,38,18],"1033":[38,22,38,26],"1041":[39,13,39,17],"1049":[39,18,39,22],"1057":[39,24,39,29],"1065":[39,13,39,30],"1073":[39,13,39,31],"1081":[40,9,40,13],"1089":[40,20,40,24],"1097":[40,9,40,25],"1099":[40,9,40,19],"1105":[40,9,40,26],"1113":[35,8,41,6],"1121":[35,8,41,6],"1129":[35,8,41,6],"1137":[33,12,41,7],"1145":[33,12,41,7],"1153":[33,5,41,8],"1161":[6,1,42,2],"1169":[6,1,42,2],"1177":[6,1,42,2],"1185":[6,1,42,2],"1193":[6,1,42,2],"1201":[6,1,42,2],"1209":[13,5,24,6],"1217":[6,1,42,2],"1225":[25,5,32,6],"1233":[6,1,42,2],"1241":[1,1,42,2],"1249":[1,1,42,2],"1257":[1,1,42,2],"1265":[1,1,42,2],"1273":[1,1,42,2],"1281":[6,1,42,2],"1289":[1,1,42,2],"1297":[9,5,10,42],"1305":[11,5,12,27],"1313":[20,13,21,37],"1321":[14,9,23,33],"1329":[13,5,24,6],"1337":[13,5,24,6],"1345":[28,9,31,10],"1353":[28,9,31,10],"1361":[25,5,32,6],"1369":[25,5,32,6],"1377":[33,20,35,6],"1385":[33,20,35,6],"1393":[36,9,37,39],"1401":[38,9,39,31],"1409":[35,8,41,6],"1417":[35,8,41,6],"1425":[6,1,42,2],"1433":[6,1,42,2],"1441":[1,1,42,2],"1449":[1,1,42,2],"nBranches":14,"originalCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/split/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/split/index_jalangi_.js","code":"//filter will reemit the data if cb(err,pass) pass is truthy\n\n// reduce is more tricky\n// maybe we want to group the reductions or emit progress updates occasionally\n// the most basic reduce just emits one 'data' event after it has recieved 'end'\n\n\nvar through = require('through')\nvar Decoder = require('string_decoder').StringDecoder\n\nmodule.exports = split\n\n//TODO pass in a function to map across the lines.\n\nfunction split (matcher, mapper) {\n  var decoder = new Decoder()\n  var soFar = ''\n  if('function' === typeof matcher)\n    mapper = matcher, matcher = null\n  if (!matcher)\n    matcher = /\\r?\\n/\n\n  function emit(stream, piece) {\n    if(mapper) {\n      try {\n        piece = mapper(piece)\n      }\n      catch (err) {\n        return stream.emit('error', err)\n      }\n      if('undefined' !== typeof piece)\n        stream.queue(piece)\n    }\n    else\n      stream.queue(piece)\n  }\n\n  function next (stream, buffer) { \n    var pieces = (soFar + buffer).split(matcher)\n    soFar = pieces.pop()\n\n    for (var i = 0; i < pieces.length; i++) {\n      var piece = pieces[i]\n      emit(stream, piece)\n    }\n  }\n\n  return through(function (b) {\n    next(this, decoder.write(b))\n  },\n  function () {\n    if(decoder.end) \n      next(this, decoder.end())\n    if(soFar != null)\n      emit(this, soFar)\n    this.queue(null)\n  })\n}\n\n"};
jalangiLabel335:
    while (true) {
        try {
            J$.Se(1241, '/home/blake/ExpoSE/Targets/json-tools/node_modules/split/index_jalangi_.js', '/home/blake/ExpoSE/Targets/json-tools/node_modules/split/index.js');
            function split(matcher, mapper) {
                jalangiLabel334:
                    while (true) {
                        try {
                            J$.Fe(1161, arguments.callee, this, arguments);
                            function emit(stream, piece) {
                                jalangiLabel330:
                                    while (true) {
                                        try {
                                            J$.Fe(537, arguments.callee, this, arguments);
                                            arguments = J$.N(545, 'arguments', arguments, 4);
                                            stream = J$.N(553, 'stream', stream, 4);
                                            piece = J$.N(561, 'piece', piece, 4);
                                            if (J$.X1(1321, J$.C(32, J$.R(353, 'mapper', mapper, 0)))) {
                                                try {
                                                    J$.X1(393, piece = J$.W(385, 'piece', J$.F(377, J$.R(361, 'mapper', mapper, 0), 0)(J$.R(369, 'piece', piece, 0)), piece, 0));
                                                } catch (err) {
                                                    err = J$.N(449, 'err', err, 1);
                                                    return J$.X1(441, J$.Rt(433, J$.M(425, J$.R(401, 'stream', stream, 0), 'emit', 0)(J$.T(409, 'error', 21, false), J$.R(417, 'err', err, 0))));
                                                }
                                                if (J$.X1(1313, J$.C(24, J$.B(42, '!==', J$.T(457, 'undefined', 21, false), J$.U(34, 'typeof', J$.R(465, 'piece', piece, 0)), 0))))
                                                    J$.X1(497, J$.M(489, J$.R(473, 'stream', stream, 0), 'queue', 0)(J$.R(481, 'piece', piece, 0)));
                                            } else
                                                J$.X1(529, J$.M(521, J$.R(505, 'stream', stream, 0), 'queue', 0)(J$.R(513, 'piece', piece, 0)));
                                        } catch (J$e) {
                                            J$.Ex(1329, J$e);
                                        } finally {
                                            if (J$.Fr(1337))
                                                continue jalangiLabel330;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            function next(stream, buffer) {
                                jalangiLabel331:
                                    while (true) {
                                        try {
                                            J$.Fe(809, arguments.callee, this, arguments);
                                            arguments = J$.N(817, 'arguments', arguments, 4);
                                            stream = J$.N(825, 'stream', stream, 4);
                                            buffer = J$.N(833, 'buffer', buffer, 4);
                                            J$.N(841, 'pieces', pieces, 0);
                                            J$.N(849, 'i', i, 0);
                                            J$.N(857, 'piece', piece, 0);
                                            var pieces = J$.X1(609, J$.W(601, 'pieces', J$.M(593, J$.B(50, '+', J$.R(569, 'soFar', soFar, 0), J$.R(577, 'buffer', buffer, 0), 0), 'split', 0)(J$.R(585, 'matcher', matcher, 0)), pieces, 1));
                                            J$.X1(641, soFar = J$.W(633, 'soFar', J$.M(625, J$.R(617, 'pieces', pieces, 0), 'pop', 0)(), soFar, 0));
                                            for (var i = J$.X1(665, J$.W(657, 'i', J$.T(649, 0, 22, false), i, 1)); J$.X1(1345, J$.C(40, J$.B(58, '<', J$.R(673, 'i', i, 0), J$.G(689, J$.R(681, 'pieces', pieces, 0), 'length', 0), 0))); J$.X1(1353, J$.B(82, '-', i = J$.W(713, 'i', J$.B(74, '+', J$.U(66, '+', J$.R(705, 'i', i, 0)), J$.T(697, 1, 22, false), 0), i, 0), J$.T(721, 1, 22, false), 0))) {
                                                var piece = J$.X1(761, J$.W(753, 'piece', J$.G(745, J$.R(729, 'pieces', pieces, 0), J$.R(737, 'i', i, 0), 4), piece, 1));
                                                J$.X1(801, J$.F(793, J$.R(769, 'emit', emit, 0), 0)(J$.R(777, 'stream', stream, 0), J$.R(785, 'piece', piece, 0)));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(1361, J$e);
                                        } finally {
                                            if (J$.Fr(1369))
                                                continue jalangiLabel331;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(1169, 'arguments', arguments, 4);
                            matcher = J$.N(1177, 'matcher', matcher, 4);
                            mapper = J$.N(1185, 'mapper', mapper, 4);
                            J$.N(1193, 'decoder', decoder, 0);
                            J$.N(1201, 'soFar', soFar, 0);
                            emit = J$.N(1217, 'emit', J$.T(1209, emit, 12, false, 537), 0);
                            next = J$.N(1233, 'next', J$.T(1225, next, 12, false, 809), 0);
                            var decoder = J$.X1(225, J$.W(217, 'decoder', J$.F(209, J$.R(201, 'Decoder', Decoder, 1), 1)(), decoder, 1));
                            var soFar = J$.X1(249, J$.W(241, 'soFar', J$.T(233, '', 21, false), soFar, 1));
                            if (J$.X1(1297, J$.C(8, J$.B(18, '===', J$.T(257, 'function', 21, false), J$.U(10, 'typeof', J$.R(265, 'matcher', matcher, 0)), 0))))
                                J$.X1(313, (J$.X1(305, mapper = J$.W(281, 'mapper', J$.R(273, 'matcher', matcher, 0), mapper, 0)), matcher = J$.W(297, 'matcher', J$.T(289, null, 25, false), matcher, 0)));
                            if (J$.X1(1305, J$.C(16, J$.U(26, '!', J$.R(321, 'matcher', matcher, 0)))))
                                J$.X1(345, matcher = J$.W(337, 'matcher', J$.T(329, /\r?\n/, 14, false), matcher, 0));
                            return J$.X1(1153, J$.Rt(1145, J$.F(1137, J$.R(865, 'through', through, 1), 0)(J$.T(953, function (b) {
                                jalangiLabel332:
                                    while (true) {
                                        try {
                                            J$.Fe(929, arguments.callee, this, arguments);
                                            arguments = J$.N(937, 'arguments', arguments, 4);
                                            b = J$.N(945, 'b', b, 4);
                                            J$.X1(921, J$.F(913, J$.R(873, 'next', next, 0), 0)(J$.R(881, 'this', this, 0), J$.M(905, J$.R(889, 'decoder', decoder, 0), 'write', 0)(J$.R(897, 'b', b, 0))));
                                        } catch (J$e) {
                                            J$.Ex(1377, J$e);
                                        } finally {
                                            if (J$.Fr(1385))
                                                continue jalangiLabel332;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 929), J$.T(1129, function () {
                                jalangiLabel333:
                                    while (true) {
                                        try {
                                            J$.Fe(1113, arguments.callee, this, arguments);
                                            arguments = J$.N(1121, 'arguments', arguments, 4);
                                            if (J$.X1(1393, J$.C(48, J$.G(969, J$.R(961, 'decoder', decoder, 0), 'end', 0))))
                                                J$.X1(1017, J$.F(1009, J$.R(977, 'next', next, 0), 0)(J$.R(985, 'this', this, 0), J$.M(1001, J$.R(993, 'decoder', decoder, 0), 'end', 0)()));
                                            if (J$.X1(1401, J$.C(56, J$.B(90, '!=', J$.R(1025, 'soFar', soFar, 0), J$.T(1033, null, 25, false), 0))))
                                                J$.X1(1073, J$.F(1065, J$.R(1041, 'emit', emit, 0), 0)(J$.R(1049, 'this', this, 0), J$.R(1057, 'soFar', soFar, 0)));
                                            J$.X1(1105, J$.M(1097, J$.R(1081, 'this', this, 0), 'queue', 0)(J$.T(1089, null, 25, false)));
                                        } catch (J$e) {
                                            J$.Ex(1409, J$e);
                                        } finally {
                                            if (J$.Fr(1417))
                                                continue jalangiLabel333;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1113))));
                        } catch (J$e) {
                            J$.Ex(1425, J$e);
                        } finally {
                            if (J$.Fr(1433))
                                continue jalangiLabel334;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1249, '__secret__S$', __secret__S$, 0);
            J$.N(1257, '__secret__traits__', __secret__traits__, 0);
            J$.N(1265, 'through', through, 0);
            J$.N(1273, 'Decoder', Decoder, 0);
            split = J$.N(1289, 'split', J$.T(1281, split, 12, false, 1161), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var through = J$.X1(113, J$.W(105, 'through', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'through', 21, false)), through, 3));
            var Decoder = J$.X1(161, J$.W(153, 'Decoder', J$.G(145, J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, 'string_decoder', 21, false)), 'StringDecoder', 0), Decoder, 3));
            J$.X1(193, J$.P(185, J$.R(169, 'module', module, 2), 'exports', J$.R(177, 'split', split, 1), 0));
        } catch (J$e) {
            J$.Ex(1441, J$e);
        } finally {
            if (J$.Sr(1449)) {
                J$.L();
                continue jalangiLabel335;
            } else {
                J$.L();
                break jalangiLabel335;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
