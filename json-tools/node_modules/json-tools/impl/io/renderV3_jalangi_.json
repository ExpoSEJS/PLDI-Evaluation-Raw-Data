{"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,1,3,8],"89":[4,13,4,20],"97":[4,21,4,33],"105":[4,13,4,34],"113":[4,13,4,34],"121":[4,13,4,34],"129":[5,19,5,26],"137":[5,27,5,41],"145":[5,19,5,42],"153":[5,19,5,42],"161":[5,19,5,42],"169":[6,12,6,19],"177":[7,22,7,29],"185":[7,30,7,57],"193":[7,22,7,58],"201":[7,22,7,65],"209":[7,22,7,65],"217":[7,22,7,65],"225":[8,24,8,30],"233":[8,31,8,39],"241":[8,41,8,45],"249":[8,24,8,46],"257":[8,24,8,46],"265":[8,24,8,46],"273":[9,21,9,28],"281":[9,29,9,57],"289":[9,21,9,58],"297":[9,21,9,64],"305":[9,21,9,64],"313":[9,21,9,64],"321":[10,9,10,14],"329":[10,15,10,19],"337":[10,21,10,26],"345":[10,28,10,32],"353":[10,34,10,42],"361":[10,9,10,43],"369":[10,9,10,44],"377":[6,28,11,6],"385":[6,28,11,6],"393":[6,28,11,6],"401":[6,28,11,6],"409":[6,28,11,6],"417":[6,28,11,6],"425":[6,28,11,6],"433":[12,9,12,13],"441":[12,19,12,24],"449":[12,9,12,25],"451":[12,9,12,18],"457":[12,9,12,26],"465":[11,8,13,6],"473":[11,8,13,6],"481":[11,8,13,6],"489":[11,8,13,6],"497":[6,12,13,7],"499":[6,12,6,27],"505":[6,12,13,7],"513":[6,5,13,8],"521":[3,16,14,2],"529":[3,16,14,2],"537":[3,16,14,2],"545":[3,16,14,2],"553":[3,16,14,2],"561":[3,16,14,2],"569":[3,16,14,2],"577":[3,1,14,2],"585":[3,1,14,3],"593":[1,1,14,3],"601":[1,1,14,3],"609":[1,1,14,3],"617":[6,28,11,6],"625":[6,28,11,6],"633":[11,8,13,6],"641":[11,8,13,6],"649":[3,16,14,2],"657":[3,16,14,2],"665":[1,1,14,3],"673":[1,1,14,3],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/json-tools/impl/io/renderV3.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/json-tools/node_modules/json-tools/impl/io/renderV3_jalangi_.js","code":"/**\n * render content, based on selected json sub-structure\n * and passed template.\n *\n * basic impl. uses underscore template implementation.\n *\n * example:\n * --------\n * render( \"c:\\temp\\my-template.txt.tmpl\" )\n *\n * creates a rendered text based on template and json-data.\n * stream will pass rendered content to next stream handler.\n *\n * render( \"c:\\temp\\my-template.txt.tmpl\", \"$rendered\" )\n *\n * creates a rendered text based on template and json-data\n * and put the rendered result into the passed object.\n * later you can use this value, to access rendered content.\n *\n * in the above example render writes rendered content into the object-field \"$rendered\".\n *\n *\n * @param path should be an absolute path or path-template.\n * @param field [optional] if string -> passed field name to store rendered result.\n *\n * @returns {*} stream to render\n */\nexports.exec = function( template, field ) {\n    var _ = require( 'underscore' );\n    var streams = require('event-stream');\n\n\n    return streams.through(\n\n        function write(data) {\n            var render = require('../template/renderTmpl.js').render;\n            var rendered = render(template, data);\n\n            var write = require( './helper/handleDataWriting' ).write;\n            write(this, field, data, rendered );\n        },\n\n        function end () {\n            this.emit('end');\n        });\n};\n\n\n"}