J$.iids = {"8":[6,19,6,29],"9":[1,20,1,27],"10":[14,9,14,21],"16":[14,9,14,60],"17":[1,28,1,32],"18":[14,9,14,33],"24":[15,22,15,33],"25":[1,20,1,33],"26":[14,37,14,60],"32":[16,22,16,48],"33":[1,20,1,33],"34":[16,33,16,48],"40":[17,23,17,71],"41":[1,20,1,33],"42":[16,50,16,54],"48":[16,22,16,48],"49":[2,26,2,38],"56":[22,17,22,38],"57":[2,26,2,45],"58":[16,50,16,54],"64":[21,33,21,37],"65":[2,26,2,45],"66":[17,23,17,40],"72":[29,17,29,32],"73":[2,26,2,45],"74":[17,44,17,71],"80":[26,16,26,40],"81":[3,1,3,13],"82":[19,16,19,35],"88":[19,16,19,49],"89":[3,1,3,14],"90":[19,16,19,49],"96":[14,9,14,60],"97":[4,13,4,21],"98":[21,33,21,37],"104":[38,9,38,35],"105":[4,13,4,21],"113":[4,13,4,21],"114":[21,33,21,37],"121":[6,5,6,9],"122":[26,16,26,28],"129":[6,19,6,23],"130":[26,16,26,40],"137":[6,27,6,29],"138":[38,9,38,20],"145":[6,37,6,42],"146":[38,9,38,35],"153":[6,18,6,43],"155":[6,18,6,36],"161":[6,5,6,43],"169":[6,5,6,44],"177":[5,1,7,2],"185":[5,1,7,2],"193":[5,1,7,2],"201":[8,1,8,16],"209":[8,1,8,26],"217":[9,19,9,23],"225":[9,19,9,23],"233":[9,19,9,23],"241":[10,17,10,21],"249":[10,17,10,27],"257":[10,17,10,27],"265":[10,17,10,27],"273":[12,22,12,27],"281":[12,22,12,34],"289":[12,22,12,34],"297":[12,22,12,34],"305":[14,16,14,21],"313":[14,25,14,33],"321":[14,37,14,42],"329":[14,54,14,60],"337":[15,22,15,27],"345":[15,31,15,33],"353":[15,41,15,46],"361":[15,21,15,47],"363":[15,21,15,40],"369":[15,21,15,47],"377":[15,9,15,48],"385":[16,19,16,20],"393":[16,19,16,20],"401":[16,22,16,29],"409":[16,33,16,35],"417":[16,38,16,48],"433":[16,50,16,52],"441":[16,50,16,54],"457":[17,23,17,28],"465":[17,29,17,31],"473":[17,23,17,32],"481":[17,37,17,40],"489":[17,44,17,49],"497":[17,50,17,52],"505":[17,44,17,53],"513":[17,58,17,67],"521":[17,68,17,70],"529":[17,58,17,71],"537":[17,23,17,71],"545":[17,13,17,72],"553":[19,23,19,28],"561":[19,23,19,35],"569":[19,39,19,49],"577":[20,19,20,21],"585":[20,19,20,21],"593":[20,9,20,22],"601":[21,19,21,24],"609":[21,19,21,31],"617":[21,19,21,31],"633":[21,33,21,35],"641":[21,33,21,37],"657":[22,17,22,21],"665":[22,28,22,33],"673":[22,34,22,36],"681":[22,28,22,37],"689":[22,17,22,38],"691":[22,17,22,27],"697":[23,17,23,24],"705":[23,25,23,32],"713":[23,25,23,39],"721":[23,43,23,48],"729":[23,49,23,51],"737":[23,43,23,52],"745":[23,17,23,52],"753":[23,17,23,53],"761":[26,23,26,28],"769":[26,32,26,40],"777":[27,19,27,21],"785":[27,19,27,21],"793":[27,9,27,22],"801":[28,25,28,30],"809":[29,17,29,21],"817":[29,28,29,31],"825":[29,17,29,32],"827":[29,17,29,27],"833":[30,17,30,24],"841":[30,25,30,28],"849":[30,32,30,37],"857":[30,38,30,41],"865":[30,32,30,42],"873":[30,17,30,42],"881":[30,17,30,43],"889":[28,25,28,30],"897":[28,9,32,10],"905":[28,9,32,10],"913":[34,12,34,19],"921":[34,12,34,19],"929":[34,5,34,20],"937":[8,35,35,2],"945":[8,35,35,2],"953":[8,35,35,2],"961":[8,35,35,2],"969":[8,35,35,2],"977":[8,35,35,2],"985":[8,35,35,2],"993":[8,35,35,2],"1001":[8,35,35,2],"1009":[8,35,35,2],"1017":[8,1,35,2],"1025":[8,1,35,3],"1033":[36,1,36,7],"1041":[37,23,37,38],"1049":[37,39,37,43],"1057":[37,19,37,44],"1065":[37,19,37,44],"1073":[37,19,37,44],"1081":[38,16,38,20],"1089":[38,24,38,35],"1097":[39,16,39,23],"1105":[39,30,39,34],"1113":[39,16,39,35],"1115":[39,16,39,29],"1121":[39,16,39,35],"1129":[39,9,39,36],"1137":[41,12,41,19],"1145":[41,12,41,19],"1153":[41,5,41,20],"1161":[36,18,42,2],"1169":[36,18,42,2],"1177":[36,18,42,2],"1185":[36,18,42,2],"1193":[36,18,42,2],"1201":[36,18,42,2],"1209":[36,1,42,2],"1217":[36,1,42,3],"1225":[1,1,42,3],"1233":[1,1,42,3],"1241":[1,1,42,3],"1249":[1,1,42,3],"1257":[5,1,7,2],"1265":[1,1,42,3],"1273":[5,1,7,2],"1281":[5,1,7,2],"1289":[16,9,18,10],"1297":[16,9,18,10],"1305":[16,9,18,10],"1313":[22,13,24,14],"1321":[21,9,25,10],"1329":[21,9,25,10],"1337":[29,13,31,14],"1345":[26,12,33,6],"1353":[19,12,33,6],"1361":[14,5,33,6],"1369":[8,35,35,2],"1377":[8,35,35,2],"1385":[38,5,40,6],"1393":[36,18,42,2],"1401":[36,18,42,2],"1409":[1,1,42,3],"1417":[1,1,42,3],"nBranches":26,"originalCodeFileName":"/home/blake/ExpoSE/Targets/registry/node_modules/wildcard/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/registry/node_modules/wildcard/index_jalangi_.js","code":"/* jshint node: true */\n'use strict';\n\nvar reSep = /[\\/\\.]/;\n\n/**\n  # wildcard\n\n  Very simple wildcard matching, which is designed to provide the same\n  functionality that is found in the\n  [eve](https://github.com/adobe-webplatform/eve) eventing library.\n\n  ## Usage\n\n  It works with strings:\n\n  <<< examples/strings.js\n\n  Arrays:\n\n  <<< examples/arrays.js\n\n  Objects (matching against keys):\n\n  <<< examples/objects.js\n\n  While the library works in Node, if you are are looking for file-based\n  wildcard matching then you should have a look at:\n\n  <https://github.com/isaacs/node-glob>\n**/\n\nfunction WildcardMatcher(text) {\n  this.parts = (text || '').split(reSep);\n}\n\nWildcardMatcher.prototype.match = function(input) {\n  var matches = true;\n  var parts = this.parts;\n  var ii;\n  var partsCount = parts.length;\n  var testParts;\n\n  if (typeof input == 'string' || input instanceof String) {\n    testParts = (input || '').split(reSep);\n    for (ii = 0; matches && ii < partsCount; ii++) {\n      matches = parts[ii] === '*' || parts[ii] === testParts[ii];\n    }\n  }\n  else if (typeof input.splice == 'function') {\n    matches = [];\n\n    for (ii = input.length; ii--; ) {\n      if (this.match(input[ii])) {\n        matches[matches.length] = input[ii];\n      }\n    }\n  }\n  else if (typeof input == 'object') {\n    matches = {};\n\n    for (var key in input) {\n      if (this.match(key)) {\n        matches[key] = input[key];\n      }\n    }\n  }\n\n  return matches;\n};\n\nmodule.exports = function(text, test) {\n  var matcher = new WildcardMatcher(text);\n  if (typeof test != 'undefined') {\n    return matcher.match(test);\n  }\n\n  return matcher;\n};\n"};
jalangiLabel76:
    while (true) {
        try {
            J$.Se(1225, '/home/blake/ExpoSE/Targets/registry/node_modules/wildcard/index_jalangi_.js', '/home/blake/ExpoSE/Targets/registry/node_modules/wildcard/index.js');
            function WildcardMatcher(text) {
                jalangiLabel73:
                    while (true) {
                        try {
                            J$.Fe(177, arguments.callee, this, arguments);
                            arguments = J$.N(185, 'arguments', arguments, 4);
                            text = J$.N(193, 'text', text, 4);
                            J$.X1(169, J$.P(161, J$.R(121, 'this', this, 0), 'parts', J$.M(153, J$.C(8, J$.R(129, 'text', text, 0)) ? J$._() : J$.T(137, '', 21, false), 'split', 0)(J$.R(145, 'reSep', reSep, 1)), 0));
                        } catch (J$e) {
                            J$.Ex(1273, J$e);
                        } finally {
                            if (J$.Fr(1281))
                                continue jalangiLabel73;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(1233, '__secret__S$', __secret__S$, 0);
            J$.N(1241, '__secret__traits__', __secret__traits__, 0);
            J$.N(1249, 'reSep', reSep, 0);
            WildcardMatcher = J$.N(1265, 'WildcardMatcher', J$.T(1257, WildcardMatcher, 12, false, 177), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(89, J$.T(81, 'use strict', 21, false));
            var reSep = J$.X1(113, J$.W(105, 'reSep', J$.T(97, /[\/\.]/, 14, false), reSep, 3));
            J$.X1(1025, J$.P(1017, J$.G(209, J$.R(201, 'WildcardMatcher', WildcardMatcher, 1), 'prototype', 0), 'match', J$.T(1009, function (input) {
                jalangiLabel74:
                    while (true) {
                        try {
                            J$.Fe(937, arguments.callee, this, arguments);
                            arguments = J$.N(945, 'arguments', arguments, 4);
                            input = J$.N(953, 'input', input, 4);
                            J$.N(961, 'matches', matches, 0);
                            J$.N(969, 'parts', parts, 0);
                            J$.N(977, 'ii', ii, 0);
                            J$.N(985, 'partsCount', partsCount, 0);
                            J$.N(993, 'testParts', testParts, 0);
                            J$.N(1001, 'key', key, 0);
                            var matches = J$.X1(233, J$.W(225, 'matches', J$.T(217, true, 23, false), matches, 1));
                            var parts = J$.X1(265, J$.W(257, 'parts', J$.G(249, J$.R(241, 'this', this, 0), 'parts', 0), parts, 1));
                            var ii;
                            var partsCount = J$.X1(297, J$.W(289, 'partsCount', J$.G(281, J$.R(273, 'parts', parts, 0), 'length', 0), partsCount, 1));
                            var testParts;
                            if (J$.X1(1361, J$.C(96, J$.C(16, J$.B(18, '==', J$.U(10, 'typeof', J$.R(305, 'input', input, 0)), J$.T(313, 'string', 21, false), 0)) ? J$._() : J$.B(26, 'instanceof', J$.R(321, 'input', input, 0), J$.R(329, 'String', String, 2), 0)))) {
                                J$.X1(377, testParts = J$.W(369, 'testParts', J$.M(361, J$.C(24, J$.R(337, 'input', input, 0)) ? J$._() : J$.T(345, '', 21, false), 'split', 0)(J$.R(353, 'reSep', reSep, 1)), testParts, 0));
                                for (J$.X1(1297, ii = J$.W(393, 'ii', J$.T(385, 0, 22, false), ii, 0)); J$.X1(1289, J$.C(48, J$.C(32, J$.R(401, 'matches', matches, 0)) ? J$.B(34, '<', J$.R(409, 'ii', ii, 0), J$.R(417, 'partsCount', partsCount, 0), 0) : J$._())); J$.X1(1305, J$.B(58, '-', ii = J$.W(441, 'ii', J$.B(50, '+', J$.U(42, '+', J$.R(433, 'ii', ii, 0)), J$.T(425, 1, 22, false), 0), ii, 0), J$.T(449, 1, 22, false), 0))) {
                                    J$.X1(545, matches = J$.W(537, 'matches', J$.C(40, J$.B(66, '===', J$.G(473, J$.R(457, 'parts', parts, 0), J$.R(465, 'ii', ii, 0), 4), J$.T(481, '*', 21, false), 0)) ? J$._() : J$.B(74, '===', J$.G(505, J$.R(489, 'parts', parts, 0), J$.R(497, 'ii', ii, 0), 4), J$.G(529, J$.R(513, 'testParts', testParts, 0), J$.R(521, 'ii', ii, 0), 4), 0), matches, 0));
                                }
                            } else if (J$.X1(1353, J$.C(88, J$.B(90, '==', J$.U(82, 'typeof', J$.G(561, J$.R(553, 'input', input, 0), 'splice', 0)), J$.T(569, 'function', 21, false), 0)))) {
                                J$.X1(593, matches = J$.W(585, 'matches', J$.T(577, [], 10, false), matches, 0));
                                for (J$.X1(1329, ii = J$.W(617, 'ii', J$.G(609, J$.R(601, 'input', input, 0), 'length', 0), ii, 0)); J$.X1(1321, J$.C(64, J$.B(114, '+', ii = J$.W(641, 'ii', J$.B(106, '-', J$.U(98, '+', J$.R(633, 'ii', ii, 0)), J$.T(625, 1, 22, false), 0), ii, 0), J$.T(649, 1, 22, false), 0)));) {
                                    if (J$.X1(1313, J$.C(56, J$.M(689, J$.R(657, 'this', this, 0), 'match', 0)(J$.G(681, J$.R(665, 'input', input, 0), J$.R(673, 'ii', ii, 0), 4))))) {
                                        J$.X1(753, J$.P(745, J$.R(697, 'matches', matches, 0), J$.G(713, J$.R(705, 'matches', matches, 0), 'length', 0), J$.G(737, J$.R(721, 'input', input, 0), J$.R(729, 'ii', ii, 0), 4), 2));
                                    }
                                }
                            } else if (J$.X1(1345, J$.C(80, J$.B(130, '==', J$.U(122, 'typeof', J$.R(761, 'input', input, 0)), J$.T(769, 'object', 21, false), 0)))) {
                                J$.X1(793, matches = J$.W(785, 'matches', J$.T(777, {}, 11, false), matches, 0));
                                for (J$._tm_p in J$.H(889, J$.R(801, 'input', input, 0))) {
                                    var key = J$.X1(905, J$.W(897, 'key', J$._tm_p, key, 1));
                                    {
                                        {
                                            if (J$.X1(1337, J$.C(72, J$.M(825, J$.R(809, 'this', this, 0), 'match', 0)(J$.R(817, 'key', key, 0))))) {
                                                J$.X1(881, J$.P(873, J$.R(833, 'matches', matches, 0), J$.R(841, 'key', key, 0), J$.G(865, J$.R(849, 'input', input, 0), J$.R(857, 'key', key, 0), 4), 2));
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.X1(929, J$.Rt(921, J$.R(913, 'matches', matches, 0)));
                        } catch (J$e) {
                            J$.Ex(1369, J$e);
                        } finally {
                            if (J$.Fr(1377))
                                continue jalangiLabel74;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 937), 0));
            J$.X1(1217, J$.P(1209, J$.R(1033, 'module', module, 2), 'exports', J$.T(1201, function (text, test) {
                jalangiLabel75:
                    while (true) {
                        try {
                            J$.Fe(1161, arguments.callee, this, arguments);
                            arguments = J$.N(1169, 'arguments', arguments, 4);
                            text = J$.N(1177, 'text', text, 4);
                            test = J$.N(1185, 'test', test, 4);
                            J$.N(1193, 'matcher', matcher, 0);
                            var matcher = J$.X1(1073, J$.W(1065, 'matcher', J$.F(1057, J$.R(1041, 'WildcardMatcher', WildcardMatcher, 1), 1)(J$.R(1049, 'text', text, 0)), matcher, 1));
                            if (J$.X1(1385, J$.C(104, J$.B(146, '!=', J$.U(138, 'typeof', J$.R(1081, 'test', test, 0)), J$.T(1089, 'undefined', 21, false), 0)))) {
                                return J$.X1(1129, J$.Rt(1121, J$.M(1113, J$.R(1097, 'matcher', matcher, 0), 'match', 0)(J$.R(1105, 'test', test, 0))));
                            }
                            return J$.X1(1153, J$.Rt(1145, J$.R(1137, 'matcher', matcher, 0)));
                        } catch (J$e) {
                            J$.Ex(1393, J$e);
                        } finally {
                            if (J$.Fr(1401))
                                continue jalangiLabel75;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1161), 0));
        } catch (J$e) {
            J$.Ex(1409, J$e);
        } finally {
            if (J$.Sr(1417)) {
                J$.L();
                continue jalangiLabel76;
            } else {
                J$.L();
                break jalangiLabel76;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
