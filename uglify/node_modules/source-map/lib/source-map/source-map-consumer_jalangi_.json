{"8":[3,5,3,33],"9":[1,20,1,27],"10":[3,5,3,18],"16":[13,13,13,43],"17":[1,28,1,32],"18":[3,5,3,33],"24":[23,13,23,37],"25":[1,20,1,33],"26":[13,13,13,30],"32":[48,24,48,39],"33":[1,20,1,33],"34":[13,13,13,43],"40":[55,17,55,42],"41":[1,20,1,33],"42":[23,13,23,37],"48":[66,17,66,41],"49":[2,26,2,38],"50":[24,29,24,62],"56":[99,21,99,76],"57":[2,26,2,45],"58":[55,17,55,42],"64":[104,25,104,81],"65":[2,26,2,45],"66":[66,17,66,41],"72":[104,25,104,81],"73":[2,26,2,45],"74":[85,16,85,30],"80":[112,25,112,81],"81":[3,12,3,18],"82":[86,17,86,38],"88":[112,25,112,81],"89":[3,23,3,33],"90":[87,17,87,32],"96":[119,25,119,80],"97":[4,18,4,25],"104":[119,25,119,80],"105":[4,26,4,36],"106":[87,17,87,32],"112":[99,21,99,76],"113":[4,18,4,37],"114":[90,24,90,45],"120":[127,21,127,61],"121":[4,38,4,44],"122":[96,43,96,79],"128":[90,24,90,45],"129":[4,46,4,53],"130":[99,21,99,35],"136":[86,17,86,38],"137":[4,18,4,54],"138":[99,39,99,76],"144":[85,16,85,30],"145":[4,18,4,54],"146":[101,55,101,82],"152":[136,13,136,36],"153":[4,18,4,54],"154":[102,39,102,49],"160":[139,13,139,37],"161":[6,1,6,7],"162":[104,25,104,41],"168":[150,13,150,70],"169":[7,16,7,23],"170":[108,44,108,77],"176":[152,17,152,42],"177":[7,24,7,32],"178":[112,25,112,41],"184":[152,17,152,42],"185":[7,16,7,33],"186":[116,46,116,81],"192":[150,13,150,70],"193":[7,16,7,33],"194":[119,25,119,39],"200":[170,13,170,33],"201":[7,16,7,33],"202":[119,43,119,80],"208":[173,13,173,28],"209":[8,24,8,31],"210":[121,55,121,80],"216":[176,13,176,39],"217":[8,32,8,49],"218":[122,41,122,51],"224":[180,13,180,70],"225":[8,24,8,50],"226":[127,21,127,48],"232":[182,17,182,74],"233":[8,24,8,50],"234":[127,21,127,61],"240":[182,17,182,74],"241":[8,24,8,50],"242":[136,13,136,36],"248":[185,18,185,46],"249":[9,20,9,27],"250":[137,33,137,101],"256":[185,17,185,83],"257":[9,28,9,41],"258":[139,13,139,37],"264":[185,17,185,83],"265":[9,20,9,42],"266":[140,33,140,105],"272":[180,13,180,70],"273":[9,20,9,51],"274":[150,24,150,70],"280":[197,13,197,28],"281":[9,20,9,51],"282":[170,13,170,33],"288":[201,13,201,20],"289":[9,20,9,51],"290":[182,17,182,37],"296":[215,23,215,39],"297":[10,21,10,28],"298":[185,18,185,27],"304":[216,21,216,64],"305":[10,29,10,43],"306":[185,31,185,46],"312":[218,17,218,22],"313":[10,21,10,44],"314":[185,69,185,82],"320":[219,14,219,47],"321":[10,21,10,44],"322":[186,66,186,79],"328":[222,14,222,46],"329":[10,21,10,44],"330":[189,25,189,38],"336":[231,17,231,37],"337":[12,25,12,35],"338":[189,25,189,69],"344":[231,17,231,37],"345":[12,25,12,35],"353":[12,25,12,35],"361":[13,20,13,30],"369":[13,35,13,43],"377":[14,25,14,29],"385":[14,36,14,46],"393":[14,55,14,65],"401":[14,67,14,69],"409":[14,36,14,70],"411":[14,36,14,54],"417":[14,25,14,71],"419":[14,25,14,35],"425":[14,25,14,71],"433":[14,13,14,72],"441":[16,23,16,27],"449":[16,35,16,44],"457":[16,46,16,55],"465":[16,23,16,56],"467":[16,23,16,34],"473":[16,23,16,56],"481":[16,23,16,56],"489":[17,23,17,27],"497":[17,35,17,44],"505":[17,46,17,55],"513":[17,23,17,56],"515":[17,23,17,34],"521":[17,23,17,56],"529":[17,23,17,56],"537":[18,21,18,25],"545":[18,33,18,42],"553":[18,44,18,51],"561":[18,53,18,55],"569":[18,21,18,56],"571":[18,21,18,32],"577":[18,21,18,56],"585":[18,21,18,56],"593":[19,26,19,30],"601":[19,38,19,47],"609":[19,49,19,61],"617":[19,63,19,67],"625":[19,26,19,68],"627":[19,26,19,37],"633":[19,26,19,68],"641":[19,26,19,68],"649":[20,30,20,34],"657":[20,42,20,51],"665":[20,53,20,69],"673":[20,71,20,75],"681":[20,30,20,76],"683":[20,30,20,41],"689":[20,30,20,76],"697":[20,30,20,76],"705":[21,24,21,28],"713":[21,36,21,45],"721":[21,47,21,57],"729":[21,24,21,58],"731":[21,24,21,35],"737":[21,24,21,58],"745":[21,24,21,58],"753":[22,20,22,24],"761":[22,32,22,41],"769":[22,43,22,49],"777":[22,51,22,55],"785":[22,20,22,56],"787":[22,20,22,31],"793":[22,20,22,56],"801":[22,20,22,56],"809":[23,13,23,20],"817":[23,24,23,28],"825":[23,24,23,37],"833":[24,23,24,28],"841":[24,29,24,52],"849":[24,55,24,62],"857":[24,19,24,63],"865":[24,19,24,63],"873":[24,13,24,64],"881":[26,9,26,13],"889":[26,23,26,31],"897":[26,42,26,47],"905":[26,49,26,53],"913":[26,23,26,54],"915":[26,23,26,41],"921":[26,9,26,54],"929":[26,9,26,55],"937":[27,9,27,13],"945":[27,25,27,33],"953":[27,44,27,51],"961":[27,53,27,57],"969":[27,25,27,58],"971":[27,25,27,43],"977":[27,9,27,58],"985":[27,9,27,59],"993":[28,9,28,13],"1001":[28,27,28,37],"1009":[28,9,28,37],"1017":[28,9,28,38],"1025":[29,9,29,13],"1033":[29,31,29,45],"1041":[29,9,29,45],"1049":[29,9,29,46],"1057":[30,9,30,13],"1065":[30,26,30,34],"1073":[30,9,30,34],"1081":[30,9,30,35],"1089":[31,9,31,13],"1097":[31,21,31,25],"1105":[31,9,31,25],"1113":[31,9,31,26],"1121":[11,5,32,6],"1129":[11,5,32,6],"1137":[11,5,32,6],"1145":[11,5,32,6],"1153":[11,5,32,6],"1161":[11,5,32,6],"1169":[11,5,32,6],"1177":[11,5,32,6],"1185":[11,5,32,6],"1193":[11,5,32,6],"1201":[11,5,32,6],"1209":[33,5,33,22],"1217":[34,19,34,25],"1225":[34,33,34,50],"1233":[34,33,34,60],"1241":[34,19,34,61],"1243":[34,19,34,32],"1249":[34,19,34,61],"1257":[34,19,34,61],"1265":[35,9,35,12],"1273":[35,22,35,30],"1281":[35,41,35,51],"1289":[35,41,35,58],"1297":[35,41,35,68],"1299":[35,41,35,66],"1305":[35,70,35,74],"1313":[35,22,35,75],"1315":[35,22,35,40],"1321":[35,9,35,75],"1329":[35,9,35,76],"1337":[36,9,36,12],"1345":[36,24,36,32],"1353":[36,43,36,53],"1361":[36,43,36,62],"1369":[36,43,36,72],"1371":[36,43,36,70],"1377":[36,74,36,78],"1385":[36,24,36,79],"1387":[36,24,36,42],"1393":[36,9,36,79],"1401":[36,9,36,80],"1409":[37,9,37,12],"1417":[37,26,37,36],"1425":[37,26,37,48],"1433":[37,9,37,48],"1441":[37,9,37,49],"1449":[38,9,38,12],"1457":[38,30,38,40],"1465":[38,65,38,68],"1473":[38,65,38,77],"1481":[38,65,38,87],"1483":[38,65,38,85],"1489":[38,89,38,92],"1497":[38,89,38,103],"1505":[38,30,38,104],"1507":[38,30,38,64],"1513":[38,9,38,104],"1521":[38,9,38,105],"1529":[39,9,39,12],"1537":[39,20,39,30],"1545":[39,20,39,36],"1553":[39,9,39,36],"1561":[39,9,39,37],"1569":[40,9,40,12],"1577":[40,35,40,45],"1585":[40,35,40,55],"1593":[40,35,40,63],"1595":[40,35,40,61],"1601":[40,69,40,73],"1609":[40,69,40,101],"1617":[40,35,40,102],"1619":[40,35,40,68],"1625":[40,9,40,102],"1633":[40,9,40,103],"1641":[41,9,41,12],"1649":[41,34,41,44],"1657":[41,34,41,54],"1665":[41,34,41,62],"1667":[41,34,41,60],"1673":[41,68,41,72],"1681":[41,68,41,99],"1689":[41,34,41,100],"1691":[41,34,41,67],"1697":[41,9,41,100],"1705":[41,9,41,101],"1713":[42,16,42,19],"1721":[42,16,42,19],"1729":[42,9,42,20],"1737":[33,39,43,6],"1745":[33,39,43,6],"1753":[33,39,43,6],"1761":[33,39,43,6],"1769":[33,39,43,6],"1777":[33,39,43,6],"1785":[33,5,43,6],"1793":[33,5,43,7],"1801":[44,5,44,22],"1809":[44,5,44,32],"1817":[44,44,44,45],"1825":[44,5,44,45],"1833":[44,5,44,46],"1841":[45,5,45,11],"1849":[45,27,45,44],"1857":[45,27,45,54],"1865":[45,56,45,65],"1873":[47,20,47,24],"1881":[47,20,47,33],"1889":[47,20,47,43],"1891":[47,20,47,41],"1897":[48,24,48,28],"1905":[48,24,48,39],"1913":[48,42,48,46],"1921":[48,52,48,56],"1929":[48,52,48,67],"1937":[48,69,48,70],"1945":[48,42,48,71],"1947":[48,42,48,51],"1953":[48,74,48,75],"1961":[48,24,48,75],"1969":[48,17,48,76],"1977":[47,48,49,14],"1985":[47,48,49,14],"1993":[47,48,49,14],"2001":[47,48,49,14],"2009":[49,16,49,20],"2017":[47,20,49,21],"2019":[47,20,47,47],"2025":[47,20,49,21],"2033":[47,13,49,22],"2041":[46,14,50,10],"2049":[46,14,50,10],"2057":[46,14,50,10],"2065":[45,67,51,6],"2073":[45,5,51,7],"2075":[45,5,45,26],"2081":[45,5,51,8],"2089":[52,5,52,22],"2097":[52,5,52,32],"2105":[52,55,52,59],"2113":[52,5,52,59],"2121":[52,5,52,60],"2129":[53,5,53,11],"2137":[53,27,53,44],"2145":[53,27,53,54],"2153":[53,56,53,76],"2161":[55,18,55,22],"2169":[55,18,55,42],"2177":[56,17,56,21],"2185":[56,44,56,46],"2193":[56,17,56,46],"2201":[56,17,56,47],"2209":[57,17,57,21],"2217":[57,43,57,45],"2225":[57,17,57,45],"2233":[57,17,57,46],"2241":[58,17,58,21],"2249":[58,37,58,41],"2257":[58,37,58,51],"2265":[58,53,58,57],"2273":[58,53,58,68],"2281":[58,17,58,69],"2283":[58,17,58,36],"2289":[58,17,58,70],"2297":[60,20,60,24],"2305":[60,20,60,44],"2313":[60,20,60,44],"2321":[60,13,60,45],"2329":[54,14,61,10],"2337":[54,14,61,10],"2345":[54,14,61,10],"2353":[53,78,62,6],"2361":[53,5,62,7],"2363":[53,5,53,26],"2369":[53,5,62,8],"2377":[63,5,63,22],"2385":[63,5,63,32],"2393":[63,54,63,58],"2401":[63,5,63,58],"2409":[63,5,63,59],"2417":[64,5,64,11],"2425":[64,27,64,44],"2433":[64,27,64,54],"2441":[64,56,64,75],"2449":[66,18,66,22],"2457":[66,18,66,41],"2465":[67,17,67,21],"2473":[67,44,67,46],"2481":[67,17,67,46],"2489":[67,17,67,47],"2497":[68,17,68,21],"2505":[68,43,68,45],"2513":[68,17,68,45],"2521":[68,17,68,46],"2529":[69,17,69,21],"2537":[69,37,69,41],"2545":[69,37,69,51],"2553":[69,53,69,57],"2561":[69,53,69,68],"2569":[69,17,69,69],"2571":[69,17,69,36],"2577":[69,17,69,70],"2585":[71,20,71,24],"2593":[71,20,71,43],"2601":[71,20,71,43],"2609":[71,13,71,44],"2617":[65,14,72,10],"2625":[65,14,72,10],"2633":[65,14,72,10],"2641":[64,77,73,6],"2649":[64,5,73,7],"2651":[64,5,64,26],"2657":[64,5,73,8],"2665":[74,5,74,22],"2673":[74,5,74,32],"2681":[75,29,75,30],"2689":[75,29,75,30],"2697":[75,29,75,30],"2705":[76,39,76,40],"2713":[76,39,76,40],"2721":[76,39,76,40],"2729":[77,36,77,37],"2737":[77,36,77,37],"2745":[77,36,77,37],"2753":[78,38,78,39],"2761":[78,38,78,39],"2769":[78,38,78,39],"2777":[79,30,79,31],"2785":[79,30,79,31],"2793":[79,30,79,31],"2801":[80,28,80,29],"2809":[80,28,80,29],"2817":[80,28,80,29],"2825":[81,32,81,39],"2833":[81,32,81,39],"2841":[81,32,81,39],"2849":[82,19,82,23],"2857":[82,19,82,23],"2865":[82,19,82,23],"2873":[85,16,85,19],"2881":[85,16,85,26],"2889":[85,29,85,30],"2897":[86,17,86,20],"2905":[86,28,86,29],"2913":[86,17,86,30],"2915":[86,17,86,27],"2921":[86,35,86,38],"2937":[87,17,87,30],"2945":[87,17,87,32],"2961":[87,17,87,33],"2969":[88,23,88,26],"2977":[88,33,88,34],"2985":[88,23,88,35],"2987":[88,23,88,32],"2993":[88,23,88,35],"3001":[88,17,88,36],"3009":[89,43,89,44],"3017":[89,43,89,44],"3025":[89,17,89,45],"3033":[90,24,90,27],"3041":[90,35,90,36],"3049":[90,24,90,37],"3051":[90,24,90,34],"3057":[90,42,90,45],"3065":[91,23,91,26],"3073":[91,33,91,34],"3081":[91,23,91,35],"3083":[91,23,91,32],"3089":[91,23,91,35],"3097":[91,17,91,36],"3105":[93,27,93,29],"3113":[93,27,93,29],"3121":[93,17,93,30],"3129":[94,17,94,24],"3137":[94,41,94,54],"3145":[94,17,94,54],"3153":[94,17,94,55],"3161":[95,24,95,33],"3169":[95,41,95,44],"3177":[95,24,95,45],"3179":[95,24,95,40],"3185":[95,24,95,45],"3193":[95,17,95,46],"3201":[96,17,96,24],"3209":[96,43,96,66],"3217":[96,69,96,73],"3225":[96,69,96,79],"3233":[96,17,96,79],"3241":[96,17,96,80],"3249":[97,43,97,50],"3257":[97,43,97,66],"3265":[97,43,97,66],"3273":[97,17,97,67],"3281":[98,23,98,27],"3289":[98,23,98,32],"3297":[98,23,98,32],"3305":[98,17,98,33],"3313":[99,21,99,24],"3321":[99,21,99,31],"3329":[99,34,99,35],"3337":[99,40,99,56],"3345":[99,62,99,65],"3353":[99,73,99,74],"3361":[99,62,99,75],"3363":[99,62,99,72],"3369":[99,40,99,76],"3371":[99,40,99,61],"3377":[100,28,100,37],"3385":[100,45,100,48],"3393":[100,28,100,49],"3395":[100,28,100,44],"3401":[100,28,100,49],"3409":[100,21,100,50],"3417":[101,21,101,28],"3425":[101,38,101,42],"3433":[101,38,101,51],"3441":[101,55,101,69],"3449":[101,72,101,76],"3457":[101,72,101,82],"3465":[101,38,101,83],"3467":[101,38,101,54],"3473":[101,21,101,83],"3481":[101,21,101,84],"3489":[102,39,102,43],"3497":[102,39,102,49],"3505":[102,21,102,35],"3513":[102,21,102,49],"3521":[102,21,102,50],"3529":[103,27,103,31],"3537":[103,27,103,36],"3545":[103,27,103,36],"3553":[103,21,103,37],"3561":[104,25,104,28],"3569":[104,25,104,35],"3577":[104,40,104,41],"3585":[104,45,104,61],"3593":[104,67,104,70],"3601":[104,78,104,79],"3609":[104,67,104,80],"3611":[104,67,104,77],"3617":[104,45,104,81],"3619":[104,45,104,66],"3625":[105,35,105,40],"3633":[105,41,105,81],"3641":[105,31,105,82],"3649":[105,31,105,82],"3657":[105,25,105,83],"3665":[107,28,107,37],"3673":[107,45,107,48],"3681":[107,28,107,49],"3683":[107,28,107,44],"3689":[107,28,107,49],"3697":[107,21,107,50],"3705":[108,21,108,28],"3713":[108,44,108,64],"3721":[108,67,108,71],"3729":[108,67,108,77],"3737":[108,21,108,77],"3745":[108,21,108,78],"3753":[109,44,109,51],"3761":[109,44,109,64],"3769":[109,44,109,64],"3777":[109,21,109,65],"3785":[110,21,110,28],"3793":[110,45,110,46],"3801":[110,21,110,46],"3803":[110,21,110,46],"3809":[110,21,110,47],"3817":[111,27,111,31],"3825":[111,27,111,36],"3833":[111,27,111,36],"3841":[111,21,111,37],"3849":[112,25,112,28],"3857":[112,25,112,35],"3865":[112,40,112,41],"3873":[112,45,112,61],"3881":[112,67,112,70],"3889":[112,78,112,79],"3897":[112,67,112,80],"3899":[112,67,112,77],"3905":[112,45,112,81],"3907":[112,45,112,66],"3913":[113,35,113,40],"3921":[113,41,113,81],"3929":[113,31,113,82],"3937":[113,31,113,82],"3945":[113,25,113,83],"3953":[115,28,115,37],"3961":[115,45,115,48],"3969":[115,28,115,49],"3971":[115,28,115,44],"3977":[115,28,115,49],"3985":[115,21,115,50],"3993":[116,21,116,28],"4001":[116,46,116,68],"4009":[116,71,116,75],"4017":[116,71,116,81],"4025":[116,21,116,81],"4033":[116,21,116,82],"4041":[117,46,117,53],"4049":[117,46,117,68],"4057":[117,46,117,68],"4065":[117,21,117,69],"4073":[118,27,118,31],"4081":[118,27,118,36],"4089":[118,27,118,36],"4097":[118,21,118,37],"4105":[119,25,119,28],"4113":[119,25,119,35],"4121":[119,38,119,39],"4129":[119,44,119,60],"4137":[119,66,119,69],"4145":[119,77,119,78],"4153":[119,66,119,79],"4155":[119,66,119,76],"4161":[119,44,119,80],"4163":[119,44,119,65],"4169":[120,32,120,41],"4177":[120,49,120,52],"4185":[120,32,120,53],"4187":[120,32,120,48],"4193":[120,32,120,53],"4201":[120,25,120,54],"4209":[121,25,121,32],"4217":[121,40,121,44],"4225":[121,40,121,51],"4233":[121,55,121,67],"4241":[121,70,121,74],"4249":[121,70,121,80],"4257":[121,40,121,81],"4259":[121,40,121,54],"4265":[121,25,121,81],"4273":[121,25,121,82],"4281":[122,41,122,45],"4289":[122,41,122,51],"4297":[122,25,122,37],"4305":[122,25,122,51],"4313":[122,25,122,52],"4321":[123,31,123,35],"4329":[123,31,123,40],"4337":[123,31,123,40],"4345":[123,25,123,41],"4353":[126,17,126,21],"4361":[126,17,126,41],"4369":[126,47,126,54],"4377":[126,17,126,55],"4379":[126,17,126,46],"4385":[126,17,126,56],"4393":[127,28,127,35],"4401":[127,28,127,48],"4409":[127,53,127,61],"4417":[128,21,128,25],"4425":[128,21,128,44],"4433":[128,50,128,57],"4441":[128,21,128,58],"4443":[128,21,128,49],"4449":[128,21,128,59],"4457":[132,9,132,13],"4465":[132,9,132,33],"4473":[132,39,132,43],"4481":[132,39,132,71],"4489":[132,9,132,72],"4491":[132,9,132,38],"4497":[132,9,132,73],"4505":[133,9,133,13],"4513":[133,9,133,32],"4521":[133,38,133,42],"4529":[133,38,133,69],"4537":[133,9,133,70],"4539":[133,9,133,37],"4545":[133,9,133,71],"4553":[74,50,134,6],"4561":[74,50,134,6],"4569":[74,50,134,6],"4577":[74,50,134,6],"4585":[74,50,134,6],"4593":[74,50,134,6],"4601":[74,50,134,6],"4609":[74,50,134,6],"4617":[74,50,134,6],"4625":[74,50,134,6],"4633":[74,50,134,6],"4641":[74,50,134,6],"4649":[74,50,134,6],"4657":[74,50,134,6],"4665":[74,50,134,6],"4673":[74,50,134,6],"4681":[74,5,134,6],"4689":[74,5,134,7],"4697":[135,5,135,22],"4705":[135,5,135,32],"4713":[136,13,136,20],"4721":[136,21,136,30],"4729":[136,13,136,31],"4737":[136,35,136,36],"4745":[137,23,137,32],"4753":[137,33,137,80],"4761":[137,83,137,90],"4769":[137,91,137,100],"4777":[137,83,137,101],"4785":[137,19,137,102],"4793":[137,19,137,102],"4801":[137,13,137,103],"4809":[139,13,139,20],"4817":[139,21,139,32],"4825":[139,13,139,33],"4833":[139,36,139,37],"4841":[140,23,140,32],"4849":[140,33,140,82],"4857":[140,85,140,92],"4865":[140,93,140,104],"4873":[140,85,140,105],"4881":[140,19,140,106],"4889":[140,19,140,106],"4897":[140,13,140,107],"4905":[142,16,142,28],"4913":[142,36,142,43],"4921":[142,45,142,54],"4929":[142,56,142,67],"4937":[142,16,142,68],"4939":[142,16,142,35],"4945":[142,16,142,68],"4953":[142,9,142,69],"4961":[135,48,143,6],"4969":[135,48,143,6],"4977":[135,48,143,6],"4985":[135,48,143,6],"4993":[135,48,143,6],"5001":[135,48,143,6],"5009":[135,48,143,6],"5017":[135,48,143,6],"5025":[135,48,143,6],"5033":[135,5,143,6],"5041":[135,5,143,7],"5049":[144,5,144,22],"5057":[144,5,144,32],"5065":[146,28,146,32],"5073":[146,40,146,45],"5081":[146,47,146,53],"5089":[146,28,146,54],"5091":[146,28,146,39],"5097":[147,30,147,34],"5105":[147,42,147,47],"5113":[147,49,147,57],"5121":[147,30,147,58],"5123":[147,30,147,41],"5129":[145,22,148,10],"5137":[145,22,148,10],"5145":[145,22,148,10],"5153":[149,23,149,27],"5161":[149,41,149,47],"5169":[149,49,149,53],"5177":[149,49,149,72],"5185":[149,74,149,89],"5193":[149,91,149,108],"5201":[149,110,149,114],"5209":[149,110,149,142],"5217":[149,23,149,143],"5219":[149,23,149,40],"5225":[149,23,149,143],"5233":[149,23,149,143],"5241":[150,13,150,20],"5249":[150,24,150,31],"5257":[150,24,150,45],"5265":[150,50,150,56],"5273":[150,50,150,70],"5281":[151,26,151,30],"5289":[151,38,151,45],"5297":[151,47,151,55],"5305":[151,57,151,61],"5313":[151,26,151,62],"5315":[151,26,151,37],"5321":[151,26,151,62],"5329":[151,26,151,62],"5337":[152,17,152,23],"5345":[152,27,152,31],"5353":[152,27,152,42],"5361":[153,26,153,30],"5369":[153,36,153,40],"5377":[153,36,153,51],"5385":[153,53,153,59],"5393":[153,26,153,60],"5395":[153,26,153,35],"5401":[153,26,153,60],"5409":[153,17,153,61],"5417":[156,25,156,31],"5425":[157,23,157,27],"5433":[157,35,157,42],"5441":[157,44,157,58],"5449":[157,60,157,64],"5457":[157,23,157,65],"5459":[157,23,157,34],"5465":[158,25,158,29],"5473":[158,37,158,44],"5481":[158,46,158,62],"5489":[158,64,158,68],"5497":[158,25,158,69],"5499":[158,25,158,36],"5505":[159,23,159,27],"5513":[159,35,159,42],"5521":[159,44,159,50],"5529":[159,52,159,56],"5537":[159,23,159,57],"5539":[159,23,159,34],"5545":[155,20,160,14],"5553":[155,20,160,14],"5561":[155,13,160,15],"5569":[163,21,163,25],"5577":[164,19,164,23],"5585":[165,21,165,25],"5593":[166,19,166,23],"5601":[162,16,167,10],"5609":[162,16,167,10],"5617":[162,9,167,11],"5625":[144,55,168,6],"5633":[144,55,168,6],"5641":[144,55,168,6],"5649":[144,55,168,6],"5657":[144,55,168,6],"5665":[144,55,168,6],"5673":[144,55,168,6],"5681":[144,55,168,6],"5689":[144,5,168,6],"5697":[144,5,168,7],"5705":[169,5,169,22],"5713":[169,5,169,32],"5721":[170,14,170,18],"5729":[170,14,170,33],"5737":[171,20,171,24],"5745":[171,20,171,24],"5753":[171,13,171,25],"5761":[173,13,173,17],"5769":[173,13,173,28],"5777":[174,23,174,27],"5785":[174,37,174,41],"5793":[174,37,174,52],"5801":[174,54,174,61],"5809":[174,23,174,62],"5811":[174,23,174,36],"5817":[174,23,174,62],"5825":[174,13,174,63],"5833":[176,13,176,17],"5841":[176,13,176,26],"5849":[176,31,176,38],"5857":[176,13,176,39],"5859":[176,13,176,30],"5865":[177,20,177,24],"5873":[177,20,177,39],"5881":[177,40,177,44],"5889":[177,40,177,53],"5897":[177,62,177,69],"5905":[177,40,177,70],"5907":[177,40,177,61],"5913":[177,20,177,71],"5921":[177,20,177,71],"5929":[177,13,177,72],"5937":[180,13,180,17],"5945":[180,13,180,28],"5953":[180,39,180,43],"5961":[180,53,180,57],"5969":[180,53,180,68],"5977":[180,39,180,69],"5979":[180,39,180,52],"5985":[180,39,180,69],"5993":[181,34,181,41],"6001":[181,50,181,62],"6009":[181,64,181,66],"6017":[181,34,181,67],"6019":[181,34,181,49],"6025":[181,34,181,67],"6033":[181,34,181,67],"6041":[182,17,182,20],"6049":[182,17,182,27],"6057":[182,31,182,37],"6065":[182,41,182,45],"6073":[182,41,182,54],"6081":[182,59,182,73],"6089":[182,41,182,74],"6091":[182,41,182,58],"6097":[183,24,183,28],"6105":[183,24,183,43],"6113":[183,44,183,48],"6121":[183,44,183,57],"6129":[183,66,183,80],"6137":[183,44,183,81],"6139":[183,44,183,65],"6145":[183,24,183,82],"6153":[183,24,183,82],"6161":[183,17,183,83],"6169":[185,19,185,22],"6177":[185,19,185,27],"6185":[185,31,185,34],"6193":[185,31,185,39],"6201":[185,43,185,46],"6209":[185,51,185,55],"6217":[185,51,185,64],"6225":[185,69,185,72],"6233":[185,75,185,82],"6241":[185,51,185,83],"6243":[185,51,185,68],"6249":[186,24,186,28],"6257":[186,24,186,43],"6265":[186,44,186,48],"6273":[186,44,186,57],"6281":[186,66,186,69],"6289":[186,72,186,79],"6297":[186,44,186,80],"6299":[186,44,186,65],"6305":[186,24,186,81],"6313":[186,24,186,81],"6321":[186,17,186,82],"6329":[189,19,189,24],"6337":[189,25,189,28],"6345":[189,31,189,38],"6353":[189,41,189,69],"6361":[189,15,189,70],"6369":[189,15,189,70],"6377":[189,9,189,71],"6385":[169,52,190,6],"6393":[169,52,190,6],"6401":[169,52,190,6],"6409":[169,52,190,6],"6417":[169,52,190,6],"6425":[169,52,190,6],"6433":[169,52,190,6],"6441":[169,5,190,6],"6449":[169,5,190,7],"6457":[191,5,191,22],"6465":[191,5,191,32],"6473":[193,21,193,25],"6481":[193,33,193,38],"6489":[193,40,193,48],"6497":[193,21,193,49],"6499":[193,21,193,32],"6505":[194,27,194,31],"6513":[194,39,194,44],"6521":[194,46,194,52],"6529":[194,27,194,53],"6531":[194,27,194,38],"6537":[195,29,195,33],"6545":[195,41,195,46],"6553":[195,48,195,56],"6561":[195,29,195,57],"6563":[195,29,195,40],"6569":[192,22,196,10],"6577":[192,22,196,10],"6585":[192,22,196,10],"6593":[197,13,197,17],"6601":[197,13,197,28],"6609":[198,13,198,19],"6617":[198,29,198,33],"6625":[198,43,198,47],"6633":[198,43,198,58],"6641":[198,60,198,66],"6649":[198,60,198,73],"6657":[198,29,198,74],"6659":[198,29,198,42],"6665":[198,13,198,74],"6673":[198,13,198,75],"6681":[200,23,200,27],"6689":[200,41,200,47],"6697":[200,49,200,53],"6705":[200,49,200,71],"6713":[200,73,200,87],"6721":[200,89,200,105],"6729":[200,107,200,111],"6737":[200,107,200,138],"6745":[200,23,200,139],"6747":[200,23,200,40],"6753":[200,23,200,139],"6761":[200,23,200,139],"6769":[201,13,201,20],"6777":[203,23,203,27],"6785":[203,35,203,42],"6793":[203,44,203,59],"6801":[203,61,203,65],"6809":[203,23,203,66],"6811":[203,23,203,34],"6817":[204,25,204,29],"6825":[204,37,204,44],"6833":[204,46,204,63],"6841":[204,65,204,69],"6849":[204,25,204,70],"6851":[204,25,204,36],"6857":[202,20,205,14],"6865":[202,20,205,14],"6873":[202,13,205,15],"6881":[208,19,208,23],"6889":[209,21,209,25],"6897":[207,16,210,10],"6905":[207,16,210,10],"6913":[207,9,210,11],"6921":[191,56,211,6],"6929":[191,56,211,6],"6937":[191,56,211,6],"6945":[191,56,211,6],"6953":[191,56,211,6],"6961":[191,56,211,6],"6969":[191,56,211,6],"6977":[191,5,211,6],"6985":[191,5,211,7],"6993":[212,5,212,22],"7001":[212,41,212,42],"7009":[212,5,212,42],"7017":[212,5,212,43],"7025":[213,5,213,22],"7033":[213,40,213,41],"7041":[213,5,213,41],"7049":[213,5,213,42],"7057":[214,5,214,22],"7065":[214,5,214,32],"7073":[215,23,215,31],"7081":[215,35,215,39],"7089":[215,23,215,39],"7097":[215,23,215,39],"7105":[216,21,216,27],"7113":[216,31,216,48],"7121":[216,31,216,64],"7129":[216,21,216,64],"7137":[216,21,216,64],"7145":[218,17,218,22],"7153":[220,24,220,28],"7161":[220,24,220,47],"7169":[220,24,220,47],"7177":[220,13,220,48],"7185":[219,14,219,31],"7193":[219,14,219,47],"7201":[223,24,223,28],"7209":[223,24,223,46],"7217":[223,24,223,46],"7225":[223,13,223,47],"7233":[222,14,222,31],"7241":[222,14,222,46],"7249":[226,23,226,28],"7257":[226,29,226,58],"7265":[226,19,226,59],"7273":[226,19,226,59],"7281":[226,13,226,60],"7289":[228,26,228,30],"7297":[228,26,228,41],"7305":[228,26,228,41],"7313":[228,26,228,41],"7321":[229,9,229,17],"7329":[230,26,230,33],"7337":[230,26,230,40],"7345":[230,26,230,40],"7353":[230,26,230,40],"7361":[231,17,231,23],"7369":[231,27,231,37],"7377":[232,26,232,30],"7385":[232,36,232,46],"7393":[232,48,232,54],"7401":[232,26,232,55],"7403":[232,26,232,35],"7409":[232,26,232,55],"7417":[232,17,232,56],"7425":[235,25,235,31],"7433":[236,32,236,39],"7441":[236,32,236,53],"7449":[237,34,237,41],"7457":[237,34,237,57],"7465":[238,31,238,38],"7473":[238,31,238,51],"7481":[239,33,239,40],"7489":[239,33,239,55],"7497":[240,23,240,30],"7505":[240,23,240,35],"7513":[234,20,241,14],"7521":[234,20,241,14],"7529":[234,13,241,15],"7537":[229,22,242,10],"7545":[229,22,242,10],"7553":[229,22,242,10],"7561":[229,22,242,10],"7569":[229,22,242,10],"7577":[229,9,242,11],"7579":[229,9,229,21],"7585":[242,20,242,29],"7593":[242,31,242,38],"7601":[229,9,242,39],"7603":[229,9,242,19],"7609":[229,9,242,40],"7617":[214,47,243,6],"7625":[214,47,243,6],"7633":[214,47,243,6],"7641":[214,47,243,6],"7649":[214,47,243,6],"7657":[214,47,243,6],"7665":[214,47,243,6],"7673":[214,47,243,6],"7681":[214,47,243,6],"7689":[214,47,243,6],"7697":[214,47,243,6],"7705":[214,5,243,6],"7713":[214,5,243,7],"7721":[244,5,244,12],"7729":[244,33,244,50],"7737":[244,5,244,50],"7745":[244,5,244,51],"7753":[6,8,245,2],"7761":[6,8,245,2],"7769":[6,8,245,2],"7777":[6,8,245,2],"7785":[6,8,245,2],"7793":[6,8,245,2],"7801":[6,8,245,2],"7809":[6,8,245,2],"7817":[6,8,245,2],"7825":[11,5,32,6],"7833":[6,8,245,2],"7841":[6,8,245,2],"7849":[6,1,245,3],"7857":[6,1,245,4],"7865":[1,1,245,4],"7873":[1,1,245,4],"7881":[1,1,245,4],"7889":[1,1,245,4],"7897":[3,1,5,2],"7905":[13,9,15,10],"7913":[23,9,25,10],"7921":[11,5,32,6],"7929":[11,5,32,6],"7937":[33,39,43,6],"7945":[33,39,43,6],"7953":[48,24,48,75],"7961":[47,48,49,14],"7969":[47,48,49,14],"7977":[46,14,50,10],"7985":[46,14,50,10],"7993":[55,13,59,14],"8001":[54,14,61,10],"8009":[54,14,61,10],"8017":[66,13,70,14],"8025":[65,14,72,10],"8033":[65,14,72,10],"8041":[104,21,106,22],"8049":[112,21,114,22],"8057":[119,21,124,22],"8065":[99,17,125,18],"8073":[127,17,129,18],"8081":[90,20,130,14],"8089":[86,13,130,14],"8097":[85,9,131,10],"8105":[74,50,134,6],"8113":[74,50,134,6],"8121":[136,9,138,10],"8129":[139,9,141,10],"8137":[135,48,143,6],"8145":[135,48,143,6],"8153":[152,13,154,14],"8161":[150,9,161,10],"8169":[144,55,168,6],"8177":[144,55,168,6],"8185":[170,9,172,10],"8193":[173,9,175,10],"8201":[176,9,178,10],"8209":[182,13,184,14],"8217":[185,13,187,14],"8225":[180,9,188,10],"8233":[169,52,190,6],"8241":[169,52,190,6],"8249":[197,9,199,10],"8257":[201,9,206,10],"8265":[191,56,211,6],"8273":[191,56,211,6],"8281":[218,17,218,22],"8289":[219,14,219,47],"8297":[222,14,222,46],"8305":[231,13,233,14],"8313":[229,22,242,10],"8321":[229,22,242,10],"8329":[214,47,243,6],"8337":[214,47,243,6],"8345":[6,8,245,2],"8353":[6,8,245,2],"8361":[1,1,245,4],"8369":[1,1,245,4],"nBranches":86,"originalCodeFileName":"/home/blake/ExpoSE/Targets/uglify/node_modules/source-map/lib/source-map/source-map-consumer.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/uglify/node_modules/source-map/lib/source-map/source-map-consumer_jalangi_.js","code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var util = require('./util');\n  var binarySearch = require('./binary-search');\n  var ArraySet = require('./array-set').ArraySet;\n  var base64VLQ = require('./base64-vlq');\n\n  /**\n   * A SourceMapConsumer instance represents a parsed source map which we can\n   * query for information about the original file positions by giving it a file\n   * position in the generated source.\n   *\n   * The only parameter is the raw source map (either as a JSON string, or\n   * already parsed to an object). According to the spec, source maps have the\n   * following attributes:\n   *\n   *   - version: Which version of the source map spec this map is following.\n   *   - sources: An array of URLs to the original source files.\n   *   - names: An array of identifiers which can be referrenced by individual mappings.\n   *   - sourceRoot: Optional. The URL root from which all sources are relative.\n   *   - sourcesContent: Optional. An array of contents of the original source files.\n   *   - mappings: A string of base64 VLQs which contain the actual mappings.\n   *   - file: Optional. The generated file this source map is associated with.\n   *\n   * Here is an example source map, taken from the source map spec[0]:\n   *\n   *     {\n   *       version : 3,\n   *       file: \"out.js\",\n   *       sourceRoot : \"\",\n   *       sources: [\"foo.js\", \"bar.js\"],\n   *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n   *       mappings: \"AA,AB;;ABCDE;\"\n   *     }\n   *\n   * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n   */\n  function SourceMapConsumer(aSourceMap) {\n    var sourceMap = aSourceMap;\n    if (typeof aSourceMap === 'string') {\n      sourceMap = JSON.parse(aSourceMap.replace(/^\\)\\]\\}'/, ''));\n    }\n\n    var version = util.getArg(sourceMap, 'version');\n    var sources = util.getArg(sourceMap, 'sources');\n    // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n    // requires the array) to play nice here.\n    var names = util.getArg(sourceMap, 'names', []);\n    var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n    var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n    var mappings = util.getArg(sourceMap, 'mappings');\n    var file = util.getArg(sourceMap, 'file', null);\n\n    // Once again, Sass deviates from the spec and supplies the version as a\n    // string rather than a number, so we use loose equality checking here.\n    if (version != this._version) {\n      throw new Error('Unsupported version: ' + version);\n    }\n\n    // Pass `true` below to allow duplicate names and sources. While source maps\n    // are intended to be compressed and deduplicated, the TypeScript compiler\n    // sometimes generates source maps with duplicates in them. See Github issue\n    // #72 and bugzil.la/889492.\n    this._names = ArraySet.fromArray(names, true);\n    this._sources = ArraySet.fromArray(sources, true);\n\n    this.sourceRoot = sourceRoot;\n    this.sourcesContent = sourcesContent;\n    this._mappings = mappings;\n    this.file = file;\n  }\n\n  /**\n   * Create a SourceMapConsumer from a SourceMapGenerator.\n   *\n   * @param SourceMapGenerator aSourceMap\n   *        The source map that will be consumed.\n   * @returns SourceMapConsumer\n   */\n  SourceMapConsumer.fromSourceMap =\n    function SourceMapConsumer_fromSourceMap(aSourceMap) {\n      var smc = Object.create(SourceMapConsumer.prototype);\n\n      smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n      smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n      smc.sourceRoot = aSourceMap._sourceRoot;\n      smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                              smc.sourceRoot);\n      smc.file = aSourceMap._file;\n\n      smc.__generatedMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByGeneratedPositions);\n      smc.__originalMappings = aSourceMap._mappings.slice()\n        .sort(util.compareByOriginalPositions);\n\n      return smc;\n    };\n\n  /**\n   * The version of the source mapping spec that we are consuming.\n   */\n  SourceMapConsumer.prototype._version = 3;\n\n  /**\n   * The list of original sources.\n   */\n  Object.defineProperty(SourceMapConsumer.prototype, 'sources', {\n    get: function () {\n      return this._sources.toArray().map(function (s) {\n        return this.sourceRoot ? util.join(this.sourceRoot, s) : s;\n      }, this);\n    }\n  });\n\n  // `__generatedMappings` and `__originalMappings` are arrays that hold the\n  // parsed mapping coordinates from the source map's \"mappings\" attribute. They\n  // are lazily instantiated, accessed via the `_generatedMappings` and\n  // `_originalMappings` getters respectively, and we only parse the mappings\n  // and create these arrays once queried for a source location. We jump through\n  // these hoops because there can be many thousands of mappings, and parsing\n  // them is expensive, so we only want to do it if we must.\n  //\n  // Each object in the arrays is of the form:\n  //\n  //     {\n  //       generatedLine: The line number in the generated code,\n  //       generatedColumn: The column number in the generated code,\n  //       source: The path to the original source file that generated this\n  //               chunk of code,\n  //       originalLine: The line number in the original source that\n  //                     corresponds to this chunk of generated code,\n  //       originalColumn: The column number in the original source that\n  //                       corresponds to this chunk of generated code,\n  //       name: The name of the original symbol which generated this chunk of\n  //             code.\n  //     }\n  //\n  // All properties except for `generatedLine` and `generatedColumn` can be\n  // `null`.\n  //\n  // `_generatedMappings` is ordered by the generated positions.\n  //\n  // `_originalMappings` is ordered by the original positions.\n\n  SourceMapConsumer.prototype.__generatedMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n    get: function () {\n      if (!this.__generatedMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__generatedMappings;\n    }\n  });\n\n  SourceMapConsumer.prototype.__originalMappings = null;\n  Object.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n    get: function () {\n      if (!this.__originalMappings) {\n        this.__generatedMappings = [];\n        this.__originalMappings = [];\n        this._parseMappings(this._mappings, this.sourceRoot);\n      }\n\n      return this.__originalMappings;\n    }\n  });\n\n  /**\n   * Parse the mappings in a string in to a data structure which we can easily\n   * query (the ordered arrays in the `this.__generatedMappings` and\n   * `this.__originalMappings` properties).\n   */\n  SourceMapConsumer.prototype._parseMappings =\n    function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n      var generatedLine = 1;\n      var previousGeneratedColumn = 0;\n      var previousOriginalLine = 0;\n      var previousOriginalColumn = 0;\n      var previousSource = 0;\n      var previousName = 0;\n      var mappingSeparator = /^[,;]/;\n      var str = aStr;\n      var mapping;\n      var temp;\n\n      while (str.length > 0) {\n        if (str.charAt(0) === ';') {\n          generatedLine++;\n          str = str.slice(1);\n          previousGeneratedColumn = 0;\n        }\n        else if (str.charAt(0) === ',') {\n          str = str.slice(1);\n        }\n        else {\n          mapping = {};\n          mapping.generatedLine = generatedLine;\n\n          // Generated column.\n          temp = base64VLQ.decode(str);\n          mapping.generatedColumn = previousGeneratedColumn + temp.value;\n          previousGeneratedColumn = mapping.generatedColumn;\n          str = temp.rest;\n\n          if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n            // Original source.\n            temp = base64VLQ.decode(str);\n            mapping.source = this._sources.at(previousSource + temp.value);\n            previousSource += temp.value;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source, but no line and column');\n            }\n\n            // Original line.\n            temp = base64VLQ.decode(str);\n            mapping.originalLine = previousOriginalLine + temp.value;\n            previousOriginalLine = mapping.originalLine;\n            // Lines are stored 0-based\n            mapping.originalLine += 1;\n            str = temp.rest;\n            if (str.length === 0 || mappingSeparator.test(str.charAt(0))) {\n              throw new Error('Found a source and line, but no column');\n            }\n\n            // Original column.\n            temp = base64VLQ.decode(str);\n            mapping.originalColumn = previousOriginalColumn + temp.value;\n            previousOriginalColumn = mapping.originalColumn;\n            str = temp.rest;\n\n            if (str.length > 0 && !mappingSeparator.test(str.charAt(0))) {\n              // Original name.\n              temp = base64VLQ.decode(str);\n              mapping.name = this._names.at(previousName + temp.value);\n              previousName += temp.value;\n              str = temp.rest;\n            }\n          }\n\n          this.__generatedMappings.push(mapping);\n          if (typeof mapping.originalLine === 'number') {\n            this.__originalMappings.push(mapping);\n          }\n        }\n      }\n\n      this.__generatedMappings.sort(util.compareByGeneratedPositions);\n      this.__originalMappings.sort(util.compareByOriginalPositions);\n    };\n\n  /**\n   * Find the mapping that best matches the hypothetical \"needle\" mapping that\n   * we are searching for in the given \"haystack\" of mappings.\n   */\n  SourceMapConsumer.prototype._findMapping =\n    function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                           aColumnName, aComparator) {\n      // To return the position we are searching for, we must first find the\n      // mapping for the given position and then return the opposite position it\n      // points to. Because the mappings are sorted, we can use binary search to\n      // find the best mapping.\n\n      if (aNeedle[aLineName] <= 0) {\n        throw new TypeError('Line must be greater than or equal to 1, got '\n                            + aNeedle[aLineName]);\n      }\n      if (aNeedle[aColumnName] < 0) {\n        throw new TypeError('Column must be greater than or equal to 0, got '\n                            + aNeedle[aColumnName]);\n      }\n\n      return binarySearch.search(aNeedle, aMappings, aComparator);\n    };\n\n  /**\n   * Returns the original source, line, and column information for the generated\n   * source's line and column positions provided. The only argument is an object\n   * with the following properties:\n   *\n   *   - line: The line number in the generated source.\n   *   - column: The column number in the generated source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - source: The original source file, or null.\n   *   - line: The line number in the original source, or null.\n   *   - column: The column number in the original source, or null.\n   *   - name: The original identifier, or null.\n   */\n  SourceMapConsumer.prototype.originalPositionFor =\n    function SourceMapConsumer_originalPositionFor(aArgs) {\n      var needle = {\n        generatedLine: util.getArg(aArgs, 'line'),\n        generatedColumn: util.getArg(aArgs, 'column')\n      };\n\n      var mapping = this._findMapping(needle,\n                                      this._generatedMappings,\n                                      \"generatedLine\",\n                                      \"generatedColumn\",\n                                      util.compareByGeneratedPositions);\n\n      if (mapping && mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source && this.sourceRoot) {\n          source = util.join(this.sourceRoot, source);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: util.getArg(mapping, 'name', null)\n        };\n      }\n\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    };\n\n  /**\n   * Returns the original source content. The only argument is the url of the\n   * original source file. Returns null if no original source content is\n   * availible.\n   */\n  SourceMapConsumer.prototype.sourceContentFor =\n    function SourceMapConsumer_sourceContentFor(aSource) {\n      if (!this.sourcesContent) {\n        return null;\n      }\n\n      if (this.sourceRoot) {\n        aSource = util.relative(this.sourceRoot, aSource);\n      }\n\n      if (this._sources.has(aSource)) {\n        return this.sourcesContent[this._sources.indexOf(aSource)];\n      }\n\n      var url;\n      if (this.sourceRoot\n          && (url = util.urlParse(this.sourceRoot))) {\n        // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n        // many users. We can help them out when they expect file:// URIs to\n        // behave like it would if they were running a local HTTP server. See\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n        var fileUriAbsPath = aSource.replace(/^file:\\/\\//, \"\");\n        if (url.scheme == \"file\"\n            && this._sources.has(fileUriAbsPath)) {\n          return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n        }\n\n        if ((!url.path || url.path == \"/\")\n            && this._sources.has(\"/\" + aSource)) {\n          return this.sourcesContent[this._sources.indexOf(\"/\" + aSource)];\n        }\n      }\n\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    };\n\n  /**\n   * Returns the generated line and column information for the original source,\n   * line, and column positions provided. The only argument is an object with\n   * the following properties:\n   *\n   *   - source: The filename of the original source.\n   *   - line: The line number in the original source.\n   *   - column: The column number in the original source.\n   *\n   * and an object is returned with the following properties:\n   *\n   *   - line: The line number in the generated source, or null.\n   *   - column: The column number in the generated source, or null.\n   */\n  SourceMapConsumer.prototype.generatedPositionFor =\n    function SourceMapConsumer_generatedPositionFor(aArgs) {\n      var needle = {\n        source: util.getArg(aArgs, 'source'),\n        originalLine: util.getArg(aArgs, 'line'),\n        originalColumn: util.getArg(aArgs, 'column')\n      };\n\n      if (this.sourceRoot) {\n        needle.source = util.relative(this.sourceRoot, needle.source);\n      }\n\n      var mapping = this._findMapping(needle,\n                                      this._originalMappings,\n                                      \"originalLine\",\n                                      \"originalColumn\",\n                                      util.compareByOriginalPositions);\n\n      if (mapping) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null)\n        };\n      }\n\n      return {\n        line: null,\n        column: null\n      };\n    };\n\n  SourceMapConsumer.GENERATED_ORDER = 1;\n  SourceMapConsumer.ORIGINAL_ORDER = 2;\n\n  /**\n   * Iterate over each mapping between an original source/line/column and a\n   * generated line/column in this source map.\n   *\n   * @param Function aCallback\n   *        The function that is called with each mapping.\n   * @param Object aContext\n   *        Optional. If specified, this object will be the value of `this` every\n   *        time that `aCallback` is called.\n   * @param aOrder\n   *        Either `SourceMapConsumer.GENERATED_ORDER` or\n   *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n   *        iterate over the mappings sorted by the generated file's line/column\n   *        order or the original's source/line/column order, respectively. Defaults to\n   *        `SourceMapConsumer.GENERATED_ORDER`.\n   */\n  SourceMapConsumer.prototype.eachMapping =\n    function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n      var context = aContext || null;\n      var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n      var mappings;\n      switch (order) {\n      case SourceMapConsumer.GENERATED_ORDER:\n        mappings = this._generatedMappings;\n        break;\n      case SourceMapConsumer.ORIGINAL_ORDER:\n        mappings = this._originalMappings;\n        break;\n      default:\n        throw new Error(\"Unknown order of iteration.\");\n      }\n\n      var sourceRoot = this.sourceRoot;\n      mappings.map(function (mapping) {\n        var source = mapping.source;\n        if (source && sourceRoot) {\n          source = util.join(sourceRoot, source);\n        }\n        return {\n          source: source,\n          generatedLine: mapping.generatedLine,\n          generatedColumn: mapping.generatedColumn,\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: mapping.name\n        };\n      }).forEach(aCallback, context);\n    };\n\n  exports.SourceMapConsumer = SourceMapConsumer;\n\n});\n"}