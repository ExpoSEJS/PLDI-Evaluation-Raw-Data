{"8":[20,21,20,52],"9":[1,20,1,27],"10":[16,22,16,41],"16":[26,26,26,62],"17":[1,28,1,32],"18":[16,60,16,62],"24":[26,26,26,115],"25":[1,20,1,33],"26":[16,13,16,62],"32":[26,26,26,115],"33":[1,20,1,33],"34":[24,33,24,77],"40":[28,17,28,45],"41":[1,20,1,33],"42":[26,66,26,99],"48":[16,13,16,62],"49":[2,26,2,38],"50":[26,66,26,115],"56":[31,13,31,24],"57":[2,26,2,45],"58":[27,26,27,98],"64":[36,13,36,28],"65":[2,26,2,45],"66":[28,17,28,45],"72":[45,9,45,30],"73":[2,26,2,45],"74":[31,13,31,24],"80":[49,9,49,30],"81":[3,14,3,21],"82":[36,13,36,28],"88":[53,9,53,33],"89":[3,22,3,28],"90":[39,23,39,56],"97":[3,14,3,29],"98":[39,23,39,64],"105":[3,14,3,29],"106":[39,23,39,78],"113":[3,14,3,29],"114":[53,9,53,33],"121":[4,12,4,19],"122":[54,25,54,70],"129":[4,20,4,24],"130":[54,25,54,77],"137":[4,12,4,25],"145":[4,12,4,25],"153":[4,12,4,25],"161":[5,1,5,8],"169":[6,16,6,24],"177":[6,25,6,36],"185":[6,12,6,37],"193":[6,12,6,37],"201":[6,5,6,38],"209":[5,15,7,2],"217":[5,15,7,2],"225":[5,15,7,2],"233":[5,15,7,2],"241":[5,1,7,2],"249":[5,1,7,3],"257":[9,5,9,9],"265":[9,24,9,35],"273":[9,5,9,35],"281":[9,5,9,36],"289":[8,16,10,2],"297":[8,16,10,2],"305":[8,16,10,2],"313":[8,16,10,2],"321":[8,16,10,2],"329":[8,16,10,2],"337":[11,1,11,9],"345":[11,1,11,19],"353":[13,24,13,27],"361":[13,34,13,37],"369":[13,24,13,38],"371":[13,24,13,33],"377":[13,24,13,38],"385":[13,24,13,38],"393":[14,20,14,39],"401":[14,40,14,44],"409":[14,40,14,56],"417":[14,58,14,66],"425":[14,58,14,74],"427":[14,58,14,72],"433":[14,20,14,75],"441":[14,20,14,75],"449":[14,20,14,75],"457":[15,26,15,31],"465":[15,26,15,31],"473":[15,26,15,31],"481":[16,13,16,21],"489":[16,22,16,30],"497":[16,22,16,37],"505":[16,40,16,41],"513":[16,13,16,42],"521":[16,51,16,54],"529":[16,13,16,55],"531":[16,13,16,50],"537":[16,61,16,62],"545":[17,34,17,38],"553":[17,44,17,48],"561":[17,50,17,64],"569":[17,34,17,65],"571":[17,34,17,43],"577":[17,34,17,65],"585":[17,34,17,65],"593":[18,30,18,34],"601":[18,30,18,34],"609":[18,30,18,34],"617":[20,21,20,25],"625":[20,37,20,51],"633":[20,21,20,52],"635":[20,21,20,36],"641":[21,34,21,38],"649":[21,45,21,47],"657":[21,61,21,75],"665":[21,45,21,76],"667":[21,45,21,60],"673":[21,34,21,77],"675":[21,34,21,44],"681":[21,34,21,77],"689":[21,21,21,78],"697":[24,27,24,32],"705":[24,33,24,60],"713":[24,63,24,77],"721":[24,23,24,78],"729":[24,23,24,78],"737":[24,17,24,79],"745":[23,15,25,14],"753":[26,26,26,36],"761":[26,40,26,50],"769":[26,40,26,62],"777":[26,73,26,83],"785":[26,73,26,95],"793":[26,73,26,99],"801":[26,104,26,115],"809":[26,118,26,128],"817":[26,118,26,140],"825":[26,118,26,144],"833":[26,147,26,152],"841":[26,26,26,152],"849":[26,26,26,152],"857":[27,26,27,30],"865":[27,36,27,40],"873":[27,42,27,48],"881":[27,50,27,58],"889":[27,64,27,67],"897":[27,50,27,68],"899":[27,50,27,63],"905":[27,26,27,69],"907":[27,26,27,35],"913":[27,78,27,85],"921":[27,87,27,89],"929":[27,26,27,90],"931":[27,26,27,77],"937":[27,93,27,98],"945":[27,26,27,98],"953":[27,13,27,99],"961":[28,18,28,22],"969":[28,34,28,44],"977":[28,18,28,45],"979":[28,18,28,33],"985":[29,30,29,35],"993":[29,30,29,35],"1001":[29,17,29,36],"1009":[31,14,31,24],"1017":[32,26,32,30],"1025":[32,36,32,40],"1033":[32,42,32,50],"1041":[32,56,32,59],"1049":[32,42,32,60],"1051":[32,42,32,55],"1057":[32,26,32,61],"1059":[32,26,32,35],"1065":[32,26,32,61],"1073":[32,13,32,62],"1081":[34,16,34,26],"1089":[34,16,34,26],"1097":[34,9,34,27],"1105":[36,13,36,19],"1113":[36,24,36,28],"1121":[37,20,37,25],"1129":[37,20,37,25],"1137":[37,13,37,26],"1145":[39,9,39,12],"1153":[39,23,39,37],"1161":[39,40,39,44],"1169":[39,40,39,56],"1177":[39,59,39,64],"1185":[39,67,39,70],"1193":[39,67,39,78],"1201":[39,9,39,78],"1209":[39,9,39,79],"1217":[40,15,40,18],"1225":[40,15,40,18],"1233":[40,9,40,19],"1241":[35,7,41,6],"1249":[11,30,42,2],"1257":[11,30,42,2],"1265":[11,30,42,2],"1273":[11,30,42,2],"1281":[11,30,42,2],"1289":[11,30,42,2],"1297":[11,30,42,2],"1305":[11,30,42,2],"1313":[11,30,42,2],"1321":[11,30,42,2],"1329":[11,30,42,2],"1337":[11,1,42,2],"1345":[11,1,42,3],"1353":[44,16,44,20],"1361":[44,26,44,37],"1369":[44,39,44,56],"1377":[44,58,44,62],"1385":[44,16,44,63],"1387":[44,16,44,25],"1393":[44,16,44,63],"1401":[44,16,44,63],"1409":[45,9,45,13],"1417":[45,25,45,29],"1425":[45,9,45,30],"1427":[45,9,45,24],"1433":[46,16,46,20],"1441":[46,16,46,20],"1449":[46,9,46,21],"1457":[48,12,48,16],"1465":[48,22,48,33],"1473":[48,35,48,49],"1481":[48,51,48,55],"1489":[48,12,48,56],"1491":[48,12,48,21],"1497":[48,12,48,56],"1505":[48,5,48,57],"1513":[49,9,49,13],"1521":[49,25,49,29],"1529":[49,9,49,30],"1531":[49,9,49,24],"1537":[50,16,50,20],"1545":[50,16,50,20],"1553":[50,9,50,21],"1561":[52,20,52,24],"1569":[52,30,52,41],"1577":[52,43,52,47],"1585":[52,20,52,48],"1587":[52,20,52,29],"1593":[52,20,52,48],"1601":[52,20,52,48],"1609":[53,9,53,17],"1617":[53,22,53,33],"1625":[54,19,54,24],"1633":[54,25,54,63],"1641":[54,66,54,70],"1649":[54,73,54,77],"1657":[54,15,54,78],"1665":[54,15,54,78],"1673":[54,9,54,79],"1681":[56,12,56,31],"1689":[56,32,56,40],"1697":[56,42,56,46],"1705":[56,12,56,47],"1713":[56,12,56,47],"1721":[56,5,56,48],"1729":[43,1,57,2],"1737":[43,1,57,2],"1745":[43,1,57,2],"1753":[43,1,57,2],"1761":[43,1,57,2],"1769":[43,1,57,2],"1777":[1,1,57,2],"1785":[1,1,57,2],"1793":[1,1,57,2],"1801":[1,1,57,2],"1809":[1,1,57,2],"1817":[1,1,57,2],"1825":[43,1,57,2],"1833":[1,1,57,2],"1841":[5,15,7,2],"1849":[5,15,7,2],"1857":[8,16,10,2],"1865":[8,16,10,2],"1873":[20,17,22,18],"1881":[26,26,26,152],"1889":[28,13,29,36],"1897":[16,9,30,10],"1905":[31,9,33,10],"1913":[36,9,38,10],"1921":[11,30,42,2],"1929":[11,30,42,2],"1937":[45,5,47,6],"1945":[49,5,51,6],"1953":[53,5,55,6],"1961":[43,1,57,2],"1969":[43,1,57,2],"1977":[1,1,57,2],"1985":[1,1,57,2],"nBranches":22,"originalCodeFileName":"/home/blake/ExpoSE/Targets/mappings/node_modules/mappings/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/mappings/node_modules/mappings/index_jalangi_.js","code":"\nconst PATH = require(\"path\");\nconst FS = require(\"fs\");\n\nexports.for = function(packagePath) {\n    return new Mappings(packagePath);\n}\n\n\nvar Mappings = function(packagePath) {\n    this.packagePath = packagePath;\n}\n\nMappings.prototype.resolve = function(uri, silent) {\n    try {\n        var uriParts = uri.split(\"/\");\n        var path = walkPackagesForName(this.packagePath, uriParts.shift());\n        var modulePath = false;\n\n        // If no `.` found in last segment of `uri` we assume it is a module\n        // in which case we splice in `libDir` if applicable.\n        if (uriParts[uriParts.length-1].indexOf(\".\") === -1) {\n\n            // TODO: Use `sm-pinf-js` to load descriptor.\n            var descriptorPath = PATH.join(path, \"package.json\");\n            var descriptor = null;\n            try {\n                if (PATH.existsSync(descriptorPath)) {\n                    descriptor = JSON.parse(FS.readFileSync(descriptorPath));\n                }\n            } catch(err) {\n                throw new Error(\"Error parsing JSON file: \" + descriptorPath);\n            }\n\n            var libDir = (\n                descriptor &&\n                descriptor.directories &&\n                typeof descriptor.directories.lib !== \"undefined\"\n            ) ? descriptor.directories.lib : \"lib\";\n\n            modulePath = PATH.join(path, libDir, uriParts.join(\"/\")).replace(/\\.js$/, \"\") + \".js\";\n\n            if (!PATH.existsSync(modulePath)) modulePath = false;\n        }\n        if (!modulePath) {\n            modulePath = PATH.join(path, uriParts.join(\"/\"));\n        }\n        return modulePath;\n\n    } catch(err) {\n        if (silent === true) {\n            return false;\n        }\n        err.message = \"for package[\" + this.packagePath + \"]: \" + err.message;\n        throw err;\n    }\n}\n\n\nfunction walkPackagesForName(packagePath, name) {\n    var path = PATH.join(packagePath, \"mapped_packages\", name);\n    if (PATH.existsSync(path)) {\n        return path;\n    }\n    path = PATH.join(packagePath, \"node_modules\", name);\n    if (PATH.existsSync(path)) {\n        return path;\n    }\n    var nextPath = PATH.join(packagePath, \"..\");\n    if (nextPath === packagePath) {\n        throw new Error(\"No mapped package found for alias '\" + name + \"'\");\n    }\n    return walkPackagesForName(nextPath, name);\n}\n"}