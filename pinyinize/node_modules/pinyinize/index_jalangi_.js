J$.iids = {"8":[22,9,22,25],"9":[1,20,1,27],"10":[22,9,22,14],"16":[22,9,22,25],"17":[1,28,1,32],"18":[22,18,22,25],"24":[25,9,28,34],"25":[1,20,1,33],"26":[46,16,46,28],"32":[52,13,52,62],"33":[1,20,1,33],"34":[46,16,46,35],"40":[52,13,52,62],"41":[1,20,1,33],"42":[52,13,52,20],"48":[56,9,56,16],"49":[2,26,2,38],"50":[56,9,56,16],"56":[69,12,69,50],"57":[2,26,2,45],"64":[74,13,74,32],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,9,3,16],"89":[3,17,3,25],"97":[3,9,3,26],"105":[3,9,3,26],"113":[3,9,3,26],"121":[4,15,4,22],"129":[4,23,4,38],"137":[4,15,4,39],"145":[4,15,4,39],"153":[4,15,4,39],"161":[5,23,5,30],"169":[5,31,5,56],"177":[5,23,5,57],"185":[5,23,5,57],"193":[5,23,5,57],"201":[6,15,6,22],"209":[6,23,6,39],"217":[6,15,6,40],"225":[6,15,6,40],"233":[6,15,6,40],"241":[8,5,8,6],"249":[9,5,9,6],"257":[10,5,10,6],"265":[11,5,11,6],"273":[7,19,12,2],"281":[7,19,12,2],"289":[7,19,12,2],"297":[13,1,13,7],"305":[13,18,13,30],"313":[13,1,13,30],"321":[13,1,13,31],"329":[15,17,15,37],"337":[15,38,15,44],"345":[15,17,15,45],"353":[15,17,15,45],"361":[15,17,15,45],"369":[16,25,16,30],"377":[16,35,16,45],"385":[16,25,16,46],"387":[16,25,16,34],"393":[16,25,16,46],"401":[16,25,16,46],"409":[17,12,17,25],"417":[17,31,17,34],"425":[17,12,17,35],"427":[17,12,17,30],"433":[17,12,17,35],"441":[17,5,17,36],"449":[14,1,18,2],"457":[14,1,18,2],"465":[14,1,18,2],"473":[14,1,18,2],"481":[14,1,18,2],"489":[20,16,20,23],"497":[20,24,20,28],"505":[20,16,20,29],"513":[20,16,20,29],"521":[20,16,20,29],"529":[21,18,21,27],"537":[21,28,21,32],"545":[21,18,21,33],"553":[21,18,21,33],"561":[21,18,21,33],"569":[22,10,22,14],"577":[22,19,22,25],"585":[23,16,23,35],"593":[23,36,23,40],"601":[23,16,23,41],"609":[23,16,23,41],"617":[23,9,23,42],"625":[25,9,25,10],"633":[26,13,26,18],"641":[27,13,27,18],"649":[25,20,28,10],"657":[28,12,28,27],"665":[28,28,28,32],"673":[28,12,28,33],"681":[25,9,28,34],"683":[25,9,25,19],"689":[29,16,29,20],"697":[29,29,29,32],"705":[29,34,29,37],"713":[29,16,29,38],"715":[29,16,29,28],"721":[29,16,29,38],"729":[29,9,29,39],"737":[30,18,30,24],"745":[30,33,30,36],"753":[30,38,30,41],"761":[30,18,30,42],"763":[30,18,30,32],"769":[30,18,30,42],"777":[30,9,30,43],"785":[32,26,32,38],"793":[32,39,32,45],"801":[32,47,32,51],"809":[32,26,32,52],"817":[32,26,32,52],"825":[32,26,32,52],"833":[33,24,33,28],"841":[33,37,33,43],"849":[33,45,33,59],"857":[33,24,33,60],"859":[33,24,33,36],"865":[33,24,33,60],"873":[33,24,33,60],"881":[34,12,34,27],"889":[34,28,34,40],"897":[34,12,34,41],"905":[34,12,34,41],"913":[34,5,34,42],"921":[19,1,35,2],"929":[19,1,35,2],"937":[19,1,35,2],"945":[19,1,35,2],"953":[19,1,35,2],"961":[19,1,35,2],"969":[19,1,35,2],"977":[38,13,38,17],"985":[39,13,39,17],"993":[40,14,40,19],"1001":[41,14,41,19],"1009":[37,25,42,6],"1017":[37,25,42,6],"1025":[37,25,42,6],"1033":[43,12,43,13],"1041":[43,18,43,31],"1049":[43,33,43,37],"1057":[43,39,43,43],"1065":[43,12,43,44],"1067":[43,12,43,17],"1073":[43,12,43,44],"1081":[43,5,43,45],"1089":[36,1,44,2],"1097":[36,1,44,2],"1105":[36,1,44,2],"1113":[36,1,44,2],"1121":[46,16,46,22],"1129":[46,25,46,28],"1137":[46,31,46,35],"1145":[46,16,46,35],"1153":[46,16,46,35],"1161":[47,12,47,13],"1169":[47,18,47,25],"1177":[47,27,47,31],"1185":[47,33,47,39],"1193":[47,12,47,40],"1195":[47,12,47,17],"1201":[47,12,47,40],"1209":[47,5,47,41],"1217":[45,1,48,2],"1225":[45,1,48,2],"1233":[45,1,48,2],"1241":[45,1,48,2],"1249":[45,1,48,2],"1257":[51,5,51,6],"1265":[51,15,51,30],"1273":[52,14,52,20],"1281":[52,24,52,30],"1289":[52,37,52,53],"1297":[52,37,52,61],"1305":[52,24,52,62],"1307":[52,24,52,36],"1313":[53,22,53,38],"1321":[53,22,53,45],"1329":[53,22,53,45],"1337":[53,13,53,46],"1345":[51,32,55,6],"1353":[51,32,55,6],"1361":[51,32,55,6],"1369":[51,32,55,6],"1377":[51,5,55,7],"1379":[51,5,51,14],"1385":[51,5,55,8],"1393":[56,10,56,16],"1401":[57,16,57,22],"1409":[57,16,57,22],"1417":[57,9,57,23],"1425":[59,12,59,18],"1433":[59,27,59,33],"1441":[59,35,59,47],"1449":[59,48,59,54],"1457":[59,56,59,60],"1465":[59,35,59,61],"1473":[59,12,59,62],"1475":[59,12,59,26],"1481":[59,12,59,62],"1489":[59,5,59,63],"1497":[49,1,60,2],"1505":[49,1,60,2],"1513":[49,1,60,2],"1521":[49,1,60,2],"1529":[49,1,60,2],"1537":[62,12,62,13],"1545":[62,19,62,23],"1553":[62,25,62,36],"1561":[62,12,62,37],"1563":[62,12,62,18],"1569":[62,12,62,37],"1577":[62,5,62,38],"1585":[61,1,63,2],"1593":[61,1,63,2],"1601":[61,1,63,2],"1609":[65,12,65,18],"1617":[65,25,65,28],"1625":[65,12,65,29],"1627":[65,12,65,24],"1633":[65,12,65,29],"1641":[65,5,65,30],"1649":[64,1,66,2],"1657":[64,1,66,2],"1665":[64,1,66,2],"1673":[68,25,68,33],"1681":[68,34,68,35],"1689":[68,41,68,45],"1697":[68,34,68,46],"1699":[68,34,68,40],"1705":[68,48,68,50],"1713":[68,25,68,51],"1721":[68,25,68,51],"1729":[68,25,68,51],"1737":[69,12,69,13],"1745":[69,23,69,34],"1753":[69,36,69,49],"1761":[69,12,69,50],"1763":[69,12,69,22],"1769":[69,53,69,66],"1777":[69,69,69,73],"1785":[69,12,69,73],"1793":[69,5,69,74],"1801":[67,1,70,2],"1809":[67,1,70,2],"1817":[67,1,70,2],"1825":[67,1,70,2],"1833":[72,18,72,22],"1841":[72,18,72,22],"1849":[72,18,72,22],"1857":[73,5,73,6],"1865":[73,15,73,22],"1873":[74,13,74,17],"1881":[74,24,74,31],"1889":[74,13,74,32],"1891":[74,13,74,23],"1897":[75,22,75,33],"1905":[75,22,75,33],"1913":[75,13,75,34],"1921":[73,24,77,6],"1929":[73,24,77,6],"1937":[73,24,77,6],"1945":[73,24,77,6],"1953":[73,24,77,6],"1961":[73,5,77,7],"1963":[73,5,73,14],"1969":[73,5,77,8],"1977":[78,12,78,18],"1985":[78,12,78,18],"1993":[78,5,78,19],"2001":[71,1,79,2],"2009":[71,1,79,2],"2017":[71,1,79,2],"2025":[71,1,79,2],"2033":[1,1,79,2],"2041":[1,1,79,2],"2049":[1,1,79,2],"2057":[1,1,79,2],"2065":[1,1,79,2],"2073":[1,1,79,2],"2081":[1,1,79,2],"2089":[1,1,79,2],"2097":[14,1,18,2],"2105":[1,1,79,2],"2113":[19,1,35,2],"2121":[1,1,79,2],"2129":[36,1,44,2],"2137":[1,1,79,2],"2145":[45,1,48,2],"2153":[1,1,79,2],"2161":[49,1,60,2],"2169":[1,1,79,2],"2177":[61,1,63,2],"2185":[1,1,79,2],"2193":[64,1,66,2],"2201":[1,1,79,2],"2209":[67,1,70,2],"2217":[1,1,79,2],"2225":[71,1,79,2],"2233":[1,1,79,2],"2241":[14,1,18,2],"2249":[14,1,18,2],"2257":[22,5,24,6],"2265":[25,5,31,6],"2273":[19,1,35,2],"2281":[19,1,35,2],"2289":[36,1,44,2],"2297":[36,1,44,2],"2305":[45,1,48,2],"2313":[45,1,48,2],"2321":[52,9,54,10],"2329":[51,32,55,6],"2337":[51,32,55,6],"2345":[56,5,58,6],"2353":[49,1,60,2],"2361":[49,1,60,2],"2369":[61,1,63,2],"2377":[61,1,63,2],"2385":[64,1,66,2],"2393":[64,1,66,2],"2401":[69,12,69,73],"2409":[67,1,70,2],"2417":[67,1,70,2],"2425":[74,9,76,10],"2433":[73,24,77,6],"2441":[73,24,77,6],"2449":[71,1,79,2],"2457":[71,1,79,2],"2465":[1,1,79,2],"2473":[1,1,79,2],"nBranches":16,"originalCodeFileName":"/home/blake/ExpoSE/Targets/pinyinize/node_modules/pinyinize/index.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/pinyinize/node_modules/pinyinize/index_jalangi_.js","code":"var _ = require('lodash');\nvar endings = require('./lib/endings');\nvar lettersToTonify = require('./lib/letters-to-tonify');\nvar toneMap = require('./lib/tone-map');\nvar toneNumbers = [1, 2, 3, 4];\n\nmodule.exports = tonifyPhrase;\n\n/**\n * @param {string} phrase\n * @return {string}\n */\nfunction tonifyPhrase(phrase) {\n  var words = splitPhraseIntoWords(phrase);\n  var tonifiedWords = words.map(tonifyWord);\n\n  return tonifiedWords.join(' ');\n}\n\n/**\n * @param {string} word\n * @return {string}\n */\nfunction tonifyWord(word) {\n  var tone = getTone(word);\n  var ending = getEnding(word);\n\n  if (!tone || !ending) {\n    return getTonelessFallback(word);\n  }\n\n  // TODO: Refactor this exception.\n  if (_.includes(['nue', 'lue'], stripToneNumber(word))) {\n    word = word.replace('u', 'ü');\n    ending = ending.replace('u', 'ü');\n  }\n\n  var tonifiedEnding = tonifyEnding(ending, tone);\n  var tonifiedWord = word.replace(ending, tonifiedEnding);\n\n  return stripToneNumber(tonifiedWord);\n}\n\n/**\n * @param {string} word\n * @return {string}\n */\nfunction getTonelessFallback(word) {\n  var fallbackIoMap = {\n    lv: 'lü',\n    nv: 'nü',\n    lue: 'lüe',\n    nue: 'nüe'\n  };\n\n  return _.get(fallbackIoMap, word, word);\n}\n\n/**\n * @param {string} letter\n * @param {number} tone\n * @return {string}\n */\nfunction tonifyLetter(letter, tone) {\n  var keys = letter + '.' + tone;\n  return _.get(toneMap, keys, letter);\n}\n\n/**\n * @param {string} ending\n * @param {number} tone\n * @return {string}\n */\nfunction tonifyEnding(ending, tone) {\n  var letter;\n\n  _.forEach(lettersToTonify, function(letterAndPattern) {\n    if (!letter && ending.match(letterAndPattern.pattern)) {\n      letter = letterAndPattern.letter;\n    }\n  });\n\n  if (!letter) {\n    return ending;\n  }\n\n  return ending.replace(letter, tonifyLetter(letter, tone));\n}\n\n/**\n * @param {string} word\n * @return {string}\n */\nfunction stripToneNumber(word) {\n  return _.trim(word, toneNumbers);\n}\n\n/**\n * @param {string} phrase\n * @return {array}\n */\nfunction splitPhraseIntoWords(phrase) {\n  return phrase.split(' ');\n}\n\n/**\n * @param {string} word\n * @return {number|null}\n */\nfunction getTone(word) {\n  var lastCharacter = parseInt(_.last(word), 10);\n  return _.includes(toneNumbers, lastCharacter) ? lastCharacter : null;\n}\n\n/**\n * @param {string} word\n * @return {string|null}\n */\nfunction getEnding(word) {\n  var ending = null;\n\n  _.forEach(endings, function(pattern, plainEnding) {\n    if (word.match(pattern)) {\n      ending = plainEnding;\n    }\n  });\n\n  return ending;\n}\n"};
jalangiLabel54:
    while (true) {
        try {
            J$.Se(2033, '/home/blake/ExpoSE/Targets/pinyinize/node_modules/pinyinize/index_jalangi_.js', '/home/blake/ExpoSE/Targets/pinyinize/node_modules/pinyinize/index.js');
            function tonifyPhrase(phrase) {
                jalangiLabel43:
                    while (true) {
                        try {
                            J$.Fe(449, arguments.callee, this, arguments);
                            arguments = J$.N(457, 'arguments', arguments, 4);
                            phrase = J$.N(465, 'phrase', phrase, 4);
                            J$.N(473, 'words', words, 0);
                            J$.N(481, 'tonifiedWords', tonifiedWords, 0);
                            var words = J$.X1(361, J$.W(353, 'words', J$.F(345, J$.R(329, 'splitPhraseIntoWords', splitPhraseIntoWords, 1), 0)(J$.R(337, 'phrase', phrase, 0)), words, 1));
                            var tonifiedWords = J$.X1(401, J$.W(393, 'tonifiedWords', J$.M(385, J$.R(369, 'words', words, 0), 'map', 0)(J$.R(377, 'tonifyWord', tonifyWord, 1)), tonifiedWords, 1));
                            return J$.X1(441, J$.Rt(433, J$.M(425, J$.R(409, 'tonifiedWords', tonifiedWords, 0), 'join', 0)(J$.T(417, ' ', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2241, J$e);
                        } finally {
                            if (J$.Fr(2249))
                                continue jalangiLabel43;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tonifyWord(word) {
                jalangiLabel44:
                    while (true) {
                        try {
                            J$.Fe(921, arguments.callee, this, arguments);
                            arguments = J$.N(929, 'arguments', arguments, 4);
                            word = J$.N(937, 'word', word, 4);
                            J$.N(945, 'tone', tone, 0);
                            J$.N(953, 'ending', ending, 0);
                            J$.N(961, 'tonifiedEnding', tonifiedEnding, 0);
                            J$.N(969, 'tonifiedWord', tonifiedWord, 0);
                            var tone = J$.X1(521, J$.W(513, 'tone', J$.F(505, J$.R(489, 'getTone', getTone, 1), 0)(J$.R(497, 'word', word, 0)), tone, 1));
                            var ending = J$.X1(561, J$.W(553, 'ending', J$.F(545, J$.R(529, 'getEnding', getEnding, 1), 0)(J$.R(537, 'word', word, 0)), ending, 1));
                            if (J$.X1(2257, J$.C(16, J$.C(8, J$.U(10, '!', J$.R(569, 'tone', tone, 0))) ? J$._() : J$.U(18, '!', J$.R(577, 'ending', ending, 0))))) {
                                return J$.X1(617, J$.Rt(609, J$.F(601, J$.R(585, 'getTonelessFallback', getTonelessFallback, 1), 0)(J$.R(593, 'word', word, 0))));
                            }
                            if (J$.X1(2265, J$.C(24, J$.M(681, J$.R(625, '_', _, 1), 'includes', 0)(J$.T(649, [
                                    J$.T(633, 'nue', 21, false),
                                    J$.T(641, 'lue', 21, false)
                                ], 10, false), J$.F(673, J$.R(657, 'stripToneNumber', stripToneNumber, 1), 0)(J$.R(665, 'word', word, 0)))))) {
                                J$.X1(729, word = J$.W(721, 'word', J$.M(713, J$.R(689, 'word', word, 0), 'replace', 0)(J$.T(697, 'u', 21, false), J$.T(705, 'ü', 21, false)), word, 0));
                                J$.X1(777, ending = J$.W(769, 'ending', J$.M(761, J$.R(737, 'ending', ending, 0), 'replace', 0)(J$.T(745, 'u', 21, false), J$.T(753, 'ü', 21, false)), ending, 0));
                            }
                            var tonifiedEnding = J$.X1(825, J$.W(817, 'tonifiedEnding', J$.F(809, J$.R(785, 'tonifyEnding', tonifyEnding, 1), 0)(J$.R(793, 'ending', ending, 0), J$.R(801, 'tone', tone, 0)), tonifiedEnding, 1));
                            var tonifiedWord = J$.X1(873, J$.W(865, 'tonifiedWord', J$.M(857, J$.R(833, 'word', word, 0), 'replace', 0)(J$.R(841, 'ending', ending, 0), J$.R(849, 'tonifiedEnding', tonifiedEnding, 0)), tonifiedWord, 1));
                            return J$.X1(913, J$.Rt(905, J$.F(897, J$.R(881, 'stripToneNumber', stripToneNumber, 1), 0)(J$.R(889, 'tonifiedWord', tonifiedWord, 0))));
                        } catch (J$e) {
                            J$.Ex(2273, J$e);
                        } finally {
                            if (J$.Fr(2281))
                                continue jalangiLabel44;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getTonelessFallback(word) {
                jalangiLabel45:
                    while (true) {
                        try {
                            J$.Fe(1089, arguments.callee, this, arguments);
                            arguments = J$.N(1097, 'arguments', arguments, 4);
                            word = J$.N(1105, 'word', word, 4);
                            J$.N(1113, 'fallbackIoMap', fallbackIoMap, 0);
                            var fallbackIoMap = J$.X1(1025, J$.W(1017, 'fallbackIoMap', J$.T(1009, {
                                lv: J$.T(977, 'lü', 21, false),
                                nv: J$.T(985, 'nü', 21, false),
                                lue: J$.T(993, 'lüe', 21, false),
                                nue: J$.T(1001, 'nüe', 21, false)
                            }, 11, false), fallbackIoMap, 1));
                            return J$.X1(1081, J$.Rt(1073, J$.M(1065, J$.R(1033, '_', _, 1), 'get', 0)(J$.R(1041, 'fallbackIoMap', fallbackIoMap, 0), J$.R(1049, 'word', word, 0), J$.R(1057, 'word', word, 0))));
                        } catch (J$e) {
                            J$.Ex(2289, J$e);
                        } finally {
                            if (J$.Fr(2297))
                                continue jalangiLabel45;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tonifyLetter(letter, tone) {
                jalangiLabel46:
                    while (true) {
                        try {
                            J$.Fe(1217, arguments.callee, this, arguments);
                            arguments = J$.N(1225, 'arguments', arguments, 4);
                            letter = J$.N(1233, 'letter', letter, 4);
                            tone = J$.N(1241, 'tone', tone, 4);
                            J$.N(1249, 'keys', keys, 0);
                            var keys = J$.X1(1153, J$.W(1145, 'keys', J$.B(34, '+', J$.B(26, '+', J$.R(1121, 'letter', letter, 0), J$.T(1129, '.', 21, false), 0), J$.R(1137, 'tone', tone, 0), 0), keys, 1));
                            return J$.X1(1209, J$.Rt(1201, J$.M(1193, J$.R(1161, '_', _, 1), 'get', 0)(J$.R(1169, 'toneMap', toneMap, 1), J$.R(1177, 'keys', keys, 0), J$.R(1185, 'letter', letter, 0))));
                        } catch (J$e) {
                            J$.Ex(2305, J$e);
                        } finally {
                            if (J$.Fr(2313))
                                continue jalangiLabel46;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function tonifyEnding(ending, tone) {
                jalangiLabel48:
                    while (true) {
                        try {
                            J$.Fe(1497, arguments.callee, this, arguments);
                            arguments = J$.N(1505, 'arguments', arguments, 4);
                            ending = J$.N(1513, 'ending', ending, 4);
                            tone = J$.N(1521, 'tone', tone, 4);
                            J$.N(1529, 'letter', letter, 0);
                            var letter;
                            J$.X1(1385, J$.M(1377, J$.R(1257, '_', _, 1), 'forEach', 0)(J$.R(1265, 'lettersToTonify', lettersToTonify, 1), J$.T(1369, function (letterAndPattern) {
                                jalangiLabel47:
                                    while (true) {
                                        try {
                                            J$.Fe(1345, arguments.callee, this, arguments);
                                            arguments = J$.N(1353, 'arguments', arguments, 4);
                                            letterAndPattern = J$.N(1361, 'letterAndPattern', letterAndPattern, 4);
                                            if (J$.X1(2321, J$.C(40, J$.C(32, J$.U(42, '!', J$.R(1273, 'letter', letter, 0))) ? J$.M(1305, J$.R(1281, 'ending', ending, 0), 'match', 0)(J$.G(1297, J$.R(1289, 'letterAndPattern', letterAndPattern, 0), 'pattern', 0)) : J$._()))) {
                                                J$.X1(1337, letter = J$.W(1329, 'letter', J$.G(1321, J$.R(1313, 'letterAndPattern', letterAndPattern, 0), 'letter', 0), letter, 0));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2329, J$e);
                                        } finally {
                                            if (J$.Fr(2337))
                                                continue jalangiLabel47;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1345)));
                            if (J$.X1(2345, J$.C(48, J$.U(50, '!', J$.R(1393, 'letter', letter, 0))))) {
                                return J$.X1(1417, J$.Rt(1409, J$.R(1401, 'ending', ending, 0)));
                            }
                            return J$.X1(1489, J$.Rt(1481, J$.M(1473, J$.R(1425, 'ending', ending, 0), 'replace', 0)(J$.R(1433, 'letter', letter, 0), J$.F(1465, J$.R(1441, 'tonifyLetter', tonifyLetter, 1), 0)(J$.R(1449, 'letter', letter, 0), J$.R(1457, 'tone', tone, 0)))));
                        } catch (J$e) {
                            J$.Ex(2353, J$e);
                        } finally {
                            if (J$.Fr(2361))
                                continue jalangiLabel48;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function stripToneNumber(word) {
                jalangiLabel49:
                    while (true) {
                        try {
                            J$.Fe(1585, arguments.callee, this, arguments);
                            arguments = J$.N(1593, 'arguments', arguments, 4);
                            word = J$.N(1601, 'word', word, 4);
                            return J$.X1(1577, J$.Rt(1569, J$.M(1561, J$.R(1537, '_', _, 1), 'trim', 0)(J$.R(1545, 'word', word, 0), J$.R(1553, 'toneNumbers', toneNumbers, 1))));
                        } catch (J$e) {
                            J$.Ex(2369, J$e);
                        } finally {
                            if (J$.Fr(2377))
                                continue jalangiLabel49;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function splitPhraseIntoWords(phrase) {
                jalangiLabel50:
                    while (true) {
                        try {
                            J$.Fe(1649, arguments.callee, this, arguments);
                            arguments = J$.N(1657, 'arguments', arguments, 4);
                            phrase = J$.N(1665, 'phrase', phrase, 4);
                            return J$.X1(1641, J$.Rt(1633, J$.M(1625, J$.R(1609, 'phrase', phrase, 0), 'split', 0)(J$.T(1617, ' ', 21, false))));
                        } catch (J$e) {
                            J$.Ex(2385, J$e);
                        } finally {
                            if (J$.Fr(2393))
                                continue jalangiLabel50;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getTone(word) {
                jalangiLabel51:
                    while (true) {
                        try {
                            J$.Fe(1801, arguments.callee, this, arguments);
                            arguments = J$.N(1809, 'arguments', arguments, 4);
                            word = J$.N(1817, 'word', word, 4);
                            J$.N(1825, 'lastCharacter', lastCharacter, 0);
                            var lastCharacter = J$.X1(1729, J$.W(1721, 'lastCharacter', J$.F(1713, J$.R(1673, 'parseInt', parseInt, 2), 0)(J$.M(1697, J$.R(1681, '_', _, 1), 'last', 0)(J$.R(1689, 'word', word, 0)), J$.T(1705, 10, 22, false)), lastCharacter, 1));
                            return J$.X1(1793, J$.Rt(1785, J$.X1(2401, J$.C(56, J$.M(1761, J$.R(1737, '_', _, 1), 'includes', 0)(J$.R(1745, 'toneNumbers', toneNumbers, 1), J$.R(1753, 'lastCharacter', lastCharacter, 0)))) ? J$.R(1769, 'lastCharacter', lastCharacter, 0) : J$.T(1777, null, 25, false)));
                        } catch (J$e) {
                            J$.Ex(2409, J$e);
                        } finally {
                            if (J$.Fr(2417))
                                continue jalangiLabel51;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function getEnding(word) {
                jalangiLabel53:
                    while (true) {
                        try {
                            J$.Fe(2001, arguments.callee, this, arguments);
                            arguments = J$.N(2009, 'arguments', arguments, 4);
                            word = J$.N(2017, 'word', word, 4);
                            J$.N(2025, 'ending', ending, 0);
                            var ending = J$.X1(1849, J$.W(1841, 'ending', J$.T(1833, null, 25, false), ending, 1));
                            J$.X1(1969, J$.M(1961, J$.R(1857, '_', _, 1), 'forEach', 0)(J$.R(1865, 'endings', endings, 1), J$.T(1953, function (pattern, plainEnding) {
                                jalangiLabel52:
                                    while (true) {
                                        try {
                                            J$.Fe(1921, arguments.callee, this, arguments);
                                            arguments = J$.N(1929, 'arguments', arguments, 4);
                                            pattern = J$.N(1937, 'pattern', pattern, 4);
                                            plainEnding = J$.N(1945, 'plainEnding', plainEnding, 4);
                                            if (J$.X1(2425, J$.C(64, J$.M(1889, J$.R(1873, 'word', word, 0), 'match', 0)(J$.R(1881, 'pattern', pattern, 0))))) {
                                                J$.X1(1913, ending = J$.W(1905, 'ending', J$.R(1897, 'plainEnding', plainEnding, 0), ending, 0));
                                            }
                                        } catch (J$e) {
                                            J$.Ex(2433, J$e);
                                        } finally {
                                            if (J$.Fr(2441))
                                                continue jalangiLabel52;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1921)));
                            return J$.X1(1993, J$.Rt(1985, J$.R(1977, 'ending', ending, 0)));
                        } catch (J$e) {
                            J$.Ex(2449, J$e);
                        } finally {
                            if (J$.Fr(2457))
                                continue jalangiLabel53;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2041, '__secret__S$', __secret__S$, 0);
            J$.N(2049, '__secret__traits__', __secret__traits__, 0);
            J$.N(2057, '_', _, 0);
            J$.N(2065, 'endings', endings, 0);
            J$.N(2073, 'lettersToTonify', lettersToTonify, 0);
            J$.N(2081, 'toneMap', toneMap, 0);
            J$.N(2089, 'toneNumbers', toneNumbers, 0);
            tonifyPhrase = J$.N(2105, 'tonifyPhrase', J$.T(2097, tonifyPhrase, 12, false, 449), 0);
            tonifyWord = J$.N(2121, 'tonifyWord', J$.T(2113, tonifyWord, 12, false, 921), 0);
            getTonelessFallback = J$.N(2137, 'getTonelessFallback', J$.T(2129, getTonelessFallback, 12, false, 1089), 0);
            tonifyLetter = J$.N(2153, 'tonifyLetter', J$.T(2145, tonifyLetter, 12, false, 1217), 0);
            tonifyEnding = J$.N(2169, 'tonifyEnding', J$.T(2161, tonifyEnding, 12, false, 1497), 0);
            stripToneNumber = J$.N(2185, 'stripToneNumber', J$.T(2177, stripToneNumber, 12, false, 1585), 0);
            splitPhraseIntoWords = J$.N(2201, 'splitPhraseIntoWords', J$.T(2193, splitPhraseIntoWords, 12, false, 1649), 0);
            getTone = J$.N(2217, 'getTone', J$.T(2209, getTone, 12, false, 1801), 0);
            getEnding = J$.N(2233, 'getEnding', J$.T(2225, getEnding, 12, false, 2001), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var _ = J$.X1(113, J$.W(105, '_', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'lodash', 21, false)), _, 3));
            var endings = J$.X1(153, J$.W(145, 'endings', J$.F(137, J$.R(121, 'require', require, 2), 0)(J$.T(129, './lib/endings', 21, false)), endings, 3));
            var lettersToTonify = J$.X1(193, J$.W(185, 'lettersToTonify', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, './lib/letters-to-tonify', 21, false)), lettersToTonify, 3));
            var toneMap = J$.X1(233, J$.W(225, 'toneMap', J$.F(217, J$.R(201, 'require', require, 2), 0)(J$.T(209, './lib/tone-map', 21, false)), toneMap, 3));
            var toneNumbers = J$.X1(289, J$.W(281, 'toneNumbers', J$.T(273, [
                J$.T(241, 1, 22, false),
                J$.T(249, 2, 22, false),
                J$.T(257, 3, 22, false),
                J$.T(265, 4, 22, false)
            ], 10, false), toneNumbers, 3));
            J$.X1(321, J$.P(313, J$.R(297, 'module', module, 2), 'exports', J$.R(305, 'tonifyPhrase', tonifyPhrase, 1), 0));
        } catch (J$e) {
            J$.Ex(2465, J$e);
        } finally {
            if (J$.Sr(2473)) {
                J$.L();
                continue jalangiLabel54;
            } else {
                J$.L();
                break jalangiLabel54;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
