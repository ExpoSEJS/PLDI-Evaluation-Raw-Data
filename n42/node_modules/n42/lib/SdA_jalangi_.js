J$.iids = {"8":[18,13,18,28],"9":[1,20,1,27],"10":[16,30,16,55],"16":[24,13,24,28],"17":[1,28,1,32],"18":[16,57,16,69],"24":[16,30,16,55],"25":[1,20,1,33],"32":[42,26,42,44],"33":[1,20,1,33],"34":[16,57,16,69],"40":[41,13,41,28],"41":[1,20,1,33],"42":[18,13,18,28],"48":[47,25,47,35],"49":[2,26,2,38],"50":[21,42,21,56],"56":[39,30,39,55],"57":[2,26,2,45],"58":[24,13,24,28],"64":[58,21,58,31],"65":[2,26,2,45],"66":[27,45,27,59],"72":[66,30,66,55],"73":[2,26,2,45],"74":[34,21,34,50],"81":[3,14,3,21],"82":[39,30,39,55],"89":[3,22,3,33],"90":[39,57,39,69],"97":[3,14,3,34],"105":[3,14,3,41],"106":[39,57,39,69],"113":[3,14,3,41],"114":[41,13,41,28],"121":[3,14,3,41],"122":[42,26,42,44],"129":[4,14,4,21],"130":[44,45,44,59],"137":[4,22,4,33],"138":[47,25,47,35],"145":[4,14,4,34],"146":[47,37,47,40],"153":[4,14,4,41],"161":[4,14,4,41],"162":[47,37,47,40],"169":[4,14,4,41],"170":[56,21,56,50],"177":[5,13,5,20],"178":[58,21,58,31],"185":[5,21,5,30],"186":[58,33,58,36],"193":[5,13,5,31],"201":[5,13,5,31],"202":[58,33,58,36],"209":[5,13,5,31],"210":[60,15,60,19],"217":[6,19,6,26],"218":[66,30,66,55],"225":[6,27,6,45],"226":[66,57,66,69],"233":[6,19,6,46],"241":[6,19,6,46],"242":[66,57,66,69],"249":[6,19,6,46],"257":[7,10,7,17],"265":[7,18,7,27],"273":[7,10,7,28],"281":[7,10,7,28],"289":[7,10,7,28],"297":[8,27,8,34],"305":[8,35,8,61],"313":[8,27,8,62],"321":[8,27,8,62],"329":[8,27,8,62],"337":[10,16,10,20],"345":[10,16,10,20],"353":[10,16,10,20],"361":[11,5,11,9],"369":[11,14,11,19],"377":[11,5,11,19],"385":[11,5,11,20],"393":[12,5,12,9],"401":[12,14,12,19],"409":[12,5,12,19],"417":[12,5,12,20],"425":[13,5,13,9],"433":[13,26,13,28],"441":[13,5,13,28],"449":[13,5,13,29],"457":[14,5,14,9],"465":[14,21,14,23],"473":[14,5,14,23],"481":[14,5,14,24],"489":[15,5,15,9],"497":[15,20,15,36],"505":[15,20,15,43],"513":[15,5,15,43],"521":[15,5,15,44],"529":[16,27,16,28],"537":[16,27,16,28],"545":[16,27,16,28],"553":[16,30,16,40],"561":[16,43,16,47],"569":[16,43,16,55],"585":[16,57,16,67],"593":[16,57,16,69],"609":[18,13,18,23],"617":[18,27,18,28],"625":[19,25,19,29],"633":[19,25,19,29],"641":[19,13,19,30],"649":[21,25,21,41],"657":[21,42,21,52],"665":[21,55,21,56],"673":[21,25,21,57],"681":[21,25,21,57],"689":[21,13,21,58],"697":[24,13,24,23],"705":[24,27,24,28],"713":[25,26,25,30],"721":[25,26,25,32],"729":[25,26,25,32],"737":[25,13,25,33],"745":[27,26,27,30],"753":[27,26,27,44],"761":[27,45,27,55],"769":[27,58,27,59],"777":[27,26,27,60],"785":[27,26,27,76],"787":[27,26,27,74],"793":[27,26,27,76],"801":[27,13,27,77],"809":[29,32,29,43],"817":[29,44,29,54],"825":[29,56,29,65],"833":[29,67,29,83],"841":[29,84,29,94],"849":[29,67,29,95],"857":[29,97,29,102],"865":[29,97,29,110],"873":[29,28,29,111],"881":[29,28,29,111],"889":[29,28,29,111],"897":[30,9,30,13],"905":[30,9,30,27],"913":[30,33,30,45],"921":[30,9,30,46],"923":[30,9,30,32],"929":[30,9,30,47],"937":[31,27,31,29],"945":[31,30,31,40],"953":[31,42,31,51],"961":[31,53,31,69],"969":[31,70,31,80],"977":[31,53,31,81],"985":[31,83,31,95],"993":[31,83,31,97],"1001":[31,99,31,111],"1009":[31,99,31,113],"1017":[31,23,31,114],"1025":[31,23,31,114],"1033":[31,23,31,114],"1041":[32,9,32,13],"1049":[32,9,32,22],"1057":[32,28,32,35],"1065":[32,9,32,36],"1067":[32,9,32,27],"1073":[32,9,32,37],"1081":[34,21,34,25],"1089":[34,21,34,39],"1097":[34,21,34,46],"1105":[34,49,34,50],"1113":[34,21,34,50],"1121":[34,21,34,50],"1129":[35,5,35,9],"1137":[35,25,35,44],"1145":[35,45,35,49],"1153":[35,45,35,63],"1161":[35,64,35,73],"1169":[35,45,35,74],"1177":[35,45,35,88],"1185":[35,90,35,94],"1193":[35,90,35,96],"1201":[35,98,35,114],"1209":[35,115,35,124],"1217":[35,98,35,125],"1225":[35,127,35,132],"1233":[35,21,35,133],"1241":[35,5,35,133],"1249":[35,5,35,134],"1257":[9,1,36,2],"1265":[9,1,36,2],"1273":[9,1,36,2],"1281":[9,1,36,2],"1289":[9,1,36,2],"1297":[9,1,36,2],"1305":[9,1,36,2],"1313":[9,1,36,2],"1321":[9,1,36,2],"1329":[9,1,36,2],"1337":[9,1,36,2],"1345":[9,1,36,2],"1353":[9,1,36,2],"1361":[9,1,36,2],"1369":[37,1,37,4],"1377":[37,1,37,14],"1385":[38,16,38,20],"1393":[38,16,38,20],"1401":[38,16,38,20],"1409":[39,27,39,28],"1417":[39,27,39,28],"1425":[39,27,39,28],"1433":[39,30,39,40],"1441":[39,43,39,47],"1449":[39,43,39,55],"1465":[39,57,39,67],"1473":[39,57,39,69],"1489":[41,13,41,23],"1497":[41,27,41,28],"1505":[42,26,42,31],"1513":[42,35,42,44],"1521":[42,47,42,52],"1529":[42,55,42,59],"1537":[42,55,42,61],"1545":[42,26,42,61],"1553":[42,13,42,62],"1561":[44,26,44,30],"1569":[44,26,44,44],"1577":[44,45,44,55],"1585":[44,58,44,59],"1593":[44,26,44,60],"1601":[44,75,44,85],"1609":[44,26,44,86],"1611":[44,26,44,74],"1617":[44,26,44,86],"1625":[44,13,44,87],"1633":[46,18,46,22],"1641":[46,18,46,31],"1649":[46,32,46,42],"1657":[46,18,46,43],"1665":[46,18,46,43],"1673":[46,18,46,43],"1681":[47,22,47,23],"1689":[47,22,47,23],"1697":[47,22,47,23],"1705":[47,25,47,26],"1713":[47,29,47,35],"1729":[47,37,47,38],"1737":[47,37,47,40],"1753":[48,13,48,15],"1761":[48,22,48,24],"1769":[48,26,48,41],"1777":[48,43,48,53],"1785":[48,13,48,54],"1787":[48,13,48,21],"1793":[48,13,48,55],"1801":[50,9,50,13],"1809":[50,9,50,27],"1817":[50,28,50,38],"1825":[50,9,50,39],"1833":[50,44,50,46],"1841":[50,44,50,48],"1849":[50,9,50,48],"1857":[50,9,50,49],"1865":[51,9,51,13],"1873":[51,9,51,27],"1881":[51,28,51,38],"1889":[51,9,51,39],"1897":[51,44,51,46],"1905":[51,44,51,52],"1913":[51,9,51,52],"1921":[51,9,51,53],"1929":[37,26,53,2],"1937":[37,26,53,2],"1945":[37,26,53,2],"1953":[37,26,53,2],"1961":[37,26,53,2],"1969":[37,26,53,2],"1977":[37,26,53,2],"1985":[37,26,53,2],"1993":[37,26,53,2],"2001":[37,26,53,2],"2009":[37,26,53,2],"2017":[37,26,53,2],"2025":[37,1,53,2],"2033":[37,1,53,3],"2041":[54,1,54,4],"2049":[54,1,54,14],"2057":[55,16,55,20],"2065":[55,16,55,20],"2073":[55,16,55,20],"2081":[56,21,56,25],"2089":[56,21,56,39],"2097":[56,21,56,46],"2105":[56,49,56,50],"2113":[56,21,56,50],"2121":[56,21,56,50],"2129":[57,22,57,26],"2137":[57,22,57,40],"2145":[57,41,57,50],"2153":[57,22,57,51],"2161":[57,22,57,67],"2163":[57,22,57,65],"2169":[57,22,57,67],"2177":[57,22,57,67],"2185":[58,18,58,19],"2193":[58,18,58,19],"2201":[58,18,58,19],"2209":[58,21,58,22],"2217":[58,25,58,31],"2233":[58,33,58,34],"2241":[58,33,58,36],"2257":[59,9,59,13],"2265":[59,9,59,22],"2273":[59,29,59,31],"2281":[59,33,59,37],"2289":[59,39,59,49],"2297":[59,9,59,50],"2299":[59,9,59,28],"2305":[59,9,59,51],"2313":[60,15,60,19],"2321":[60,9,60,11],"2329":[60,9,60,19],"2337":[60,9,60,20],"2345":[54,26,62,2],"2353":[54,26,62,2],"2361":[54,26,62,2],"2369":[54,26,62,2],"2377":[54,26,62,2],"2385":[54,26,62,2],"2393":[54,26,62,2],"2401":[54,26,62,2],"2409":[54,26,62,2],"2417":[54,1,62,2],"2425":[54,1,62,3],"2433":[63,1,63,4],"2441":[63,1,63,14],"2449":[64,16,64,20],"2457":[64,16,64,20],"2465":[64,16,64,20],"2473":[65,22,65,23],"2481":[65,22,65,23],"2489":[65,22,65,23],"2497":[66,27,66,28],"2505":[66,27,66,28],"2513":[66,27,66,28],"2521":[66,30,66,40],"2529":[66,43,66,47],"2537":[66,43,66,55],"2553":[66,57,66,67],"2561":[66,57,66,69],"2577":[67,28,67,32],"2585":[67,28,67,46],"2593":[67,47,67,57],"2601":[67,28,67,58],"2609":[67,28,67,58],"2617":[67,28,67,58],"2625":[68,22,68,34],"2633":[68,42,68,52],"2641":[68,22,68,53],"2643":[68,22,68,41],"2649":[68,22,68,53],"2657":[68,9,68,54],"2665":[70,12,70,16],"2673":[70,12,70,25],"2681":[70,34,70,44],"2689":[70,12,70,45],"2691":[70,12,70,33],"2697":[70,12,70,45],"2705":[70,5,70,46],"2713":[63,25,71,2],"2721":[63,25,71,2],"2729":[63,25,71,2],"2737":[63,25,71,2],"2745":[63,25,71,2],"2753":[63,25,71,2],"2761":[63,25,71,2],"2769":[63,25,71,2],"2777":[63,1,71,2],"2785":[63,1,71,3],"2793":[72,1,72,7],"2801":[72,18,72,21],"2809":[72,1,72,21],"2817":[72,1,72,22],"2825":[1,1,72,22],"2833":[1,1,72,22],"2841":[1,1,72,22],"2849":[1,1,72,22],"2857":[1,1,72,22],"2865":[1,1,72,22],"2873":[1,1,72,22],"2881":[1,1,72,22],"2889":[1,1,72,22],"2897":[9,1,36,2],"2905":[1,1,72,22],"2913":[18,9,22,10],"2921":[24,9,28,10],"2929":[16,5,33,6],"2937":[16,5,33,6],"2945":[9,1,36,2],"2953":[9,1,36,2],"2961":[42,26,42,61],"2969":[41,9,45,10],"2977":[47,9,49,10],"2985":[47,9,49,10],"2993":[39,5,52,6],"3001":[39,5,52,6],"3009":[37,26,53,2],"3017":[37,26,53,2],"3025":[58,5,61,6],"3033":[58,5,61,6],"3041":[54,26,62,2],"3049":[54,26,62,2],"3057":[66,5,69,6],"3065":[66,5,69,6],"3073":[63,25,71,2],"3081":[63,25,71,2],"3089":[1,1,72,22],"3097":[1,1,72,22],"nBranches":18,"originalCodeFileName":"/home/blake/ExpoSE/Targets/n42/node_modules/n42/lib/SdA.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/n42/node_modules/n42/lib/SdA_jalangi_.js","code":"/**\n *  Stacked denoised auto encoder\n *\n *  @module n42\n *  @class  SdA\n *  @author Kai Sasaki\n *  @since  2014/01/27\n *\n */\n\nvar Mattix = require('sylvester').Matrix;\nvar Vector = require('sylvester').Vector;\nvar utils  = require('./utils');\n\nvar HiddenLayer = require('./HiddenLayer.js');\nvar dA          = require('./dA.js');\nvar LogisticsRegression = require('./LogisticsRegression.js');\n\n/**\n *   Stacked autoencoder class\n *   \n *   @class SdA\n *   @constructor\n *\n */\n\nfunction SdA(input, label, nIns, hiddenLayerSizes, nOuts) {\n    var self = this;\n    \n    /**\n     *  input data. This type is defined in sylvester library\n     *\n     *  @property x\n     *  @type     Matrix\n     */\n    self.x = input;\n\n    /**\n     *  label data. This type is defined in sylvester library\n     *\n     *  @property y\n     *  @type     Matrix\n     */\n    self.y = label;\n\n    /**\n     *  hidden layers which activations are sigmoid function\n     *\n     *  @property sigmoidLayers\n     *  @type     Array\n     */\n    self.sigmoidLayers = [];\n    // Denoised autoencoder layer is used for only training\n    // These layer shares own weight parameter with sigmoidLayers\n    self.dALayers      = [];\n    \n    /**\n     *  number of hidden layers\n     *\n     *  @property nLayers\n     *  @type     int\n     */\n    self.nLayers       = hiddenLayerSizes.length;\n\n    // Construct each layers\n    for (var layerIndex = 0; layerIndex < self.nLayers; layerIndex++) {\n\n        // Select input size of this layer\n        var inputSize;\n        if (layerIndex == 0) {\n            inputSize = nIns;\n        } else {\n            inputSize = hiddenLayerSizes[layerIndex-1];\n        }\n\n        var layerInput;\n        // Select input object of this layer\n        if (layerIndex == 0) {\n            layerInput = self.x;\n        } else {\n            layerInput = self.sigmoidLayers[layerIndex-1].sampleHGivenV();\n        }\n        // Construct sigmoid layer which is used for prediction\n        var sigmoidLayer = new HiddenLayer(layerInput,\n                                           inputSize,\n                                           hiddenLayerSizes[layerIndex],\n                                           utils.sigmoid);\n        self.sigmoidLayers.push(sigmoidLayer);\n        // Construct denoised autoencoder layer which is used for training\n        var dALayer = new dA(layerInput,\n                             inputSize,\n                             hiddenLayerSizes[layerIndex],\n                             sigmoidLayer.W,\n                             sigmoidLayer.b);\n        self.dALayers.push(dALayer);\n    }\n\n    var lastIndex = self.sigmoidLayers.length-1;\n    self.logLayer = new LogisticsRegression(self.sigmoidLayers[lastIndex].sampleHGivenV,\n                                            self.y,\n                                            hiddenLayerSizes[lastIndex],\n                                            nOuts);\n}\n\n\n/**\n *   Training hidden layers with unsupervised learning\n *   \n *   @method pretrain\n *   @param  lr {float} learning rate\n *   @param  corruptionLevel {float} the standard deviation which is used by denoised autoencoder\n *   @param  epochs {int} the number of times of running gradient decent\n */\nSdA.prototype.pretrain = function(lr, corruptionLevel, epochs, input) {\n    var self = this;\n    // Training each layer by using denoised autoencoder with unsupervised learning\n\n    for (var layerIndex = 0; layerIndex < self.nLayers; layerIndex++) {\n        var layerInput;\n        if (layerIndex == 0) {\n            layerInput = (input != undefined)? input: self.x;\n        } else {\n            layerInput = self.sigmoidLayers[layerIndex-1].sampleHGivenV(layerIndex);\n        }\n\n        var da = self.dALayers[layerIndex];\n\n        for (var i = 0; i < epochs; i++) {\n            da.train(lr, corruptionLevel, layerInput);\n        }\n\n        self.sigmoidLayers[layerIndex].W = da.W;\n        self.sigmoidLayers[layerIndex].b = da.hBias;\n    }\n\n}\n\n/**\n *   Training logistics regression algorithm which is on output layer\n *   @method train\n *   @param  lr {float} learning rate\n *   @param  epochs {int} the number of times of running gradient decent\n */\nSdA.prototype.finetune = function(lr, epochs) {\n    var self = this;\n    var lastIndex = self.sigmoidLayers.length-1;\n    var layerInput = self.sigmoidLayers[lastIndex].sampleHGivenV();\n    for (var i = 0; i < epochs; i++) {\n        self.logLayer.train(lr, 0.01, layerInput);\n        lr *= 0.95;\n    }\n}\n\n/**\n *   Predict label with training data\n *\n *   @method predict\n *   @param  x {Matrix} input data\n */\nSdA.prototype.predict = function(x) {\n    var self = this;\n    var layerInput = x;\n    \n    for (var layerIndex = 0; layerIndex < self.nLayers; layerIndex++) {\n        var sigmoidLayer = self.sigmoidLayers[layerIndex];\n        layerInput = sigmoidLayer.output(layerInput);\n    }\n\n    return self.logLayer.predict(layerInput);\n}\n\n\nmodule.exports = SdA;"};
jalangiLabel285:
    while (true) {
        try {
            J$.Se(2825, '/home/blake/ExpoSE/Targets/n42/node_modules/n42/lib/SdA_jalangi_.js', '/home/blake/ExpoSE/Targets/n42/node_modules/n42/lib/SdA.js');
            function SdA(input, label, nIns, hiddenLayerSizes, nOuts) {
                jalangiLabel281:
                    while (true) {
                        try {
                            J$.Fe(1257, arguments.callee, this, arguments);
                            arguments = J$.N(1265, 'arguments', arguments, 4);
                            input = J$.N(1273, 'input', input, 4);
                            label = J$.N(1281, 'label', label, 4);
                            nIns = J$.N(1289, 'nIns', nIns, 4);
                            hiddenLayerSizes = J$.N(1297, 'hiddenLayerSizes', hiddenLayerSizes, 4);
                            nOuts = J$.N(1305, 'nOuts', nOuts, 4);
                            J$.N(1313, 'self', self, 0);
                            J$.N(1321, 'layerIndex', layerIndex, 0);
                            J$.N(1329, 'inputSize', inputSize, 0);
                            J$.N(1337, 'layerInput', layerInput, 0);
                            J$.N(1345, 'sigmoidLayer', sigmoidLayer, 0);
                            J$.N(1353, 'dALayer', dALayer, 0);
                            J$.N(1361, 'lastIndex', lastIndex, 0);
                            var self = J$.X1(353, J$.W(345, 'self', J$.R(337, 'this', this, 0), self, 1));
                            J$.X1(385, J$.P(377, J$.R(361, 'self', self, 0), 'x', J$.R(369, 'input', input, 0), 0));
                            J$.X1(417, J$.P(409, J$.R(393, 'self', self, 0), 'y', J$.R(401, 'label', label, 0), 0));
                            J$.X1(449, J$.P(441, J$.R(425, 'self', self, 0), 'sigmoidLayers', J$.T(433, [], 10, false), 0));
                            J$.X1(481, J$.P(473, J$.R(457, 'self', self, 0), 'dALayers', J$.T(465, [], 10, false), 0));
                            J$.X1(521, J$.P(513, J$.R(489, 'self', self, 0), 'nLayers', J$.G(505, J$.R(497, 'hiddenLayerSizes', hiddenLayerSizes, 0), 'length', 0), 0));
                            for (var layerIndex = J$.X1(545, J$.W(537, 'layerIndex', J$.T(529, 0, 22, false), layerIndex, 1)); J$.X1(2929, J$.C(24, J$.B(10, '<', J$.R(553, 'layerIndex', layerIndex, 0), J$.G(569, J$.R(561, 'self', self, 0), 'nLayers', 0), 0))); J$.X1(2937, J$.B(34, '-', layerIndex = J$.W(593, 'layerIndex', J$.B(26, '+', J$.U(18, '+', J$.R(585, 'layerIndex', layerIndex, 0)), J$.T(577, 1, 22, false), 0), layerIndex, 0), J$.T(601, 1, 22, false), 0))) {
                                var inputSize;
                                if (J$.X1(2913, J$.C(8, J$.B(42, '==', J$.R(609, 'layerIndex', layerIndex, 0), J$.T(617, 0, 22, false), 0)))) {
                                    J$.X1(641, inputSize = J$.W(633, 'inputSize', J$.R(625, 'nIns', nIns, 0), inputSize, 0));
                                } else {
                                    J$.X1(689, inputSize = J$.W(681, 'inputSize', J$.G(673, J$.R(649, 'hiddenLayerSizes', hiddenLayerSizes, 0), J$.B(50, '-', J$.R(657, 'layerIndex', layerIndex, 0), J$.T(665, 1, 22, false), 0), 4), inputSize, 0));
                                }
                                var layerInput;
                                if (J$.X1(2921, J$.C(16, J$.B(58, '==', J$.R(697, 'layerIndex', layerIndex, 0), J$.T(705, 0, 22, false), 0)))) {
                                    J$.X1(737, layerInput = J$.W(729, 'layerInput', J$.G(721, J$.R(713, 'self', self, 0), 'x', 0), layerInput, 0));
                                } else {
                                    J$.X1(801, layerInput = J$.W(793, 'layerInput', J$.M(785, J$.G(777, J$.G(753, J$.R(745, 'self', self, 0), 'sigmoidLayers', 0), J$.B(66, '-', J$.R(761, 'layerIndex', layerIndex, 0), J$.T(769, 1, 22, false), 0), 4), 'sampleHGivenV', 0)(), layerInput, 0));
                                }
                                var sigmoidLayer = J$.X1(889, J$.W(881, 'sigmoidLayer', J$.F(873, J$.R(809, 'HiddenLayer', HiddenLayer, 1), 1)(J$.R(817, 'layerInput', layerInput, 0), J$.R(825, 'inputSize', inputSize, 0), J$.G(849, J$.R(833, 'hiddenLayerSizes', hiddenLayerSizes, 0), J$.R(841, 'layerIndex', layerIndex, 0), 4), J$.G(865, J$.R(857, 'utils', utils, 1), 'sigmoid', 0)), sigmoidLayer, 1));
                                J$.X1(929, J$.M(921, J$.G(905, J$.R(897, 'self', self, 0), 'sigmoidLayers', 0), 'push', 0)(J$.R(913, 'sigmoidLayer', sigmoidLayer, 0)));
                                var dALayer = J$.X1(1033, J$.W(1025, 'dALayer', J$.F(1017, J$.R(937, 'dA', dA, 1), 1)(J$.R(945, 'layerInput', layerInput, 0), J$.R(953, 'inputSize', inputSize, 0), J$.G(977, J$.R(961, 'hiddenLayerSizes', hiddenLayerSizes, 0), J$.R(969, 'layerIndex', layerIndex, 0), 4), J$.G(993, J$.R(985, 'sigmoidLayer', sigmoidLayer, 0), 'W', 0), J$.G(1009, J$.R(1001, 'sigmoidLayer', sigmoidLayer, 0), 'b', 0)), dALayer, 1));
                                J$.X1(1073, J$.M(1065, J$.G(1049, J$.R(1041, 'self', self, 0), 'dALayers', 0), 'push', 0)(J$.R(1057, 'dALayer', dALayer, 0)));
                            }
                            var lastIndex = J$.X1(1121, J$.W(1113, 'lastIndex', J$.B(74, '-', J$.G(1097, J$.G(1089, J$.R(1081, 'self', self, 0), 'sigmoidLayers', 0), 'length', 0), J$.T(1105, 1, 22, false), 0), lastIndex, 1));
                            J$.X1(1249, J$.P(1241, J$.R(1129, 'self', self, 0), 'logLayer', J$.F(1233, J$.R(1137, 'LogisticsRegression', LogisticsRegression, 1), 1)(J$.G(1177, J$.G(1169, J$.G(1153, J$.R(1145, 'self', self, 0), 'sigmoidLayers', 0), J$.R(1161, 'lastIndex', lastIndex, 0), 4), 'sampleHGivenV', 0), J$.G(1193, J$.R(1185, 'self', self, 0), 'y', 0), J$.G(1217, J$.R(1201, 'hiddenLayerSizes', hiddenLayerSizes, 0), J$.R(1209, 'lastIndex', lastIndex, 0), 4), J$.R(1225, 'nOuts', nOuts, 0)), 0));
                        } catch (J$e) {
                            J$.Ex(2945, J$e);
                        } finally {
                            if (J$.Fr(2953))
                                continue jalangiLabel281;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2833, '__secret__S$', __secret__S$, 0);
            J$.N(2841, '__secret__traits__', __secret__traits__, 0);
            J$.N(2849, 'Mattix', Mattix, 0);
            J$.N(2857, 'Vector', Vector, 0);
            J$.N(2865, 'utils', utils, 0);
            J$.N(2873, 'HiddenLayer', HiddenLayer, 0);
            J$.N(2881, 'dA', dA, 0);
            J$.N(2889, 'LogisticsRegression', LogisticsRegression, 0);
            SdA = J$.N(2905, 'SdA', J$.T(2897, SdA, 12, false, 1257), 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var Mattix = J$.X1(121, J$.W(113, 'Mattix', J$.G(105, J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, 'sylvester', 21, false)), 'Matrix', 0), Mattix, 3));
            var Vector = J$.X1(169, J$.W(161, 'Vector', J$.G(153, J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, 'sylvester', 21, false)), 'Vector', 0), Vector, 3));
            var utils = J$.X1(209, J$.W(201, 'utils', J$.F(193, J$.R(177, 'require', require, 2), 0)(J$.T(185, './utils', 21, false)), utils, 3));
            var HiddenLayer = J$.X1(249, J$.W(241, 'HiddenLayer', J$.F(233, J$.R(217, 'require', require, 2), 0)(J$.T(225, './HiddenLayer.js', 21, false)), HiddenLayer, 3));
            var dA = J$.X1(289, J$.W(281, 'dA', J$.F(273, J$.R(257, 'require', require, 2), 0)(J$.T(265, './dA.js', 21, false)), dA, 3));
            var LogisticsRegression = J$.X1(329, J$.W(321, 'LogisticsRegression', J$.F(313, J$.R(297, 'require', require, 2), 0)(J$.T(305, './LogisticsRegression.js', 21, false)), LogisticsRegression, 3));
            J$.X1(2033, J$.P(2025, J$.G(1377, J$.R(1369, 'SdA', SdA, 1), 'prototype', 0), 'pretrain', J$.T(2017, function (lr, corruptionLevel, epochs, input) {
                jalangiLabel282:
                    while (true) {
                        try {
                            J$.Fe(1929, arguments.callee, this, arguments);
                            arguments = J$.N(1937, 'arguments', arguments, 4);
                            lr = J$.N(1945, 'lr', lr, 4);
                            corruptionLevel = J$.N(1953, 'corruptionLevel', corruptionLevel, 4);
                            epochs = J$.N(1961, 'epochs', epochs, 4);
                            input = J$.N(1969, 'input', input, 4);
                            J$.N(1977, 'self', self, 0);
                            J$.N(1985, 'layerIndex', layerIndex, 0);
                            J$.N(1993, 'layerInput', layerInput, 0);
                            J$.N(2001, 'da', da, 0);
                            J$.N(2009, 'i', i, 0);
                            var self = J$.X1(1401, J$.W(1393, 'self', J$.R(1385, 'this', this, 0), self, 1));
                            for (var layerIndex = J$.X1(1425, J$.W(1417, 'layerIndex', J$.T(1409, 0, 22, false), layerIndex, 1)); J$.X1(2993, J$.C(56, J$.B(82, '<', J$.R(1433, 'layerIndex', layerIndex, 0), J$.G(1449, J$.R(1441, 'self', self, 0), 'nLayers', 0), 0))); J$.X1(3001, J$.B(106, '-', layerIndex = J$.W(1473, 'layerIndex', J$.B(98, '+', J$.U(90, '+', J$.R(1465, 'layerIndex', layerIndex, 0)), J$.T(1457, 1, 22, false), 0), layerIndex, 0), J$.T(1481, 1, 22, false), 0))) {
                                var layerInput;
                                if (J$.X1(2969, J$.C(40, J$.B(114, '==', J$.R(1489, 'layerIndex', layerIndex, 0), J$.T(1497, 0, 22, false), 0)))) {
                                    J$.X1(1553, layerInput = J$.W(1545, 'layerInput', J$.X1(2961, J$.C(32, J$.B(122, '!=', J$.R(1505, 'input', input, 0), J$.T(1513, undefined, 24, false), 0))) ? J$.R(1521, 'input', input, 0) : J$.G(1537, J$.R(1529, 'self', self, 0), 'x', 0), layerInput, 0));
                                } else {
                                    J$.X1(1625, layerInput = J$.W(1617, 'layerInput', J$.M(1609, J$.G(1593, J$.G(1569, J$.R(1561, 'self', self, 0), 'sigmoidLayers', 0), J$.B(130, '-', J$.R(1577, 'layerIndex', layerIndex, 0), J$.T(1585, 1, 22, false), 0), 4), 'sampleHGivenV', 0)(J$.R(1601, 'layerIndex', layerIndex, 0)), layerInput, 0));
                                }
                                var da = J$.X1(1673, J$.W(1665, 'da', J$.G(1657, J$.G(1641, J$.R(1633, 'self', self, 0), 'dALayers', 0), J$.R(1649, 'layerIndex', layerIndex, 0), 4), da, 1));
                                for (var i = J$.X1(1697, J$.W(1689, 'i', J$.T(1681, 0, 22, false), i, 1)); J$.X1(2977, J$.C(48, J$.B(138, '<', J$.R(1705, 'i', i, 0), J$.R(1713, 'epochs', epochs, 0), 0))); J$.X1(2985, J$.B(162, '-', i = J$.W(1737, 'i', J$.B(154, '+', J$.U(146, '+', J$.R(1729, 'i', i, 0)), J$.T(1721, 1, 22, false), 0), i, 0), J$.T(1745, 1, 22, false), 0))) {
                                    J$.X1(1793, J$.M(1785, J$.R(1753, 'da', da, 0), 'train', 0)(J$.R(1761, 'lr', lr, 0), J$.R(1769, 'corruptionLevel', corruptionLevel, 0), J$.R(1777, 'layerInput', layerInput, 0)));
                                }
                                J$.X1(1857, J$.P(1849, J$.G(1825, J$.G(1809, J$.R(1801, 'self', self, 0), 'sigmoidLayers', 0), J$.R(1817, 'layerIndex', layerIndex, 0), 4), 'W', J$.G(1841, J$.R(1833, 'da', da, 0), 'W', 0), 0));
                                J$.X1(1921, J$.P(1913, J$.G(1889, J$.G(1873, J$.R(1865, 'self', self, 0), 'sigmoidLayers', 0), J$.R(1881, 'layerIndex', layerIndex, 0), 4), 'b', J$.G(1905, J$.R(1897, 'da', da, 0), 'hBias', 0), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(3009, J$e);
                        } finally {
                            if (J$.Fr(3017))
                                continue jalangiLabel282;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1929), 0));
            J$.X1(2425, J$.P(2417, J$.G(2049, J$.R(2041, 'SdA', SdA, 1), 'prototype', 0), 'finetune', J$.T(2409, function (lr, epochs) {
                jalangiLabel283:
                    while (true) {
                        try {
                            J$.Fe(2345, arguments.callee, this, arguments);
                            arguments = J$.N(2353, 'arguments', arguments, 4);
                            lr = J$.N(2361, 'lr', lr, 4);
                            epochs = J$.N(2369, 'epochs', epochs, 4);
                            J$.N(2377, 'self', self, 0);
                            J$.N(2385, 'lastIndex', lastIndex, 0);
                            J$.N(2393, 'layerInput', layerInput, 0);
                            J$.N(2401, 'i', i, 0);
                            var self = J$.X1(2073, J$.W(2065, 'self', J$.R(2057, 'this', this, 0), self, 1));
                            var lastIndex = J$.X1(2121, J$.W(2113, 'lastIndex', J$.B(170, '-', J$.G(2097, J$.G(2089, J$.R(2081, 'self', self, 0), 'sigmoidLayers', 0), 'length', 0), J$.T(2105, 1, 22, false), 0), lastIndex, 1));
                            var layerInput = J$.X1(2177, J$.W(2169, 'layerInput', J$.M(2161, J$.G(2153, J$.G(2137, J$.R(2129, 'self', self, 0), 'sigmoidLayers', 0), J$.R(2145, 'lastIndex', lastIndex, 0), 4), 'sampleHGivenV', 0)(), layerInput, 1));
                            for (var i = J$.X1(2201, J$.W(2193, 'i', J$.T(2185, 0, 22, false), i, 1)); J$.X1(3025, J$.C(64, J$.B(178, '<', J$.R(2209, 'i', i, 0), J$.R(2217, 'epochs', epochs, 0), 0))); J$.X1(3033, J$.B(202, '-', i = J$.W(2241, 'i', J$.B(194, '+', J$.U(186, '+', J$.R(2233, 'i', i, 0)), J$.T(2225, 1, 22, false), 0), i, 0), J$.T(2249, 1, 22, false), 0))) {
                                J$.X1(2305, J$.M(2297, J$.G(2265, J$.R(2257, 'self', self, 0), 'logLayer', 0), 'train', 0)(J$.R(2273, 'lr', lr, 0), J$.T(2281, 0.01, 22, false), J$.R(2289, 'layerInput', layerInput, 0)));
                                J$.X1(2337, lr = J$.W(2329, 'lr', J$.B(210, '*', J$.R(2321, 'lr', lr, 0), J$.T(2313, 0.95, 22, false), 0), lr, 0));
                            }
                        } catch (J$e) {
                            J$.Ex(3041, J$e);
                        } finally {
                            if (J$.Fr(3049))
                                continue jalangiLabel283;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2345), 0));
            J$.X1(2785, J$.P(2777, J$.G(2441, J$.R(2433, 'SdA', SdA, 1), 'prototype', 0), 'predict', J$.T(2769, function (x) {
                jalangiLabel284:
                    while (true) {
                        try {
                            J$.Fe(2713, arguments.callee, this, arguments);
                            arguments = J$.N(2721, 'arguments', arguments, 4);
                            x = J$.N(2729, 'x', x, 4);
                            J$.N(2737, 'self', self, 0);
                            J$.N(2745, 'layerInput', layerInput, 0);
                            J$.N(2753, 'layerIndex', layerIndex, 0);
                            J$.N(2761, 'sigmoidLayer', sigmoidLayer, 0);
                            var self = J$.X1(2465, J$.W(2457, 'self', J$.R(2449, 'this', this, 0), self, 1));
                            var layerInput = J$.X1(2489, J$.W(2481, 'layerInput', J$.R(2473, 'x', x, 0), layerInput, 1));
                            for (var layerIndex = J$.X1(2513, J$.W(2505, 'layerIndex', J$.T(2497, 0, 22, false), layerIndex, 1)); J$.X1(3057, J$.C(72, J$.B(218, '<', J$.R(2521, 'layerIndex', layerIndex, 0), J$.G(2537, J$.R(2529, 'self', self, 0), 'nLayers', 0), 0))); J$.X1(3065, J$.B(242, '-', layerIndex = J$.W(2561, 'layerIndex', J$.B(234, '+', J$.U(226, '+', J$.R(2553, 'layerIndex', layerIndex, 0)), J$.T(2545, 1, 22, false), 0), layerIndex, 0), J$.T(2569, 1, 22, false), 0))) {
                                var sigmoidLayer = J$.X1(2617, J$.W(2609, 'sigmoidLayer', J$.G(2601, J$.G(2585, J$.R(2577, 'self', self, 0), 'sigmoidLayers', 0), J$.R(2593, 'layerIndex', layerIndex, 0), 4), sigmoidLayer, 1));
                                J$.X1(2657, layerInput = J$.W(2649, 'layerInput', J$.M(2641, J$.R(2625, 'sigmoidLayer', sigmoidLayer, 0), 'output', 0)(J$.R(2633, 'layerInput', layerInput, 0)), layerInput, 0));
                            }
                            return J$.X1(2705, J$.Rt(2697, J$.M(2689, J$.G(2673, J$.R(2665, 'self', self, 0), 'logLayer', 0), 'predict', 0)(J$.R(2681, 'layerInput', layerInput, 0))));
                        } catch (J$e) {
                            J$.Ex(3073, J$e);
                        } finally {
                            if (J$.Fr(3081))
                                continue jalangiLabel284;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2713), 0));
            J$.X1(2817, J$.P(2809, J$.R(2793, 'module', module, 2), 'exports', J$.R(2801, 'SdA', SdA, 1), 0));
        } catch (J$e) {
            J$.Ex(3089, J$e);
        } finally {
            if (J$.Sr(3097)) {
                J$.L();
                continue jalangiLabel285;
            } else {
                J$.L();
                break jalangiLabel285;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
