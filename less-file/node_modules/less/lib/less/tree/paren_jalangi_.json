{"9":[1,20,1,27],"17":[1,28,1,32],"25":[1,20,1,33],"33":[1,20,1,33],"41":[1,20,1,33],"49":[2,26,2,38],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,12,3,19],"89":[3,20,3,28],"97":[3,12,3,29],"105":[3,12,3,29],"113":[3,12,3,29],"121":[5,5,5,9],"129":[5,18,5,22],"137":[5,5,5,22],"145":[5,5,5,23],"153":[4,13,6,2],"161":[4,13,6,2],"169":[4,13,6,2],"177":[4,13,6,2],"185":[4,13,6,2],"193":[4,13,6,2],"201":[7,1,7,6],"209":[7,23,7,27],"217":[7,19,7,29],"225":[7,1,7,29],"233":[7,1,7,30],"241":[8,1,8,6],"249":[8,1,8,16],"257":[8,24,8,31],"265":[8,1,8,31],"273":[8,1,8,32],"281":[9,1,9,6],"289":[9,1,9,16],"297":[10,5,10,11],"305":[10,16,10,19],"313":[10,5,10,20],"315":[10,5,10,15],"321":[10,5,10,21],"329":[11,5,11,9],"337":[11,5,11,15],"345":[11,23,11,30],"353":[11,32,11,38],"361":[11,5,11,39],"363":[11,5,11,22],"369":[11,5,11,40],"377":[12,5,12,11],"385":[12,16,12,19],"393":[12,5,12,20],"395":[12,5,12,15],"401":[12,5,12,21],"409":[9,26,13,2],"417":[9,26,13,2],"425":[9,26,13,2],"433":[9,26,13,2],"441":[9,26,13,2],"449":[9,1,13,2],"457":[9,1,13,3],"465":[14,1,14,6],"473":[14,1,14,16],"481":[15,16,15,21],"489":[15,22,15,26],"497":[15,22,15,32],"505":[15,38,15,45],"513":[15,22,15,46],"515":[15,22,15,37],"521":[15,12,15,47],"529":[15,12,15,47],"537":[15,5,15,48],"545":[14,24,16,2],"553":[14,24,16,2],"561":[14,24,16,2],"569":[14,24,16,2],"577":[14,1,16,2],"585":[14,1,16,3],"593":[17,1,17,7],"601":[17,18,17,23],"609":[17,1,17,23],"617":[17,1,17,24],"625":[1,1,17,24],"633":[1,1,17,24],"641":[1,1,17,24],"649":[1,1,17,24],"657":[1,1,17,24],"665":[4,13,6,2],"673":[4,13,6,2],"681":[9,26,13,2],"689":[9,26,13,2],"697":[14,24,16,2],"705":[14,24,16,2],"713":[1,1,17,24],"721":[1,1,17,24],"nBranches":0,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/paren.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/paren_jalangi_.js","code":"var Node = require(\"./node\");\n\nvar Paren = function (node) {\n    this.value = node;\n};\nParen.prototype = new Node();\nParen.prototype.type = \"Paren\";\nParen.prototype.genCSS = function (context, output) {\n    output.add('(');\n    this.value.genCSS(context, output);\n    output.add(')');\n};\nParen.prototype.eval = function (context) {\n    return new Paren(this.value.eval(context));\n};\nmodule.exports = Paren;\n"}