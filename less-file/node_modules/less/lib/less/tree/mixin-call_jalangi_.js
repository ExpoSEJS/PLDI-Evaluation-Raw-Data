J$.iids = {"8":[6,22,6,32],"9":[1,20,1,27],"10":[23,208,23,210],"16":[15,9,15,22],"17":[1,28,1,32],"18":[26,21,26,26],"24":[18,9,18,30],"25":[1,20,1,33],"26":[26,28,26,31],"32":[29,25,29,67],"33":[1,20,1,33],"40":[32,42,32,103],"41":[1,20,1,33],"42":[26,28,26,31],"48":[31,21,31,45],"49":[2,26,2,38],"50":[29,25,29,45],"56":[29,25,29,67],"57":[2,26,2,45],"58":[29,69,29,72],"64":[36,38,36,95],"65":[2,26,2,45],"72":[35,17,35,37],"73":[2,26,2,45],"74":[29,69,29,72],"80":[26,21,26,26],"81":[3,12,3,19],"82":[40,17,40,57],"88":[39,13,39,53],"89":[3,20,3,28],"90":[47,17,47,42],"96":[41,24,41,42],"97":[3,12,3,29],"98":[47,44,47,47],"104":[40,17,40,57],"105":[3,42,3,49],"112":[39,13,39,53],"113":[3,50,3,62],"114":[47,44,47,47],"120":[50,13,50,56],"121":[3,42,3,63],"122":[52,25,52,44],"128":[52,25,52,44],"129":[3,83,3,90],"130":[52,46,52,49],"136":[50,13,50,56],"137":[3,91,3,111],"144":[47,17,47,42],"145":[3,83,3,112],"146":[52,46,52,49],"152":[73,75,73,129],"153":[3,128,3,135],"154":[65,17,65,42],"160":[73,25,73,130],"161":[3,136,3,158],"162":[65,44,65,47],"168":[73,25,73,130],"169":[3,128,3,159],"176":[72,29,72,54],"177":[3,12,3,29],"178":[65,44,65,47],"184":[78,21,78,32],"185":[3,12,3,29],"186":[66,13,66,97],"192":[86,25,86,63],"193":[3,42,3,63],"194":[68,25,68,42],"200":[81,21,81,51],"201":[3,42,3,63],"202":[68,44,68,47],"208":[68,25,68,42],"209":[3,83,3,112],"216":[98,25,98,46],"217":[3,83,3,112],"218":[68,44,68,47],"224":[105,21,105,57],"225":[3,128,3,159],"226":[72,29,72,54],"232":[101,17,101,35],"233":[3,128,3,159],"234":[72,56,72,59],"240":[116,21,116,73],"241":[5,5,5,9],"248":[120,47,120,77],"249":[5,25,5,33],"250":[72,56,72,59],"256":[119,29,119,64],"257":[5,34,5,42],"258":[73,27,73,59],"264":[116,21,116,73],"265":[5,21,5,43],"266":[73,25,73,60],"272":[114,25,114,46],"273":[5,5,5,43],"274":[73,64,73,130],"280":[137,17,137,22],"281":[5,5,5,44],"282":[86,25,86,63],"288":[66,13,66,97],"289":[6,5,6,9],"290":[98,25,98,46],"296":[65,17,65,42],"297":[6,22,6,26],"298":[98,48,98,51],"304":[142,9,142,19],"305":[6,30,6,32],"312":[161,21,161,43],"313":[6,5,6,32],"314":[98,48,98,51],"320":[160,9,160,32],"321":[6,5,6,33],"322":[99,17,99,45],"328":[170,13,170,19],"329":[7,5,7,9],"330":[101,17,101,35],"336":[173,13,173,26],"337":[7,18,7,23],"338":[105,21,105,53],"344":[168,50,168,54],"345":[7,5,7,23],"346":[105,21,105,57],"353":[7,5,7,24],"354":[108,34,108,110],"361":[8,5,8,9],"362":[108,34,108,116],"369":[8,28,8,43],"370":[114,25,114,46],"377":[8,5,8,43],"378":[114,48,114,51],"385":[8,5,8,44],"393":[9,5,9,9],"394":[114,48,114,51],"401":[9,22,9,31],"402":[116,21,116,42],"409":[9,5,9,31],"410":[116,46,116,73],"417":[9,5,9,32],"418":[119,31,119,63],"425":[10,5,10,9],"426":[119,29,119,64],"433":[10,22,10,26],"434":[145,22,145,82],"441":[10,5,10,26],"442":[145,22,145,88],"449":[10,5,10,27],"450":[152,22,152,68],"457":[4,17,11,2],"458":[161,21,161,43],"465":[4,17,11,2],"466":[161,45,161,48],"473":[4,17,11,2],"481":[4,17,11,2],"482":[161,45,161,48],"489":[4,17,11,2],"490":[168,12,168,46],"497":[4,17,11,2],"498":[171,25,171,37],"505":[4,17,11,2],"506":[171,25,171,37],"513":[4,17,11,2],"514":[174,25,174,40],"521":[4,17,11,2],"522":[176,25,176,30],"529":[4,17,11,2],"530":[168,12,179,24],"537":[12,1,12,10],"538":[168,12,179,30],"545":[12,27,12,31],"553":[12,23,12,33],"561":[12,1,12,33],"569":[12,1,12,34],"577":[13,1,13,10],"585":[13,1,13,20],"593":[13,28,13,39],"601":[13,1,13,39],"609":[13,1,13,40],"617":[14,1,14,10],"625":[14,1,14,20],"633":[15,9,15,13],"641":[15,9,15,22],"649":[16,9,16,13],"657":[16,25,16,32],"665":[16,39,16,43],"673":[16,39,16,52],"681":[16,25,16,53],"683":[16,25,16,38],"689":[16,9,16,53],"697":[16,9,16,54],"705":[18,9,18,13],"713":[18,9,18,23],"721":[18,9,18,30],"729":[19,9,19,13],"737":[19,26,19,33],"745":[19,45,19,49],"753":[19,45,19,59],"761":[19,26,19,60],"763":[19,26,19,44],"769":[19,9,19,60],"777":[19,9,19,61],"785":[14,30,21,2],"793":[14,30,21,2],"801":[14,30,21,2],"809":[14,30,21,2],"817":[14,1,21,2],"825":[14,1,21,3],"833":[22,1,22,10],"841":[22,1,22,20],"849":[23,42,23,44],"857":[23,69,23,71],"865":[23,81,23,86],"873":[23,135,23,137],"881":[23,168,23,170],"889":[23,209,23,210],"897":[23,222,23,223],"905":[23,235,23,236],"913":[23,249,23,250],"921":[23,42,23,44],"929":[23,42,23,44],"937":[23,69,23,71],"945":[23,69,23,71],"953":[23,81,23,86],"961":[23,81,23,86],"969":[23,135,23,137],"977":[23,135,23,137],"985":[23,168,23,170],"993":[23,168,23,170],"1001":[23,208,23,210],"1009":[23,208,23,210],"1017":[23,222,23,223],"1025":[23,222,23,223],"1033":[23,235,23,236],"1041":[23,235,23,236],"1049":[23,249,23,250],"1057":[23,249,23,250],"1065":[26,18,26,19],"1073":[26,18,26,19],"1081":[26,21,26,22],"1089":[26,25,26,26],"1105":[26,28,26,29],"1113":[26,28,26,31],"1129":[27,13,27,28],"1137":[27,29,27,30],"1145":[27,34,27,38],"1153":[27,13,27,38],"1161":[27,13,27,39],"1169":[28,13,28,24],"1177":[28,31,28,32],"1185":[28,13,28,33],"1187":[28,13,28,30],"1193":[28,13,28,34],"1201":[29,22,29,23],"1209":[29,22,29,23],"1217":[29,25,29,26],"1225":[29,29,29,38],"1233":[29,29,29,45],"1241":[29,49,29,64],"1249":[29,65,29,66],"1257":[29,49,29,67],"1273":[29,69,29,70],"1281":[29,69,29,72],"1297":[30,29,30,38],"1305":[30,39,30,40],"1313":[30,29,30,41],"1321":[30,29,30,41],"1329":[30,17,30,42],"1337":[31,21,31,30],"1345":[31,21,31,45],"1353":[32,21,32,36],"1361":[32,37,32,38],"1369":[32,42,32,57],"1377":[32,58,32,59],"1385":[32,42,32,60],"1393":[32,64,32,73],"1401":[32,89,32,93],"1409":[32,95,32,102],"1417":[32,64,32,103],"1419":[32,64,32,88],"1425":[32,21,32,103],"1433":[32,21,32,104],"1441":[35,17,35,22],"1449":[35,17,35,37],"1457":[36,17,36,32],"1465":[36,33,36,34],"1473":[36,38,36,53],"1481":[36,54,36,55],"1489":[36,38,36,56],"1497":[36,60,36,65],"1505":[36,81,36,85],"1513":[36,87,36,94],"1521":[36,60,36,95],"1523":[36,60,36,80],"1529":[36,17,36,95],"1537":[36,17,36,96],"1545":[39,13,39,28],"1553":[39,29,39,30],"1561":[39,13,39,31],"1569":[39,35,39,50],"1577":[39,51,39,52],"1585":[39,35,39,53],"1593":[40,17,40,32],"1601":[40,33,40,34],"1609":[40,17,40,35],"1617":[40,39,40,54],"1625":[40,55,40,56],"1633":[40,39,40,57],"1641":[41,24,41,39],"1649":[41,40,41,41],"1657":[41,24,41,42],"1665":[41,45,41,52],"1673":[41,55,41,63],"1681":[41,24,41,63],"1689":[41,17,41,64],"1697":[43,20,43,27],"1705":[43,20,43,27],"1713":[43,13,43,28],"1721":[45,16,45,34],"1729":[45,16,45,34],"1737":[45,9,45,35],"1745":[24,5,46,6],"1753":[24,5,46,6],"1761":[24,5,46,6],"1769":[24,5,46,6],"1777":[24,5,46,6],"1785":[24,5,46,6],"1793":[24,5,46,6],"1801":[47,14,47,15],"1809":[47,14,47,15],"1817":[47,17,47,18],"1825":[47,21,47,25],"1833":[47,21,47,35],"1841":[47,21,47,42],"1857":[47,44,47,45],"1865":[47,44,47,47],"1881":[48,15,48,19],"1889":[48,15,48,29],"1897":[48,30,48,31],"1905":[48,15,48,32],"1913":[48,15,48,32],"1921":[48,9,48,33],"1929":[49,20,49,23],"1937":[49,20,49,29],"1945":[49,35,49,42],"1953":[49,20,49,43],"1955":[49,20,49,34],"1961":[49,20,49,43],"1969":[49,9,49,44],"1977":[50,13,50,16],"1985":[50,13,50,23],"1993":[50,27,50,32],"2001":[50,41,50,49],"2009":[50,41,50,55],"2017":[50,27,50,56],"2019":[50,27,50,40],"2025":[51,24,51,32],"2033":[51,24,51,38],"2041":[51,24,51,38],"2049":[51,13,51,39],"2057":[52,22,52,23],"2065":[52,22,52,23],"2073":[52,25,52,26],"2081":[52,29,52,37],"2089":[52,29,52,44],"2105":[52,46,52,47],"2113":[52,46,52,49],"2129":[53,17,53,21],"2137":[53,36,53,44],"2145":[53,45,53,46],"2153":[53,36,53,47],"2161":[53,27,53,49],"2169":[53,17,53,50],"2171":[53,17,53,26],"2177":[53,17,53,51],"2185":[56,13,56,17],"2193":[57,23,57,26],"2201":[57,23,57,31],"2209":[58,24,58,32],"2217":[56,23,59,14],"2225":[56,13,59,15],"2227":[56,13,56,22],"2233":[56,13,59,16],"2241":[63,16,63,20],"2249":[63,31,63,35],"2257":[63,37,63,44],"2265":[63,16,63,45],"2267":[63,16,63,30],"2273":[63,16,63,45],"2281":[63,9,63,46],"2289":[62,25,64,6],"2297":[62,25,64,6],"2305":[62,25,64,6],"2313":[62,25,64,6],"2321":[62,25,64,6],"2329":[62,5,64,7],"2337":[65,14,65,15],"2345":[65,14,65,15],"2353":[65,17,65,18],"2361":[65,21,65,28],"2369":[65,21,65,35],"2377":[65,21,65,42],"2393":[65,44,65,45],"2401":[65,44,65,47],"2417":[66,23,66,30],"2425":[66,23,66,37],"2433":[66,38,66,39],"2441":[66,23,66,40],"2449":[66,46,66,50],"2457":[66,46,66,59],"2465":[66,61,66,65],"2473":[66,67,66,84],"2481":[66,23,66,85],"2483":[66,23,66,45],"2489":[66,23,66,85],"2497":[66,13,66,93],"2505":[66,96,66,97],"2513":[67,26,67,30],"2521":[67,26,67,30],"2529":[67,13,67,31],"2537":[68,22,68,23],"2545":[68,22,68,23],"2553":[68,25,68,26],"2561":[68,29,68,35],"2569":[68,29,68,42],"2585":[68,44,68,45],"2593":[68,44,68,47],"2609":[69,25,69,31],"2617":[69,32,69,33],"2625":[69,25,69,34],"2633":[69,25,69,39],"2641":[69,25,69,39],"2649":[69,17,69,40],"2657":[70,29,70,35],"2665":[70,36,70,37],"2673":[70,29,70,38],"2681":[70,29,70,43],"2689":[70,29,70,43],"2697":[70,17,70,44],"2705":[71,31,71,36],"2713":[71,31,71,36],"2721":[71,17,71,37],"2729":[72,26,72,27],"2737":[72,26,72,27],"2745":[72,29,72,30],"2753":[72,33,72,40],"2761":[72,33,72,47],"2769":[72,33,72,54],"2785":[72,56,72,57],"2793":[72,56,72,59],"2809":[73,27,73,32],"2817":[73,44,73,59],"2825":[73,64,73,69],"2833":[73,75,73,82],"2841":[73,75,73,89],"2849":[73,90,73,91],"2857":[73,75,73,92],"2865":[73,75,73,108],"2873":[73,112,73,119],"2881":[73,112,73,126],"2889":[73,127,73,128],"2897":[73,112,73,129],"2905":[74,39,74,43],"2913":[74,39,74,43],"2921":[74,25,74,44],"2929":[78,21,78,32],"2937":[81,21,81,26],"2945":[81,37,81,41],"2953":[81,43,81,50],"2961":[81,21,81,51],"2963":[81,21,81,36],"2969":[83,32,83,37],"2977":[84,32,84,44],"2985":[84,45,84,50],"2993":[84,52,84,61],"3001":[84,32,84,62],"3009":[82,33,85,22],"3017":[82,33,85,22],"3025":[82,21,85,23],"3033":[86,25,86,34],"3041":[86,25,86,40],"3049":[86,45,86,63],"3057":[87,25,87,35],"3065":[87,41,87,50],"3073":[87,25,87,51],"3075":[87,25,87,40],"3081":[87,25,87,52],"3089":[89,29,89,33],"3097":[89,29,89,33],"3105":[89,21,89,34],"3113":[92,13,92,24],"3121":[92,13,92,32],"3123":[92,13,92,30],"3129":[92,13,92,33],"3137":[94,17,94,18],"3145":[95,17,95,18],"3153":[96,17,96,18],"3161":[93,21,97,14],"3169":[93,21,97,14],"3177":[93,13,97,15],"3185":[98,22,98,23],"3193":[98,22,98,23],"3201":[98,25,98,26],"3209":[98,29,98,39],"3217":[98,29,98,46],"3233":[98,48,98,49],"3241":[98,48,98,51],"3257":[99,17,99,22],"3265":[99,23,99,33],"3273":[99,34,99,35],"3281":[99,23,99,36],"3289":[99,23,99,42],"3305":[99,17,99,45],"3307":[99,17,99,45],"3321":[99,17,99,46],"3329":[101,17,101,22],"3337":[101,23,101,30],"3345":[101,17,101,31],"3353":[101,34,101,35],"3361":[102,33,102,41],"3369":[102,33,102,41],"3377":[102,17,102,42],"3385":[104,33,104,40],"3393":[104,33,104,40],"3401":[104,17,104,41],"3409":[105,21,105,26],"3417":[105,27,105,34],"3425":[105,21,105,35],"3433":[105,38,105,43],"3441":[105,44,105,52],"3449":[105,38,105,53],"3457":[105,56,105,57],"3465":[107,31,107,40],"3473":[108,34,108,90],"3481":[108,93,108,97],"3489":[108,105,108,109],"3497":[108,93,108,110],"3499":[108,93,108,104],"3505":[108,113,108,116],"3513":[109,32,109,36],"3521":[109,32,109,42],"3529":[110,35,110,39],"3537":[110,35,110,55],"3545":[110,35,110,64],"3553":[106,27,111,22],"3561":[106,27,111,22],"3569":[106,21,111,23],"3577":[114,22,114,23],"3585":[114,22,114,23],"3593":[114,25,114,26],"3601":[114,29,114,39],"3609":[114,29,114,46],"3625":[114,48,114,49],"3633":[114,48,114,51],"3649":[115,29,115,39],"3657":[115,40,115,41],"3665":[115,29,115,42],"3673":[115,29,115,48],"3681":[115,29,115,48],"3689":[115,17,115,49],"3697":[116,21,116,30],"3705":[116,35,116,42],"3713":[116,46,116,55],"3721":[116,60,116,73],"3729":[118,33,118,43],"3737":[118,44,118,45],"3745":[118,33,118,46],"3753":[118,33,118,52],"3761":[118,33,118,52],"3769":[118,25,118,53],"3777":[119,31,119,36],"3785":[119,48,119,63],"3793":[120,47,120,52],"3801":[120,47,120,68],"3809":[120,72,120,77],"3817":[120,47,120,77],"3825":[120,29,120,78],"3833":[121,41,121,56],"3841":[121,57,121,59],"3849":[121,61,121,63],"3857":[121,65,121,70],"3865":[121,65,121,76],"3873":[121,78,121,82],"3881":[121,84,121,89],"3889":[121,91,121,95],"3897":[121,97,121,112],"3905":[121,97,121,129],"3907":[121,97,121,127],"3913":[121,37,121,130],"3921":[121,37,121,130],"3929":[121,29,121,131],"3937":[122,29,122,34],"3945":[122,53,122,68],"3953":[122,29,122,68],"3961":[122,29,122,69],"3969":[124,40,124,45],"3977":[124,55,124,62],"3985":[124,64,124,68],"3993":[124,70,124,74],"4001":[124,70,124,84],"4009":[124,40,124,85],"4011":[124,40,124,54],"4017":[124,40,124,91],"4025":[124,40,124,91],"4033":[124,40,124,91],"4041":[125,25,125,29],"4049":[125,58,125,66],"4057":[125,25,125,67],"4059":[125,25,125,57],"4065":[125,25,125,68],"4073":[126,25,126,30],"4081":[126,25,126,40],"4089":[126,25,126,45],"4097":[126,52,126,57],"4105":[126,59,126,67],"4113":[126,25,126,68],"4115":[126,25,126,51],"4121":[126,25,126,69],"4129":[129,38,129,39],"4137":[129,38,129,47],"4145":[130,36,130,40],"4153":[130,36,130,46],"4161":[131,39,131,43],"4169":[131,39,131,59],"4177":[131,39,131,68],"4185":[132,36,132,37],"4193":[132,36,132,43],"4201":[128,31,133,26],"4209":[128,31,133,26],"4217":[128,25,133,27],"4225":[127,23,134,22],"4233":[137,17,137,22],"4241":[138,24,138,29],"4249":[138,24,138,29],"4257":[138,17,138,30],"4265":[142,9,142,19],"4273":[144,19,144,28],"4281":[145,22,145,62],"4289":[145,65,145,69],"4297":[145,77,145,81],"4305":[145,65,145,82],"4307":[145,65,145,76],"4313":[145,85,145,88],"4321":[146,20,146,24],"4329":[146,20,146,30],"4337":[147,23,147,27],"4345":[147,23,147,43],"4353":[147,23,147,52],"4361":[143,15,148,10],"4369":[143,15,148,10],"4377":[143,9,148,11],"4385":[151,19,151,25],"4393":[152,22,152,26],"4401":[152,22,152,35],"4409":[152,22,152,43],"4411":[152,22,152,41],"4417":[152,22,152,50],"4419":[152,22,152,48],"4425":[152,53,152,68],"4433":[153,20,153,24],"4441":[153,20,153,30],"4449":[154,23,154,27],"4457":[154,23,154,43],"4465":[154,23,154,52],"4473":[150,15,155,10],"4481":[150,15,155,10],"4489":[150,9,155,11],"4497":[22,28,157,2],"4505":[22,28,157,2],"4513":[22,28,157,2],"4521":[22,28,157,2],"4529":[22,28,157,2],"4537":[22,28,157,2],"4545":[22,28,157,2],"4553":[22,28,157,2],"4561":[22,28,157,2],"4569":[22,28,157,2],"4577":[22,28,157,2],"4585":[22,28,157,2],"4593":[22,28,157,2],"4601":[22,28,157,2],"4609":[22,28,157,2],"4617":[22,28,157,2],"4625":[22,28,157,2],"4633":[22,28,157,2],"4641":[22,28,157,2],"4649":[22,28,157,2],"4657":[22,28,157,2],"4665":[22,28,157,2],"4673":[22,28,157,2],"4681":[22,28,157,2],"4689":[22,28,157,2],"4697":[22,28,157,2],"4705":[22,28,157,2],"4713":[24,5,46,6],"4721":[22,28,157,2],"4729":[22,28,157,2],"4737":[22,28,157,2],"4745":[22,1,157,2],"4753":[22,1,157,3],"4761":[158,1,158,10],"4769":[158,1,158,20],"4777":[160,9,160,13],"4785":[160,9,160,32],"4787":[160,9,160,30],"4793":[161,18,161,19],"4801":[161,18,161,19],"4809":[161,21,161,22],"4817":[161,25,161,36],"4825":[161,25,161,43],"4841":[161,45,161,46],"4849":[161,45,161,48],"4865":[162,20,162,31],"4873":[162,32,162,33],"4881":[162,20,162,34],"4889":[162,20,162,34],"4897":[162,13,162,35],"4905":[163,13,163,17],"4913":[163,13,163,38],"4915":[163,13,163,36],"4921":[163,13,163,39],"4929":[158,51,166,2],"4937":[158,51,166,2],"4945":[158,51,166,2],"4953":[158,51,166,2],"4961":[158,51,166,2],"4969":[158,51,166,2],"4977":[158,1,166,2],"4985":[158,1,166,3],"4993":[167,1,167,10],"5001":[167,1,167,20],"5009":[168,12,168,16],"5017":[168,12,168,25],"5025":[168,12,168,33],"5027":[168,12,168,31],"5033":[168,12,168,40],"5035":[168,12,168,38],"5041":[168,43,168,46],"5049":[168,50,168,54],"5057":[168,57,168,61],"5065":[169,24,169,26],"5073":[169,24,169,26],"5081":[169,24,169,26],"5089":[170,13,170,14],"5097":[170,13,170,19],"5105":[171,25,171,26],"5113":[171,25,171,31],"5121":[171,34,171,37],"5129":[171,13,171,21],"5137":[171,13,171,37],"5145":[171,13,171,38],"5153":[173,13,173,14],"5161":[173,13,173,20],"5169":[173,13,173,26],"5177":[174,25,174,26],"5185":[174,25,174,32],"5193":[174,25,174,40],"5195":[174,25,174,38],"5201":[174,13,174,21],"5209":[174,13,174,40],"5217":[174,13,174,41],"5225":[176,25,176,30],"5233":[176,13,176,21],"5241":[176,13,176,30],"5249":[176,13,176,31],"5257":[178,16,178,24],"5265":[178,16,178,24],"5273":[178,9,178,25],"5281":[168,66,179,6],"5289":[168,66,179,6],"5297":[168,66,179,6],"5305":[168,66,179,6],"5313":[168,66,179,6],"5321":[168,57,179,7],"5323":[168,57,168,65],"5329":[179,13,179,17],"5337":[168,57,179,18],"5339":[168,57,179,12],"5345":[179,21,179,23],"5353":[179,27,179,30],"5361":[168,12,179,30],"5369":[168,5,179,31],"5377":[167,30,180,2],"5385":[167,30,180,2],"5393":[167,30,180,2],"5401":[167,30,180,2],"5409":[167,1,180,2],"5417":[167,1,180,3],"5425":[181,1,181,7],"5433":[181,18,181,27],"5441":[181,1,181,27],"5449":[181,1,181,28],"5457":[1,1,181,28],"5465":[1,1,181,28],"5473":[1,1,181,28],"5481":[1,1,181,28],"5489":[1,1,181,28],"5497":[1,1,181,28],"5505":[1,1,181,28],"5513":[1,1,181,28],"5521":[4,17,11,2],"5529":[4,17,11,2],"5537":[15,5,17,6],"5545":[18,5,20,6],"5553":[14,30,21,2],"5561":[14,30,21,2],"5569":[31,17,33,18],"5577":[29,13,34,14],"5585":[29,13,34,14],"5593":[29,13,34,14],"5601":[35,13,37,14],"5609":[26,9,38,10],"5617":[26,9,38,10],"5625":[26,9,38,10],"5633":[41,24,41,63],"5641":[40,13,42,14],"5649":[39,9,44,10],"5657":[24,5,46,6],"5665":[24,5,46,6],"5673":[52,13,54,14],"5681":[52,13,54,14],"5689":[52,13,54,14],"5697":[50,9,60,10],"5705":[47,5,61,6],"5713":[47,5,61,6],"5721":[47,5,61,6],"5729":[62,25,64,6],"5737":[62,25,64,6],"5745":[73,21,76,22],"5753":[72,17,77,18],"5761":[72,17,77,18],"5769":[72,17,77,18],"5777":[78,17,80,18],"5785":[86,21,88,22],"5793":[81,17,90,18],"5801":[68,13,91,14],"5809":[68,13,91,14],"5817":[68,13,91,14],"5825":[98,13,100,14],"5833":[98,13,100,14],"5841":[98,13,100,14],"5849":[105,17,112,18],"5857":[101,13,113,14],"5865":[119,25,123,26],"5873":[116,17,135,18],"5881":[114,13,136,14],"5889":[114,13,136,14],"5897":[114,13,136,14],"5905":[137,13,139,14],"5913":[66,9,140,10],"5921":[65,5,141,6],"5929":[65,5,141,6],"5937":[65,5,141,6],"5945":[142,5,156,6],"5953":[22,28,157,2],"5961":[22,28,157,2],"5969":[161,9,164,10],"5977":[161,9,164,10],"5985":[161,9,164,10],"5993":[160,5,165,6],"6001":[158,51,166,2],"6009":[158,51,166,2],"6017":[170,9,172,10],"6025":[173,9,177,10],"6033":[168,66,179,6],"6041":[168,66,179,6],"6049":[168,50,179,23],"6057":[167,30,180,2],"6065":[167,30,180,2],"6073":[1,1,181,28],"6081":[1,1,181,28],"nBranches":86,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/mixin-call.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/mixin-call_jalangi_.js","code":"var Node = require(\"./node\"),\n    Selector = require(\"./selector\"),\n    MixinDefinition = require(\"./mixin-definition\"),\n    defaultFunc = require(\"../functions/default\");\n\nvar MixinCall = function (elements, args, index, currentFileInfo, important) {\n    this.selector = new Selector(elements);\n    this.arguments = args || [];\n    this.index = index;\n    this.currentFileInfo = currentFileInfo;\n    this.important = important;\n    this.allowRoot = true;\n};\nMixinCall.prototype = new Node();\nMixinCall.prototype.type = \"MixinCall\";\nMixinCall.prototype.accept = function (visitor) {\n    if (this.selector) {\n        this.selector = visitor.visit(this.selector);\n    }\n    if (this.arguments.length) {\n        this.arguments = visitor.visitArray(this.arguments);\n    }\n};\nMixinCall.prototype.eval = function (context) {\n    var mixins, mixin, mixinPath, args = [], arg, argValue,\n        rules = [], match = false, i, m, f, isRecursive, isOneFound,\n        candidates = [], candidate, conditionResult = [], defaultResult, defFalseEitherCase = -1,\n        defNone = 0, defTrue = 1, defFalse = 2, count, originalRuleset, noArgumentsFilter;\n\n    function calcDefGroup(mixin, mixinPath) {\n        var f, p, namespace;\n\n        for (f = 0; f < 2; f++) {\n            conditionResult[f] = true;\n            defaultFunc.value(f);\n            for (p = 0; p < mixinPath.length && conditionResult[f]; p++) {\n                namespace = mixinPath[p];\n                if (namespace.matchCondition) {\n                    conditionResult[f] = conditionResult[f] && namespace.matchCondition(null, context);\n                }\n            }\n            if (mixin.matchCondition) {\n                conditionResult[f] = conditionResult[f] && mixin.matchCondition(args, context);\n            }\n        }\n        if (conditionResult[0] || conditionResult[1]) {\n            if (conditionResult[0] != conditionResult[1]) {\n                return conditionResult[1] ?\n                    defTrue : defFalse;\n            }\n\n            return defNone;\n        }\n        return defFalseEitherCase;\n    }\n\n    for (i = 0; i < this.arguments.length; i++) {\n        arg = this.arguments[i];\n        argValue = arg.value.eval(context);\n        if (arg.expand && Array.isArray(argValue.value)) {\n            argValue = argValue.value;\n            for (m = 0; m < argValue.length; m++) {\n                args.push({value: argValue[m]});\n            }\n        } else {\n            args.push({name: arg.name, value: argValue});\n        }\n    }\n\n    noArgumentsFilter = function(rule) {return rule.matchArgs(null, context);};\n\n    for (i = 0; i < context.frames.length; i++) {\n        if ((mixins = context.frames[i].find(this.selector, null, noArgumentsFilter)).length > 0) {\n            isOneFound = true;\n\n            // To make `default()` function independent of definition order we have two \"subpasses\" here.\n            // At first we evaluate each guard *twice* (with `default() == true` and `default() == false`),\n            // and build candidate list with corresponding flags. Then, when we know all possible matches,\n            // we make a final decision.\n\n            for (m = 0; m < mixins.length; m++) {\n                mixin = mixins[m].rule;\n                mixinPath = mixins[m].path;\n                isRecursive = false;\n                for (f = 0; f < context.frames.length; f++) {\n                    if ((!(mixin instanceof MixinDefinition)) && mixin === (context.frames[f].originalRuleset || context.frames[f])) {\n                        isRecursive = true;\n                        break;\n                    }\n                }\n                if (isRecursive) {\n                    continue;\n                }\n\n                if (mixin.matchArgs(args, context)) {\n                    candidate = {mixin: mixin, group: calcDefGroup(mixin, mixinPath)};\n\n                    if (candidate.group !== defFalseEitherCase) {\n                        candidates.push(candidate);\n                    }\n\n                    match = true;\n                }\n            }\n\n            defaultFunc.reset();\n\n            count = [0, 0, 0];\n            for (m = 0; m < candidates.length; m++) {\n                count[candidates[m].group]++;\n            }\n\n            if (count[defNone] > 0) {\n                defaultResult = defFalse;\n            } else {\n                defaultResult = defTrue;\n                if ((count[defTrue] + count[defFalse]) > 1) {\n                    throw { type: 'Runtime',\n                        message: 'Ambiguous use of `default()` found when matching for `' + this.format(args) + '`',\n                        index: this.index, filename: this.currentFileInfo.filename };\n                }\n            }\n\n            for (m = 0; m < candidates.length; m++) {\n                candidate = candidates[m].group;\n                if ((candidate === defNone) || (candidate === defaultResult)) {\n                    try {\n                        mixin = candidates[m].mixin;\n                        if (!(mixin instanceof MixinDefinition)) {\n                            originalRuleset = mixin.originalRuleset || mixin;\n                            mixin = new MixinDefinition(\"\", [], mixin.rules, null, false, null, originalRuleset.visibilityInfo());\n                            mixin.originalRuleset = originalRuleset;\n                        }\n                        var newRules = mixin.evalCall(context, args, this.important).rules;\n                        this._setVisibilityToReplacement(newRules);\n                        Array.prototype.push.apply(rules, newRules);\n                    } catch (e) {\n                        throw { message: e.message, index: this.index, filename: this.currentFileInfo.filename, stack: e.stack };\n                    }\n                }\n            }\n\n            if (match) {\n                return rules;\n            }\n        }\n    }\n    if (isOneFound) {\n        throw { type:    'Runtime',\n            message: 'No matching definition was found for `' + this.format(args) + '`',\n            index:   this.index, filename: this.currentFileInfo.filename };\n    } else {\n        throw { type:    'Name',\n            message: this.selector.toCSS().trim() + \" is undefined\",\n            index:   this.index, filename: this.currentFileInfo.filename };\n    }\n};\n\nMixinCall.prototype._setVisibilityToReplacement = function (replacement) {\n    var i, rule;\n    if (this.blocksVisibility()) {\n        for (i = 0; i < replacement.length; i++) {\n            rule = replacement[i];\n            rule.addVisibilityBlock();\n        }\n    }\n};\nMixinCall.prototype.format = function (args) {\n    return this.selector.toCSS().trim() + '(' +\n        (args ? args.map(function (a) {\n            var argValue = \"\";\n            if (a.name) {\n                argValue += a.name + \":\";\n            }\n            if (a.value.toCSS) {\n                argValue += a.value.toCSS();\n            } else {\n                argValue += \"???\";\n            }\n            return argValue;\n        }).join(', ') : \"\") + \")\";\n};\nmodule.exports = MixinCall;\n"};
jalangiLabel472:
    while (true) {
        try {
            J$.Se(5457, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/mixin-call_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/mixin-call.js');
            J$.N(5465, '__secret__S$', __secret__S$, 0);
            J$.N(5473, '__secret__traits__', __secret__traits__, 0);
            J$.N(5481, 'Node', Node, 0);
            J$.N(5489, 'Selector', Selector, 0);
            J$.N(5497, 'MixinDefinition', MixinDefinition, 0);
            J$.N(5505, 'defaultFunc', defaultFunc, 0);
            J$.N(5513, 'MixinCall', MixinCall, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var Node = J$.X1(185, J$.W(177, 'Node', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './node', 21, false)), Node, 3)), Selector = J$.X1(201, J$.W(193, 'Selector', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './selector', 21, false)), Selector, 3)), MixinDefinition = J$.X1(217, J$.W(209, 'MixinDefinition', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, './mixin-definition', 21, false)), MixinDefinition, 3)), defaultFunc = J$.X1(233, J$.W(225, 'defaultFunc', J$.F(169, J$.R(153, 'require', require, 2), 0)(J$.T(161, '../functions/default', 21, false)), defaultFunc, 3));
            var MixinCall = J$.X1(529, J$.W(521, 'MixinCall', J$.T(513, function (elements, args, index, currentFileInfo, important) {
                jalangiLabel464:
                    while (true) {
                        try {
                            J$.Fe(457, arguments.callee, this, arguments);
                            arguments = J$.N(465, 'arguments', arguments, 4);
                            elements = J$.N(473, 'elements', elements, 4);
                            args = J$.N(481, 'args', args, 4);
                            index = J$.N(489, 'index', index, 4);
                            currentFileInfo = J$.N(497, 'currentFileInfo', currentFileInfo, 4);
                            important = J$.N(505, 'important', important, 4);
                            J$.X1(281, J$.P(273, J$.R(241, 'this', this, 0), 'selector', J$.F(265, J$.R(249, 'Selector', Selector, 1), 1)(J$.R(257, 'elements', elements, 0)), 0));
                            J$.X1(321, J$.P(313, J$.R(289, 'this', this, 0), 'arguments', J$.C(8, J$.R(297, 'args', args, 0)) ? J$._() : J$.T(305, [], 10, false), 0));
                            J$.X1(353, J$.P(345, J$.R(329, 'this', this, 0), 'index', J$.R(337, 'index', index, 0), 0));
                            J$.X1(385, J$.P(377, J$.R(361, 'this', this, 0), 'currentFileInfo', J$.R(369, 'currentFileInfo', currentFileInfo, 0), 0));
                            J$.X1(417, J$.P(409, J$.R(393, 'this', this, 0), 'important', J$.R(401, 'important', important, 0), 0));
                            J$.X1(449, J$.P(441, J$.R(425, 'this', this, 0), 'allowRoot', J$.T(433, true, 23, false), 0));
                        } catch (J$e) {
                            J$.Ex(5521, J$e);
                        } finally {
                            if (J$.Fr(5529))
                                continue jalangiLabel464;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 457), MixinCall, 3));
            J$.X1(569, J$.P(561, J$.R(537, 'MixinCall', MixinCall, 1), 'prototype', J$.F(553, J$.R(545, 'Node', Node, 1), 1)(), 0));
            J$.X1(609, J$.P(601, J$.G(585, J$.R(577, 'MixinCall', MixinCall, 1), 'prototype', 0), 'type', J$.T(593, 'MixinCall', 21, false), 0));
            J$.X1(825, J$.P(817, J$.G(625, J$.R(617, 'MixinCall', MixinCall, 1), 'prototype', 0), 'accept', J$.T(809, function (visitor) {
                jalangiLabel465:
                    while (true) {
                        try {
                            J$.Fe(785, arguments.callee, this, arguments);
                            arguments = J$.N(793, 'arguments', arguments, 4);
                            visitor = J$.N(801, 'visitor', visitor, 4);
                            if (J$.X1(5537, J$.C(16, J$.G(641, J$.R(633, 'this', this, 0), 'selector', 0)))) {
                                J$.X1(697, J$.P(689, J$.R(649, 'this', this, 0), 'selector', J$.M(681, J$.R(657, 'visitor', visitor, 0), 'visit', 0)(J$.G(673, J$.R(665, 'this', this, 0), 'selector', 0)), 0));
                            }
                            if (J$.X1(5545, J$.C(24, J$.G(721, J$.G(713, J$.R(705, 'this', this, 0), 'arguments', 0), 'length', 0)))) {
                                J$.X1(777, J$.P(769, J$.R(729, 'this', this, 0), 'arguments', J$.M(761, J$.R(737, 'visitor', visitor, 0), 'visitArray', 0)(J$.G(753, J$.R(745, 'this', this, 0), 'arguments', 0)), 0));
                            }
                        } catch (J$e) {
                            J$.Ex(5553, J$e);
                        } finally {
                            if (J$.Fr(5561))
                                continue jalangiLabel465;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 785), 0));
            J$.X1(4753, J$.P(4745, J$.G(841, J$.R(833, 'MixinCall', MixinCall, 1), 'prototype', 0), 'eval', J$.T(4737, function (context) {
                jalangiLabel468:
                    while (true) {
                        try {
                            J$.Fe(4497, arguments.callee, this, arguments);
                            function calcDefGroup(mixin, mixinPath) {
                                jalangiLabel466:
                                    while (true) {
                                        try {
                                            J$.Fe(1745, arguments.callee, this, arguments);
                                            arguments = J$.N(1753, 'arguments', arguments, 4);
                                            mixin = J$.N(1761, 'mixin', mixin, 4);
                                            mixinPath = J$.N(1769, 'mixinPath', mixinPath, 4);
                                            J$.N(1777, 'f', f, 0);
                                            J$.N(1785, 'p', p, 0);
                                            J$.N(1793, 'namespace', namespace, 0);
                                            var f, p, namespace;
                                            for (J$.X1(5617, f = J$.W(1073, 'f', J$.T(1065, 0, 22, false), f, 0)); J$.X1(5609, J$.C(80, J$.B(18, '<', J$.R(1081, 'f', f, 0), J$.T(1089, 2, 22, false), 0))); J$.X1(5625, J$.B(42, '-', f = J$.W(1113, 'f', J$.B(34, '+', J$.U(26, '+', J$.R(1105, 'f', f, 0)), J$.T(1097, 1, 22, false), 0), f, 0), J$.T(1121, 1, 22, false), 0))) {
                                                J$.X1(1161, J$.P(1153, J$.R(1129, 'conditionResult', conditionResult, 0), J$.R(1137, 'f', f, 0), J$.T(1145, true, 23, false), 2));
                                                J$.X1(1193, J$.M(1185, J$.R(1169, 'defaultFunc', defaultFunc, 1), 'value', 0)(J$.R(1177, 'f', f, 0)));
                                                for (J$.X1(5585, p = J$.W(1209, 'p', J$.T(1201, 0, 22, false), p, 0)); J$.X1(5577, J$.C(56, J$.C(32, J$.B(50, '<', J$.R(1217, 'p', p, 0), J$.G(1233, J$.R(1225, 'mixinPath', mixinPath, 0), 'length', 0), 0)) ? J$.G(1257, J$.R(1241, 'conditionResult', conditionResult, 0), J$.R(1249, 'f', f, 0), 4) : J$._())); J$.X1(5593, J$.B(74, '-', p = J$.W(1281, 'p', J$.B(66, '+', J$.U(58, '+', J$.R(1273, 'p', p, 0)), J$.T(1265, 1, 22, false), 0), p, 0), J$.T(1289, 1, 22, false), 0))) {
                                                    J$.X1(1329, namespace = J$.W(1321, 'namespace', J$.G(1313, J$.R(1297, 'mixinPath', mixinPath, 0), J$.R(1305, 'p', p, 0), 4), namespace, 0));
                                                    if (J$.X1(5569, J$.C(48, J$.G(1345, J$.R(1337, 'namespace', namespace, 0), 'matchCondition', 0)))) {
                                                        J$.X1(1433, J$.P(1425, J$.R(1353, 'conditionResult', conditionResult, 0), J$.R(1361, 'f', f, 0), J$.C(40, J$.G(1385, J$.R(1369, 'conditionResult', conditionResult, 0), J$.R(1377, 'f', f, 0), 4)) ? J$.M(1417, J$.R(1393, 'namespace', namespace, 0), 'matchCondition', 0)(J$.T(1401, null, 25, false), J$.R(1409, 'context', context, 0)) : J$._(), 2));
                                                    }
                                                }
                                                if (J$.X1(5601, J$.C(72, J$.G(1449, J$.R(1441, 'mixin', mixin, 0), 'matchCondition', 0)))) {
                                                    J$.X1(1537, J$.P(1529, J$.R(1457, 'conditionResult', conditionResult, 0), J$.R(1465, 'f', f, 0), J$.C(64, J$.G(1489, J$.R(1473, 'conditionResult', conditionResult, 0), J$.R(1481, 'f', f, 0), 4)) ? J$.M(1521, J$.R(1497, 'mixin', mixin, 0), 'matchCondition', 0)(J$.R(1505, 'args', args, 0), J$.R(1513, 'context', context, 0)) : J$._(), 2));
                                                }
                                            }
                                            if (J$.X1(5649, J$.C(112, J$.C(88, J$.G(1561, J$.R(1545, 'conditionResult', conditionResult, 0), J$.T(1553, 0, 22, false), 4)) ? J$._() : J$.G(1585, J$.R(1569, 'conditionResult', conditionResult, 0), J$.T(1577, 1, 22, false), 4)))) {
                                                if (J$.X1(5641, J$.C(104, J$.B(82, '!=', J$.G(1609, J$.R(1593, 'conditionResult', conditionResult, 0), J$.T(1601, 0, 22, false), 4), J$.G(1633, J$.R(1617, 'conditionResult', conditionResult, 0), J$.T(1625, 1, 22, false), 4), 0)))) {
                                                    return J$.X1(1689, J$.Rt(1681, J$.X1(5633, J$.C(96, J$.G(1657, J$.R(1641, 'conditionResult', conditionResult, 0), J$.T(1649, 1, 22, false), 4))) ? J$.R(1665, 'defTrue', defTrue, 0) : J$.R(1673, 'defFalse', defFalse, 0)));
                                                }
                                                return J$.X1(1713, J$.Rt(1705, J$.R(1697, 'defNone', defNone, 0)));
                                            }
                                            return J$.X1(1737, J$.Rt(1729, J$.R(1721, 'defFalseEitherCase', defFalseEitherCase, 0)));
                                        } catch (J$e) {
                                            J$.Ex(5657, J$e);
                                        } finally {
                                            if (J$.Fr(5665))
                                                continue jalangiLabel466;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(4505, 'arguments', arguments, 4);
                            context = J$.N(4513, 'context', context, 4);
                            J$.N(4521, 'mixins', mixins, 0);
                            J$.N(4529, 'mixin', mixin, 0);
                            J$.N(4537, 'mixinPath', mixinPath, 0);
                            J$.N(4545, 'args', args, 0);
                            J$.N(4553, 'arg', arg, 0);
                            J$.N(4561, 'argValue', argValue, 0);
                            J$.N(4569, 'rules', rules, 0);
                            J$.N(4577, 'match', match, 0);
                            J$.N(4585, 'i', i, 0);
                            J$.N(4593, 'm', m, 0);
                            J$.N(4601, 'f', f, 0);
                            J$.N(4609, 'isRecursive', isRecursive, 0);
                            J$.N(4617, 'isOneFound', isOneFound, 0);
                            J$.N(4625, 'candidates', candidates, 0);
                            J$.N(4633, 'candidate', candidate, 0);
                            J$.N(4641, 'conditionResult', conditionResult, 0);
                            J$.N(4649, 'defaultResult', defaultResult, 0);
                            J$.N(4657, 'defFalseEitherCase', defFalseEitherCase, 0);
                            J$.N(4665, 'defNone', defNone, 0);
                            J$.N(4673, 'defTrue', defTrue, 0);
                            J$.N(4681, 'defFalse', defFalse, 0);
                            J$.N(4689, 'count', count, 0);
                            J$.N(4697, 'originalRuleset', originalRuleset, 0);
                            J$.N(4705, 'noArgumentsFilter', noArgumentsFilter, 0);
                            calcDefGroup = J$.N(4721, 'calcDefGroup', J$.T(4713, calcDefGroup, 12, false, 1745), 0);
                            J$.N(4729, 'newRules', newRules, 0);
                            var mixins, mixin, mixinPath, args = J$.X1(929, J$.W(921, 'args', J$.T(849, [], 10, false), args, 1)), arg, argValue, rules = J$.X1(945, J$.W(937, 'rules', J$.T(857, [], 10, false), rules, 1)), match = J$.X1(961, J$.W(953, 'match', J$.T(865, false, 23, false), match, 1)), i, m, f, isRecursive, isOneFound, candidates = J$.X1(977, J$.W(969, 'candidates', J$.T(873, [], 10, false), candidates, 1)), candidate, conditionResult = J$.X1(993, J$.W(985, 'conditionResult', J$.T(881, [], 10, false), conditionResult, 1)), defaultResult, defFalseEitherCase = J$.X1(1009, J$.W(1001, 'defFalseEitherCase', J$.U(10, '-', J$.T(889, 1, 22, false)), defFalseEitherCase, 1)), defNone = J$.X1(1025, J$.W(1017, 'defNone', J$.T(897, 0, 22, false), defNone, 1)), defTrue = J$.X1(1041, J$.W(1033, 'defTrue', J$.T(905, 1, 22, false), defTrue, 1)), defFalse = J$.X1(1057, J$.W(1049, 'defFalse', J$.T(913, 2, 22, false), defFalse, 1)), count, originalRuleset, noArgumentsFilter;
                            for (J$.X1(5713, i = J$.W(1809, 'i', J$.T(1801, 0, 22, false), i, 0)); J$.X1(5705, J$.C(144, J$.B(90, '<', J$.R(1817, 'i', i, 0), J$.G(1841, J$.G(1833, J$.R(1825, 'this', this, 0), 'arguments', 0), 'length', 0), 0))); J$.X1(5721, J$.B(114, '-', i = J$.W(1865, 'i', J$.B(106, '+', J$.U(98, '+', J$.R(1857, 'i', i, 0)), J$.T(1849, 1, 22, false), 0), i, 0), J$.T(1873, 1, 22, false), 0))) {
                                J$.X1(1921, arg = J$.W(1913, 'arg', J$.G(1905, J$.G(1889, J$.R(1881, 'this', this, 0), 'arguments', 0), J$.R(1897, 'i', i, 0), 4), arg, 0));
                                J$.X1(1969, argValue = J$.W(1961, 'argValue', J$.M(1953, J$.G(1937, J$.R(1929, 'arg', arg, 0), 'value', 0), 'eval', 0)(J$.R(1945, 'context', context, 0)), argValue, 0));
                                if (J$.X1(5697, J$.C(136, J$.C(120, J$.G(1985, J$.R(1977, 'arg', arg, 0), 'expand', 0)) ? J$.M(2017, J$.R(1993, 'Array', Array, 2), 'isArray', 0)(J$.G(2009, J$.R(2001, 'argValue', argValue, 0), 'value', 0)) : J$._()))) {
                                    J$.X1(2049, argValue = J$.W(2041, 'argValue', J$.G(2033, J$.R(2025, 'argValue', argValue, 0), 'value', 0), argValue, 0));
                                    for (J$.X1(5681, m = J$.W(2065, 'm', J$.T(2057, 0, 22, false), m, 0)); J$.X1(5673, J$.C(128, J$.B(122, '<', J$.R(2073, 'm', m, 0), J$.G(2089, J$.R(2081, 'argValue', argValue, 0), 'length', 0), 0))); J$.X1(5689, J$.B(146, '-', m = J$.W(2113, 'm', J$.B(138, '+', J$.U(130, '+', J$.R(2105, 'm', m, 0)), J$.T(2097, 1, 22, false), 0), m, 0), J$.T(2121, 1, 22, false), 0))) {
                                        J$.X1(2177, J$.M(2169, J$.R(2129, 'args', args, 0), 'push', 0)(J$.T(2161, {
                                            value: J$.G(2153, J$.R(2137, 'argValue', argValue, 0), J$.R(2145, 'm', m, 0), 4)
                                        }, 11, false)));
                                    }
                                } else {
                                    J$.X1(2233, J$.M(2225, J$.R(2185, 'args', args, 0), 'push', 0)(J$.T(2217, {
                                        name: J$.G(2201, J$.R(2193, 'arg', arg, 0), 'name', 0),
                                        value: J$.R(2209, 'argValue', argValue, 0)
                                    }, 11, false)));
                                }
                            }
                            J$.X1(2329, noArgumentsFilter = J$.W(2321, 'noArgumentsFilter', J$.T(2313, function (rule) {
                                jalangiLabel467:
                                    while (true) {
                                        try {
                                            J$.Fe(2289, arguments.callee, this, arguments);
                                            arguments = J$.N(2297, 'arguments', arguments, 4);
                                            rule = J$.N(2305, 'rule', rule, 4);
                                            return J$.X1(2281, J$.Rt(2273, J$.M(2265, J$.R(2241, 'rule', rule, 0), 'matchArgs', 0)(J$.T(2249, null, 25, false), J$.R(2257, 'context', context, 0))));
                                        } catch (J$e) {
                                            J$.Ex(5729, J$e);
                                        } finally {
                                            if (J$.Fr(5737))
                                                continue jalangiLabel467;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2289), noArgumentsFilter, 0));
                            for (J$.X1(5929, i = J$.W(2345, 'i', J$.T(2337, 0, 22, false), i, 0)); J$.X1(5921, J$.C(296, J$.B(154, '<', J$.R(2353, 'i', i, 0), J$.G(2377, J$.G(2369, J$.R(2361, 'context', context, 0), 'frames', 0), 'length', 0), 0))); J$.X1(5937, J$.B(178, '-', i = J$.W(2401, 'i', J$.B(170, '+', J$.U(162, '+', J$.R(2393, 'i', i, 0)), J$.T(2385, 1, 22, false), 0), i, 0), J$.T(2409, 1, 22, false), 0))) {
                                if (J$.X1(5913, J$.C(288, J$.B(186, '>', J$.G(2497, mixins = J$.W(2489, 'mixins', J$.M(2481, J$.G(2441, J$.G(2425, J$.R(2417, 'context', context, 0), 'frames', 0), J$.R(2433, 'i', i, 0), 4), 'find', 0)(J$.G(2457, J$.R(2449, 'this', this, 0), 'selector', 0), J$.T(2465, null, 25, false), J$.R(2473, 'noArgumentsFilter', noArgumentsFilter, 0)), mixins, 0), 'length', 0), J$.T(2505, 0, 22, false), 0)))) {
                                    J$.X1(2529, isOneFound = J$.W(2521, 'isOneFound', J$.T(2513, true, 23, false), isOneFound, 0));
                                    for (J$.X1(5809, m = J$.W(2545, 'm', J$.T(2537, 0, 22, false), m, 0)); J$.X1(5801, J$.C(208, J$.B(194, '<', J$.R(2553, 'm', m, 0), J$.G(2569, J$.R(2561, 'mixins', mixins, 0), 'length', 0), 0))); J$.X1(5817, J$.B(218, '-', m = J$.W(2593, 'm', J$.B(210, '+', J$.U(202, '+', J$.R(2585, 'm', m, 0)), J$.T(2577, 1, 22, false), 0), m, 0), J$.T(2601, 1, 22, false), 0))) {
                                        J$.X1(2649, mixin = J$.W(2641, 'mixin', J$.G(2633, J$.G(2625, J$.R(2609, 'mixins', mixins, 0), J$.R(2617, 'm', m, 0), 4), 'rule', 0), mixin, 0));
                                        J$.X1(2697, mixinPath = J$.W(2689, 'mixinPath', J$.G(2681, J$.G(2673, J$.R(2657, 'mixins', mixins, 0), J$.R(2665, 'm', m, 0), 4), 'path', 0), mixinPath, 0));
                                        J$.X1(2721, isRecursive = J$.W(2713, 'isRecursive', J$.T(2705, false, 23, false), isRecursive, 0));
                                        for (J$.X1(5761, f = J$.W(2737, 'f', J$.T(2729, 0, 22, false), f, 0)); J$.X1(5753, J$.C(176, J$.B(226, '<', J$.R(2745, 'f', f, 0), J$.G(2769, J$.G(2761, J$.R(2753, 'context', context, 0), 'frames', 0), 'length', 0), 0))); J$.X1(5769, J$.B(250, '-', f = J$.W(2793, 'f', J$.B(242, '+', J$.U(234, '+', J$.R(2785, 'f', f, 0)), J$.T(2777, 1, 22, false), 0), f, 0), J$.T(2801, 1, 22, false), 0))) {
                                            if (J$.X1(5745, J$.C(168, J$.C(160, J$.U(266, '!', J$.B(258, 'instanceof', J$.R(2809, 'mixin', mixin, 0), J$.R(2817, 'MixinDefinition', MixinDefinition, 1), 0))) ? J$.B(274, '===', J$.R(2825, 'mixin', mixin, 0), J$.C(152, J$.G(2865, J$.G(2857, J$.G(2841, J$.R(2833, 'context', context, 0), 'frames', 0), J$.R(2849, 'f', f, 0), 4), 'originalRuleset', 0)) ? J$._() : J$.G(2897, J$.G(2881, J$.R(2873, 'context', context, 0), 'frames', 0), J$.R(2889, 'f', f, 0), 4), 0) : J$._()))) {
                                                J$.X1(2921, isRecursive = J$.W(2913, 'isRecursive', J$.T(2905, true, 23, false), isRecursive, 0));
                                                break;
                                            }
                                        }
                                        if (J$.X1(5777, J$.C(184, J$.R(2929, 'isRecursive', isRecursive, 0)))) {
                                            continue;
                                        }
                                        if (J$.X1(5793, J$.C(200, J$.M(2961, J$.R(2937, 'mixin', mixin, 0), 'matchArgs', 0)(J$.R(2945, 'args', args, 0), J$.R(2953, 'context', context, 0))))) {
                                            J$.X1(3025, candidate = J$.W(3017, 'candidate', J$.T(3009, {
                                                mixin: J$.R(2969, 'mixin', mixin, 0),
                                                group: J$.F(3001, J$.R(2977, 'calcDefGroup', calcDefGroup, 0), 0)(J$.R(2985, 'mixin', mixin, 0), J$.R(2993, 'mixinPath', mixinPath, 0))
                                            }, 11, false), candidate, 0));
                                            if (J$.X1(5785, J$.C(192, J$.B(282, '!==', J$.G(3041, J$.R(3033, 'candidate', candidate, 0), 'group', 0), J$.R(3049, 'defFalseEitherCase', defFalseEitherCase, 0), 0)))) {
                                                J$.X1(3081, J$.M(3073, J$.R(3057, 'candidates', candidates, 0), 'push', 0)(J$.R(3065, 'candidate', candidate, 0)));
                                            }
                                            J$.X1(3105, match = J$.W(3097, 'match', J$.T(3089, true, 23, false), match, 0));
                                        }
                                    }
                                    J$.X1(3129, J$.M(3121, J$.R(3113, 'defaultFunc', defaultFunc, 1), 'reset', 0)());
                                    J$.X1(3177, count = J$.W(3169, 'count', J$.T(3161, [
                                        J$.T(3137, 0, 22, false),
                                        J$.T(3145, 0, 22, false),
                                        J$.T(3153, 0, 22, false)
                                    ], 10, false), count, 0));
                                    for (J$.X1(5833, m = J$.W(3193, 'm', J$.T(3185, 0, 22, false), m, 0)); J$.X1(5825, J$.C(216, J$.B(290, '<', J$.R(3201, 'm', m, 0), J$.G(3217, J$.R(3209, 'candidates', candidates, 0), 'length', 0), 0))); J$.X1(5841, J$.B(314, '-', m = J$.W(3241, 'm', J$.B(306, '+', J$.U(298, '+', J$.R(3233, 'm', m, 0)), J$.T(3225, 1, 22, false), 0), m, 0), J$.T(3249, 1, 22, false), 0))) {
                                        J$.X1(3321, J$.B(322, '-', J$.A(3305, J$.R(3257, 'count', count, 0), J$.G(3289, J$.G(3281, J$.R(3265, 'candidates', candidates, 0), J$.R(3273, 'm', m, 0), 4), 'group', 0), '+', 1)(J$.T(3297, 1, 22, false)), J$.T(3313, 1, 22, false), 0));
                                    }
                                    if (J$.X1(5857, J$.C(232, J$.B(330, '>', J$.G(3345, J$.R(3329, 'count', count, 0), J$.R(3337, 'defNone', defNone, 0), 4), J$.T(3353, 0, 22, false), 0)))) {
                                        J$.X1(3377, defaultResult = J$.W(3369, 'defaultResult', J$.R(3361, 'defFalse', defFalse, 0), defaultResult, 0));
                                    } else {
                                        J$.X1(3401, defaultResult = J$.W(3393, 'defaultResult', J$.R(3385, 'defTrue', defTrue, 0), defaultResult, 0));
                                        if (J$.X1(5849, J$.C(224, J$.B(346, '>', J$.B(338, '+', J$.G(3425, J$.R(3409, 'count', count, 0), J$.R(3417, 'defTrue', defTrue, 0), 4), J$.G(3449, J$.R(3433, 'count', count, 0), J$.R(3441, 'defFalse', defFalse, 0), 4), 0), J$.T(3457, 1, 22, false), 0)))) {
                                            throw J$.X1(3569, J$.Th(3561, J$.T(3553, {
                                                type: J$.T(3465, 'Runtime', 21, false),
                                                message: J$.B(362, '+', J$.B(354, '+', J$.T(3473, 'Ambiguous use of `default()` found when matching for `', 21, false), J$.M(3497, J$.R(3481, 'this', this, 0), 'format', 0)(J$.R(3489, 'args', args, 0)), 0), J$.T(3505, '`', 21, false), 0),
                                                index: J$.G(3521, J$.R(3513, 'this', this, 0), 'index', 0),
                                                filename: J$.G(3545, J$.G(3537, J$.R(3529, 'this', this, 0), 'currentFileInfo', 0), 'filename', 0)
                                            }, 11, false)));
                                        }
                                    }
                                    for (J$.X1(5889, m = J$.W(3585, 'm', J$.T(3577, 0, 22, false), m, 0)); J$.X1(5881, J$.C(272, J$.B(370, '<', J$.R(3593, 'm', m, 0), J$.G(3609, J$.R(3601, 'candidates', candidates, 0), 'length', 0), 0))); J$.X1(5897, J$.B(394, '-', m = J$.W(3633, 'm', J$.B(386, '+', J$.U(378, '+', J$.R(3625, 'm', m, 0)), J$.T(3617, 1, 22, false), 0), m, 0), J$.T(3641, 1, 22, false), 0))) {
                                        J$.X1(3689, candidate = J$.W(3681, 'candidate', J$.G(3673, J$.G(3665, J$.R(3649, 'candidates', candidates, 0), J$.R(3657, 'm', m, 0), 4), 'group', 0), candidate, 0));
                                        if (J$.X1(5873, J$.C(264, J$.C(240, J$.B(402, '===', J$.R(3697, 'candidate', candidate, 0), J$.R(3705, 'defNone', defNone, 0), 0)) ? J$._() : J$.B(410, '===', J$.R(3713, 'candidate', candidate, 0), J$.R(3721, 'defaultResult', defaultResult, 0), 0)))) {
                                            try {
                                                J$.X1(3769, mixin = J$.W(3761, 'mixin', J$.G(3753, J$.G(3745, J$.R(3729, 'candidates', candidates, 0), J$.R(3737, 'm', m, 0), 4), 'mixin', 0), mixin, 0));
                                                if (J$.X1(5865, J$.C(256, J$.U(426, '!', J$.B(418, 'instanceof', J$.R(3777, 'mixin', mixin, 0), J$.R(3785, 'MixinDefinition', MixinDefinition, 1), 0))))) {
                                                    J$.X1(3825, originalRuleset = J$.W(3817, 'originalRuleset', J$.C(248, J$.G(3801, J$.R(3793, 'mixin', mixin, 0), 'originalRuleset', 0)) ? J$._() : J$.R(3809, 'mixin', mixin, 0), originalRuleset, 0));
                                                    J$.X1(3929, mixin = J$.W(3921, 'mixin', J$.F(3913, J$.R(3833, 'MixinDefinition', MixinDefinition, 1), 1)(J$.T(3841, '', 21, false), J$.T(3849, [], 10, false), J$.G(3865, J$.R(3857, 'mixin', mixin, 0), 'rules', 0), J$.T(3873, null, 25, false), J$.T(3881, false, 23, false), J$.T(3889, null, 25, false), J$.M(3905, J$.R(3897, 'originalRuleset', originalRuleset, 0), 'visibilityInfo', 0)()), mixin, 0));
                                                    J$.X1(3961, J$.P(3953, J$.R(3937, 'mixin', mixin, 0), 'originalRuleset', J$.R(3945, 'originalRuleset', originalRuleset, 0), 0));
                                                }
                                                var newRules = J$.X1(4033, J$.W(4025, 'newRules', J$.G(4017, J$.M(4009, J$.R(3969, 'mixin', mixin, 0), 'evalCall', 0)(J$.R(3977, 'context', context, 0), J$.R(3985, 'args', args, 0), J$.G(4001, J$.R(3993, 'this', this, 0), 'important', 0)), 'rules', 0), newRules, 1));
                                                J$.X1(4065, J$.M(4057, J$.R(4041, 'this', this, 0), '_setVisibilityToReplacement', 0)(J$.R(4049, 'newRules', newRules, 0)));
                                                J$.X1(4121, J$.M(4113, J$.G(4089, J$.G(4081, J$.R(4073, 'Array', Array, 2), 'prototype', 0), 'push', 0), 'apply', 0)(J$.R(4097, 'rules', rules, 0), J$.R(4105, 'newRules', newRules, 0)));
                                            } catch (e) {
                                                e = J$.N(4225, 'e', e, 1);
                                                throw J$.X1(4217, J$.Th(4209, J$.T(4201, {
                                                    message: J$.G(4137, J$.R(4129, 'e', e, 0), 'message', 0),
                                                    index: J$.G(4153, J$.R(4145, 'this', this, 0), 'index', 0),
                                                    filename: J$.G(4177, J$.G(4169, J$.R(4161, 'this', this, 0), 'currentFileInfo', 0), 'filename', 0),
                                                    stack: J$.G(4193, J$.R(4185, 'e', e, 0), 'stack', 0)
                                                }, 11, false)));
                                            }
                                        }
                                    }
                                    if (J$.X1(5905, J$.C(280, J$.R(4233, 'match', match, 0)))) {
                                        return J$.X1(4257, J$.Rt(4249, J$.R(4241, 'rules', rules, 0)));
                                    }
                                }
                            }
                            if (J$.X1(5945, J$.C(304, J$.R(4265, 'isOneFound', isOneFound, 0)))) {
                                throw J$.X1(4377, J$.Th(4369, J$.T(4361, {
                                    type: J$.T(4273, 'Runtime', 21, false),
                                    message: J$.B(442, '+', J$.B(434, '+', J$.T(4281, 'No matching definition was found for `', 21, false), J$.M(4305, J$.R(4289, 'this', this, 0), 'format', 0)(J$.R(4297, 'args', args, 0)), 0), J$.T(4313, '`', 21, false), 0),
                                    index: J$.G(4329, J$.R(4321, 'this', this, 0), 'index', 0),
                                    filename: J$.G(4353, J$.G(4345, J$.R(4337, 'this', this, 0), 'currentFileInfo', 0), 'filename', 0)
                                }, 11, false)));
                            } else {
                                throw J$.X1(4489, J$.Th(4481, J$.T(4473, {
                                    type: J$.T(4385, 'Name', 21, false),
                                    message: J$.B(450, '+', J$.M(4417, J$.M(4409, J$.G(4401, J$.R(4393, 'this', this, 0), 'selector', 0), 'toCSS', 0)(), 'trim', 0)(), J$.T(4425, ' is undefined', 21, false), 0),
                                    index: J$.G(4441, J$.R(4433, 'this', this, 0), 'index', 0),
                                    filename: J$.G(4465, J$.G(4457, J$.R(4449, 'this', this, 0), 'currentFileInfo', 0), 'filename', 0)
                                }, 11, false)));
                            }
                        } catch (J$e) {
                            J$.Ex(5953, J$e);
                        } finally {
                            if (J$.Fr(5961))
                                continue jalangiLabel468;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4497), 0));
            J$.X1(4985, J$.P(4977, J$.G(4769, J$.R(4761, 'MixinCall', MixinCall, 1), 'prototype', 0), '_setVisibilityToReplacement', J$.T(4969, function (replacement) {
                jalangiLabel469:
                    while (true) {
                        try {
                            J$.Fe(4929, arguments.callee, this, arguments);
                            arguments = J$.N(4937, 'arguments', arguments, 4);
                            replacement = J$.N(4945, 'replacement', replacement, 4);
                            J$.N(4953, 'i', i, 0);
                            J$.N(4961, 'rule', rule, 0);
                            var i, rule;
                            if (J$.X1(5993, J$.C(320, J$.M(4785, J$.R(4777, 'this', this, 0), 'blocksVisibility', 0)()))) {
                                for (J$.X1(5977, i = J$.W(4801, 'i', J$.T(4793, 0, 22, false), i, 0)); J$.X1(5969, J$.C(312, J$.B(458, '<', J$.R(4809, 'i', i, 0), J$.G(4825, J$.R(4817, 'replacement', replacement, 0), 'length', 0), 0))); J$.X1(5985, J$.B(482, '-', i = J$.W(4849, 'i', J$.B(474, '+', J$.U(466, '+', J$.R(4841, 'i', i, 0)), J$.T(4833, 1, 22, false), 0), i, 0), J$.T(4857, 1, 22, false), 0))) {
                                    J$.X1(4897, rule = J$.W(4889, 'rule', J$.G(4881, J$.R(4865, 'replacement', replacement, 0), J$.R(4873, 'i', i, 0), 4), rule, 0));
                                    J$.X1(4921, J$.M(4913, J$.R(4905, 'rule', rule, 0), 'addVisibilityBlock', 0)());
                                }
                            }
                        } catch (J$e) {
                            J$.Ex(6001, J$e);
                        } finally {
                            if (J$.Fr(6009))
                                continue jalangiLabel469;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 4929), 0));
            J$.X1(5417, J$.P(5409, J$.G(5001, J$.R(4993, 'MixinCall', MixinCall, 1), 'prototype', 0), 'format', J$.T(5401, function (args) {
                jalangiLabel471:
                    while (true) {
                        try {
                            J$.Fe(5377, arguments.callee, this, arguments);
                            arguments = J$.N(5385, 'arguments', arguments, 4);
                            args = J$.N(5393, 'args', args, 4);
                            return J$.X1(5369, J$.Rt(5361, J$.B(538, '+', J$.B(530, '+', J$.B(490, '+', J$.M(5033, J$.M(5025, J$.G(5017, J$.R(5009, 'this', this, 0), 'selector', 0), 'toCSS', 0)(), 'trim', 0)(), J$.T(5041, '(', 21, false), 0), J$.X1(6049, J$.C(344, J$.R(5049, 'args', args, 0))) ? J$.M(5337, J$.M(5321, J$.R(5057, 'args', args, 0), 'map', 0)(J$.T(5313, function (a) {
                                jalangiLabel470:
                                    while (true) {
                                        try {
                                            J$.Fe(5281, arguments.callee, this, arguments);
                                            arguments = J$.N(5289, 'arguments', arguments, 4);
                                            a = J$.N(5297, 'a', a, 4);
                                            J$.N(5305, 'argValue', argValue, 0);
                                            var argValue = J$.X1(5081, J$.W(5073, 'argValue', J$.T(5065, '', 21, false), argValue, 1));
                                            if (J$.X1(6017, J$.C(328, J$.G(5097, J$.R(5089, 'a', a, 0), 'name', 0)))) {
                                                J$.X1(5145, argValue = J$.W(5137, 'argValue', J$.B(506, '+', J$.R(5129, 'argValue', argValue, 0), J$.B(498, '+', J$.G(5113, J$.R(5105, 'a', a, 0), 'name', 0), J$.T(5121, ':', 21, false), 0), 0), argValue, 0));
                                            }
                                            if (J$.X1(6025, J$.C(336, J$.G(5169, J$.G(5161, J$.R(5153, 'a', a, 0), 'value', 0), 'toCSS', 0)))) {
                                                J$.X1(5217, argValue = J$.W(5209, 'argValue', J$.B(514, '+', J$.R(5201, 'argValue', argValue, 0), J$.M(5193, J$.G(5185, J$.R(5177, 'a', a, 0), 'value', 0), 'toCSS', 0)(), 0), argValue, 0));
                                            } else {
                                                J$.X1(5249, argValue = J$.W(5241, 'argValue', J$.B(522, '+', J$.R(5233, 'argValue', argValue, 0), J$.T(5225, '???', 21, false), 0), argValue, 0));
                                            }
                                            return J$.X1(5273, J$.Rt(5265, J$.R(5257, 'argValue', argValue, 0)));
                                        } catch (J$e) {
                                            J$.Ex(6033, J$e);
                                        } finally {
                                            if (J$.Fr(6041))
                                                continue jalangiLabel470;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 5281)), 'join', 0)(J$.T(5329, ', ', 21, false)) : J$.T(5345, '', 21, false), 0), J$.T(5353, ')', 21, false), 0)));
                        } catch (J$e) {
                            J$.Ex(6057, J$e);
                        } finally {
                            if (J$.Fr(6065))
                                continue jalangiLabel471;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 5377), 0));
            J$.X1(5449, J$.P(5441, J$.R(5425, 'module', module, 2), 'exports', J$.R(5433, 'MixinCall', MixinCall, 1), 0));
        } catch (J$e) {
            J$.Ex(6073, J$e);
        } finally {
            if (J$.Sr(6081)) {
                J$.L();
                continue jalangiLabel472;
            } else {
                J$.L();
                break jalangiLabel472;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
