J$.iids = {"8":[17,13,17,57],"9":[1,20,1,27],"10":[17,13,17,35],"16":[17,13,17,57],"17":[1,28,1,32],"18":[17,39,17,57],"24":[20,13,20,57],"25":[1,20,1,33],"26":[20,13,20,35],"32":[20,13,20,57],"33":[1,20,1,33],"34":[20,39,20,57],"40":[23,13,23,23],"41":[1,20,1,33],"42":[23,13,23,23],"48":[16,9,16,27],"49":[2,26,2,38],"56":[39,9,39,22],"57":[2,26,2,45],"64":[43,9,43,22],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,12,3,19],"89":[3,20,3,28],"97":[3,12,3,29],"105":[3,39,3,46],"113":[3,47,3,56],"121":[3,39,3,57],"129":[3,71,3,78],"137":[3,79,3,92],"145":[3,71,3,93],"153":[3,12,3,29],"161":[3,12,3,29],"169":[3,39,3,57],"177":[3,39,3,57],"185":[3,71,3,93],"193":[3,71,3,93],"201":[5,5,5,9],"209":[5,15,5,17],"217":[5,15,5,24],"219":[5,15,5,22],"225":[5,5,5,24],"233":[5,5,5,25],"241":[6,5,6,9],"249":[6,21,6,29],"257":[6,5,6,29],"265":[6,5,6,30],"273":[7,5,7,9],"281":[7,21,7,29],"289":[7,5,7,29],"297":[7,5,7,30],"305":[4,17,8,2],"313":[4,17,8,2],"321":[4,17,8,2],"329":[4,17,8,2],"337":[4,17,8,2],"345":[4,17,8,2],"353":[4,17,8,2],"361":[4,17,8,2],"369":[9,1,9,10],"377":[9,27,9,31],"385":[9,23,9,33],"393":[9,1,9,33],"401":[9,1,9,34],"409":[10,1,10,10],"417":[10,1,10,20],"425":[10,28,10,39],"433":[10,1,10,39],"441":[10,1,10,40],"449":[11,1,11,10],"457":[11,1,11,20],"465":[12,5,12,9],"473":[12,21,12,28],"481":[12,35,12,39],"489":[12,35,12,48],"497":[12,21,12,49],"499":[12,21,12,34],"505":[12,5,12,49],"513":[12,5,12,50],"521":[11,30,13,2],"529":[11,30,13,2],"537":[11,30,13,2],"545":[11,30,13,2],"553":[11,1,13,2],"561":[11,1,13,3],"569":[14,1,14,10],"577":[14,1,14,20],"585":[15,13,15,17],"593":[15,13,15,26],"601":[15,27,15,28],"609":[15,13,15,29],"617":[15,35,15,42],"625":[15,13,15,43],"627":[15,13,15,34],"633":[15,49,15,53],"641":[15,49,15,62],"649":[15,63,15,64],"657":[15,49,15,65],"665":[15,71,15,78],"673":[15,49,15,79],"675":[15,49,15,70],"681":[15,13,15,43],"689":[15,13,15,43],"697":[15,49,15,79],"705":[15,49,15,79],"713":[16,9,16,16],"721":[16,9,16,27],"723":[16,9,16,25],"729":[17,13,17,14],"737":[17,26,17,35],"745":[17,39,17,40],"753":[17,52,17,57],"761":[18,17,18,18],"769":[18,17,18,28],"771":[18,17,18,26],"777":[18,17,18,28],"785":[18,13,18,29],"793":[20,13,20,14],"801":[20,26,20,35],"809":[20,39,20,40],"817":[20,52,20,57],"825":[21,17,21,18],"833":[21,17,21,28],"835":[21,17,21,26],"841":[21,17,21,28],"849":[21,13,21,29],"857":[23,14,23,15],"865":[23,14,23,23],"873":[25,23,25,34],"881":[26,26,26,56],"889":[24,19,27,14],"897":[24,19,27,14],"905":[24,13,27,15],"913":[29,16,29,17],"921":[29,26,29,33],"929":[29,35,29,39],"937":[29,35,29,42],"945":[29,44,29,45],"953":[29,16,29,46],"955":[29,16,29,25],"961":[29,16,29,46],"969":[29,9,29,47],"977":[31,20,31,29],"985":[31,30,31,34],"993":[31,30,31,37],"1001":[32,13,32,14],"1009":[33,13,33,14],"1017":[31,39,34,10],"1025":[34,12,34,16],"1033":[34,12,34,25],"1041":[31,16,34,26],"1049":[31,16,34,26],"1057":[31,9,34,27],"1065":[14,28,36,2],"1073":[14,28,36,2],"1081":[14,28,36,2],"1089":[14,28,36,2],"1097":[14,28,36,2],"1105":[14,28,36,2],"1113":[14,1,36,2],"1121":[14,1,36,3],"1129":[37,1,37,10],"1137":[37,1,37,20],"1145":[38,5,38,9],"1153":[38,5,38,18],"1161":[38,19,38,20],"1169":[38,5,38,21],"1177":[38,29,38,36],"1185":[38,38,38,44],"1193":[38,5,38,45],"1195":[38,5,38,28],"1201":[38,5,38,46],"1209":[39,9,39,13],"1217":[39,9,39,22],"1225":[40,9,40,15],"1233":[40,20,40,23],"1241":[40,9,40,24],"1243":[40,9,40,19],"1249":[40,9,40,25],"1257":[42,5,42,11],"1265":[42,16,42,20],"1273":[42,16,42,23],"1281":[42,5,42,24],"1283":[42,5,42,15],"1289":[42,5,42,25],"1297":[43,9,43,13],"1305":[43,9,43,22],"1313":[44,9,44,15],"1321":[44,20,44,23],"1329":[44,9,44,24],"1331":[44,9,44,19],"1337":[44,9,44,25],"1345":[46,5,46,9],"1353":[46,5,46,18],"1361":[46,19,46,20],"1369":[46,5,46,21],"1377":[46,29,46,36],"1385":[46,38,46,44],"1393":[46,5,46,45],"1395":[46,5,46,28],"1401":[46,5,46,46],"1409":[37,30,47,2],"1417":[37,30,47,2],"1425":[37,30,47,2],"1433":[37,30,47,2],"1441":[37,30,47,2],"1449":[37,1,47,2],"1457":[37,1,47,3],"1465":[48,1,48,7],"1473":[48,18,48,27],"1481":[48,1,48,27],"1489":[48,1,48,28],"1497":[1,1,48,28],"1505":[1,1,48,28],"1513":[1,1,48,28],"1521":[1,1,48,28],"1529":[1,1,48,28],"1537":[1,1,48,28],"1545":[1,1,48,28],"1553":[4,17,8,2],"1561":[4,17,8,2],"1569":[11,30,13,2],"1577":[11,30,13,2],"1585":[17,9,19,10],"1593":[20,9,22,10],"1601":[23,9,28,10],"1609":[16,5,35,6],"1617":[14,28,36,2],"1625":[14,28,36,2],"1633":[39,5,41,6],"1641":[43,5,45,6],"1649":[37,30,47,2],"1657":[37,30,47,2],"1665":[1,1,48,28],"1673":[1,1,48,28],"nBranches":16,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/operation.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/operation_jalangi_.js","code":"var Node = require(\"./node\"),\n    Color = require(\"./color\"),\n    Dimension = require(\"./dimension\");\n\nvar Operation = function (op, operands, isSpaced) {\n    this.op = op.trim();\n    this.operands = operands;\n    this.isSpaced = isSpaced;\n};\nOperation.prototype = new Node();\nOperation.prototype.type = \"Operation\";\nOperation.prototype.accept = function (visitor) {\n    this.operands = visitor.visit(this.operands);\n};\nOperation.prototype.eval = function (context) {\n    var a = this.operands[0].eval(context),\n        b = this.operands[1].eval(context);\n\n    if (context.isMathOn()) {\n        if (a instanceof Dimension && b instanceof Color) {\n            a = a.toColor();\n        }\n        if (b instanceof Dimension && a instanceof Color) {\n            b = b.toColor();\n        }\n        if (!a.operate) {\n            throw { type: \"Operation\",\n                    message: \"Operation on an invalid type\" };\n        }\n\n        return a.operate(context, this.op, b);\n    } else {\n        return new Operation(this.op, [a, b], this.isSpaced);\n    }\n};\nOperation.prototype.genCSS = function (context, output) {\n    this.operands[0].genCSS(context, output);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    output.add(this.op);\n    if (this.isSpaced) {\n        output.add(\" \");\n    }\n    this.operands[1].genCSS(context, output);\n};\n\nmodule.exports = Operation;\n"};
jalangiLabel353:
    while (true) {
        try {
            J$.Se(1497, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/operation_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/tree/operation.js');
            J$.N(1505, '__secret__S$', __secret__S$, 0);
            J$.N(1513, '__secret__traits__', __secret__traits__, 0);
            J$.N(1521, 'Node', Node, 0);
            J$.N(1529, 'Color', Color, 0);
            J$.N(1537, 'Dimension', Dimension, 0);
            J$.N(1545, 'Operation', Operation, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var Node = J$.X1(161, J$.W(153, 'Node', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, './node', 21, false)), Node, 3)), Color = J$.X1(177, J$.W(169, 'Color', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './color', 21, false)), Color, 3)), Dimension = J$.X1(193, J$.W(185, 'Dimension', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, './dimension', 21, false)), Dimension, 3));
            var Operation = J$.X1(361, J$.W(353, 'Operation', J$.T(345, function (op, operands, isSpaced) {
                jalangiLabel349:
                    while (true) {
                        try {
                            J$.Fe(305, arguments.callee, this, arguments);
                            arguments = J$.N(313, 'arguments', arguments, 4);
                            op = J$.N(321, 'op', op, 4);
                            operands = J$.N(329, 'operands', operands, 4);
                            isSpaced = J$.N(337, 'isSpaced', isSpaced, 4);
                            J$.X1(233, J$.P(225, J$.R(201, 'this', this, 0), 'op', J$.M(217, J$.R(209, 'op', op, 0), 'trim', 0)(), 0));
                            J$.X1(265, J$.P(257, J$.R(241, 'this', this, 0), 'operands', J$.R(249, 'operands', operands, 0), 0));
                            J$.X1(297, J$.P(289, J$.R(273, 'this', this, 0), 'isSpaced', J$.R(281, 'isSpaced', isSpaced, 0), 0));
                        } catch (J$e) {
                            J$.Ex(1553, J$e);
                        } finally {
                            if (J$.Fr(1561))
                                continue jalangiLabel349;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 305), Operation, 3));
            J$.X1(401, J$.P(393, J$.R(369, 'Operation', Operation, 1), 'prototype', J$.F(385, J$.R(377, 'Node', Node, 1), 1)(), 0));
            J$.X1(441, J$.P(433, J$.G(417, J$.R(409, 'Operation', Operation, 1), 'prototype', 0), 'type', J$.T(425, 'Operation', 21, false), 0));
            J$.X1(561, J$.P(553, J$.G(457, J$.R(449, 'Operation', Operation, 1), 'prototype', 0), 'accept', J$.T(545, function (visitor) {
                jalangiLabel350:
                    while (true) {
                        try {
                            J$.Fe(521, arguments.callee, this, arguments);
                            arguments = J$.N(529, 'arguments', arguments, 4);
                            visitor = J$.N(537, 'visitor', visitor, 4);
                            J$.X1(513, J$.P(505, J$.R(465, 'this', this, 0), 'operands', J$.M(497, J$.R(473, 'visitor', visitor, 0), 'visit', 0)(J$.G(489, J$.R(481, 'this', this, 0), 'operands', 0)), 0));
                        } catch (J$e) {
                            J$.Ex(1569, J$e);
                        } finally {
                            if (J$.Fr(1577))
                                continue jalangiLabel350;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 521), 0));
            J$.X1(1121, J$.P(1113, J$.G(577, J$.R(569, 'Operation', Operation, 1), 'prototype', 0), 'eval', J$.T(1105, function (context) {
                jalangiLabel351:
                    while (true) {
                        try {
                            J$.Fe(1065, arguments.callee, this, arguments);
                            arguments = J$.N(1073, 'arguments', arguments, 4);
                            context = J$.N(1081, 'context', context, 4);
                            J$.N(1089, 'a', a, 0);
                            J$.N(1097, 'b', b, 0);
                            var a = J$.X1(689, J$.W(681, 'a', J$.M(625, J$.G(609, J$.G(593, J$.R(585, 'this', this, 0), 'operands', 0), J$.T(601, 0, 22, false), 4), 'eval', 0)(J$.R(617, 'context', context, 0)), a, 1)), b = J$.X1(705, J$.W(697, 'b', J$.M(673, J$.G(657, J$.G(641, J$.R(633, 'this', this, 0), 'operands', 0), J$.T(649, 1, 22, false), 4), 'eval', 0)(J$.R(665, 'context', context, 0)), b, 1));
                            if (J$.X1(1609, J$.C(48, J$.M(721, J$.R(713, 'context', context, 0), 'isMathOn', 0)()))) {
                                if (J$.X1(1585, J$.C(16, J$.C(8, J$.B(10, 'instanceof', J$.R(729, 'a', a, 0), J$.R(737, 'Dimension', Dimension, 1), 0)) ? J$.B(18, 'instanceof', J$.R(745, 'b', b, 0), J$.R(753, 'Color', Color, 1), 0) : J$._()))) {
                                    J$.X1(785, a = J$.W(777, 'a', J$.M(769, J$.R(761, 'a', a, 0), 'toColor', 0)(), a, 0));
                                }
                                if (J$.X1(1593, J$.C(32, J$.C(24, J$.B(26, 'instanceof', J$.R(793, 'b', b, 0), J$.R(801, 'Dimension', Dimension, 1), 0)) ? J$.B(34, 'instanceof', J$.R(809, 'a', a, 0), J$.R(817, 'Color', Color, 1), 0) : J$._()))) {
                                    J$.X1(849, b = J$.W(841, 'b', J$.M(833, J$.R(825, 'b', b, 0), 'toColor', 0)(), b, 0));
                                }
                                if (J$.X1(1601, J$.C(40, J$.U(42, '!', J$.G(865, J$.R(857, 'a', a, 0), 'operate', 0))))) {
                                    throw J$.X1(905, J$.Th(897, J$.T(889, {
                                        type: J$.T(873, 'Operation', 21, false),
                                        message: J$.T(881, 'Operation on an invalid type', 21, false)
                                    }, 11, false)));
                                }
                                return J$.X1(969, J$.Rt(961, J$.M(953, J$.R(913, 'a', a, 0), 'operate', 0)(J$.R(921, 'context', context, 0), J$.G(937, J$.R(929, 'this', this, 0), 'op', 0), J$.R(945, 'b', b, 0))));
                            } else {
                                return J$.X1(1057, J$.Rt(1049, J$.F(1041, J$.R(977, 'Operation', Operation, 1), 1)(J$.G(993, J$.R(985, 'this', this, 0), 'op', 0), J$.T(1017, [
                                    J$.R(1001, 'a', a, 0),
                                    J$.R(1009, 'b', b, 0)
                                ], 10, false), J$.G(1033, J$.R(1025, 'this', this, 0), 'isSpaced', 0))));
                            }
                        } catch (J$e) {
                            J$.Ex(1617, J$e);
                        } finally {
                            if (J$.Fr(1625))
                                continue jalangiLabel351;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1065), 0));
            J$.X1(1457, J$.P(1449, J$.G(1137, J$.R(1129, 'Operation', Operation, 1), 'prototype', 0), 'genCSS', J$.T(1441, function (context, output) {
                jalangiLabel352:
                    while (true) {
                        try {
                            J$.Fe(1409, arguments.callee, this, arguments);
                            arguments = J$.N(1417, 'arguments', arguments, 4);
                            context = J$.N(1425, 'context', context, 4);
                            output = J$.N(1433, 'output', output, 4);
                            J$.X1(1201, J$.M(1193, J$.G(1169, J$.G(1153, J$.R(1145, 'this', this, 0), 'operands', 0), J$.T(1161, 0, 22, false), 4), 'genCSS', 0)(J$.R(1177, 'context', context, 0), J$.R(1185, 'output', output, 0)));
                            if (J$.X1(1633, J$.C(56, J$.G(1217, J$.R(1209, 'this', this, 0), 'isSpaced', 0)))) {
                                J$.X1(1249, J$.M(1241, J$.R(1225, 'output', output, 0), 'add', 0)(J$.T(1233, ' ', 21, false)));
                            }
                            J$.X1(1289, J$.M(1281, J$.R(1257, 'output', output, 0), 'add', 0)(J$.G(1273, J$.R(1265, 'this', this, 0), 'op', 0)));
                            if (J$.X1(1641, J$.C(64, J$.G(1305, J$.R(1297, 'this', this, 0), 'isSpaced', 0)))) {
                                J$.X1(1337, J$.M(1329, J$.R(1313, 'output', output, 0), 'add', 0)(J$.T(1321, ' ', 21, false)));
                            }
                            J$.X1(1401, J$.M(1393, J$.G(1369, J$.G(1353, J$.R(1345, 'this', this, 0), 'operands', 0), J$.T(1361, 1, 22, false), 4), 'genCSS', 0)(J$.R(1377, 'context', context, 0), J$.R(1385, 'output', output, 0)));
                        } catch (J$e) {
                            J$.Ex(1649, J$e);
                        } finally {
                            if (J$.Fr(1657))
                                continue jalangiLabel352;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1409), 0));
            J$.X1(1489, J$.P(1481, J$.R(1465, 'module', module, 2), 'exports', J$.R(1473, 'Operation', Operation, 1), 0));
        } catch (J$e) {
            J$.Ex(1665, J$e);
        } finally {
            if (J$.Sr(1673)) {
                J$.L();
                continue jalangiLabel353;
            } else {
                J$.L();
                break jalangiLabel353;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
