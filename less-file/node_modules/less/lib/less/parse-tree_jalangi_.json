{"8":[18,17,18,25],"9":[1,20,1,27],"10":[38,29,38,54],"16":[27,17,27,34],"17":[1,28,1,32],"18":[38,56,38,59],"24":[38,29,38,54],"25":[1,20,1,33],"32":[36,13,36,34],"33":[1,20,1,33],"34":[38,56,38,59],"40":[46,13,46,30],"41":[1,20,1,33],"42":[51,60,51,94],"48":[51,17,51,94],"49":[2,26,2,38],"56":[51,17,51,94],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[3,17,3,24],"89":[3,25,3,39],"97":[3,17,3,40],"105":[3,58,3,65],"113":[3,66,3,84],"121":[3,58,3,85],"129":[3,96,3,103],"137":[3,104,3,114],"145":[3,96,3,115],"153":[3,17,3,40],"161":[3,17,3,40],"169":[3,58,3,85],"177":[3,58,3,85],"185":[3,96,3,115],"193":[3,96,3,115],"201":[4,1,4,7],"209":[6,9,6,13],"217":[6,21,6,25],"225":[6,9,6,25],"233":[6,9,6,26],"241":[7,9,7,13],"249":[7,24,7,31],"257":[7,9,7,31],"265":[7,9,7,32],"273":[5,21,8,6],"281":[5,21,8,6],"289":[5,21,8,6],"297":[5,21,8,6],"305":[5,21,8,6],"313":[5,21,8,6],"321":[5,21,8,6],"329":[9,5,9,14],"337":[9,5,9,24],"345":[10,33,10,35],"353":[10,33,10,35],"361":[10,33,10,35],"369":[12,25,12,38],"377":[12,39,12,43],"385":[12,39,12,48],"393":[12,50,12,57],"401":[12,25,12,58],"409":[12,25,12,58],"417":[12,13,12,59],"425":[14,23,14,32],"433":[14,33,14,34],"441":[14,36,14,40],"449":[14,36,14,48],"457":[14,19,14,49],"465":[14,19,14,49],"473":[14,13,14,50],"481":[13,11,15,10],"489":[17,28,17,35],"497":[17,36,17,43],"505":[17,36,17,52],"513":[17,28,17,53],"521":[17,28,17,53],"529":[17,28,17,53],"537":[18,17,18,25],"545":[19,17,19,23],"553":[19,29,19,158],"561":[19,17,19,159],"563":[19,17,19,28],"569":[19,17,19,160],"577":[22,27,22,35],"585":[23,34,23,41],"593":[23,34,23,57],"601":[24,30,24,37],"609":[24,38,24,45],"617":[24,38,24,57],"625":[24,30,24,58],"633":[25,31,25,32],"641":[21,32,26,14],"649":[21,32,26,14],"657":[21,32,26,14],"665":[27,17,27,24],"673":[27,17,27,34],"681":[28,40,28,56],"689":[28,57,28,64],"697":[28,57,28,74],"705":[28,36,28,75],"713":[28,36,28,75],"721":[28,17,28,76],"729":[29,17,29,23],"737":[29,30,29,46],"745":[29,53,29,62],"753":[29,64,29,76],"761":[29,78,29,82],"769":[29,78,29,90],"777":[29,30,29,91],"779":[29,30,29,52],"785":[29,17,29,91],"793":[29,17,29,92],"801":[31,17,31,23],"809":[31,30,31,39],"817":[31,46,31,58],"825":[31,30,31,59],"827":[31,30,31,45],"833":[31,17,31,59],"841":[31,17,31,60],"849":[34,23,34,32],"857":[34,33,34,34],"865":[34,36,34,40],"873":[34,36,34,48],"881":[34,19,34,49],"889":[34,19,34,49],"897":[34,13,34,50],"905":[33,11,35,10],"913":[36,13,36,20],"921":[36,13,36,34],"929":[37,34,37,41],"937":[37,34,37,55],"945":[37,34,37,75],"947":[37,34,37,73],"953":[37,34,37,75],"961":[37,34,37,75],"969":[38,26,38,27],"977":[38,26,38,27],"985":[38,26,38,27],"993":[38,29,38,30],"1001":[38,33,38,47],"1009":[38,33,38,54],"1025":[38,56,38,57],"1033":[38,56,38,59],"1049":[39,17,39,23],"1057":[39,30,39,44],"1065":[39,45,39,46],"1073":[39,30,39,47],"1081":[39,56,39,62],"1089":[39,56,39,66],"1097":[40,32,40,48],"1105":[41,30,41,37],"1113":[42,30,42,34],"1121":[42,30,42,42],"1129":[39,68,43,18],"1137":[39,30,43,19],"1139":[39,30,39,55],"1145":[39,17,43,19],"1153":[39,17,43,20],"1161":[46,13,46,20],"1169":[46,13,46,30],"1177":[47,13,47,19],"1185":[47,26,47,42],"1193":[47,26,47,65],"1195":[47,26,47,63],"1201":[47,13,47,65],"1209":[47,13,47,66],"1217":[49,9,49,15],"1225":[49,26,49,28],"1233":[49,9,49,28],"1241":[49,9,49,29],"1249":[50,26,50,30],"1257":[50,26,50,38],"1265":[50,26,50,44],"1273":[51,17,51,21],"1281":[51,17,51,29],"1289":[51,17,51,35],"1297":[51,51,51,55],"1305":[51,17,51,56],"1307":[51,17,51,50],"1313":[51,60,51,64],"1321":[51,69,51,73],"1329":[51,69,51,81],"1337":[51,69,51,94],"1345":[52,17,52,23],"1353":[52,17,52,31],"1361":[52,37,52,41],"1369":[52,17,52,42],"1371":[52,17,52,36],"1377":[52,17,52,43],"1385":[50,26,50,44],"1393":[50,9,54,10],"1401":[50,9,54,10],"1409":[55,16,55,22],"1417":[55,16,55,22],"1425":[55,9,55,23],"1433":[9,33,56,6],"1441":[9,33,56,6],"1449":[9,33,56,6],"1457":[9,33,56,6],"1465":[9,33,56,6],"1473":[9,33,56,6],"1481":[9,33,56,6],"1489":[9,33,56,6],"1497":[9,33,56,6],"1505":[9,33,56,6],"1513":[9,33,56,6],"1521":[9,33,56,6],"1529":[9,5,56,6],"1537":[9,5,56,7],"1545":[57,12,57,21],"1553":[57,12,57,21],"1561":[57,5,57,22],"1569":[4,18,58,2],"1577":[4,18,58,2],"1585":[4,18,58,2],"1593":[4,18,58,2],"1601":[4,18,58,2],"1609":[4,1,58,2],"1617":[4,1,58,3],"1625":[1,1,58,3],"1633":[1,1,58,3],"1641":[1,1,58,3],"1649":[1,1,58,3],"1657":[1,1,58,3],"1665":[1,1,58,3],"1673":[5,21,8,6],"1681":[5,21,8,6],"1689":[18,13,20,14],"1697":[27,13,32,14],"1705":[38,13,44,14],"1713":[38,13,44,14],"1721":[36,9,45,10],"1729":[46,9,48,10],"1737":[51,13,53,14],"1745":[9,33,56,6],"1753":[9,33,56,6],"1761":[4,18,58,2],"1769":[4,18,58,2],"1777":[1,1,58,3],"1785":[1,1,58,3],"nBranches":14,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/parse-tree.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/parse-tree_jalangi_.js","code":"var LessError = require('./less-error'),\n    transformTree = require(\"./transform-tree\"),\n    logger = require(\"./logger\");\n\nmodule.exports = function(SourceMapBuilder) {\n    var ParseTree = function(root, imports) {\n        this.root = root;\n        this.imports = imports;\n    };\n\n    ParseTree.prototype.toCSS = function(options) {\n        var evaldRoot, result = {}, sourceMapBuilder;\n        try {\n            evaldRoot = transformTree(this.root, options);\n        } catch (e) {\n            throw new LessError(e, this.imports);\n        }\n\n        try {\n            var compress = Boolean(options.compress);\n            if (compress) {\n                logger.warn(\"The compress option has been deprecated. We recommend you use a dedicated css minifier, for instance see less-plugin-clean-css.\");\n            }\n\n            var toCSSOptions = {\n                compress: compress,\n                dumpLineNumbers: options.dumpLineNumbers,\n                strictUnits: Boolean(options.strictUnits),\n                numPrecision: 8};\n\n            if (options.sourceMap) {\n                sourceMapBuilder = new SourceMapBuilder(options.sourceMap);\n                result.css = sourceMapBuilder.toCSS(evaldRoot, toCSSOptions, this.imports);\n            } else {\n                result.css = evaldRoot.toCSS(toCSSOptions);\n            }\n        } catch (e) {\n            throw new LessError(e, this.imports);\n        }\n\n        if (options.pluginManager) {\n            var postProcessors = options.pluginManager.getPostProcessors();\n            for (var i = 0; i < postProcessors.length; i++) {\n                result.css = postProcessors[i].process(result.css, { sourceMap: sourceMapBuilder, options: options, imports: this.imports });\n            }\n        }\n        if (options.sourceMap) {\n            result.map = sourceMapBuilder.getExternalSourceMap();\n        }\n\n        result.imports = [];\n        for (var file in this.imports.files) {\n            if (this.imports.files.hasOwnProperty(file) && file !== this.imports.rootFilename) {\n                result.imports.push(file);\n            }\n        }\n        return result;\n    };\n    return ParseTree;\n};\n"}