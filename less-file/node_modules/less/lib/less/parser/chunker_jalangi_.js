J$.iids = {"8":[7,13,7,32],"9":[1,20,1,27],"10":[6,19,6,49],"16":[7,13,7,40],"17":[1,28,1,32],"18":[7,13,7,22],"24":[7,13,7,40],"25":[1,20,1,33],"26":[7,26,7,32],"32":[15,13,15,34],"33":[1,20,1,33],"34":[7,36,7,40],"40":[15,13,15,45],"41":[1,20,1,33],"42":[10,43,10,66],"48":[15,13,15,45],"49":[2,26,2,38],"50":[11,20,11,43],"56":[24,17,24,33],"57":[2,26,2,45],"58":[13,35,13,60],"64":[29,17,29,28],"65":[2,26,2,45],"66":[13,62,13,83],"72":[38,17,38,28],"73":[2,26,2,45],"80":[41,17,41,38],"81":[3,1,3,7],"82":[13,62,13,83],"88":[41,17,41,38],"89":[4,15,4,20],"90":[15,13,15,21],"96":[46,17,46,46],"97":[4,15,4,27],"98":[15,25,15,34],"104":[58,21,58,29],"105":[4,37,4,38],"106":[15,38,15,45],"112":[61,21,61,30],"113":[4,53,4,54],"114":[20,13,20,25],"120":[66,25,66,55],"121":[4,140,4,142],"128":[65,21,65,30],"129":[4,155,4,156],"130":[20,13,20,25],"136":[56,65,56,90],"137":[4,15,4,27],"138":[24,17,24,29],"144":[72,17,72,24],"145":[4,15,4,27],"152":[77,17,77,61],"153":[4,37,4,38],"154":[24,17,24,33],"160":[77,17,77,61],"161":[4,37,4,38],"162":[29,17,29,28],"168":[84,39,84,61],"169":[4,53,4,54],"170":[34,13,34,20],"176":[84,25,84,62],"177":[4,53,4,54],"184":[84,25,84,62],"185":[4,140,4,142],"186":[34,13,34,20],"192":[82,69,82,94],"193":[4,140,4,142],"194":[38,17,38,24],"200":[92,25,92,35],"201":[4,155,4,156],"208":[95,25,95,34],"209":[4,155,4,156],"210":[38,17,38,28],"216":[98,25,98,72],"217":[6,19,6,38],"218":[41,17,41,23],"224":[90,69,90,98],"225":[6,41,6,49],"226":[41,27,41,38],"232":[102,21,102,51],"233":[6,19,6,49],"234":[46,39,46,46],"240":[88,24,88,33],"241":[6,19,6,49],"242":[46,17,46,46],"248":[81,17,81,26],"249":[7,13,7,16],"250":[47,17,47,38],"256":[109,17,109,97],"257":[7,19,7,22],"264":[109,17,109,97],"265":[7,27,7,32],"266":[47,17,47,38],"272":[18,17,18,19],"273":[7,37,7,40],"274":[56,40,56,63],"280":[19,14,19,16],"281":[8,13,8,20],"282":[56,65,56,90],"288":[23,14,23,16],"289":[8,13,8,20],"290":[56,92,56,113],"296":[28,14,28,16],"297":[10,9,10,15],"304":[33,14,33,17],"305":[10,21,10,26],"306":[56,92,56,113],"312":[37,14,37,17],"313":[10,33,10,41],"314":[58,21,58,29],"320":[45,14,45,16],"321":[10,43,10,62],"322":[61,21,61,30],"328":[51,14,51,16],"329":[10,65,10,66],"330":[65,21,65,30],"336":[52,14,52,16],"337":[10,21,10,67],"338":[66,48,66,55],"339":[10,21,10,32],"344":[53,14,53,16],"345":[10,9,10,68],"346":[66,25,66,55],"347":[10,9,10,20],"352":[76,14,76,16],"353":[10,9,10,69],"354":[69,21,69,42],"360":[108,14,108,16],"361":[11,20,11,39],"368":[13,35,13,60],"369":[11,42,11,43],"370":[69,21,69,42],"376":[116,13,116,90],"377":[11,20,11,43],"378":[75,25,75,64],"384":[116,13,116,90],"385":[11,9,11,44],"386":[75,25,75,70],"392":[121,16,121,32],"393":[5,5,12,6],"394":[77,54,77,61],"400":[115,9,115,20],"401":[5,5,12,6],"402":[77,31,77,61],"409":[5,5,12,6],"410":[80,36,80,59],"417":[5,5,12,6],"418":[81,17,81,26],"425":[13,32,13,33],"426":[82,44,82,67],"433":[13,32,13,33],"434":[82,69,82,94],"441":[13,35,13,54],"442":[82,96,82,117],"449":[13,57,13,60],"458":[82,96,82,117],"465":[13,62,13,81],"466":[84,25,84,34],"473":[13,62,13,83],"474":[84,39,84,48],"482":[84,52,84,61],"489":[14,14,14,19],"490":[88,24,88,33],"497":[14,31,14,50],"498":[90,44,90,67],"505":[14,14,14,51],"506":[90,91,90,98],"507":[14,14,14,30],"513":[14,14,14,51],"514":[90,69,90,98],"521":[14,9,14,52],"522":[90,100,90,121],"529":[15,13,15,15],"537":[15,19,15,21],"538":[90,100,90,121],"545":[15,25,15,27],"546":[92,25,92,35],"553":[15,31,15,34],"554":[95,25,95,34],"561":[15,38,15,40],"562":[98,42,98,65],"569":[15,43,15,45],"570":[98,25,98,72],"577":[18,17,18,19],"578":[102,44,102,51],"586":[102,21,102,51],"593":[20,13,20,23],"594":[105,17,105,38],"601":[20,13,20,25],"610":[105,17,105,38],"617":[20,13,20,26],"618":[109,39,109,46],"625":[21,32,21,51],"626":[109,17,109,46],"633":[21,32,21,51],"634":[109,67,109,90],"641":[21,13,21,52],"642":[109,50,109,97],"649":[19,14,19,16],"650":[115,9,115,20],"658":[116,13,116,43],"665":[24,19,24,29],"666":[116,47,116,90],"673":[24,17,24,29],"674":[121,16,121,32],"681":[24,32,24,33],"689":[25,24,25,28],"697":[25,29,25,50],"705":[25,52,25,71],"713":[25,24,25,72],"721":[25,24,25,72],"729":[25,17,25,73],"737":[23,14,23,16],"745":[29,18,29,28],"753":[30,17,30,26],"761":[30,17,30,28],"769":[30,17,30,29],"777":[28,14,28,16],"793":[34,13,34,18],"801":[34,13,34,20],"817":[34,13,34,21],"825":[35,27,35,46],"833":[35,27,35,46],"841":[35,13,35,47],"849":[33,14,33,17],"865":[38,19,38,24],"873":[38,17,38,24],"881":[38,27,38,28],"889":[39,24,39,28],"897":[39,29,39,50],"905":[39,52,39,71],"913":[39,24,39,72],"921":[39,24,39,72],"929":[39,17,39,73],"937":[41,18,41,23],"945":[41,28,41,38],"953":[42,17,42,26],"961":[42,17,42,28],"969":[42,17,42,29],"977":[37,14,37,17],"985":[46,17,46,36],"993":[46,39,46,42],"1001":[46,45,46,46],"1017":[47,17,47,36],"1025":[47,17,47,38],"1041":[47,17,47,39],"1049":[50,20,50,24],"1057":[50,25,50,41],"1065":[50,43,50,62],"1073":[50,20,50,63],"1081":[50,20,50,63],"1089":[50,13,50,64],"1097":[45,14,45,16],"1105":[51,14,51,16],"1113":[52,14,52,16],"1121":[54,23,54,24],"1129":[54,23,54,24],"1137":[54,13,54,25],"1145":[55,38,55,57],"1153":[55,38,55,57],"1161":[55,13,55,58],"1169":[56,40,56,59],"1177":[56,62,56,63],"1185":[56,40,56,63],"1193":[56,65,56,84],"1201":[56,87,56,90],"1217":[56,92,56,111],"1225":[56,92,56,113],"1241":[57,23,57,28],"1249":[57,40,57,59],"1257":[57,23,57,60],"1259":[57,23,57,39],"1265":[57,23,57,60],"1273":[57,17,57,61],"1281":[58,21,58,24],"1289":[58,27,58,29],"1297":[61,21,61,24],"1305":[61,28,61,30],"1313":[62,31,62,32],"1321":[62,31,62,32],"1329":[62,21,62,33],"1337":[65,21,65,24],"1345":[65,28,65,30],"1353":[66,25,66,44],"1361":[66,48,66,51],"1369":[66,54,66,55],"1377":[67,32,67,36],"1385":[67,37,67,53],"1393":[67,55,67,74],"1401":[67,32,67,75],"1409":[67,32,67,75],"1417":[67,25,67,76],"1433":[69,21,69,40],"1441":[69,21,69,42],"1457":[69,21,69,43],"1465":[72,17,72,24],"1473":[75,20,75,24],"1481":[75,25,75,38],"1489":[75,41,75,47],"1497":[75,61,75,63],"1505":[75,41,75,64],"1507":[75,41,75,60],"1513":[75,67,75,70],"1521":[75,72,75,94],"1529":[75,20,75,95],"1537":[75,20,75,95],"1545":[75,13,75,96],"1553":[53,14,53,16],"1561":[77,17,77,27],"1569":[77,31,77,50],"1577":[77,54,77,57],"1585":[77,60,77,61],"1593":[80,19,80,24],"1601":[80,36,80,55],"1609":[80,58,80,59],"1617":[80,19,80,60],"1619":[80,19,80,35],"1625":[80,19,80,60],"1633":[80,13,80,61],"1641":[81,17,81,20],"1649":[81,24,81,26],"1657":[82,44,82,63],"1665":[82,66,82,67],"1673":[82,44,82,67],"1681":[82,69,82,88],"1689":[82,91,82,94],"1705":[82,96,82,115],"1713":[82,96,82,117],"1729":[83,27,83,32],"1737":[83,44,83,63],"1745":[83,27,83,64],"1747":[83,27,83,43],"1753":[83,27,83,64],"1761":[83,21,83,65],"1769":[84,25,84,28],"1777":[84,32,84,34],"1785":[84,39,84,42],"1793":[84,46,84,48],"1801":[84,52,84,55],"1809":[84,59,84,61],"1817":[88,24,88,27],"1825":[88,31,88,33],"1833":[89,61,89,80],"1841":[89,61,89,80],"1849":[89,36,89,80],"1857":[89,17,89,81],"1865":[90,44,90,63],"1873":[90,66,90,67],"1881":[90,44,90,67],"1889":[90,69,90,88],"1897":[90,91,90,94],"1905":[90,97,90,98],"1921":[90,100,90,119],"1929":[90,100,90,121],"1945":[91,27,91,32],"1953":[91,44,91,63],"1961":[91,27,91,64],"1963":[91,27,91,43],"1969":[91,27,91,64],"1977":[91,21,91,65],"1985":[92,25,92,28],"1993":[92,32,92,35],"2001":[93,52,93,71],"2009":[93,52,93,71],"2017":[93,25,93,72],"2025":[95,25,95,28],"2033":[95,32,95,34],"2041":[98,25,98,30],"2049":[98,42,98,61],"2057":[98,64,98,65],"2065":[98,25,98,66],"2067":[98,25,98,41],"2073":[98,70,98,72],"2081":[102,21,102,40],"2089":[102,44,102,47],"2097":[102,50,102,51],"2105":[103,28,103,32],"2113":[103,33,103,55],"2121":[103,57,103,79],"2129":[103,28,103,80],"2137":[103,28,103,80],"2145":[103,21,103,81],"2161":[105,17,105,36],"2169":[105,17,105,38],"2185":[105,17,105,39],"2193":[76,14,76,16],"2201":[109,17,109,36],"2209":[109,39,109,42],"2217":[109,45,109,46],"2225":[109,50,109,55],"2233":[109,67,109,86],"2241":[109,89,109,90],"2249":[109,50,109,91],"2251":[109,50,109,66],"2257":[109,95,109,97],"2265":[110,24,110,28],"2273":[110,29,110,45],"2281":[110,47,110,66],"2289":[110,24,110,67],"2297":[110,24,110,67],"2305":[110,17,110,68],"2313":[108,14,108,16],"2321":[115,9,115,14],"2329":[115,19,115,20],"2337":[116,13,116,29],"2345":[116,32,116,43],"2353":[116,47,116,71],"2361":[116,74,116,90],"2369":[117,20,117,24],"2377":[117,25,117,54],"2385":[117,56,117,67],"2393":[117,20,117,68],"2401":[117,20,117,68],"2409":[117,13,117,69],"2417":[119,20,119,24],"2425":[119,25,119,46],"2433":[119,48,119,59],"2441":[119,20,119,60],"2449":[119,20,119,60],"2457":[119,13,119,61],"2465":[121,16,121,26],"2473":[121,31,121,32],"2481":[122,16,122,20],"2489":[122,21,122,42],"2497":[122,44,122,60],"2505":[122,16,122,61],"2513":[122,16,122,61],"2521":[122,9,122,62],"2529":[124,5,124,14],"2537":[124,15,124,19],"2545":[124,5,124,20],"2553":[124,5,124,21],"2561":[125,12,125,18],"2569":[125,12,125,18],"2577":[125,5,125,19],"2585":[3,18,126,2],"2593":[3,18,126,2],"2601":[3,18,126,2],"2609":[3,18,126,2],"2617":[3,18,126,2],"2625":[3,18,126,2],"2633":[3,18,126,2],"2641":[3,18,126,2],"2649":[3,18,126,2],"2657":[3,18,126,2],"2665":[3,18,126,2],"2673":[3,18,126,2],"2681":[3,18,126,2],"2689":[3,18,126,2],"2697":[3,18,126,2],"2705":[3,18,126,2],"2713":[3,18,126,2],"2721":[3,18,126,2],"2729":[5,5,12,6],"2737":[3,18,126,2],"2745":[3,18,126,2],"2753":[3,1,126,2],"2761":[3,1,126,3],"2769":[1,1,126,3],"2777":[1,1,126,3],"2785":[1,1,126,3],"2793":[7,9,9,10],"2801":[5,5,12,6],"2809":[5,5,12,6],"2817":[15,9,17,10],"2825":[24,13,26,14],"2833":[29,13,31,14],"2841":[38,13,40,14],"2849":[41,13,43,14],"2857":[46,13,49,14],"2865":[58,17,60,18],"2873":[61,17,64,18],"2881":[66,21,68,22],"2889":[65,17,70,18],"2897":[56,13,71,14],"2905":[56,13,71,14],"2913":[56,13,71,14],"2921":[72,13,74,14],"2929":[77,13,79,14],"2937":[84,21,86,22],"2945":[82,17,87,18],"2953":[82,17,87,18],"2961":[82,17,87,18],"2969":[92,21,94,22],"2977":[95,21,97,22],"2985":[98,21,100,22],"2993":[90,17,101,18],"3001":[90,17,101,18],"3009":[90,17,101,18],"3017":[102,17,104,18],"3025":[88,20,106,14],"3033":[81,13,106,14],"3041":[109,13,111,14],"3049":[18,17,18,19],"3057":[19,14,19,16],"3065":[23,14,23,16],"3073":[28,14,28,16],"3081":[33,14,33,17],"3089":[37,14,37,17],"3097":[45,14,45,16],"3105":[51,14,51,16],"3113":[52,14,52,16],"3121":[53,14,53,16],"3129":[76,14,76,16],"3137":[108,14,108,16],"3145":[13,5,114,6],"3153":[13,5,114,6],"3161":[13,5,114,6],"3169":[116,9,120,10],"3177":[121,12,123,6],"3185":[115,5,123,6],"3193":[3,18,126,2],"3201":[3,18,126,2],"3209":[1,1,126,3],"3217":[1,1,126,3],"nBranches":100,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/parser/chunker.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/parser/chunker_jalangi_.js","code":"// Split the input into chunks.\nmodule.exports = function (input, fail) {\n    var len = input.length, level = 0, parenLevel = 0,\n        lastOpening, lastOpeningParen, lastMultiComment, lastMultiCommentEndBrace,\n        chunks = [], emitFrom = 0,\n        chunkerCurrentIndex, currentChunkStartIndex, cc, cc2, matched;\n\n    function emitChunk(force) {\n        var len = chunkerCurrentIndex - emitFrom;\n        if (((len < 512) && !force) || !len) {\n            return;\n        }\n        chunks.push(input.slice(emitFrom, chunkerCurrentIndex + 1));\n        emitFrom = chunkerCurrentIndex + 1;\n    }\n\n    for (chunkerCurrentIndex = 0; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n        cc = input.charCodeAt(chunkerCurrentIndex);\n        if (((cc >= 97) && (cc <= 122)) || (cc < 34)) {\n            // a-z or whitespace\n            continue;\n        }\n\n        switch (cc) {\n            case 40:                        // (\n                parenLevel++;\n                lastOpeningParen = chunkerCurrentIndex;\n                continue;\n            case 41:                        // )\n                if (--parenLevel < 0) {\n                    return fail(\"missing opening `(`\", chunkerCurrentIndex);\n                }\n                continue;\n            case 59:                        // ;\n                if (!parenLevel) { emitChunk(); }\n                continue;\n            case 123:                       // {\n                level++;\n                lastOpening = chunkerCurrentIndex;\n                continue;\n            case 125:                       // }\n                if (--level < 0) {\n                    return fail(\"missing opening `{`\", chunkerCurrentIndex);\n                }\n                if (!level && !parenLevel) { emitChunk(); }\n                continue;\n            case 92:                        // \\\n                if (chunkerCurrentIndex < len - 1) { chunkerCurrentIndex++; continue; }\n                return fail(\"unescaped `\\\\`\", chunkerCurrentIndex);\n            case 34:\n            case 39:\n            case 96:                        // \", ' and `\n                matched = 0;\n                currentChunkStartIndex = chunkerCurrentIndex;\n                for (chunkerCurrentIndex = chunkerCurrentIndex + 1; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                    cc2 = input.charCodeAt(chunkerCurrentIndex);\n                    if (cc2 > 96) { continue; }\n                    if (cc2 == cc) { matched = 1; break; }\n                    if (cc2 == 92) {        // \\\n                        if (chunkerCurrentIndex == len - 1) {\n                            return fail(\"unescaped `\\\\`\", chunkerCurrentIndex);\n                        }\n                        chunkerCurrentIndex++;\n                    }\n                }\n                if (matched) { continue; }\n                return fail(\"unmatched `\" + String.fromCharCode(cc) + \"`\", currentChunkStartIndex);\n            case 47:                        // /, check for comment\n                if (parenLevel || (chunkerCurrentIndex == len - 1)) { continue; }\n                cc2 = input.charCodeAt(chunkerCurrentIndex + 1);\n                if (cc2 == 47) {\n                    // //, find lnfeed\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if ((cc2 <= 13) && ((cc2 == 10) || (cc2 == 13))) { break; }\n                    }\n                } else if (cc2 == 42) {\n                    // /*, find */\n                    lastMultiComment = currentChunkStartIndex = chunkerCurrentIndex;\n                    for (chunkerCurrentIndex = chunkerCurrentIndex + 2; chunkerCurrentIndex < len - 1; chunkerCurrentIndex++) {\n                        cc2 = input.charCodeAt(chunkerCurrentIndex);\n                        if (cc2 == 125) { lastMultiCommentEndBrace = chunkerCurrentIndex; }\n                        if (cc2 != 42) { continue; }\n                        if (input.charCodeAt(chunkerCurrentIndex + 1) == 47) { break; }\n                    }\n                    if (chunkerCurrentIndex == len - 1) {\n                        return fail(\"missing closing `*/`\", currentChunkStartIndex);\n                    }\n                    chunkerCurrentIndex++;\n                }\n                continue;\n            case 42:                       // *, check for unmatched */\n                if ((chunkerCurrentIndex < len - 1) && (input.charCodeAt(chunkerCurrentIndex + 1) == 47)) {\n                    return fail(\"unmatched `/*`\", chunkerCurrentIndex);\n                }\n                continue;\n        }\n    }\n\n    if (level !== 0) {\n        if ((lastMultiComment > lastOpening) && (lastMultiCommentEndBrace > lastMultiComment)) {\n            return fail(\"missing closing `}` or `*/`\", lastOpening);\n        } else {\n            return fail(\"missing closing `}`\", lastOpening);\n        }\n    } else if (parenLevel !== 0) {\n        return fail(\"missing closing `)`\", lastOpeningParen);\n    }\n\n    emitChunk(true);\n    return chunks;\n};\n"};
jalangiLabel732:
    while (true) {
        try {
            J$.Se(2769, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/parser/chunker_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/parser/chunker.js');
            J$.N(2777, '__secret__S$', __secret__S$, 0);
            J$.N(2785, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(2761, J$.P(2753, J$.R(81, 'module', module, 2), 'exports', J$.T(2745, function (input, fail) {
                jalangiLabel731:
                    while (true) {
                        try {
                            J$.Fe(2585, arguments.callee, this, arguments);
                            function emitChunk(force) {
                                jalangiLabel730:
                                    while (true) {
                                        try {
                                            J$.Fe(393, arguments.callee, this, arguments);
                                            arguments = J$.N(401, 'arguments', arguments, 4);
                                            force = J$.N(409, 'force', force, 4);
                                            J$.N(417, 'len', len, 0);
                                            var len = J$.X1(241, J$.W(233, 'len', J$.B(10, '-', J$.R(217, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.R(225, 'emitFrom', emitFrom, 0), 0), len, 1));
                                            if (J$.X1(2793, J$.C(24, J$.C(16, J$.C(8, J$.B(18, '<', J$.R(249, 'len', len, 0), J$.T(257, 512, 22, false), 0)) ? J$.U(26, '!', J$.R(265, 'force', force, 0)) : J$._()) ? J$._() : J$.U(34, '!', J$.R(273, 'len', len, 0))))) {
                                                return J$.X1(289, J$.Rt(281, undefined));
                                            }
                                            J$.X1(353, J$.M(345, J$.R(297, 'chunks', chunks, 0), 'push', 0)(J$.M(337, J$.R(305, 'input', input, 0), 'slice', 0)(J$.R(313, 'emitFrom', emitFrom, 0), J$.B(42, '+', J$.R(321, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(329, 1, 22, false), 0))));
                                            J$.X1(385, emitFrom = J$.W(377, 'emitFrom', J$.B(50, '+', J$.R(361, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(369, 1, 22, false), 0), emitFrom, 0));
                                        } catch (J$e) {
                                            J$.Ex(2801, J$e);
                                        } finally {
                                            if (J$.Fr(2809))
                                                continue jalangiLabel730;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }
                            arguments = J$.N(2593, 'arguments', arguments, 4);
                            input = J$.N(2601, 'input', input, 4);
                            fail = J$.N(2609, 'fail', fail, 4);
                            J$.N(2617, 'len', len, 0);
                            J$.N(2625, 'level', level, 0);
                            J$.N(2633, 'parenLevel', parenLevel, 0);
                            J$.N(2641, 'lastOpening', lastOpening, 0);
                            J$.N(2649, 'lastOpeningParen', lastOpeningParen, 0);
                            J$.N(2657, 'lastMultiComment', lastMultiComment, 0);
                            J$.N(2665, 'lastMultiCommentEndBrace', lastMultiCommentEndBrace, 0);
                            J$.N(2673, 'chunks', chunks, 0);
                            J$.N(2681, 'emitFrom', emitFrom, 0);
                            J$.N(2689, 'chunkerCurrentIndex', chunkerCurrentIndex, 0);
                            J$.N(2697, 'currentChunkStartIndex', currentChunkStartIndex, 0);
                            J$.N(2705, 'cc', cc, 0);
                            J$.N(2713, 'cc2', cc2, 0);
                            J$.N(2721, 'matched', matched, 0);
                            emitChunk = J$.N(2737, 'emitChunk', J$.T(2729, emitChunk, 12, false, 393), 0);
                            var len = J$.X1(145, J$.W(137, 'len', J$.G(97, J$.R(89, 'input', input, 0), 'length', 0), len, 1)), level = J$.X1(161, J$.W(153, 'level', J$.T(105, 0, 22, false), level, 1)), parenLevel = J$.X1(177, J$.W(169, 'parenLevel', J$.T(113, 0, 22, false), parenLevel, 1)), lastOpening, lastOpeningParen, lastMultiComment, lastMultiCommentEndBrace, chunks = J$.X1(193, J$.W(185, 'chunks', J$.T(121, [], 10, false), chunks, 1)), emitFrom = J$.X1(209, J$.W(201, 'emitFrom', J$.T(129, 0, 22, false), emitFrom, 1)), chunkerCurrentIndex, currentChunkStartIndex, cc, cc2, matched;
                            for (J$.X1(3153, chunkerCurrentIndex = J$.W(433, 'chunkerCurrentIndex', J$.T(425, 0, 22, false), chunkerCurrentIndex, 0)); J$.X1(3145, J$.C(368, J$.B(58, '<', J$.R(441, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.R(449, 'len', len, 0), 0))); J$.X1(3161, J$.B(82, '-', chunkerCurrentIndex = J$.W(473, 'chunkerCurrentIndex', J$.B(74, '+', J$.U(66, '+', J$.R(465, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), J$.T(457, 1, 22, false), 0), chunkerCurrentIndex, 0), J$.T(481, 1, 22, false), 0))) {
                                J$.X1(521, cc = J$.W(513, 'cc', J$.M(505, J$.R(489, 'input', input, 0), 'charCodeAt', 0)(J$.R(497, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), cc, 0));
                                if (J$.X1(2817, J$.C(48, J$.C(40, J$.C(32, J$.B(90, '>=', J$.R(529, 'cc', cc, 0), J$.T(537, 97, 22, false), 0)) ? J$.B(98, '<=', J$.R(545, 'cc', cc, 0), J$.T(553, 122, 22, false), 0) : J$._()) ? J$._() : J$.B(106, '<', J$.R(561, 'cc', cc, 0), J$.T(569, 34, 22, false), 0)))) {
                                    continue;
                                }
                                switch (J$.X1(3049, J$.C1(272, J$.R(577, 'cc', cc, 0)))) {
                                case J$.X1(3057, J$.C2(280, J$.T(649, 40, 22, false))):
                                    J$.X1(617, J$.B(130, '-', parenLevel = J$.W(601, 'parenLevel', J$.B(122, '+', J$.U(114, '+', J$.R(593, 'parenLevel', parenLevel, 0)), J$.T(585, 1, 22, false), 0), parenLevel, 0), J$.T(609, 1, 22, false), 0));
                                    J$.X1(641, lastOpeningParen = J$.W(633, 'lastOpeningParen', J$.R(625, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), lastOpeningParen, 0));
                                    continue;
                                case J$.X1(3065, J$.C2(288, J$.T(737, 41, 22, false))):
                                    if (J$.X1(2825, J$.C(56, J$.B(154, '<', parenLevel = J$.W(673, 'parenLevel', J$.B(146, '-', J$.U(138, '+', J$.R(665, 'parenLevel', parenLevel, 0)), J$.T(657, 1, 22, false), 0), parenLevel, 0), J$.T(681, 0, 22, false), 0)))) {
                                        return J$.X1(729, J$.Rt(721, J$.F(713, J$.R(689, 'fail', fail, 0), 0)(J$.T(697, 'missing opening `(`', 21, false), J$.R(705, 'chunkerCurrentIndex', chunkerCurrentIndex, 0))));
                                    }
                                    continue;
                                case J$.X1(3073, J$.C2(296, J$.T(777, 59, 22, false))):
                                    if (J$.X1(2833, J$.C(64, J$.U(162, '!', J$.R(745, 'parenLevel', parenLevel, 0))))) {
                                        J$.X1(769, J$.F(761, J$.R(753, 'emitChunk', emitChunk, 0), 0)());
                                    }
                                    continue;
                                case J$.X1(3081, J$.C2(304, J$.T(849, 123, 22, false))):
                                    J$.X1(817, J$.B(186, '-', level = J$.W(801, 'level', J$.B(178, '+', J$.U(170, '+', J$.R(793, 'level', level, 0)), J$.T(785, 1, 22, false), 0), level, 0), J$.T(809, 1, 22, false), 0));
                                    J$.X1(841, lastOpening = J$.W(833, 'lastOpening', J$.R(825, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), lastOpening, 0));
                                    continue;
                                case J$.X1(3089, J$.C2(312, J$.T(977, 125, 22, false))):
                                    if (J$.X1(2841, J$.C(72, J$.B(210, '<', level = J$.W(873, 'level', J$.B(202, '-', J$.U(194, '+', J$.R(865, 'level', level, 0)), J$.T(857, 1, 22, false), 0), level, 0), J$.T(881, 0, 22, false), 0)))) {
                                        return J$.X1(929, J$.Rt(921, J$.F(913, J$.R(889, 'fail', fail, 0), 0)(J$.T(897, 'missing opening `{`', 21, false), J$.R(905, 'chunkerCurrentIndex', chunkerCurrentIndex, 0))));
                                    }
                                    if (J$.X1(2849, J$.C(88, J$.C(80, J$.U(218, '!', J$.R(937, 'level', level, 0))) ? J$.U(226, '!', J$.R(945, 'parenLevel', parenLevel, 0)) : J$._()))) {
                                        J$.X1(969, J$.F(961, J$.R(953, 'emitChunk', emitChunk, 0), 0)());
                                    }
                                    continue;
                                case J$.X1(3097, J$.C2(320, J$.T(1097, 92, 22, false))):
                                    if (J$.X1(2857, J$.C(96, J$.B(242, '<', J$.R(985, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.B(234, '-', J$.R(993, 'len', len, 0), J$.T(1001, 1, 22, false), 0), 0)))) {
                                        J$.X1(1041, J$.B(266, '-', chunkerCurrentIndex = J$.W(1025, 'chunkerCurrentIndex', J$.B(258, '+', J$.U(250, '+', J$.R(1017, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), J$.T(1009, 1, 22, false), 0), chunkerCurrentIndex, 0), J$.T(1033, 1, 22, false), 0));
                                        continue;
                                    }
                                    return J$.X1(1089, J$.Rt(1081, J$.F(1073, J$.R(1049, 'fail', fail, 0), 0)(J$.T(1057, 'unescaped `\\`', 21, false), J$.R(1065, 'chunkerCurrentIndex', chunkerCurrentIndex, 0))));
                                case J$.X1(3105, J$.C2(328, J$.T(1105, 34, 22, false))):
                                case J$.X1(3113, J$.C2(336, J$.T(1113, 39, 22, false))):
                                case J$.X1(3121, J$.C2(344, J$.T(1553, 96, 22, false))):
                                    J$.X1(1137, matched = J$.W(1129, 'matched', J$.T(1121, 0, 22, false), matched, 0));
                                    J$.X1(1161, currentChunkStartIndex = J$.W(1153, 'currentChunkStartIndex', J$.R(1145, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), currentChunkStartIndex, 0));
                                    for (J$.X1(2905, chunkerCurrentIndex = J$.W(1185, 'chunkerCurrentIndex', J$.B(274, '+', J$.R(1169, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(1177, 1, 22, false), 0), chunkerCurrentIndex, 0)); J$.X1(2897, J$.C(136, J$.B(282, '<', J$.R(1193, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.R(1201, 'len', len, 0), 0))); J$.X1(2913, J$.B(306, '-', chunkerCurrentIndex = J$.W(1225, 'chunkerCurrentIndex', J$.B(298, '+', J$.U(290, '+', J$.R(1217, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), J$.T(1209, 1, 22, false), 0), chunkerCurrentIndex, 0), J$.T(1233, 1, 22, false), 0))) {
                                        J$.X1(1273, cc2 = J$.W(1265, 'cc2', J$.M(1257, J$.R(1241, 'input', input, 0), 'charCodeAt', 0)(J$.R(1249, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), cc2, 0));
                                        if (J$.X1(2865, J$.C(104, J$.B(314, '>', J$.R(1281, 'cc2', cc2, 0), J$.T(1289, 96, 22, false), 0)))) {
                                            continue;
                                        }
                                        if (J$.X1(2873, J$.C(112, J$.B(322, '==', J$.R(1297, 'cc2', cc2, 0), J$.R(1305, 'cc', cc, 0), 0)))) {
                                            J$.X1(1329, matched = J$.W(1321, 'matched', J$.T(1313, 1, 22, false), matched, 0));
                                            break;
                                        }
                                        if (J$.X1(2889, J$.C(128, J$.B(330, '==', J$.R(1337, 'cc2', cc2, 0), J$.T(1345, 92, 22, false), 0)))) {
                                            if (J$.X1(2881, J$.C(120, J$.B(346, '==', J$.R(1353, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.B(338, '-', J$.R(1361, 'len', len, 0), J$.T(1369, 1, 22, false), 0), 0)))) {
                                                return J$.X1(1417, J$.Rt(1409, J$.F(1401, J$.R(1377, 'fail', fail, 0), 0)(J$.T(1385, 'unescaped `\\`', 21, false), J$.R(1393, 'chunkerCurrentIndex', chunkerCurrentIndex, 0))));
                                            }
                                            J$.X1(1457, J$.B(370, '-', chunkerCurrentIndex = J$.W(1441, 'chunkerCurrentIndex', J$.B(362, '+', J$.U(354, '+', J$.R(1433, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), J$.T(1425, 1, 22, false), 0), chunkerCurrentIndex, 0), J$.T(1449, 1, 22, false), 0));
                                        }
                                    }
                                    if (J$.X1(2921, J$.C(144, J$.R(1465, 'matched', matched, 0)))) {
                                        continue;
                                    }
                                    return J$.X1(1545, J$.Rt(1537, J$.F(1529, J$.R(1473, 'fail', fail, 0), 0)(J$.B(386, '+', J$.B(378, '+', J$.T(1481, 'unmatched `', 21, false), J$.M(1505, J$.R(1489, 'String', String, 2), 'fromCharCode', 0)(J$.R(1497, 'cc', cc, 0)), 0), J$.T(1513, '`', 21, false), 0), J$.R(1521, 'currentChunkStartIndex', currentChunkStartIndex, 0))));
                                case J$.X1(3129, J$.C2(352, J$.T(2193, 47, 22, false))):
                                    if (J$.X1(2929, J$.C(160, J$.C(152, J$.R(1561, 'parenLevel', parenLevel, 0)) ? J$._() : J$.B(402, '==', J$.R(1569, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.B(394, '-', J$.R(1577, 'len', len, 0), J$.T(1585, 1, 22, false), 0), 0)))) {
                                        continue;
                                    }
                                    J$.X1(1633, cc2 = J$.W(1625, 'cc2', J$.M(1617, J$.R(1593, 'input', input, 0), 'charCodeAt', 0)(J$.B(410, '+', J$.R(1601, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(1609, 1, 22, false), 0)), cc2, 0));
                                    if (J$.X1(3033, J$.C(248, J$.B(418, '==', J$.R(1641, 'cc2', cc2, 0), J$.T(1649, 47, 22, false), 0)))) {
                                        for (J$.X1(2953, chunkerCurrentIndex = J$.W(1673, 'chunkerCurrentIndex', J$.B(426, '+', J$.R(1657, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(1665, 2, 22, false), 0), chunkerCurrentIndex, 0)); J$.X1(2945, J$.C(192, J$.B(434, '<', J$.R(1681, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.R(1689, 'len', len, 0), 0))); J$.X1(2961, J$.B(458, '-', chunkerCurrentIndex = J$.W(1713, 'chunkerCurrentIndex', J$.B(450, '+', J$.U(442, '+', J$.R(1705, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), J$.T(1697, 1, 22, false), 0), chunkerCurrentIndex, 0), J$.T(1721, 1, 22, false), 0))) {
                                            J$.X1(1761, cc2 = J$.W(1753, 'cc2', J$.M(1745, J$.R(1729, 'input', input, 0), 'charCodeAt', 0)(J$.R(1737, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), cc2, 0));
                                            if (J$.X1(2937, J$.C(184, J$.C(176, J$.B(466, '<=', J$.R(1769, 'cc2', cc2, 0), J$.T(1777, 13, 22, false), 0)) ? J$.C(168, J$.B(474, '==', J$.R(1785, 'cc2', cc2, 0), J$.T(1793, 10, 22, false), 0)) ? J$._() : J$.B(482, '==', J$.R(1801, 'cc2', cc2, 0), J$.T(1809, 13, 22, false), 0) : J$._()))) {
                                                break;
                                            }
                                        }
                                    } else if (J$.X1(3025, J$.C(240, J$.B(490, '==', J$.R(1817, 'cc2', cc2, 0), J$.T(1825, 42, 22, false), 0)))) {
                                        J$.X1(1857, lastMultiComment = J$.W(1849, 'lastMultiComment', currentChunkStartIndex = J$.W(1841, 'currentChunkStartIndex', J$.R(1833, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), currentChunkStartIndex, 0), lastMultiComment, 0));
                                        for (J$.X1(3001, chunkerCurrentIndex = J$.W(1881, 'chunkerCurrentIndex', J$.B(498, '+', J$.R(1865, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(1873, 2, 22, false), 0), chunkerCurrentIndex, 0)); J$.X1(2993, J$.C(224, J$.B(514, '<', J$.R(1889, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.B(506, '-', J$.R(1897, 'len', len, 0), J$.T(1905, 1, 22, false), 0), 0))); J$.X1(3009, J$.B(538, '-', chunkerCurrentIndex = J$.W(1929, 'chunkerCurrentIndex', J$.B(530, '+', J$.U(522, '+', J$.R(1921, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), J$.T(1913, 1, 22, false), 0), chunkerCurrentIndex, 0), J$.T(1937, 1, 22, false), 0))) {
                                            J$.X1(1977, cc2 = J$.W(1969, 'cc2', J$.M(1961, J$.R(1945, 'input', input, 0), 'charCodeAt', 0)(J$.R(1953, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), cc2, 0));
                                            if (J$.X1(2969, J$.C(200, J$.B(546, '==', J$.R(1985, 'cc2', cc2, 0), J$.T(1993, 125, 22, false), 0)))) {
                                                J$.X1(2017, lastMultiCommentEndBrace = J$.W(2009, 'lastMultiCommentEndBrace', J$.R(2001, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), lastMultiCommentEndBrace, 0));
                                            }
                                            if (J$.X1(2977, J$.C(208, J$.B(554, '!=', J$.R(2025, 'cc2', cc2, 0), J$.T(2033, 42, 22, false), 0)))) {
                                                continue;
                                            }
                                            if (J$.X1(2985, J$.C(216, J$.B(570, '==', J$.M(2065, J$.R(2041, 'input', input, 0), 'charCodeAt', 0)(J$.B(562, '+', J$.R(2049, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(2057, 1, 22, false), 0)), J$.T(2073, 47, 22, false), 0)))) {
                                                break;
                                            }
                                        }
                                        if (J$.X1(3017, J$.C(232, J$.B(586, '==', J$.R(2081, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.B(578, '-', J$.R(2089, 'len', len, 0), J$.T(2097, 1, 22, false), 0), 0)))) {
                                            return J$.X1(2145, J$.Rt(2137, J$.F(2129, J$.R(2105, 'fail', fail, 0), 0)(J$.T(2113, 'missing closing `*/`', 21, false), J$.R(2121, 'currentChunkStartIndex', currentChunkStartIndex, 0))));
                                        }
                                        J$.X1(2185, J$.B(610, '-', chunkerCurrentIndex = J$.W(2169, 'chunkerCurrentIndex', J$.B(602, '+', J$.U(594, '+', J$.R(2161, 'chunkerCurrentIndex', chunkerCurrentIndex, 0)), J$.T(2153, 1, 22, false), 0), chunkerCurrentIndex, 0), J$.T(2177, 1, 22, false), 0));
                                    }
                                    continue;
                                case J$.X1(3137, J$.C2(360, J$.T(2313, 42, 22, false))):
                                    if (J$.X1(3041, J$.C(264, J$.C(256, J$.B(626, '<', J$.R(2201, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.B(618, '-', J$.R(2209, 'len', len, 0), J$.T(2217, 1, 22, false), 0), 0)) ? J$.B(642, '==', J$.M(2249, J$.R(2225, 'input', input, 0), 'charCodeAt', 0)(J$.B(634, '+', J$.R(2233, 'chunkerCurrentIndex', chunkerCurrentIndex, 0), J$.T(2241, 1, 22, false), 0)), J$.T(2257, 47, 22, false), 0) : J$._()))) {
                                        return J$.X1(2305, J$.Rt(2297, J$.F(2289, J$.R(2265, 'fail', fail, 0), 0)(J$.T(2273, 'unmatched `/*`', 21, false), J$.R(2281, 'chunkerCurrentIndex', chunkerCurrentIndex, 0))));
                                    }
                                    continue;
                                }
                            }
                            if (J$.X1(3185, J$.C(400, J$.B(650, '!==', J$.R(2321, 'level', level, 0), J$.T(2329, 0, 22, false), 0)))) {
                                if (J$.X1(3169, J$.C(384, J$.C(376, J$.B(658, '>', J$.R(2337, 'lastMultiComment', lastMultiComment, 0), J$.R(2345, 'lastOpening', lastOpening, 0), 0)) ? J$.B(666, '>', J$.R(2353, 'lastMultiCommentEndBrace', lastMultiCommentEndBrace, 0), J$.R(2361, 'lastMultiComment', lastMultiComment, 0), 0) : J$._()))) {
                                    return J$.X1(2409, J$.Rt(2401, J$.F(2393, J$.R(2369, 'fail', fail, 0), 0)(J$.T(2377, 'missing closing `}` or `*/`', 21, false), J$.R(2385, 'lastOpening', lastOpening, 0))));
                                } else {
                                    return J$.X1(2457, J$.Rt(2449, J$.F(2441, J$.R(2417, 'fail', fail, 0), 0)(J$.T(2425, 'missing closing `}`', 21, false), J$.R(2433, 'lastOpening', lastOpening, 0))));
                                }
                            } else if (J$.X1(3177, J$.C(392, J$.B(674, '!==', J$.R(2465, 'parenLevel', parenLevel, 0), J$.T(2473, 0, 22, false), 0)))) {
                                return J$.X1(2521, J$.Rt(2513, J$.F(2505, J$.R(2481, 'fail', fail, 0), 0)(J$.T(2489, 'missing closing `)`', 21, false), J$.R(2497, 'lastOpeningParen', lastOpeningParen, 0))));
                            }
                            J$.X1(2553, J$.F(2545, J$.R(2529, 'emitChunk', emitChunk, 0), 0)(J$.T(2537, true, 23, false)));
                            return J$.X1(2577, J$.Rt(2569, J$.R(2561, 'chunks', chunks, 0)));
                        } catch (J$e) {
                            J$.Ex(3193, J$e);
                        } finally {
                            if (J$.Fr(3201))
                                continue jalangiLabel731;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2585), 0));
        } catch (J$e) {
            J$.Ex(3209, J$e);
        } finally {
            if (J$.Sr(3217)) {
                J$.L();
                continue jalangiLabel732;
            } else {
                J$.L();
                break jalangiLabel732;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
