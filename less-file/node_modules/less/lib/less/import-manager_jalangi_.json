{"8":[7,22,7,41],"9":[1,20,1,27],"10":[21,38,21,77],"16":[22,17,22,44],"17":[1,28,1,32],"18":[26,26,26,46],"24":[26,21,26,46],"25":[1,20,1,33],"26":[39,13,39,25],"32":[26,21,26,46],"33":[1,20,1,33],"34":[40,39,40,82],"40":[22,17,22,44],"41":[1,20,1,33],"42":[51,21,51,70],"48":[39,13,39,25],"49":[2,26,2,38],"56":[44,57,44,77],"57":[2,26,2,45],"64":[43,13,43,35],"65":[2,26,2,45],"72":[50,57,50,93],"73":[2,26,2,45],"80":[51,21,51,111],"81":[3,16,3,23],"88":[51,21,51,111],"89":[3,24,3,36],"96":[49,17,49,41],"97":[3,16,3,37],"104":[59,17,59,69],"105":[3,48,3,55],"112":[59,17,59,69],"113":[3,56,3,73],"120":[66,24,66,44],"121":[3,48,3,74],"128":[62,17,62,37],"129":[3,95,3,102],"136":[75,17,75,20],"137":[3,103,3,132],"144":[81,13,81,20],"145":[3,95,3,133],"153":[3,16,3,37],"161":[3,16,3,37],"169":[3,48,3,74],"177":[3,48,3,74],"185":[3,95,3,133],"193":[3,95,3,133],"201":[4,1,4,7],"209":[6,9,6,13],"217":[6,29,6,41],"225":[6,29,6,50],"233":[6,9,6,50],"241":[6,9,6,51],"249":[7,9,7,13],"257":[7,22,7,29],"265":[7,22,7,35],"273":[7,39,7,41],"281":[7,9,7,41],"289":[7,9,7,42],"297":[8,9,8,13],"305":[8,25,8,27],"313":[8,9,8,27],"321":[8,9,8,28],"329":[9,9,9,13],"337":[9,37,9,39],"345":[9,9,9,39],"353":[9,9,9,40],"361":[10,9,10,13],"369":[10,21,10,28],"377":[10,21,10,33],"385":[10,9,10,33],"393":[10,9,10,34],"401":[11,9,11,13],"409":[11,22,11,26],"417":[11,9,11,26],"425":[11,9,11,27],"433":[12,9,12,13],"441":[12,24,12,31],"449":[12,9,12,31],"457":[12,9,12,32],"465":[13,9,13,13],"473":[13,22,13,24],"481":[13,9,13,24],"489":[13,9,13,25],"497":[14,9,14,13],"505":[14,22,14,24],"513":[14,9,14,24],"521":[14,9,14,25],"529":[5,25,15,6],"537":[5,25,15,6],"545":[5,25,15,6],"553":[5,25,15,6],"561":[5,25,15,6],"569":[5,25,15,6],"577":[5,25,15,6],"585":[16,5,16,18],"593":[16,5,16,28],"601":[17,29,17,33],"609":[17,29,17,33],"617":[17,29,17,33],"625":[18,9,18,13],"633":[18,9,18,19],"641":[18,25,18,29],"649":[18,9,18,30],"651":[18,9,18,24],"657":[18,9,18,31],"665":[20,13,20,26],"673":[20,13,20,32],"681":[20,40,20,53],"689":[20,40,20,59],"697":[20,68,20,72],"705":[20,40,20,73],"707":[20,40,20,67],"713":[20,75,20,76],"721":[20,13,20,77],"723":[20,13,20,39],"729":[20,13,20,78],"737":[21,38,21,46],"745":[21,51,21,64],"753":[21,51,21,77],"761":[21,38,21,77],"769":[21,38,21,77],"777":[22,17,22,30],"785":[22,17,22,39],"793":[22,43,22,44],"801":[23,17,23,25],"809":[23,26,23,30],"817":[23,41,23,43],"825":[23,32,23,45],"833":[23,47,23,52],"841":[23,54,23,58],"849":[23,17,23,59],"857":[23,17,23,60],"865":[25,17,25,30],"873":[25,17,25,36],"881":[25,37,25,45],"889":[25,49,25,53],"897":[25,17,25,53],"905":[25,17,25,54],"913":[26,21,26,22],"921":[26,27,26,40],"929":[26,27,26,46],"937":[27,21,27,34],"945":[27,43,27,44],"953":[27,21,27,44],"961":[27,21,27,45],"969":[29,17,29,25],"977":[29,26,29,27],"985":[29,29,29,33],"993":[29,35,29,53],"1001":[29,55,29,63],"1009":[29,17,29,64],"1017":[29,17,29,65],"1025":[19,30,31,10],"1033":[19,30,31,10],"1041":[19,30,31,10],"1049":[19,30,31,10],"1057":[19,30,31,10],"1065":[19,30,31,10],"1073":[19,30,31,10],"1081":[19,30,31,10],"1089":[19,30,31,10],"1097":[33,27,33,31],"1105":[33,27,33,39],"1113":[33,27,33,52],"1121":[34,24,34,39],"1129":[34,24,34,49],"1137":[35,23,35,38],"1145":[35,23,35,47],"1153":[36,27,36,42],"1161":[36,27,36,55],"1169":[32,27,37,10],"1177":[32,27,37,10],"1185":[32,27,37,10],"1193":[38,27,38,38],"1201":[38,54,38,58],"1209":[38,60,38,75],"1217":[38,60,38,92],"1225":[38,94,38,98],"1233":[38,94,38,106],"1241":[38,108,38,119],"1249":[38,27,38,120],"1251":[38,27,38,53],"1257":[38,27,38,120],"1265":[38,27,38,120],"1273":[39,14,39,25],"1281":[40,13,40,27],"1289":[40,39,40,75],"1297":[40,78,40,82],"1305":[40,28,40,84],"1313":[40,13,40,85],"1321":[40,13,40,86],"1329":[41,13,41,20],"1337":[41,13,41,20],"1345":[43,13,43,35],"1353":[44,20,44,31],"1361":[44,51,44,55],"1369":[44,57,44,70],"1377":[44,57,44,77],"1385":[44,80,44,85],"1393":[44,88,44,95],"1401":[44,20,44,96],"1403":[44,20,44,50],"1409":[44,20,44,96],"1417":[44,13,44,97],"1425":[47,36,47,46],"1433":[47,36,47,55],"1441":[47,68,47,78],"1449":[47,68,47,87],"1457":[47,96,47,105],"1465":[47,107,47,109],"1473":[47,68,47,110],"1475":[47,68,47,95],"1481":[47,36,47,55],"1489":[47,36,47,55],"1497":[47,68,47,110],"1505":[47,68,47,110],"1513":[48,13,48,24],"1521":[48,44,48,55],"1529":[48,64,48,80],"1537":[48,44,48,81],"1539":[48,44,48,63],"1545":[48,13,48,81],"1553":[48,13,48,82],"1561":[49,17,49,28],"1569":[49,17,49,41],"1577":[50,17,50,28],"1585":[50,40,50,51],"1593":[50,57,50,70],"1601":[50,57,50,78],"1609":[50,57,50,87],"1617":[50,91,50,93],"1625":[50,95,50,106],"1633":[50,116,50,127],"1641":[50,116,50,144],"1649":[50,146,50,157],"1657":[50,146,50,167],"1665":[50,95,50,168],"1667":[50,95,50,115],"1673":[50,40,50,169],"1675":[50,40,50,56],"1681":[50,17,50,169],"1689":[50,17,50,170],"1697":[51,22,51,33],"1705":[51,49,51,60],"1713":[51,49,51,69],"1721":[51,22,51,70],"1723":[51,22,51,48],"1729":[51,74,51,85],"1737":[51,74,51,111],"1739":[51,74,51,109],"1745":[52,21,52,32],"1753":[52,44,52,55],"1761":[52,61,52,72],"1769":[52,61,52,82],"1777":[52,84,52,95],"1785":[52,84,52,104],"1793":[52,44,52,105],"1795":[52,44,52,60],"1801":[52,21,52,105],"1809":[52,21,52,106],"1817":[55,13,55,24],"1825":[55,36,55,52],"1833":[55,13,55,52],"1841":[55,13,55,53],"1849":[56,30,56,38],"1857":[56,45,56,58],"1865":[56,45,56,66],"1873":[56,26,56,67],"1875":[56,30,56,44],"1881":[56,26,56,67],"1889":[56,26,56,67],"1897":[57,13,57,19],"1905":[57,37,57,42],"1913":[57,13,57,42],"1921":[57,13,57,43],"1929":[58,13,58,26],"1937":[58,13,58,35],"1945":[58,36,58,52],"1953":[58,56,58,64],"1961":[58,13,58,64],"1969":[58,13,58,65],"1977":[59,17,59,32],"1985":[59,17,59,42],"1993":[59,46,59,59],"2001":[59,46,59,69],"2009":[60,17,60,28],"2017":[60,41,60,45],"2025":[60,17,60,45],"2033":[60,17,60,46],"2041":[62,17,62,30],"2049":[62,17,62,37],"2057":[63,21,63,37],"2065":[63,38,63,44],"2073":[63,46,63,57],"2081":[63,17,63,58],"2089":[63,64,63,72],"2097":[64,21,64,35],"2105":[64,36,64,37],"2113":[64,39,64,43],"2121":[64,45,64,61],"2129":[64,21,64,62],"2137":[64,21,64,63],"2145":[63,74,65,18],"2153":[63,74,65,18],"2161":[63,74,65,18],"2169":[63,74,65,18],"2177":[63,74,65,18],"2185":[63,17,65,19],"2187":[63,17,63,63],"2193":[63,17,65,20],"2201":[66,24,66,37],"2209":[66,24,66,44],"2217":[67,17,67,31],"2225":[67,32,67,36],"2233":[67,38,67,46],"2241":[67,48,67,64],"2249":[67,17,67,65],"2257":[67,17,67,66],"2265":[69,21,69,27],"2273":[69,28,69,34],"2281":[69,36,69,49],"2289":[69,51,69,62],"2297":[69,17,69,63],"2305":[69,70,69,78],"2313":[70,21,70,35],"2321":[70,36,70,37],"2329":[70,39,70,43],"2337":[70,45,70,61],"2345":[70,21,70,62],"2353":[70,21,70,63],"2361":[69,80,71,18],"2369":[69,80,71,18],"2377":[69,80,71,18],"2385":[69,80,71,18],"2393":[69,80,71,18],"2401":[69,17,71,19],"2403":[69,17,69,69],"2409":[69,17,71,20],"2417":[46,32,73,10],"2425":[46,32,73,10],"2433":[46,32,73,10],"2441":[46,32,73,10],"2449":[46,32,73,10],"2457":[46,32,73,10],"2465":[46,32,73,10],"2473":[46,32,73,10],"2481":[46,32,73,10],"2489":[74,23,74,34],"2497":[74,44,74,48],"2505":[74,50,74,65],"2513":[74,50,74,82],"2521":[74,84,74,88],"2529":[74,84,74,96],"2537":[74,98,74,109],"2545":[75,17,75,20],"2553":[76,17,76,31],"2561":[76,32,76,35],"2569":[76,17,76,36],"2577":[76,17,76,37],"2585":[78,17,78,33],"2593":[78,34,78,44],"2601":[78,17,78,45],"2609":[78,17,78,46],"2617":[74,111,80,10],"2625":[74,111,80,10],"2633":[74,111,80,10],"2641":[74,111,80,10],"2649":[74,111,80,10],"2657":[74,23,80,11],"2659":[74,23,74,43],"2665":[74,23,80,11],"2673":[74,23,80,11],"2681":[81,13,81,20],"2689":[82,13,82,20],"2697":[82,26,82,42],"2705":[82,44,82,58],"2713":[82,13,82,59],"2715":[82,13,82,25],"2721":[82,13,82,60],"2729":[16,36,84,6],"2737":[16,36,84,6],"2745":[16,36,84,6],"2753":[16,36,84,6],"2761":[16,36,84,6],"2769":[16,36,84,6],"2777":[16,36,84,6],"2785":[16,36,84,6],"2793":[16,36,84,6],"2801":[16,36,84,6],"2809":[16,36,84,6],"2817":[16,36,84,6],"2825":[16,36,84,6],"2833":[16,36,84,6],"2841":[16,5,84,6],"2849":[16,5,84,7],"2857":[85,12,85,25],"2865":[85,12,85,25],"2873":[85,5,85,26],"2881":[4,18,86,2],"2889":[4,18,86,2],"2897":[4,18,86,2],"2905":[4,18,86,2],"2913":[4,18,86,2],"2921":[4,1,86,2],"2929":[4,1,86,3],"2937":[1,1,86,3],"2945":[1,1,86,3],"2953":[1,1,86,3],"2961":[1,1,86,3],"2969":[1,1,86,3],"2977":[1,1,86,3],"2985":[5,25,15,6],"2993":[5,25,15,6],"3001":[26,17,28,18],"3009":[22,13,30,14],"3017":[19,30,31,10],"3025":[19,30,31,10],"3033":[39,9,42,10],"3041":[44,57,44,95],"3049":[43,9,45,10],"3057":[51,17,53,18],"3065":[49,13,54,14],"3073":[59,13,61,14],"3081":[63,74,65,18],"3089":[63,74,65,18],"3097":[69,80,71,18],"3105":[69,80,71,18],"3113":[66,20,72,14],"3121":[62,13,72,14],"3129":[46,32,73,10],"3137":[46,32,73,10],"3145":[75,13,79,14],"3153":[74,111,80,10],"3161":[74,111,80,10],"3169":[81,9,83,10],"3177":[16,36,84,6],"3185":[16,36,84,6],"3193":[4,18,86,2],"3201":[4,18,86,2],"3209":[1,1,86,3],"3217":[1,1,86,3],"nBranches":36,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/import-manager.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/import-manager_jalangi_.js","code":"var contexts = require(\"./contexts\"),\n    Parser = require('./parser/parser'),\n    FunctionImporter = require('./plugins/function-importer');\n\nmodule.exports = function(environment) {\n\n    // FileInfo = {\n    //  'relativeUrls' - option - whether to adjust URL's to be relative\n    //  'filename' - full resolved filename of current file\n    //  'rootpath' - path to append to normal URLs for this node\n    //  'currentDirectory' - path to the current file, absolute\n    //  'rootFilename' - filename of the base file\n    //  'entryPath' - absolute path to the entry file\n    //  'reference' - whether the file should not be output and only output parts that are referenced\n\n    var ImportManager = function(context, rootFileInfo) {\n        this.rootFilename = rootFileInfo.filename;\n        this.paths = context.paths || [];  // Search paths, when importing\n        this.contents = {};             // map - filename to contents of all the files\n        this.contentsIgnoredChars = {}; // map - filename to lines at the beginning of each file to ignore\n        this.mime = context.mime;\n        this.error = null;\n        this.context = context;\n        // Deprecated? Unused outside of here, could be useful.\n        this.queue = [];        // Files which haven't been imported yet\n        this.files = {};        // Holds the imported parse trees.\n    };\n    /**\n     * Add an import to be imported\n     * @param path - the raw path\n     * @param tryAppendLessExtension - whether to try appending the less extension (if the path has no extension)\n     * @param currentFileInfo - the current file info (used for instance to work out relative paths)\n     * @param importOptions - import options\n     * @param callback - callback for when it is imported\n     */\n    ImportManager.prototype.push = function (path, tryAppendLessExtension, currentFileInfo, importOptions, callback) {\n        var importManager = this;\n        this.queue.push(path);\n\n        var fileParsedFunc = function (e, root, fullPath) {\n            importManager.queue.splice(importManager.queue.indexOf(path), 1); // Remove the path from the queue\n\n            var importedEqualsRoot = fullPath === importManager.rootFilename;\n            if (importOptions.optional && e) {\n                callback(null, {rules:[]}, false, null);\n            }\n            else {\n                importManager.files[fullPath] = root;\n                if (e && !importManager.error) { importManager.error = e; }\n                callback(e, root, importedEqualsRoot, fullPath);\n            }\n        };\n\n        var newFileInfo = {\n            relativeUrls: this.context.relativeUrls,\n            entryPath: currentFileInfo.entryPath,\n            rootpath: currentFileInfo.rootpath,\n            rootFilename: currentFileInfo.rootFilename\n        };\n\n        var fileManager = environment.getFileManager(path, currentFileInfo.currentDirectory, this.context, environment);\n\n        if (!fileManager) {\n            fileParsedFunc({ message: \"Could not find a file-manager for \" + path });\n            return;\n        }\n\n        if (tryAppendLessExtension) {\n            path = fileManager.tryAppendExtension(path, importOptions.plugin ? \".js\" : \".less\");\n        }\n\n        var loadFileCallback = function(loadedFile) {\n            var resolvedFilename = loadedFile.filename,\n                contents = loadedFile.contents.replace(/^\\uFEFF/, '');\n\n            // Pass on an updated rootpath if path of imported file is relative and file\n            // is in a (sub|sup) directory\n            //\n            // Examples:\n            // - If path of imported file is 'module/nav/nav.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/module/nav/'\n            // - If path of imported file is '../mixins.less' and rootpath is 'less/',\n            //   then rootpath should become 'less/../'\n            newFileInfo.currentDirectory = fileManager.getPath(resolvedFilename);\n            if (newFileInfo.relativeUrls) {\n                newFileInfo.rootpath = fileManager.join(\n                    (importManager.context.rootpath || \"\"),\n                    fileManager.pathDiff(newFileInfo.currentDirectory, newFileInfo.entryPath));\n\n                if (!fileManager.isPathAbsolute(newFileInfo.rootpath) && fileManager.alwaysMakePathsAbsolute()) {\n                    newFileInfo.rootpath = fileManager.join(newFileInfo.entryPath, newFileInfo.rootpath);\n                }\n            }\n            newFileInfo.filename = resolvedFilename;\n\n            var newEnv = new contexts.Parse(importManager.context);\n\n            newEnv.processImports = false;\n            importManager.contents[resolvedFilename] = contents;\n\n            if (currentFileInfo.reference || importOptions.reference) {\n                newFileInfo.reference = true;\n            }\n\n            if (importOptions.plugin) {\n                new FunctionImporter(newEnv, newFileInfo).eval(contents, function (e, root) {\n                    fileParsedFunc(e, root, resolvedFilename);\n                });\n            } else if (importOptions.inline) {\n                fileParsedFunc(null, contents, resolvedFilename);\n            } else {\n                new Parser(newEnv, importManager, newFileInfo).parse(contents, function (e, root) {\n                    fileParsedFunc(e, root, resolvedFilename);\n                });\n            }\n        };\n\n        var promise = fileManager.loadFile(path, currentFileInfo.currentDirectory, this.context, environment,\n            function(err, loadedFile) {\n            if (err) {\n                fileParsedFunc(err);\n            } else {\n                loadFileCallback(loadedFile);\n            }\n        });\n        if (promise) {\n            promise.then(loadFileCallback, fileParsedFunc);\n        }\n    };\n    return ImportManager;\n};\n"}