{"8":[6,13,6,42],"9":[1,20,1,27],"10":[6,13,6,27],"16":[12,38,12,68],"17":[1,28,1,32],"18":[6,13,6,42],"24":[11,17,11,36],"25":[1,20,1,33],"26":[10,13,10,22],"32":[17,25,17,28],"33":[1,20,1,33],"34":[11,17,11,36],"40":[26,21,26,24],"41":[1,20,1,33],"42":[12,38,12,52],"48":[10,13,10,22],"49":[2,26,2,38],"50":[12,38,12,68],"57":[2,26,2,45],"65":[2,26,2,45],"73":[2,26,2,45],"81":[4,1,4,7],"89":[6,20,6,27],"97":[6,32,6,42],"105":[7,24,7,31],"113":[7,24,7,31],"121":[7,13,7,32],"129":[8,23,8,25],"137":[8,23,8,25],"145":[8,13,8,26],"153":[10,14,10,22],"161":[11,18,11,36],"169":[12,45,12,52],"177":[12,57,12,68],"185":[12,71,12,78],"193":[12,79,12,88],"201":[12,71,12,89],"209":[12,92,12,99],"217":[12,38,12,99],"225":[12,17,12,100],"233":[14,24,14,28],"241":[14,24,14,28],"249":[14,24,14,28],"257":[15,24,15,42],"265":[16,17,16,23],"273":[16,29,16,33],"281":[16,35,16,40],"289":[16,42,16,49],"297":[17,25,17,28],"305":[18,25,18,31],"313":[18,32,18,35],"321":[18,25,18,36],"329":[18,25,18,37],"337":[20,25,20,32],"345":[20,33,20,39],"353":[20,25,20,40],"361":[20,25,20,41],"369":[16,51,22,18],"377":[16,51,22,18],"385":[16,51,22,18],"393":[16,51,22,18],"401":[16,51,22,18],"409":[16,17,22,19],"411":[16,17,16,28],"417":[16,17,22,20],"425":[15,43,23,14],"433":[15,43,23,14],"441":[15,43,23,14],"449":[15,43,23,14],"457":[15,43,23,14],"465":[15,20,23,15],"473":[15,20,23,15],"481":[15,13,23,16],"489":[25,13,25,17],"497":[25,24,25,29],"505":[25,31,25,38],"513":[26,21,26,24],"521":[27,28,27,36],"529":[27,37,27,40],"537":[27,28,27,41],"545":[27,28,27,41],"553":[27,21,27,42],"561":[31,41,31,50],"569":[31,51,31,55],"577":[31,57,31,64],"585":[31,37,31,65],"593":[31,37,31,65],"601":[31,37,31,65],"609":[32,30,32,39],"617":[32,46,32,53],"625":[32,30,32,54],"627":[32,30,32,45],"633":[32,30,32,54],"641":[32,21,32,55],"649":[34,28,34,36],"657":[34,37,34,40],"665":[34,28,34,41],"673":[34,28,34,41],"681":[34,21,34,42],"689":[33,19,35,18],"697":[36,17,36,25],"705":[36,26,36,30],"713":[36,32,36,38],"721":[36,17,36,39],"729":[36,17,36,40],"737":[25,40,37,14],"745":[25,40,37,14],"753":[25,40,37,14],"761":[25,40,37,14],"769":[25,40,37,14],"777":[25,40,37,14],"785":[25,40,37,14],"793":[25,40,37,14],"801":[25,40,37,14],"809":[25,13,37,15],"811":[25,13,25,23],"817":[25,13,37,16],"825":[5,18,39,6],"833":[5,18,39,6],"841":[5,18,39,6],"849":[5,18,39,6],"857":[5,18,39,6],"865":[5,18,39,6],"873":[5,18,39,6],"881":[5,18,39,6],"889":[5,18,39,6],"897":[40,12,40,18],"905":[40,12,40,18],"913":[40,5,40,19],"921":[4,18,41,2],"929":[4,18,41,2],"937":[4,18,41,2],"945":[4,18,41,2],"953":[4,18,41,2],"961":[4,18,41,2],"969":[4,18,41,2],"977":[4,1,41,2],"985":[4,1,41,3],"993":[1,1,41,3],"1001":[1,1,41,3],"1009":[1,1,41,3],"1017":[1,1,41,3],"1025":[6,9,9,10],"1033":[12,38,12,99],"1041":[11,13,13,14],"1049":[17,21,21,22],"1057":[16,51,22,18],"1065":[16,51,22,18],"1073":[15,43,23,14],"1081":[15,43,23,14],"1089":[26,17,28,18],"1097":[25,40,37,14],"1105":[25,40,37,14],"1113":[10,9,38,10],"1121":[5,18,39,6],"1129":[5,18,39,6],"1137":[4,18,41,2],"1145":[4,18,41,2],"1153":[1,1,41,3],"1161":[1,1,41,3],"nBranches":12,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/render.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/render_jalangi_.js","code":"var PromiseConstructor;\n\nmodule.exports = function(environment, ParseTree, ImportManager) {\n    var render = function (input, options, callback) {\n        if (typeof options === 'function') {\n            callback = options;\n            options = {};\n        }\n\n        if (!callback) {\n            if (!PromiseConstructor) {\n                PromiseConstructor = typeof Promise === 'undefined' ? require('promise') : Promise;\n            }\n            var self = this;\n            return new PromiseConstructor(function (resolve, reject) {\n                render.call(self, input, options, function(err, output) {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        resolve(output);\n                    }\n                });\n            });\n        } else {\n            this.parse(input, options, function(err, root, imports, options) {\n                if (err) { return callback(err); }\n\n                var result;\n                try {\n                    var parseTree = new ParseTree(root, imports);\n                    result = parseTree.toCSS(options);\n                }\n                catch (err) { return callback(err); }\n\n                callback(null, result);\n            });\n        }\n    };\n\n    return render;\n};\n"}