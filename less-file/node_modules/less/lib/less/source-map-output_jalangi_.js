J$.iids = {"8":[9,13,9,38],"9":[1,20,1,27],"10":[19,48,19,82],"16":[14,13,14,38],"17":[1,28,1,32],"18":[19,17,19,91],"24":[19,17,19,91],"25":[1,20,1,33],"26":[32,40,32,87],"32":[17,13,17,38],"33":[1,20,1,33],"34":[34,17,34,44],"40":[32,13,32,87],"41":[1,20,1,33],"42":[34,48,34,74],"48":[34,17,34,74],"49":[2,26,2,38],"50":[38,16,38,58],"56":[34,17,34,74],"57":[2,26,2,45],"58":[41,13,41,19],"64":[32,13,32,87],"65":[2,26,2,45],"66":[48,26,48,74],"72":[38,17,38,46],"73":[2,26,2,45],"74":[49,21,49,30],"80":[41,13,41,19],"81":[3,1,3,7],"82":[56,41,56,63],"88":[49,21,49,30],"89":[5,9,5,13],"90":[59,25,59,41],"96":[47,17,47,65],"97":[5,21,5,23],"98":[61,17,61,26],"104":[45,13,45,21],"105":[5,9,5,23],"106":[64,31,64,51],"112":[78,37,78,44],"113":[5,9,5,24],"114":[74,29,74,45],"120":[82,37,82,44],"121":[6,9,6,13],"122":[74,47,74,50],"128":[74,29,74,45],"129":[6,26,6,33],"136":[61,17,61,26],"137":[6,26,6,42],"138":[74,47,74,50],"144":[60,13,60,21],"145":[6,9,6,42],"146":[77,35,77,55],"152":[89,13,89,31],"153":[6,9,6,43],"154":[77,35,77,59],"160":[109,25,109,64],"161":[7,9,7,13],"162":[78,37,78,44],"168":[107,21,107,63],"169":[7,29,7,36],"170":[81,35,81,57],"176":[105,13,105,36],"177":[7,29,7,48],"178":[82,37,82,44],"184":[121,24,121,47],"185":[7,9,7,48],"186":[89,13,89,31],"192":[119,17,119,34],"193":[7,9,7,49],"194":[92,33,92,49],"200":[117,13,117,33],"201":[8,9,8,13],"202":[98,16,98,38],"209":[8,41,8,48],"210":[117,13,117,33],"217":[8,41,8,72],"225":[8,9,8,72],"233":[8,9,8,73],"241":[9,13,9,20],"249":[9,13,9,38],"257":[10,13,10,17],"265":[10,39,10,46],"273":[10,39,10,64],"281":[10,73,10,78],"289":[10,80,10,83],"297":[10,39,10,84],"299":[10,39,10,72],"305":[10,13,10,84],"313":[10,13,10,85],"321":[12,9,12,13],"329":[12,32,12,39],"337":[12,32,12,54],"345":[12,9,12,54],"353":[12,9,12,55],"361":[13,9,13,13],"369":[13,29,13,36],"377":[13,29,13,49],"385":[13,9,13,49],"393":[13,9,13,50],"401":[14,13,14,20],"409":[14,13,14,38],"417":[15,13,15,17],"425":[15,39,15,46],"433":[15,39,15,64],"441":[15,73,15,78],"449":[15,80,15,83],"457":[15,39,15,84],"459":[15,39,15,72],"465":[15,13,15,84],"473":[15,13,15,85],"481":[17,13,17,20],"489":[17,13,17,38],"497":[18,13,18,17],"505":[18,39,18,46],"513":[18,39,18,64],"521":[18,73,18,78],"529":[18,80,18,83],"537":[18,39,18,84],"539":[18,39,18,72],"545":[18,13,18,84],"553":[18,13,18,85],"561":[19,17,19,21],"569":[19,17,19,40],"577":[19,48,19,52],"585":[19,48,19,71],"593":[19,48,19,78],"601":[19,81,19,82],"609":[19,17,19,83],"611":[19,17,19,47],"617":[19,88,19,91],"625":[20,17,20,21],"633":[20,44,20,47],"641":[20,17,20,47],"643":[20,17,20,47],"649":[20,17,20,48],"657":[23,13,23,17],"665":[23,39,23,41],"673":[23,13,23,41],"681":[23,13,23,42],"689":[25,9,25,13],"697":[25,35,25,42],"705":[25,35,25,60],"713":[25,9,25,60],"721":[25,9,25,61],"729":[26,9,26,13],"737":[26,47,26,58],"745":[26,47,26,82],"747":[26,47,26,80],"753":[26,9,26,82],"761":[26,9,26,83],"769":[27,9,27,13],"777":[27,28,27,29],"785":[27,9,27,29],"793":[27,9,27,30],"801":[28,9,28,13],"809":[28,24,28,25],"817":[28,9,28,25],"825":[28,9,28,26],"833":[4,27,29,6],"841":[4,27,29,6],"849":[4,27,29,6],"857":[4,27,29,6],"865":[4,27,29,6],"873":[4,27,29,6],"881":[30,5,30,20],"889":[30,5,30,30],"897":[31,20,31,28],"905":[31,37,31,42],"913":[31,44,31,47],"921":[31,20,31,48],"923":[31,20,31,36],"929":[31,20,31,48],"937":[31,9,31,49],"945":[32,13,32,17],"953":[32,13,32,36],"961":[32,40,32,48],"969":[32,57,32,61],"977":[32,57,32,80],"985":[32,40,32,81],"987":[32,40,32,56],"993":[32,86,32,87],"1001":[33,24,33,32],"1009":[33,43,33,47],"1017":[33,43,33,66],"1025":[33,43,33,73],"1033":[33,24,33,74],"1035":[33,24,33,42],"1041":[33,24,33,74],"1049":[33,13,33,75],"1057":[34,17,34,25],"1065":[34,33,34,34],"1073":[34,17,34,35],"1075":[34,17,34,32],"1081":[34,40,34,44],"1089":[34,48,34,56],"1097":[34,64,34,65],"1105":[34,48,34,66],"1107":[34,48,34,63],"1113":[34,71,34,74],"1121":[35,28,35,36],"1129":[35,47,35,48],"1137":[35,28,35,49],"1139":[35,28,35,46],"1145":[35,28,35,49],"1153":[35,17,35,50],"1161":[38,17,38,21],"1169":[38,17,38,40],"1177":[38,44,38,46],"1185":[38,50,38,58],"1193":[38,16,38,58],"1201":[38,9,38,59],"1209":[30,51,39,6],"1217":[30,51,39,6],"1225":[30,51,39,6],"1233":[30,51,39,6],"1241":[30,5,39,6],"1249":[30,5,39,7],"1257":[40,5,40,20],"1265":[40,5,40,30],"1273":[41,14,41,19],"1281":[42,13,42,20],"1289":[42,13,42,20],"1297":[45,13,45,21],"1305":[46,31,46,35],"1313":[46,31,46,48],"1321":[46,49,46,57],"1329":[46,49,46,66],"1337":[46,31,46,67],"1345":[46,31,46,67],"1353":[46,31,46,67],"1361":[47,17,47,21],"1369":[47,17,47,46],"1377":[47,47,47,55],"1385":[47,47,47,64],"1393":[47,17,47,65],"1401":[48,26,48,30],"1409":[48,26,48,55],"1417":[48,56,48,64],"1425":[48,56,48,73],"1433":[48,26,48,74],"1441":[48,17,48,22],"1449":[48,17,48,74],"1457":[48,17,48,75],"1465":[49,21,49,26],"1473":[49,29,49,30],"1481":[50,29,50,30],"1489":[50,29,50,30],"1497":[50,21,50,31],"1505":[52,31,52,42],"1513":[52,49,52,53],"1521":[52,49,52,78],"1529":[52,79,52,87],"1537":[52,79,52,96],"1545":[52,49,52,97],"1553":[52,31,52,98],"1555":[52,31,52,48],"1561":[52,31,52,98],"1569":[52,17,52,99],"1577":[54,27,54,38],"1585":[54,49,54,50],"1593":[54,52,54,57],"1601":[54,27,54,58],"1603":[54,27,54,48],"1609":[54,27,54,58],"1617":[54,13,54,59],"1625":[55,27,55,38],"1633":[55,45,55,49],"1641":[55,27,55,50],"1643":[55,27,55,44],"1649":[55,27,55,50],"1657":[55,13,55,51],"1665":[56,29,56,40],"1673":[56,41,56,52],"1681":[56,41,56,59],"1689":[56,62,56,63],"1697":[56,29,56,64],"1705":[56,29,56,64],"1713":[56,13,56,65],"1721":[58,17,58,22],"1729":[58,29,58,33],"1737":[58,17,58,34],"1739":[58,17,58,28],"1745":[58,17,58,34],"1753":[58,9,58,35],"1761":[59,19,59,24],"1769":[59,25,59,30],"1777":[59,25,59,37],"1785":[59,40,59,41],"1793":[59,19,59,42],"1801":[59,19,59,42],"1809":[59,9,59,43],"1817":[60,13,60,21],"1825":[61,18,61,26],"1833":[62,17,62,21],"1841":[62,17,62,41],"1849":[64,31,64,35],"1857":[64,31,64,47],"1865":[64,50,64,51],"1873":[65,33,65,37],"1881":[65,33,65,45],"1889":[63,32,66,22],"1897":[68,31,68,42],"1905":[68,31,68,49],"1913":[69,33,69,46],"1921":[69,33,69,53],"1929":[67,31,70,22],"1937":[71,29,71,33],"1945":[71,52,71,60],"1953":[71,52,71,69],"1961":[71,29,71,70],"1963":[71,29,71,51],"1969":[62,53,72,18],"1977":[62,17,72,19],"1979":[62,17,62,52],"1985":[62,17,72,20],"1993":[74,26,74,27],"2001":[74,26,74,27],"2009":[74,29,74,30],"2017":[74,33,74,38],"2025":[74,33,74,45],"2041":[74,47,74,48],"2049":[74,47,74,50],"2065":[75,21,75,25],"2073":[75,21,75,45],"2081":[77,35,77,39],"2089":[77,35,77,51],"2097":[77,54,77,55],"2105":[77,58,77,59],"2113":[78,37,78,38],"2121":[78,43,78,44],"2129":[78,47,78,51],"2137":[78,47,78,59],"2145":[78,62,78,63],"2153":[76,36,79,26],"2161":[81,35,81,46],"2169":[81,35,81,53],"2177":[81,56,81,57],"2185":[82,37,82,38],"2193":[82,43,82,44],"2201":[82,47,82,60],"2209":[82,47,82,67],"2217":[82,70,82,71],"2225":[80,35,83,26],"2233":[84,33,84,37],"2241":[84,56,84,64],"2249":[84,56,84,73],"2257":[84,33,84,74],"2259":[84,33,84,55],"2265":[75,57,85,22],"2273":[75,21,85,23],"2275":[75,21,75,56],"2281":[75,21,85,24],"2289":[89,13,89,18],"2297":[89,13,89,25],"2305":[89,30,89,31],"2313":[90,13,90,17],"2321":[90,29,90,36],"2329":[90,29,90,43],"2337":[90,13,90,43],"2339":[90,13,90,43],"2345":[90,13,90,44],"2353":[92,13,92,17],"2361":[92,33,92,38],"2369":[92,33,92,45],"2377":[92,48,92,49],"2385":[92,13,92,49],"2387":[92,13,92,49],"2393":[92,13,92,50],"2401":[93,13,93,17],"2409":[93,28,93,35],"2417":[93,28,93,42],"2425":[93,13,93,42],"2433":[93,13,93,43],"2441":[95,9,95,13],"2449":[95,9,95,18],"2457":[95,24,95,29],"2465":[95,9,95,30],"2467":[95,9,95,23],"2473":[95,9,95,31],"2481":[40,37,96,6],"2489":[40,37,96,6],"2497":[40,37,96,6],"2505":[40,37,96,6],"2513":[40,37,96,6],"2521":[40,37,96,6],"2529":[40,37,96,6],"2537":[40,37,96,6],"2545":[40,37,96,6],"2553":[40,37,96,6],"2561":[40,37,96,6],"2569":[40,37,96,6],"2577":[40,37,96,6],"2585":[40,5,96,6],"2593":[40,5,96,7],"2601":[97,5,97,20],"2609":[97,5,97,30],"2617":[98,16,98,20],"2625":[98,16,98,25],"2633":[98,16,98,32],"2641":[98,37,98,38],"2649":[98,16,98,38],"2657":[98,9,98,39],"2665":[97,41,99,6],"2673":[97,41,99,6],"2681":[97,41,99,6],"2689":[97,5,99,6],"2697":[97,5,99,7],"2705":[100,5,100,20],"2713":[100,5,100,30],"2721":[101,9,101,13],"2729":[101,40,101,44],"2737":[102,19,102,23],"2745":[102,19,102,39],"2753":[103,25,103,29],"2761":[101,76,104,10],"2769":[101,36,104,11],"2771":[101,40,101,75],"2777":[101,9,104,11],"2785":[101,9,104,12],"2793":[105,13,105,17],"2801":[105,13,105,36],"2809":[106,34,106,38],"2817":[106,34,106,51],"2825":[107,21,107,25],"2833":[107,21,107,38],"2841":[107,54,107,62],"2849":[107,21,107,63],"2851":[107,21,107,53],"2857":[108,34,108,38],"2865":[108,34,108,51],"2873":[108,52,108,60],"2881":[108,34,108,61],"2889":[108,34,108,61],"2897":[108,34,108,61],"2905":[109,25,109,29],"2913":[109,25,109,54],"2921":[109,55,109,63],"2929":[109,25,109,64],"2937":[110,34,110,40],"2945":[110,47,110,51],"2953":[110,47,110,76],"2961":[110,77,110,85],"2969":[110,47,110,86],"2977":[110,34,110,87],"2979":[110,34,110,46],"2985":[110,34,110,87],"2993":[110,25,110,88],"3001":[112,21,112,25],"3009":[112,21,112,45],"3017":[112,63,112,67],"3025":[112,86,112,94],"3033":[112,63,112,95],"3035":[112,63,112,85],"3041":[112,97,112,103],"3049":[112,21,112,104],"3051":[112,21,112,62],"3057":[112,21,112,105],"3065":[106,34,106,51],"3073":[106,13,114,14],"3081":[106,13,114,14],"3089":[116,9,116,13],"3097":[116,9,116,23],"3105":[116,31,116,38],"3113":[116,40,116,44],"3121":[116,9,116,45],"3123":[116,9,116,30],"3129":[116,9,116,46],"3137":[117,13,117,17],"3145":[117,13,117,22],"3153":[117,13,117,29],"3161":[117,32,117,33],"3169":[118,50,118,54],"3177":[118,65,118,69],"3185":[118,65,118,89],"3193":[118,65,118,98],"3195":[118,65,118,96],"3201":[118,50,118,99],"3203":[118,50,118,64],"3209":[118,50,118,99],"3217":[118,50,118,99],"3225":[119,17,119,21],"3233":[119,17,119,34],"3241":[120,32,120,36],"3249":[120,32,120,49],"3257":[120,32,120,49],"3265":[120,17,120,50],"3273":[121,24,121,28],"3281":[121,24,121,47],"3289":[122,32,122,36],"3297":[122,32,122,55],"3305":[122,32,122,55],"3313":[122,17,122,56],"3321":[124,13,124,17],"3329":[124,33,124,45],"3337":[124,13,124,45],"3345":[124,13,124,46],"3353":[125,13,125,17],"3361":[125,30,125,46],"3369":[125,13,125,46],"3377":[125,13,125,47],"3385":[127,16,127,20],"3393":[127,16,127,25],"3401":[127,31,127,33],"3409":[127,16,127,34],"3411":[127,16,127,30],"3417":[127,16,127,34],"3425":[127,9,127,35],"3433":[100,39,128,6],"3441":[100,39,128,6],"3449":[100,39,128,6],"3457":[100,39,128,6],"3465":[100,39,128,6],"3473":[100,39,128,6],"3481":[100,39,128,6],"3489":[100,39,128,6],"3497":[100,5,128,6],"3505":[100,5,128,7],"3513":[129,12,129,27],"3521":[129,12,129,27],"3529":[129,5,129,28],"3537":[3,18,130,2],"3545":[3,18,130,2],"3553":[3,18,130,2],"3561":[3,18,130,2],"3569":[3,18,130,2],"3577":[3,1,130,2],"3585":[3,1,130,3],"3593":[1,1,130,3],"3601":[1,1,130,3],"3609":[1,1,130,3],"3617":[9,9,11,10],"3625":[14,9,16,10],"3633":[19,13,21,14],"3641":[17,9,24,10],"3649":[4,27,29,6],"3657":[4,27,29,6],"3665":[34,13,36,14],"3673":[32,9,37,10],"3681":[30,51,39,6],"3689":[30,51,39,6],"3697":[41,9,43,10],"3705":[49,17,51,18],"3713":[47,13,53,14],"3721":[45,9,57,10],"3729":[78,37,78,63],"3737":[82,37,82,71],"3745":[74,17,86,18],"3753":[74,17,86,18],"3761":[74,17,86,18],"3769":[61,13,87,14],"3777":[60,9,88,10],"3785":[89,9,94,10],"3793":[40,37,96,6],"3801":[40,37,96,6],"3809":[97,41,99,6],"3817":[97,41,99,6],"3825":[109,21,111,22],"3833":[107,17,113,18],"3841":[105,9,115,10],"3849":[121,20,123,14],"3857":[119,13,123,14],"3865":[117,9,126,10],"3873":[100,39,128,6],"3881":[100,39,128,6],"3889":[3,18,130,2],"3897":[3,18,130,2],"3905":[1,1,130,3],"3913":[1,1,130,3],"nBranches":50,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/source-map-output.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/source-map-output_jalangi_.js","code":"module.exports = function (environment) {\n\n    var SourceMapOutput = function (options) {\n        this._css = [];\n        this._rootNode = options.rootNode;\n        this._contentsMap = options.contentsMap;\n        this._contentsIgnoredCharsMap = options.contentsIgnoredCharsMap;\n        if (options.sourceMapFilename) {\n            this._sourceMapFilename = options.sourceMapFilename.replace(/\\\\/g, '/');\n        }\n        this._outputFilename = options.outputFilename;\n        this.sourceMapURL = options.sourceMapURL;\n        if (options.sourceMapBasepath) {\n            this._sourceMapBasepath = options.sourceMapBasepath.replace(/\\\\/g, '/');\n        }\n        if (options.sourceMapRootpath) {\n            this._sourceMapRootpath = options.sourceMapRootpath.replace(/\\\\/g, '/');\n            if (this._sourceMapRootpath.charAt(this._sourceMapRootpath.length - 1) !== '/') {\n                this._sourceMapRootpath += '/';\n            }\n        } else {\n            this._sourceMapRootpath = \"\";\n        }\n        this._outputSourceFiles = options.outputSourceFiles;\n        this._sourceMapGeneratorConstructor = environment.getSourceMapGenerator();\n\n        this._lineNumber = 0;\n        this._column = 0;\n    };\n\n    SourceMapOutput.prototype.normalizeFilename = function(filename) {\n        filename = filename.replace(/\\\\/g, '/');\n\n        if (this._sourceMapBasepath && filename.indexOf(this._sourceMapBasepath) === 0) {\n            filename = filename.substring(this._sourceMapBasepath.length);\n            if (filename.charAt(0) === '\\\\' || filename.charAt(0) === '/') {\n                filename = filename.substring(1);\n            }\n        }\n        return (this._sourceMapRootpath || \"\") + filename;\n    };\n\n    SourceMapOutput.prototype.add = function(chunk, fileInfo, index, mapLines) {\n\n        //ignore adding empty strings\n        if (!chunk) {\n            return;\n        }\n\n        var lines,\n            sourceLines,\n            columns,\n            sourceColumns,\n            i;\n\n        if (fileInfo) {\n            var inputSource = this._contentsMap[fileInfo.filename];\n\n            // remove vars/banner added to the top of the file\n            if (this._contentsIgnoredCharsMap[fileInfo.filename]) {\n                // adjust the index\n                index -= this._contentsIgnoredCharsMap[fileInfo.filename];\n                if (index < 0) { index = 0; }\n                // adjust the source\n                inputSource = inputSource.slice(this._contentsIgnoredCharsMap[fileInfo.filename]);\n            }\n            inputSource = inputSource.substring(0, index);\n            sourceLines = inputSource.split(\"\\n\");\n            sourceColumns = sourceLines[sourceLines.length - 1];\n        }\n\n        lines = chunk.split(\"\\n\");\n        columns = lines[lines.length - 1];\n\n        if (fileInfo) {\n            if (!mapLines) {\n                this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + 1, column: this._column},\n                    original: { line: sourceLines.length, column: sourceColumns.length},\n                    source: this.normalizeFilename(fileInfo.filename)});\n            } else {\n                for (i = 0; i < lines.length; i++) {\n                    this._sourceMapGenerator.addMapping({ generated: { line: this._lineNumber + i + 1, column: i === 0 ? this._column : 0},\n                        original: { line: sourceLines.length + i, column: i === 0 ? sourceColumns.length : 0},\n                        source: this.normalizeFilename(fileInfo.filename)});\n                }\n            }\n        }\n\n        if (lines.length === 1) {\n            this._column += columns.length;\n        } else {\n            this._lineNumber += lines.length - 1;\n            this._column = columns.length;\n        }\n\n        this._css.push(chunk);\n    };\n\n    SourceMapOutput.prototype.isEmpty = function() {\n        return this._css.length === 0;\n    };\n\n    SourceMapOutput.prototype.toCSS = function(context) {\n        this._sourceMapGenerator = new this._sourceMapGeneratorConstructor({ file: this._outputFilename, sourceRoot: null });\n\n        if (this._outputSourceFiles) {\n            for (var filename in this._contentsMap) {\n                if (this._contentsMap.hasOwnProperty(filename)) {\n                    var source = this._contentsMap[filename];\n                    if (this._contentsIgnoredCharsMap[filename]) {\n                        source = source.slice(this._contentsIgnoredCharsMap[filename]);\n                    }\n                    this._sourceMapGenerator.setSourceContent(this.normalizeFilename(filename), source);\n                }\n            }\n        }\n\n        this._rootNode.genCSS(context, this);\n\n        if (this._css.length > 0) {\n            var sourceMapURL,\n                sourceMapContent = JSON.stringify(this._sourceMapGenerator.toJSON());\n\n            if (this.sourceMapURL) {\n                sourceMapURL = this.sourceMapURL;\n            } else if (this._sourceMapFilename) {\n                sourceMapURL = this._sourceMapFilename;\n            }\n            this.sourceMapURL = sourceMapURL;\n\n            this.sourceMap = sourceMapContent;\n        }\n\n        return this._css.join('');\n    };\n\n    return SourceMapOutput;\n};\n"};
jalangiLabel840:
    while (true) {
        try {
            J$.Se(3593, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/source-map-output_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/source-map-output.js');
            J$.N(3601, '__secret__S$', __secret__S$, 0);
            J$.N(3609, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(3585, J$.P(3577, J$.R(81, 'module', module, 2), 'exports', J$.T(3569, function (environment) {
                jalangiLabel839:
                    while (true) {
                        try {
                            J$.Fe(3537, arguments.callee, this, arguments);
                            arguments = J$.N(3545, 'arguments', arguments, 4);
                            environment = J$.N(3553, 'environment', environment, 4);
                            J$.N(3561, 'SourceMapOutput', SourceMapOutput, 0);
                            var SourceMapOutput = J$.X1(873, J$.W(865, 'SourceMapOutput', J$.T(857, function (options) {
                                jalangiLabel834:
                                    while (true) {
                                        try {
                                            J$.Fe(833, arguments.callee, this, arguments);
                                            arguments = J$.N(841, 'arguments', arguments, 4);
                                            options = J$.N(849, 'options', options, 4);
                                            J$.X1(113, J$.P(105, J$.R(89, 'this', this, 0), '_css', J$.T(97, [], 10, false), 0));
                                            J$.X1(153, J$.P(145, J$.R(121, 'this', this, 0), '_rootNode', J$.G(137, J$.R(129, 'options', options, 0), 'rootNode', 0), 0));
                                            J$.X1(193, J$.P(185, J$.R(161, 'this', this, 0), '_contentsMap', J$.G(177, J$.R(169, 'options', options, 0), 'contentsMap', 0), 0));
                                            J$.X1(233, J$.P(225, J$.R(201, 'this', this, 0), '_contentsIgnoredCharsMap', J$.G(217, J$.R(209, 'options', options, 0), 'contentsIgnoredCharsMap', 0), 0));
                                            if (J$.X1(3617, J$.C(8, J$.G(249, J$.R(241, 'options', options, 0), 'sourceMapFilename', 0)))) {
                                                J$.X1(313, J$.P(305, J$.R(257, 'this', this, 0), '_sourceMapFilename', J$.M(297, J$.G(273, J$.R(265, 'options', options, 0), 'sourceMapFilename', 0), 'replace', 0)(J$.T(281, /\\/g, 14, false), J$.T(289, '/', 21, false)), 0));
                                            }
                                            J$.X1(353, J$.P(345, J$.R(321, 'this', this, 0), '_outputFilename', J$.G(337, J$.R(329, 'options', options, 0), 'outputFilename', 0), 0));
                                            J$.X1(393, J$.P(385, J$.R(361, 'this', this, 0), 'sourceMapURL', J$.G(377, J$.R(369, 'options', options, 0), 'sourceMapURL', 0), 0));
                                            if (J$.X1(3625, J$.C(16, J$.G(409, J$.R(401, 'options', options, 0), 'sourceMapBasepath', 0)))) {
                                                J$.X1(473, J$.P(465, J$.R(417, 'this', this, 0), '_sourceMapBasepath', J$.M(457, J$.G(433, J$.R(425, 'options', options, 0), 'sourceMapBasepath', 0), 'replace', 0)(J$.T(441, /\\/g, 14, false), J$.T(449, '/', 21, false)), 0));
                                            }
                                            if (J$.X1(3641, J$.C(32, J$.G(489, J$.R(481, 'options', options, 0), 'sourceMapRootpath', 0)))) {
                                                J$.X1(553, J$.P(545, J$.R(497, 'this', this, 0), '_sourceMapRootpath', J$.M(537, J$.G(513, J$.R(505, 'options', options, 0), 'sourceMapRootpath', 0), 'replace', 0)(J$.T(521, /\\/g, 14, false), J$.T(529, '/', 21, false)), 0));
                                                if (J$.X1(3633, J$.C(24, J$.B(18, '!==', J$.M(609, J$.G(569, J$.R(561, 'this', this, 0), '_sourceMapRootpath', 0), 'charAt', 0)(J$.B(10, '-', J$.G(593, J$.G(585, J$.R(577, 'this', this, 0), '_sourceMapRootpath', 0), 'length', 0), J$.T(601, 1, 22, false), 0)), J$.T(617, '/', 21, false), 0)))) {
                                                    J$.X1(649, J$.A(641, J$.R(625, 'this', this, 0), '_sourceMapRootpath', '+', 0)(J$.T(633, '/', 21, false)));
                                                }
                                            } else {
                                                J$.X1(681, J$.P(673, J$.R(657, 'this', this, 0), '_sourceMapRootpath', J$.T(665, '', 21, false), 0));
                                            }
                                            J$.X1(721, J$.P(713, J$.R(689, 'this', this, 0), '_outputSourceFiles', J$.G(705, J$.R(697, 'options', options, 0), 'outputSourceFiles', 0), 0));
                                            J$.X1(761, J$.P(753, J$.R(729, 'this', this, 0), '_sourceMapGeneratorConstructor', J$.M(745, J$.R(737, 'environment', environment, 0), 'getSourceMapGenerator', 0)(), 0));
                                            J$.X1(793, J$.P(785, J$.R(769, 'this', this, 0), '_lineNumber', J$.T(777, 0, 22, false), 0));
                                            J$.X1(825, J$.P(817, J$.R(801, 'this', this, 0), '_column', J$.T(809, 0, 22, false), 0));
                                        } catch (J$e) {
                                            J$.Ex(3649, J$e);
                                        } finally {
                                            if (J$.Fr(3657))
                                                continue jalangiLabel834;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 833), SourceMapOutput, 1));
                            J$.X1(1249, J$.P(1241, J$.G(889, J$.R(881, 'SourceMapOutput', SourceMapOutput, 0), 'prototype', 0), 'normalizeFilename', J$.T(1233, function (filename) {
                                jalangiLabel835:
                                    while (true) {
                                        try {
                                            J$.Fe(1209, arguments.callee, this, arguments);
                                            arguments = J$.N(1217, 'arguments', arguments, 4);
                                            filename = J$.N(1225, 'filename', filename, 4);
                                            J$.X1(937, filename = J$.W(929, 'filename', J$.M(921, J$.R(897, 'filename', filename, 0), 'replace', 0)(J$.T(905, /\\/g, 14, false), J$.T(913, '/', 21, false)), filename, 0));
                                            if (J$.X1(3673, J$.C(64, J$.C(40, J$.G(953, J$.R(945, 'this', this, 0), '_sourceMapBasepath', 0)) ? J$.B(26, '===', J$.M(985, J$.R(961, 'filename', filename, 0), 'indexOf', 0)(J$.G(977, J$.R(969, 'this', this, 0), '_sourceMapBasepath', 0)), J$.T(993, 0, 22, false), 0) : J$._()))) {
                                                J$.X1(1049, filename = J$.W(1041, 'filename', J$.M(1033, J$.R(1001, 'filename', filename, 0), 'substring', 0)(J$.G(1025, J$.G(1017, J$.R(1009, 'this', this, 0), '_sourceMapBasepath', 0), 'length', 0)), filename, 0));
                                                if (J$.X1(3665, J$.C(56, J$.C(48, J$.B(34, '===', J$.M(1073, J$.R(1057, 'filename', filename, 0), 'charAt', 0)(J$.T(1065, 0, 22, false)), J$.T(1081, '\\', 21, false), 0)) ? J$._() : J$.B(42, '===', J$.M(1105, J$.R(1089, 'filename', filename, 0), 'charAt', 0)(J$.T(1097, 0, 22, false)), J$.T(1113, '/', 21, false), 0)))) {
                                                    J$.X1(1153, filename = J$.W(1145, 'filename', J$.M(1137, J$.R(1121, 'filename', filename, 0), 'substring', 0)(J$.T(1129, 1, 22, false)), filename, 0));
                                                }
                                            }
                                            return J$.X1(1201, J$.Rt(1193, J$.B(50, '+', J$.C(72, J$.G(1169, J$.R(1161, 'this', this, 0), '_sourceMapRootpath', 0)) ? J$._() : J$.T(1177, '', 21, false), J$.R(1185, 'filename', filename, 0), 0)));
                                        } catch (J$e) {
                                            J$.Ex(3681, J$e);
                                        } finally {
                                            if (J$.Fr(3689))
                                                continue jalangiLabel835;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 1209), 0));
                            J$.X1(2593, J$.P(2585, J$.G(1265, J$.R(1257, 'SourceMapOutput', SourceMapOutput, 0), 'prototype', 0), 'add', J$.T(2577, function (chunk, fileInfo, index, mapLines) {
                                jalangiLabel836:
                                    while (true) {
                                        try {
                                            J$.Fe(2481, arguments.callee, this, arguments);
                                            arguments = J$.N(2489, 'arguments', arguments, 4);
                                            chunk = J$.N(2497, 'chunk', chunk, 4);
                                            fileInfo = J$.N(2505, 'fileInfo', fileInfo, 4);
                                            index = J$.N(2513, 'index', index, 4);
                                            mapLines = J$.N(2521, 'mapLines', mapLines, 4);
                                            J$.N(2529, 'lines', lines, 0);
                                            J$.N(2537, 'sourceLines', sourceLines, 0);
                                            J$.N(2545, 'columns', columns, 0);
                                            J$.N(2553, 'sourceColumns', sourceColumns, 0);
                                            J$.N(2561, 'i', i, 0);
                                            J$.N(2569, 'inputSource', inputSource, 0);
                                            if (J$.X1(3697, J$.C(80, J$.U(58, '!', J$.R(1273, 'chunk', chunk, 0))))) {
                                                return J$.X1(1289, J$.Rt(1281, undefined));
                                            }
                                            var lines, sourceLines, columns, sourceColumns, i;
                                            if (J$.X1(3721, J$.C(104, J$.R(1297, 'fileInfo', fileInfo, 0)))) {
                                                var inputSource = J$.X1(1353, J$.W(1345, 'inputSource', J$.G(1337, J$.G(1313, J$.R(1305, 'this', this, 0), '_contentsMap', 0), J$.G(1329, J$.R(1321, 'fileInfo', fileInfo, 0), 'filename', 0), 4), inputSource, 1));
                                                if (J$.X1(3713, J$.C(96, J$.G(1393, J$.G(1369, J$.R(1361, 'this', this, 0), '_contentsIgnoredCharsMap', 0), J$.G(1385, J$.R(1377, 'fileInfo', fileInfo, 0), 'filename', 0), 4)))) {
                                                    J$.X1(1457, index = J$.W(1449, 'index', J$.B(66, '-', J$.R(1441, 'index', index, 0), J$.G(1433, J$.G(1409, J$.R(1401, 'this', this, 0), '_contentsIgnoredCharsMap', 0), J$.G(1425, J$.R(1417, 'fileInfo', fileInfo, 0), 'filename', 0), 4), 0), index, 0));
                                                    if (J$.X1(3705, J$.C(88, J$.B(74, '<', J$.R(1465, 'index', index, 0), J$.T(1473, 0, 22, false), 0)))) {
                                                        J$.X1(1497, index = J$.W(1489, 'index', J$.T(1481, 0, 22, false), index, 0));
                                                    }
                                                    J$.X1(1569, inputSource = J$.W(1561, 'inputSource', J$.M(1553, J$.R(1505, 'inputSource', inputSource, 0), 'slice', 0)(J$.G(1545, J$.G(1521, J$.R(1513, 'this', this, 0), '_contentsIgnoredCharsMap', 0), J$.G(1537, J$.R(1529, 'fileInfo', fileInfo, 0), 'filename', 0), 4)), inputSource, 0));
                                                }
                                                J$.X1(1617, inputSource = J$.W(1609, 'inputSource', J$.M(1601, J$.R(1577, 'inputSource', inputSource, 0), 'substring', 0)(J$.T(1585, 0, 22, false), J$.R(1593, 'index', index, 0)), inputSource, 0));
                                                J$.X1(1657, sourceLines = J$.W(1649, 'sourceLines', J$.M(1641, J$.R(1625, 'inputSource', inputSource, 0), 'split', 0)(J$.T(1633, '\n', 21, false)), sourceLines, 0));
                                                J$.X1(1713, sourceColumns = J$.W(1705, 'sourceColumns', J$.G(1697, J$.R(1665, 'sourceLines', sourceLines, 0), J$.B(82, '-', J$.G(1681, J$.R(1673, 'sourceLines', sourceLines, 0), 'length', 0), J$.T(1689, 1, 22, false), 0), 4), sourceColumns, 0));
                                            }
                                            J$.X1(1753, lines = J$.W(1745, 'lines', J$.M(1737, J$.R(1721, 'chunk', chunk, 0), 'split', 0)(J$.T(1729, '\n', 21, false)), lines, 0));
                                            J$.X1(1809, columns = J$.W(1801, 'columns', J$.G(1793, J$.R(1761, 'lines', lines, 0), J$.B(90, '-', J$.G(1777, J$.R(1769, 'lines', lines, 0), 'length', 0), J$.T(1785, 1, 22, false), 0), 4), columns, 0));
                                            if (J$.X1(3777, J$.C(144, J$.R(1817, 'fileInfo', fileInfo, 0)))) {
                                                if (J$.X1(3769, J$.C(136, J$.U(98, '!', J$.R(1825, 'mapLines', mapLines, 0))))) {
                                                    J$.X1(1985, J$.M(1977, J$.G(1841, J$.R(1833, 'this', this, 0), '_sourceMapGenerator', 0), 'addMapping', 0)(J$.T(1969, {
                                                        generated: J$.T(1889, {
                                                            line: J$.B(106, '+', J$.G(1857, J$.R(1849, 'this', this, 0), '_lineNumber', 0), J$.T(1865, 1, 22, false), 0),
                                                            column: J$.G(1881, J$.R(1873, 'this', this, 0), '_column', 0)
                                                        }, 11, false),
                                                        original: J$.T(1929, {
                                                            line: J$.G(1905, J$.R(1897, 'sourceLines', sourceLines, 0), 'length', 0),
                                                            column: J$.G(1921, J$.R(1913, 'sourceColumns', sourceColumns, 0), 'length', 0)
                                                        }, 11, false),
                                                        source: J$.M(1961, J$.R(1937, 'this', this, 0), 'normalizeFilename', 0)(J$.G(1953, J$.R(1945, 'fileInfo', fileInfo, 0), 'filename', 0))
                                                    }, 11, false)));
                                                } else {
                                                    for (J$.X1(3753, i = J$.W(2001, 'i', J$.T(1993, 0, 22, false), i, 0)); J$.X1(3745, J$.C(128, J$.B(114, '<', J$.R(2009, 'i', i, 0), J$.G(2025, J$.R(2017, 'lines', lines, 0), 'length', 0), 0))); J$.X1(3761, J$.B(138, '-', i = J$.W(2049, 'i', J$.B(130, '+', J$.U(122, '+', J$.R(2041, 'i', i, 0)), J$.T(2033, 1, 22, false), 0), i, 0), J$.T(2057, 1, 22, false), 0))) {
                                                        J$.X1(2281, J$.M(2273, J$.G(2073, J$.R(2065, 'this', this, 0), '_sourceMapGenerator', 0), 'addMapping', 0)(J$.T(2265, {
                                                            generated: J$.T(2153, {
                                                                line: J$.B(154, '+', J$.B(146, '+', J$.G(2089, J$.R(2081, 'this', this, 0), '_lineNumber', 0), J$.R(2097, 'i', i, 0), 0), J$.T(2105, 1, 22, false), 0),
                                                                column: J$.X1(3729, J$.C(112, J$.B(162, '===', J$.R(2113, 'i', i, 0), J$.T(2121, 0, 22, false), 0))) ? J$.G(2137, J$.R(2129, 'this', this, 0), '_column', 0) : J$.T(2145, 0, 22, false)
                                                            }, 11, false),
                                                            original: J$.T(2225, {
                                                                line: J$.B(170, '+', J$.G(2169, J$.R(2161, 'sourceLines', sourceLines, 0), 'length', 0), J$.R(2177, 'i', i, 0), 0),
                                                                column: J$.X1(3737, J$.C(120, J$.B(178, '===', J$.R(2185, 'i', i, 0), J$.T(2193, 0, 22, false), 0))) ? J$.G(2209, J$.R(2201, 'sourceColumns', sourceColumns, 0), 'length', 0) : J$.T(2217, 0, 22, false)
                                                            }, 11, false),
                                                            source: J$.M(2257, J$.R(2233, 'this', this, 0), 'normalizeFilename', 0)(J$.G(2249, J$.R(2241, 'fileInfo', fileInfo, 0), 'filename', 0))
                                                        }, 11, false)));
                                                    }
                                                }
                                            }
                                            if (J$.X1(3785, J$.C(152, J$.B(186, '===', J$.G(2297, J$.R(2289, 'lines', lines, 0), 'length', 0), J$.T(2305, 1, 22, false), 0)))) {
                                                J$.X1(2345, J$.A(2337, J$.R(2313, 'this', this, 0), '_column', '+', 0)(J$.G(2329, J$.R(2321, 'columns', columns, 0), 'length', 0)));
                                            } else {
                                                J$.X1(2393, J$.A(2385, J$.R(2353, 'this', this, 0), '_lineNumber', '+', 0)(J$.B(194, '-', J$.G(2369, J$.R(2361, 'lines', lines, 0), 'length', 0), J$.T(2377, 1, 22, false), 0)));
                                                J$.X1(2433, J$.P(2425, J$.R(2401, 'this', this, 0), '_column', J$.G(2417, J$.R(2409, 'columns', columns, 0), 'length', 0), 0));
                                            }
                                            J$.X1(2473, J$.M(2465, J$.G(2449, J$.R(2441, 'this', this, 0), '_css', 0), 'push', 0)(J$.R(2457, 'chunk', chunk, 0)));
                                        } catch (J$e) {
                                            J$.Ex(3793, J$e);
                                        } finally {
                                            if (J$.Fr(3801))
                                                continue jalangiLabel836;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2481), 0));
                            J$.X1(2697, J$.P(2689, J$.G(2609, J$.R(2601, 'SourceMapOutput', SourceMapOutput, 0), 'prototype', 0), 'isEmpty', J$.T(2681, function () {
                                jalangiLabel837:
                                    while (true) {
                                        try {
                                            J$.Fe(2665, arguments.callee, this, arguments);
                                            arguments = J$.N(2673, 'arguments', arguments, 4);
                                            return J$.X1(2657, J$.Rt(2649, J$.B(202, '===', J$.G(2633, J$.G(2625, J$.R(2617, 'this', this, 0), '_css', 0), 'length', 0), J$.T(2641, 0, 22, false), 0)));
                                        } catch (J$e) {
                                            J$.Ex(3809, J$e);
                                        } finally {
                                            if (J$.Fr(3817))
                                                continue jalangiLabel837;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2665), 0));
                            J$.X1(3505, J$.P(3497, J$.G(2713, J$.R(2705, 'SourceMapOutput', SourceMapOutput, 0), 'prototype', 0), 'toCSS', J$.T(3489, function (context) {
                                jalangiLabel838:
                                    while (true) {
                                        try {
                                            J$.Fe(3433, arguments.callee, this, arguments);
                                            arguments = J$.N(3441, 'arguments', arguments, 4);
                                            context = J$.N(3449, 'context', context, 4);
                                            J$.N(3457, 'filename', filename, 0);
                                            J$.N(3465, 'source', source, 0);
                                            J$.N(3473, 'sourceMapURL', sourceMapURL, 0);
                                            J$.N(3481, 'sourceMapContent', sourceMapContent, 0);
                                            J$.X1(2785, J$.P(2777, J$.R(2721, 'this', this, 0), '_sourceMapGenerator', J$.M(2769, J$.R(2729, 'this', this, 0), '_sourceMapGeneratorConstructor', 2)(J$.T(2761, {
                                                file: J$.G(2745, J$.R(2737, 'this', this, 0), '_outputFilename', 0),
                                                sourceRoot: J$.T(2753, null, 25, false)
                                            }, 11, false)), 0));
                                            if (J$.X1(3841, J$.C(176, J$.G(2801, J$.R(2793, 'this', this, 0), '_outputSourceFiles', 0)))) {
                                                for (J$._tm_p in J$.H(3065, J$.G(2817, J$.R(2809, 'this', this, 0), '_contentsMap', 0))) {
                                                    var filename = J$.X1(3081, J$.W(3073, 'filename', J$._tm_p, filename, 1));
                                                    {
                                                        {
                                                            if (J$.X1(3833, J$.C(168, J$.M(2849, J$.G(2833, J$.R(2825, 'this', this, 0), '_contentsMap', 0), 'hasOwnProperty', 0)(J$.R(2841, 'filename', filename, 0))))) {
                                                                var source = J$.X1(2897, J$.W(2889, 'source', J$.G(2881, J$.G(2865, J$.R(2857, 'this', this, 0), '_contentsMap', 0), J$.R(2873, 'filename', filename, 0), 4), source, 1));
                                                                if (J$.X1(3825, J$.C(160, J$.G(2929, J$.G(2913, J$.R(2905, 'this', this, 0), '_contentsIgnoredCharsMap', 0), J$.R(2921, 'filename', filename, 0), 4)))) {
                                                                    J$.X1(2993, source = J$.W(2985, 'source', J$.M(2977, J$.R(2937, 'source', source, 0), 'slice', 0)(J$.G(2969, J$.G(2953, J$.R(2945, 'this', this, 0), '_contentsIgnoredCharsMap', 0), J$.R(2961, 'filename', filename, 0), 4)), source, 0));
                                                                }
                                                                J$.X1(3057, J$.M(3049, J$.G(3009, J$.R(3001, 'this', this, 0), '_sourceMapGenerator', 0), 'setSourceContent', 0)(J$.M(3033, J$.R(3017, 'this', this, 0), 'normalizeFilename', 0)(J$.R(3025, 'filename', filename, 0)), J$.R(3041, 'source', source, 0)));
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                            J$.X1(3129, J$.M(3121, J$.G(3097, J$.R(3089, 'this', this, 0), '_rootNode', 0), 'genCSS', 0)(J$.R(3105, 'context', context, 0), J$.R(3113, 'this', this, 0)));
                                            if (J$.X1(3865, J$.C(200, J$.B(210, '>', J$.G(3153, J$.G(3145, J$.R(3137, 'this', this, 0), '_css', 0), 'length', 0), J$.T(3161, 0, 22, false), 0)))) {
                                                var sourceMapURL, sourceMapContent = J$.X1(3217, J$.W(3209, 'sourceMapContent', J$.M(3201, J$.R(3169, 'JSON', JSON, 2), 'stringify', 0)(J$.M(3193, J$.G(3185, J$.R(3177, 'this', this, 0), '_sourceMapGenerator', 0), 'toJSON', 0)()), sourceMapContent, 1));
                                                if (J$.X1(3857, J$.C(192, J$.G(3233, J$.R(3225, 'this', this, 0), 'sourceMapURL', 0)))) {
                                                    J$.X1(3265, sourceMapURL = J$.W(3257, 'sourceMapURL', J$.G(3249, J$.R(3241, 'this', this, 0), 'sourceMapURL', 0), sourceMapURL, 0));
                                                } else if (J$.X1(3849, J$.C(184, J$.G(3281, J$.R(3273, 'this', this, 0), '_sourceMapFilename', 0)))) {
                                                    J$.X1(3313, sourceMapURL = J$.W(3305, 'sourceMapURL', J$.G(3297, J$.R(3289, 'this', this, 0), '_sourceMapFilename', 0), sourceMapURL, 0));
                                                }
                                                J$.X1(3345, J$.P(3337, J$.R(3321, 'this', this, 0), 'sourceMapURL', J$.R(3329, 'sourceMapURL', sourceMapURL, 0), 0));
                                                J$.X1(3377, J$.P(3369, J$.R(3353, 'this', this, 0), 'sourceMap', J$.R(3361, 'sourceMapContent', sourceMapContent, 0), 0));
                                            }
                                            return J$.X1(3425, J$.Rt(3417, J$.M(3409, J$.G(3393, J$.R(3385, 'this', this, 0), '_css', 0), 'join', 0)(J$.T(3401, '', 21, false))));
                                        } catch (J$e) {
                                            J$.Ex(3873, J$e);
                                        } finally {
                                            if (J$.Fr(3881))
                                                continue jalangiLabel838;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 3433), 0));
                            return J$.X1(3529, J$.Rt(3521, J$.R(3513, 'SourceMapOutput', SourceMapOutput, 0)));
                        } catch (J$e) {
                            J$.Ex(3889, J$e);
                        } finally {
                            if (J$.Fr(3897))
                                continue jalangiLabel839;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 3537), 0));
        } catch (J$e) {
            J$.Ex(3905, J$e);
        } finally {
            if (J$.Sr(3913)) {
                J$.L();
                continue jalangiLabel840;
            } else {
                J$.L();
                break jalangiLabel840;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
