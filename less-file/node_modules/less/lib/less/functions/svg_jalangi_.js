J$.iids = {"8":[14,17,14,46],"9":[1,20,1,27],"10":[10,26,10,166],"16":[18,20,18,40],"17":[1,28,1,32],"18":[13,13,13,34],"24":[13,13,13,34],"25":[1,20,1,33],"26":[14,17,14,46],"32":[23,17,23,31],"33":[1,20,1,33],"34":[18,20,18,40],"40":[24,14,24,25],"41":[1,20,1,33],"42":[45,26,45,155],"48":[27,14,27,24],"49":[2,26,2,38],"50":[48,20,48,175],"56":[30,14,30,31],"57":[2,26,2,45],"58":[48,20,48,181],"64":[33,14,33,28],"65":[2,26,2,45],"66":[48,20,48,196],"72":[36,14,36,23],"73":[2,26,2,45],"74":[48,20,48,255],"80":[37,14,37,33],"81":[3,1,3,7],"82":[48,20,48,278],"88":[50,17,50,47],"89":[4,21,4,28],"90":[48,20,48,284],"96":[57,49,57,82],"97":[4,29,4,48],"98":[49,21,49,37],"104":[57,48,57,109],"105":[4,21,4,49],"106":[49,44,49,45],"112":[57,46,57,146],"113":[4,59,4,66],"114":[50,17,50,47],"120":[57,17,57,146],"121":[4,67,4,82],"122":[57,19,57,41],"128":[57,17,57,146],"129":[4,59,4,83],"130":[57,17,57,42],"136":[60,68,60,75],"137":[4,98,4,105],"138":[57,49,57,56],"144":[60,29,60,37],"145":[4,106,4,126],"146":[57,60,57,65],"152":[62,102,62,111],"153":[4,98,4,127],"154":[57,60,57,82],"160":[49,21,49,37],"161":[4,138,4,145],"162":[57,87,57,109],"169":[4,146,4,162],"170":[57,46,57,110],"177":[4,138,4,163],"178":[57,116,57,145],"185":[4,171,4,178],"186":[57,114,57,146],"193":[4,179,4,192],"194":[60,68,60,75],"201":[4,171,4,193],"202":[62,25,62,57],"209":[4,214,4,221],"210":[62,25,62,76],"217":[4,222,4,243],"218":[62,25,62,92],"225":[4,214,4,244],"226":[62,25,62,98],"233":[4,21,4,49],"234":[62,102,62,111],"241":[4,21,4,49],"242":[62,114,62,139],"249":[4,59,4,83],"250":[62,114,62,145],"257":[4,59,4,83],"258":[62,25,62,151],"265":[4,98,4,127],"266":[62,25,62,158],"273":[4,98,4,127],"274":[62,25,62,158],"281":[4,138,4,163],"282":[64,21,64,40],"289":[4,138,4,163],"290":[64,21,64,54],"297":[4,171,4,193],"298":[64,21,64,65],"305":[4,171,4,193],"306":[64,21,64,86],"313":[4,214,4,244],"314":[64,21,64,122],"321":[4,214,4,244],"322":[64,21,64,122],"329":[5,5,5,21],"330":[66,20,66,52],"337":[5,26,5,40],"338":[67,35,67,50],"345":[6,57,6,65],"346":[67,35,67,57],"353":[6,88,6,122],"361":[6,148,6,153],"369":[6,136,6,155],"377":[6,184,6,193],"385":[6,200,6,209],"393":[6,184,6,210],"395":[6,184,6,199],"401":[6,57,6,65],"409":[6,57,6,65],"417":[6,88,6,122],"425":[6,88,6,122],"433":[6,136,6,155],"441":[6,136,6,155],"449":[6,184,6,210],"457":[6,184,6,210],"465":[9,23,9,33],"473":[10,26,10,111],"481":[10,114,10,166],"489":[8,19,11,14],"497":[8,19,11,14],"505":[8,13,11,15],"513":[7,9,12,10],"521":[7,9,12,10],"529":[13,13,13,22],"537":[13,13,13,29],"545":[13,33,13,34],"553":[14,17,14,26],"561":[14,27,14,28],"569":[14,17,14,29],"577":[14,17,14,35],"585":[14,17,14,42],"593":[14,45,14,46],"601":[15,17,15,40],"609":[15,17,15,42],"617":[15,17,15,43],"625":[17,21,17,30],"633":[17,31,17,32],"641":[17,21,17,33],"649":[17,21,17,39],"657":[17,21,17,39],"665":[17,13,17,40],"673":[18,20,18,29],"681":[18,20,18,36],"689":[18,39,18,40],"697":[19,13,19,36],"705":[19,13,19,38],"713":[19,13,19,39],"721":[21,21,21,26],"729":[21,21,21,36],"737":[21,21,21,42],"745":[21,48,21,57],"753":[21,59,21,60],"761":[21,21,21,61],"763":[21,21,21,47],"769":[21,21,21,61],"777":[21,13,21,62],"785":[23,17,23,31],"793":[25,36,25,71],"801":[25,36,25,71],"809":[25,13,25,72],"817":[24,14,24,25],"825":[28,36,28,71],"833":[28,36,28,71],"841":[28,13,28,72],"849":[27,14,27,24],"857":[31,36,31,73],"865":[31,36,31,73],"873":[31,13,31,74],"881":[30,14,30,31],"889":[34,36,34,73],"897":[34,36,34,73],"905":[34,13,34,74],"913":[33,14,33,28],"921":[36,14,36,23],"929":[38,28,38,36],"937":[38,28,38,36],"945":[38,13,38,37],"953":[39,36,39,63],"961":[39,36,39,63],"969":[39,13,39,64],"977":[40,34,40,76],"985":[40,34,40,76],"993":[40,13,40,77],"1001":[37,14,37,33],"1009":[44,23,44,33],"1017":[45,26,45,87],"1025":[45,90,45,155],"1033":[43,19,46,14],"1041":[43,19,46,14],"1049":[43,13,46,15],"1057":[48,20,48,44],"1065":[48,47,48,175],"1073":[48,178,48,181],"1081":[48,184,48,196],"1089":[48,199,48,255],"1097":[48,258,48,278],"1105":[48,281,48,284],"1113":[48,20,48,284],"1121":[48,9,48,285],"1129":[49,18,49,19],"1137":[49,18,49,19],"1145":[49,21,49,22],"1153":[49,25,49,30],"1161":[49,25,49,37],"1169":[49,44,49,45],"1177":[49,39,49,40],"1185":[49,39,49,45],"1193":[50,17,50,22],"1201":[50,23,50,24],"1209":[50,17,50,25],"1217":[50,37,50,47],"1225":[51,25,51,30],"1233":[51,31,51,32],"1241":[51,25,51,33],"1249":[51,25,51,39],"1257":[51,40,51,41],"1265":[51,25,51,42],"1273":[51,25,51,42],"1281":[51,17,51,43],"1289":[52,28,52,33],"1297":[52,34,52,35],"1305":[52,28,52,36],"1313":[52,28,52,42],"1321":[52,43,52,44],"1329":[52,28,52,45],"1337":[52,28,52,45],"1345":[52,17,52,46],"1353":[54,25,54,30],"1361":[54,31,54,32],"1369":[54,25,54,33],"1377":[54,25,54,33],"1385":[54,17,54,34],"1393":[55,28,55,37],"1401":[55,28,55,37],"1409":[55,17,55,38],"1417":[57,19,57,24],"1425":[57,36,57,41],"1433":[57,49,57,50],"1441":[57,55,57,56],"1449":[57,60,57,61],"1457":[57,64,57,65],"1465":[57,70,57,75],"1473":[57,70,57,82],"1481":[57,87,57,95],"1489":[57,100,57,109],"1497":[57,116,57,124],"1505":[57,136,57,145],"1513":[58,17,58,40],"1521":[58,17,58,42],"1529":[58,17,58,43],"1537":[60,29,60,37],"1545":[60,40,60,48],"1553":[60,55,60,64],"1561":[60,40,60,65],"1563":[60,40,60,54],"1569":[60,68,60,69],"1577":[60,74,60,75],"1585":[60,78,60,82],"1593":[60,85,60,91],"1601":[60,29,60,91],"1609":[60,13,60,92],"1617":[61,21,61,26],"1625":[61,21,61,32],"1633":[61,21,61,32],"1641":[61,13,61,33],"1649":[62,25,62,41],"1657":[62,44,62,57],"1665":[62,60,62,76],"1673":[62,79,62,84],"1681":[62,79,62,92],"1683":[62,79,62,90],"1689":[62,95,62,98],"1697":[62,102,62,107],"1705":[62,110,62,111],"1713":[62,114,62,131],"1721":[62,134,62,139],"1729":[62,142,62,145],"1737":[62,148,62,150],"1745":[62,154,62,158],"1753":[62,13,62,21],"1761":[62,13,62,158],"1769":[62,13,62,159],"1777":[64,21,64,25],"1785":[64,28,64,40],"1793":[64,43,64,54],"1801":[64,57,64,65],"1809":[64,68,64,86],"1817":[64,89,64,122],"1825":[64,9,64,17],"1833":[64,9,64,122],"1841":[64,9,64,123],"1849":[65,20,65,38],"1857":[65,39,65,47],"1865":[65,20,65,48],"1873":[65,20,65,48],"1881":[65,9,65,49],"1889":[66,20,66,41],"1897":[66,44,66,52],"1905":[66,20,66,52],"1913":[66,9,66,53],"1921":[67,20,67,23],"1929":[67,28,67,34],"1937":[67,35,67,39],"1945":[67,42,67,50],"1953":[67,53,67,57],"1961":[67,59,67,67],"1969":[67,69,67,74],"1977":[67,76,67,80],"1985":[67,76,67,86],"1993":[67,88,67,92],"2001":[67,88,67,108],"2009":[67,24,67,109],"2017":[67,111,67,115],"2025":[67,111,67,121],"2033":[67,123,67,127],"2041":[67,123,67,143],"2049":[67,16,67,144],"2057":[67,16,67,144],"2065":[67,9,67,145],"2073":[5,42,68,6],"2081":[5,42,68,6],"2089":[5,42,68,6],"2097":[5,42,68,6],"2105":[5,42,68,6],"2113":[5,42,68,6],"2121":[5,42,68,6],"2129":[5,42,68,6],"2137":[5,42,68,6],"2145":[5,42,68,6],"2153":[5,42,68,6],"2161":[5,42,68,6],"2169":[5,42,68,6],"2177":[5,42,68,6],"2185":[5,42,68,6],"2193":[7,9,12,10],"2201":[5,42,68,6],"2209":[5,42,68,6],"2217":[5,5,68,7],"2219":[5,5,5,25],"2225":[5,5,68,8],"2233":[3,18,69,2],"2241":[3,18,69,2],"2249":[3,18,69,2],"2257":[3,18,69,2],"2265":[3,18,69,2],"2273":[3,18,69,2],"2281":[3,18,69,2],"2289":[3,18,69,2],"2297":[3,18,69,2],"2305":[3,18,69,2],"2313":[3,1,69,2],"2321":[3,1,69,3],"2329":[1,1,69,3],"2337":[1,1,69,3],"2345":[1,1,69,3],"2353":[7,9,12,10],"2361":[7,9,12,10],"2369":[14,13,16,14],"2377":[18,16,22,10],"2385":[13,9,22,10],"2393":[23,17,23,31],"2401":[24,14,24,25],"2409":[27,14,27,24],"2417":[30,14,30,31],"2425":[33,14,33,28],"2433":[36,14,36,23],"2441":[37,14,37,33],"2449":[50,13,56,14],"2457":[57,13,59,14],"2465":[60,68,60,91],"2473":[60,29,60,91],"2481":[62,102,62,150],"2489":[49,9,63,10],"2497":[49,9,63,10],"2505":[49,9,63,10],"2513":[5,42,68,6],"2521":[5,42,68,6],"2529":[3,18,69,2],"2537":[3,18,69,2],"2545":[1,1,69,3],"2553":[1,1,69,3],"nBranches":40,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/functions/svg.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/functions/svg_jalangi_.js","code":"module.exports = function(environment) {\n    var Dimension = require(\"../tree/dimension\"),\n        Color = require(\"../tree/color\"),\n        Expression = require(\"../tree/expression\"),\n        Quoted = require(\"../tree/quoted\"),\n        URL = require(\"../tree/url\"),\n        functionRegistry = require(\"./function-registry\");\n\n    functionRegistry.add(\"svg-gradient\", function(direction) {\n\n        var stops,\n            gradientDirectionSvg,\n            gradientType = \"linear\",\n            rectangleDimension = 'x=\"0\" y=\"0\" width=\"1\" height=\"1\"',\n            renderEnv = {compress: false},\n            returner,\n            directionValue = direction.toCSS(renderEnv),\n\t\t\ti, color, position, positionValue, alpha;\n\n        function throwArgumentDescriptor() {\n            throw { type: \"Argument\",\n\t\t\t\t\tmessage: \"svg-gradient expects direction, start_color [start_position], [color position,]...,\" +\n\t\t\t\t\t\t\t\" end_color [end_position] or direction, color list\" };\n        }\n\n        if (arguments.length == 2) {\n            if (arguments[1].value.length < 2) {\n                throwArgumentDescriptor();\n            }\n            stops = arguments[1].value;\n        } else if (arguments.length < 3) {\n            throwArgumentDescriptor();\n        } else {\n            stops = Array.prototype.slice.call(arguments, 1);\n        }\n\n        switch (directionValue) {\n            case \"to bottom\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"0%\" y2=\"100%\"';\n                break;\n            case \"to right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case \"to bottom right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\"';\n                break;\n            case \"to top right\":\n                gradientDirectionSvg = 'x1=\"0%\" y1=\"100%\" x2=\"100%\" y2=\"0%\"';\n                break;\n            case \"ellipse\":\n            case \"ellipse at center\":\n                gradientType = \"radial\";\n                gradientDirectionSvg = 'cx=\"50%\" cy=\"50%\" r=\"75%\"';\n                rectangleDimension = 'x=\"-50\" y=\"-50\" width=\"101\" height=\"101\"';\n                break;\n            default:\n                throw { type: \"Argument\", message: \"svg-gradient direction must be 'to bottom', 'to right',\" +\n                    \" 'to bottom right', 'to top right' or 'ellipse at center'\" };\n        }\n        returner = '<?xml version=\"1.0\" ?>' +\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width=\"100%\" height=\"100%\" viewBox=\"0 0 1 1\" preserveAspectRatio=\"none\">' +\n            '<' + gradientType + 'Gradient id=\"gradient\" gradientUnits=\"userSpaceOnUse\" ' + gradientDirectionSvg + '>';\n\n        for (i = 0; i < stops.length; i+= 1) {\n            if (stops[i] instanceof Expression) {\n                color = stops[i].value[0];\n                position = stops[i].value[1];\n            } else {\n                color = stops[i];\n                position = undefined;\n            }\n\n            if (!(color instanceof Color) || (!((i === 0 || i + 1 === stops.length) && position === undefined) && !(position instanceof Dimension))) {\n                throwArgumentDescriptor();\n            }\n            positionValue = position ? position.toCSS(renderEnv) : i === 0 ? \"0%\" : \"100%\";\n            alpha = color.alpha;\n            returner += '<stop offset=\"' + positionValue + '\" stop-color=\"' + color.toRGB() + '\"' + (alpha < 1 ? ' stop-opacity=\"' + alpha + '\"' : '') + '/>';\n        }\n        returner += '</' + gradientType + 'Gradient>' +\n            '<rect ' + rectangleDimension + ' fill=\"url(#gradient)\" /></svg>';\n\n        returner = encodeURIComponent(returner);\n\n        returner = \"data:image/svg+xml,\" + returner;\n        return new URL(new Quoted(\"'\" + returner + \"'\", returner, false, this.index, this.currentFileInfo), this.index, this.currentFileInfo);\n    });\n};\n"};
jalangiLabel816:
    while (true) {
        try {
            J$.Se(2329, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/functions/svg_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/functions/svg.js');
            J$.N(2337, '__secret__S$', __secret__S$, 0);
            J$.N(2345, '__secret__traits__', __secret__traits__, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            J$.X1(2321, J$.P(2313, J$.R(81, 'module', module, 2), 'exports', J$.T(2305, function (environment) {
                jalangiLabel815:
                    while (true) {
                        try {
                            J$.Fe(2233, arguments.callee, this, arguments);
                            arguments = J$.N(2241, 'arguments', arguments, 4);
                            environment = J$.N(2249, 'environment', environment, 4);
                            J$.N(2257, 'Dimension', Dimension, 0);
                            J$.N(2265, 'Color', Color, 0);
                            J$.N(2273, 'Expression', Expression, 0);
                            J$.N(2281, 'Quoted', Quoted, 0);
                            J$.N(2289, 'URL', URL, 0);
                            J$.N(2297, 'functionRegistry', functionRegistry, 0);
                            var Dimension = J$.X1(241, J$.W(233, 'Dimension', J$.F(105, J$.R(89, 'require', require, 2), 0)(J$.T(97, '../tree/dimension', 21, false)), Dimension, 1)), Color = J$.X1(257, J$.W(249, 'Color', J$.F(129, J$.R(113, 'require', require, 2), 0)(J$.T(121, '../tree/color', 21, false)), Color, 1)), Expression = J$.X1(273, J$.W(265, 'Expression', J$.F(153, J$.R(137, 'require', require, 2), 0)(J$.T(145, '../tree/expression', 21, false)), Expression, 1)), Quoted = J$.X1(289, J$.W(281, 'Quoted', J$.F(177, J$.R(161, 'require', require, 2), 0)(J$.T(169, '../tree/quoted', 21, false)), Quoted, 1)), URL = J$.X1(305, J$.W(297, 'URL', J$.F(201, J$.R(185, 'require', require, 2), 0)(J$.T(193, '../tree/url', 21, false)), URL, 1)), functionRegistry = J$.X1(321, J$.W(313, 'functionRegistry', J$.F(225, J$.R(209, 'require', require, 2), 0)(J$.T(217, './function-registry', 21, false)), functionRegistry, 1));
                            J$.X1(2225, J$.M(2217, J$.R(329, 'functionRegistry', functionRegistry, 0), 'add', 0)(J$.T(337, 'svg-gradient', 21, false), J$.T(2209, function (direction) {
                                jalangiLabel814:
                                    while (true) {
                                        try {
                                            J$.Fe(2073, arguments.callee, this, arguments);
                                            function throwArgumentDescriptor() {
                                                jalangiLabel813:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(513, arguments.callee, this, arguments);
                                                            arguments = J$.N(521, 'arguments', arguments, 4);
                                                            throw J$.X1(505, J$.Th(497, J$.T(489, {
                                                                type: J$.T(465, 'Argument', 21, false),
                                                                message: J$.B(10, '+', J$.T(473, 'svg-gradient expects direction, start_color [start_position], [color position,]...,', 21, false), J$.T(481, ' end_color [end_position] or direction, color list', 21, false), 0)
                                                            }, 11, false)));
                                                        } catch (J$e) {
                                                            J$.Ex(2353, J$e);
                                                        } finally {
                                                            if (J$.Fr(2361))
                                                                continue jalangiLabel813;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }
                                            arguments = J$.N(2081, 'arguments', arguments, 4);
                                            direction = J$.N(2089, 'direction', direction, 4);
                                            J$.N(2097, 'stops', stops, 0);
                                            J$.N(2105, 'gradientDirectionSvg', gradientDirectionSvg, 0);
                                            J$.N(2113, 'gradientType', gradientType, 0);
                                            J$.N(2121, 'rectangleDimension', rectangleDimension, 0);
                                            J$.N(2129, 'renderEnv', renderEnv, 0);
                                            J$.N(2137, 'returner', returner, 0);
                                            J$.N(2145, 'directionValue', directionValue, 0);
                                            J$.N(2153, 'i', i, 0);
                                            J$.N(2161, 'color', color, 0);
                                            J$.N(2169, 'position', position, 0);
                                            J$.N(2177, 'positionValue', positionValue, 0);
                                            J$.N(2185, 'alpha', alpha, 0);
                                            throwArgumentDescriptor = J$.N(2201, 'throwArgumentDescriptor', J$.T(2193, throwArgumentDescriptor, 12, false, 513), 0);
                                            var stops, gradientDirectionSvg, gradientType = J$.X1(409, J$.W(401, 'gradientType', J$.T(345, 'linear', 21, false), gradientType, 1)), rectangleDimension = J$.X1(425, J$.W(417, 'rectangleDimension', J$.T(353, 'x="0" y="0" width="1" height="1"', 21, false), rectangleDimension, 1)), renderEnv = J$.X1(441, J$.W(433, 'renderEnv', J$.T(369, {
                                                    compress: J$.T(361, false, 23, false)
                                                }, 11, false), renderEnv, 1)), returner, directionValue = J$.X1(457, J$.W(449, 'directionValue', J$.M(393, J$.R(377, 'direction', direction, 0), 'toCSS', 0)(J$.R(385, 'renderEnv', renderEnv, 0)), directionValue, 1)), i, color, position, positionValue, alpha;
                                            if (J$.X1(2385, J$.C(24, J$.B(18, '==', J$.G(537, J$.R(529, 'arguments', arguments, 2), 'length', 0), J$.T(545, 2, 22, false), 0)))) {
                                                if (J$.X1(2369, J$.C(8, J$.B(26, '<', J$.G(585, J$.G(577, J$.G(569, J$.R(553, 'arguments', arguments, 2), J$.T(561, 1, 22, false), 4), 'value', 0), 'length', 0), J$.T(593, 2, 22, false), 0)))) {
                                                    J$.X1(617, J$.F(609, J$.R(601, 'throwArgumentDescriptor', throwArgumentDescriptor, 0), 0)());
                                                }
                                                J$.X1(665, stops = J$.W(657, 'stops', J$.G(649, J$.G(641, J$.R(625, 'arguments', arguments, 2), J$.T(633, 1, 22, false), 4), 'value', 0), stops, 0));
                                            } else if (J$.X1(2377, J$.C(16, J$.B(34, '<', J$.G(681, J$.R(673, 'arguments', arguments, 2), 'length', 0), J$.T(689, 3, 22, false), 0)))) {
                                                J$.X1(713, J$.F(705, J$.R(697, 'throwArgumentDescriptor', throwArgumentDescriptor, 0), 0)());
                                            } else {
                                                J$.X1(777, stops = J$.W(769, 'stops', J$.M(761, J$.G(737, J$.G(729, J$.R(721, 'Array', Array, 2), 'prototype', 0), 'slice', 0), 'call', 0)(J$.R(745, 'arguments', arguments, 2), J$.T(753, 1, 22, false)), stops, 0));
                                            }
                                            switch (J$.X1(2393, J$.C1(32, J$.R(785, 'directionValue', directionValue, 0)))) {
                                            case J$.X1(2401, J$.C2(40, J$.T(817, 'to bottom', 21, false))):
                                                J$.X1(809, gradientDirectionSvg = J$.W(801, 'gradientDirectionSvg', J$.T(793, 'x1="0%" y1="0%" x2="0%" y2="100%"', 21, false), gradientDirectionSvg, 0));
                                                break;
                                            case J$.X1(2409, J$.C2(48, J$.T(849, 'to right', 21, false))):
                                                J$.X1(841, gradientDirectionSvg = J$.W(833, 'gradientDirectionSvg', J$.T(825, 'x1="0%" y1="0%" x2="100%" y2="0%"', 21, false), gradientDirectionSvg, 0));
                                                break;
                                            case J$.X1(2417, J$.C2(56, J$.T(881, 'to bottom right', 21, false))):
                                                J$.X1(873, gradientDirectionSvg = J$.W(865, 'gradientDirectionSvg', J$.T(857, 'x1="0%" y1="0%" x2="100%" y2="100%"', 21, false), gradientDirectionSvg, 0));
                                                break;
                                            case J$.X1(2425, J$.C2(64, J$.T(913, 'to top right', 21, false))):
                                                J$.X1(905, gradientDirectionSvg = J$.W(897, 'gradientDirectionSvg', J$.T(889, 'x1="0%" y1="100%" x2="100%" y2="0%"', 21, false), gradientDirectionSvg, 0));
                                                break;
                                            case J$.X1(2433, J$.C2(72, J$.T(921, 'ellipse', 21, false))):
                                            case J$.X1(2441, J$.C2(80, J$.T(1001, 'ellipse at center', 21, false))):
                                                J$.X1(945, gradientType = J$.W(937, 'gradientType', J$.T(929, 'radial', 21, false), gradientType, 0));
                                                J$.X1(969, gradientDirectionSvg = J$.W(961, 'gradientDirectionSvg', J$.T(953, 'cx="50%" cy="50%" r="75%"', 21, false), gradientDirectionSvg, 0));
                                                J$.X1(993, rectangleDimension = J$.W(985, 'rectangleDimension', J$.T(977, 'x="-50" y="-50" width="101" height="101"', 21, false), rectangleDimension, 0));
                                                break;
                                            default:
                                                throw J$.X1(1049, J$.Th(1041, J$.T(1033, {
                                                    type: J$.T(1009, 'Argument', 21, false),
                                                    message: J$.B(42, '+', J$.T(1017, 'svg-gradient direction must be \'to bottom\', \'to right\',', 21, false), J$.T(1025, ' \'to bottom right\', \'to top right\' or \'ellipse at center\'', 21, false), 0)
                                                }, 11, false)));
                                            }
                                            J$.X1(1121, returner = J$.W(1113, 'returner', J$.B(90, '+', J$.B(82, '+', J$.B(74, '+', J$.B(66, '+', J$.B(58, '+', J$.B(50, '+', J$.T(1057, '<?xml version="1.0" ?>', 21, false), J$.T(1065, '<svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="100%" height="100%" viewBox="0 0 1 1" preserveAspectRatio="none">', 21, false), 0), J$.T(1073, '<', 21, false), 0), J$.R(1081, 'gradientType', gradientType, 0), 0), J$.T(1089, 'Gradient id="gradient" gradientUnits="userSpaceOnUse" ', 21, false), 0), J$.R(1097, 'gradientDirectionSvg', gradientDirectionSvg, 0), 0), J$.T(1105, '>', 21, false), 0), returner, 0));
                                            for (J$.X1(2497, i = J$.W(1137, 'i', J$.T(1129, 0, 22, false), i, 0)); J$.X1(2489, J$.C(160, J$.B(98, '<', J$.R(1145, 'i', i, 0), J$.G(1161, J$.R(1153, 'stops', stops, 0), 'length', 0), 0))); J$.X1(2505, i = J$.W(1185, 'i', J$.B(106, '+', J$.R(1177, 'i', i, 0), J$.T(1169, 1, 22, false), 0), i, 0))) {
                                                if (J$.X1(2449, J$.C(88, J$.B(114, 'instanceof', J$.G(1209, J$.R(1193, 'stops', stops, 0), J$.R(1201, 'i', i, 0), 4), J$.R(1217, 'Expression', Expression, 0), 0)))) {
                                                    J$.X1(1281, color = J$.W(1273, 'color', J$.G(1265, J$.G(1249, J$.G(1241, J$.R(1225, 'stops', stops, 0), J$.R(1233, 'i', i, 0), 4), 'value', 0), J$.T(1257, 0, 22, false), 4), color, 0));
                                                    J$.X1(1345, position = J$.W(1337, 'position', J$.G(1329, J$.G(1313, J$.G(1305, J$.R(1289, 'stops', stops, 0), J$.R(1297, 'i', i, 0), 4), 'value', 0), J$.T(1321, 1, 22, false), 4), position, 0));
                                                } else {
                                                    J$.X1(1385, color = J$.W(1377, 'color', J$.G(1369, J$.R(1353, 'stops', stops, 0), J$.R(1361, 'i', i, 0), 4), color, 0));
                                                    J$.X1(1409, position = J$.W(1401, 'position', J$.T(1393, undefined, 24, false), position, 0));
                                                }
                                                if (J$.X1(2457, J$.C(128, J$.C(120, J$.U(130, '!', J$.B(122, 'instanceof', J$.R(1417, 'color', color, 0), J$.R(1425, 'Color', Color, 0), 0))) ? J$._() : J$.C(112, J$.U(170, '!', J$.C(104, J$.C(96, J$.B(138, '===', J$.R(1433, 'i', i, 0), J$.T(1441, 0, 22, false), 0)) ? J$._() : J$.B(154, '===', J$.B(146, '+', J$.R(1449, 'i', i, 0), J$.T(1457, 1, 22, false), 0), J$.G(1473, J$.R(1465, 'stops', stops, 0), 'length', 0), 0)) ? J$.B(162, '===', J$.R(1481, 'position', position, 0), J$.T(1489, undefined, 24, false), 0) : J$._())) ? J$.U(186, '!', J$.B(178, 'instanceof', J$.R(1497, 'position', position, 0), J$.R(1505, 'Dimension', Dimension, 0), 0)) : J$._()))) {
                                                    J$.X1(1529, J$.F(1521, J$.R(1513, 'throwArgumentDescriptor', throwArgumentDescriptor, 0), 0)());
                                                }
                                                J$.X1(1609, positionValue = J$.W(1601, 'positionValue', J$.X1(2473, J$.C(144, J$.R(1537, 'position', position, 0))) ? J$.M(1561, J$.R(1545, 'position', position, 0), 'toCSS', 0)(J$.R(1553, 'renderEnv', renderEnv, 0)) : J$.X1(2465, J$.C(136, J$.B(194, '===', J$.R(1569, 'i', i, 0), J$.T(1577, 0, 22, false), 0))) ? J$.T(1585, '0%', 21, false) : J$.T(1593, '100%', 21, false), positionValue, 0));
                                                J$.X1(1641, alpha = J$.W(1633, 'alpha', J$.G(1625, J$.R(1617, 'color', color, 0), 'alpha', 0), alpha, 0));
                                                J$.X1(1769, returner = J$.W(1761, 'returner', J$.B(274, '+', J$.R(1753, 'returner', returner, 0), J$.B(266, '+', J$.B(258, '+', J$.B(226, '+', J$.B(218, '+', J$.B(210, '+', J$.B(202, '+', J$.T(1649, '<stop offset="', 21, false), J$.R(1657, 'positionValue', positionValue, 0), 0), J$.T(1665, '" stop-color="', 21, false), 0), J$.M(1681, J$.R(1673, 'color', color, 0), 'toRGB', 0)(), 0), J$.T(1689, '"', 21, false), 0), J$.X1(2481, J$.C(152, J$.B(234, '<', J$.R(1697, 'alpha', alpha, 0), J$.T(1705, 1, 22, false), 0))) ? J$.B(250, '+', J$.B(242, '+', J$.T(1713, ' stop-opacity="', 21, false), J$.R(1721, 'alpha', alpha, 0), 0), J$.T(1729, '"', 21, false), 0) : J$.T(1737, '', 21, false), 0), J$.T(1745, '/>', 21, false), 0), 0), returner, 0));
                                            }
                                            J$.X1(1841, returner = J$.W(1833, 'returner', J$.B(322, '+', J$.R(1825, 'returner', returner, 0), J$.B(314, '+', J$.B(306, '+', J$.B(298, '+', J$.B(290, '+', J$.B(282, '+', J$.T(1777, '</', 21, false), J$.R(1785, 'gradientType', gradientType, 0), 0), J$.T(1793, 'Gradient>', 21, false), 0), J$.T(1801, '<rect ', 21, false), 0), J$.R(1809, 'rectangleDimension', rectangleDimension, 0), 0), J$.T(1817, ' fill="url(#gradient)" /></svg>', 21, false), 0), 0), returner, 0));
                                            J$.X1(1881, returner = J$.W(1873, 'returner', J$.F(1865, J$.R(1849, 'encodeURIComponent', encodeURIComponent, 2), 0)(J$.R(1857, 'returner', returner, 0)), returner, 0));
                                            J$.X1(1913, returner = J$.W(1905, 'returner', J$.B(330, '+', J$.T(1889, 'data:image/svg+xml,', 21, false), J$.R(1897, 'returner', returner, 0), 0), returner, 0));
                                            return J$.X1(2065, J$.Rt(2057, J$.F(2049, J$.R(1921, 'URL', URL, 0), 1)(J$.F(2009, J$.R(1929, 'Quoted', Quoted, 0), 1)(J$.B(346, '+', J$.B(338, '+', J$.T(1937, '\'', 21, false), J$.R(1945, 'returner', returner, 0), 0), J$.T(1953, '\'', 21, false), 0), J$.R(1961, 'returner', returner, 0), J$.T(1969, false, 23, false), J$.G(1985, J$.R(1977, 'this', this, 0), 'index', 0), J$.G(2001, J$.R(1993, 'this', this, 0), 'currentFileInfo', 0)), J$.G(2025, J$.R(2017, 'this', this, 0), 'index', 0), J$.G(2041, J$.R(2033, 'this', this, 0), 'currentFileInfo', 0))));
                                        } catch (J$e) {
                                            J$.Ex(2513, J$e);
                                        } finally {
                                            if (J$.Fr(2521))
                                                continue jalangiLabel814;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 2073)));
                        } catch (J$e) {
                            J$.Ex(2529, J$e);
                        } finally {
                            if (J$.Fr(2537))
                                continue jalangiLabel815;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2233), 0));
        } catch (J$e) {
            J$.Ex(2545, J$e);
        } finally {
            if (J$.Sr(2553)) {
                J$.L();
                continue jalangiLabel816;
            } else {
                J$.L();
                break jalangiLabel816;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
