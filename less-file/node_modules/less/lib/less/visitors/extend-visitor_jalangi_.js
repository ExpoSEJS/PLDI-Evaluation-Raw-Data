J$.iids = {"8":[22,13,22,29],"9":[1,20,1,27],"10":[27,21,27,32],"16":[26,50,26,55],"17":[1,28,1,32],"18":[27,34,27,37],"24":[28,17,28,60],"25":[1,20,1,33],"32":[27,21,27,32],"33":[1,20,1,33],"34":[27,34,27,37],"40":[36,26,36,39],"41":[1,20,1,33],"42":[28,17,28,60],"48":[37,17,37,27],"49":[2,26,2,38],"50":[34,21,34,37],"56":[47,21,47,28],"57":[2,26,2,45],"58":[34,39,34,42],"64":[42,25,42,46],"65":[2,26,2,45],"72":[34,21,34,37],"73":[2,26,2,45],"74":[34,39,34,42],"80":[56,13,56,30],"81":[3,12,3,19],"82":[35,66,35,89],"88":[83,13,83,39],"89":[3,20,3,29],"90":[42,25,42,46],"96":[95,20,95,76],"97":[3,12,3,30],"98":[42,48,42,51],"104":[102,17,102,56],"105":[3,42,3,49],"112":[110,26,110,45],"113":[3,50,3,61],"114":[42,48,42,51],"120":[115,21,115,75],"121":[3,42,3,62],"122":[47,21,47,28],"128":[131,29,131,71],"129":[3,73,3,80],"130":[50,38,50,69],"136":[120,21,120,35],"137":[3,81,3,92],"138":[56,13,56,30],"144":[112,41,112,85],"145":[3,73,3,93],"146":[57,36,57,60],"152":[111,31,111,63],"153":[3,12,3,30],"154":[65,39,65,70],"160":[141,17,141,37],"161":[3,12,3,30],"162":[72,39,72,70],"168":[139,13,139,32],"169":[3,42,3,62],"170":[83,13,83,39],"176":[166,13,166,29],"177":[3,42,3,62],"178":[95,20,95,43],"184":[173,21,173,50],"185":[3,73,3,93],"186":[95,47,95,76],"192":[177,21,177,52],"193":[3,73,3,93],"194":[102,26,102,44],"200":[177,21,177,52],"201":[5,5,5,9],"202":[102,26,102,55],"208":[181,21,181,35],"209":[5,25,5,32],"210":[102,17,102,56],"216":[171,33,171,69],"217":[5,33,5,37],"218":[103,25,103,43],"224":[170,31,170,62],"225":[5,21,5,38],"226":[103,25,103,54],"232":[199,43,199,101],"233":[5,5,5,38],"234":[104,29,104,51],"240":[199,21,199,101],"241":[5,5,5,39],"242":[104,29,104,73],"248":[199,21,199,101],"249":[6,5,6,9],"250":[111,31,111,63],"256":[210,25,210,79],"257":[6,21,6,23],"258":[111,65,111,78],"264":[210,25,210,79],"265":[6,5,6,23],"272":[213,133,213,239],"273":[6,5,6,24],"274":[111,65,111,78],"280":[213,25,213,239],"281":[7,5,7,9],"282":[112,41,112,85],"288":[213,25,213,239],"289":[7,29,7,31],"290":[112,87,112,106],"296":[220,80,220,200],"297":[7,28,7,32],"304":[220,57,220,201],"305":[7,5,7,32],"306":[112,87,112,106],"312":[220,29,220,202],"313":[7,5,7,33],"314":[115,21,115,75],"320":[220,29,220,202],"321":[4,27,8,2],"322":[127,37,127,59],"328":[218,25,218,39],"329":[4,27,8,2],"330":[140,13,140,36],"336":[225,29,225,52],"337":[4,27,8,2],"338":[141,17,141,37],"344":[224,25,224,39],"345":[4,27,8,2],"346":[149,34,149,127],"352":[207,29,207,56],"353":[4,27,8,2],"354":[149,34,149,140],"360":[197,45,197,102],"361":[9,1,9,20],"362":[149,34,149,154],"368":[195,41,195,92],"369":[11,16,11,20],"370":[149,34,149,160],"376":[242,13,242,83],"377":[11,16,11,29],"378":[151,104,151,122],"384":[242,13,242,83],"385":[11,36,11,40],"386":[169,80,169,111],"392":[246,17,246,97],"393":[11,16,11,41],"394":[170,31,170,62],"395":[11,16,11,35],"400":[246,17,246,97],"401":[11,16,11,41],"402":[170,64,170,77],"408":[249,17,249,61],"409":[11,9,11,42],"416":[250,21,250,63],"417":[12,9,12,13],"418":[170,64,170,77],"424":[250,21,250,63],"425":[12,27,12,31],"426":[171,33,171,69],"432":[249,17,249,61],"433":[12,27,12,47],"434":[171,71,171,82],"440":[255,29,255,77],"441":[12,48,12,49],"448":[256,29,256,77],"449":[12,27,12,50],"450":[171,71,171,82],"456":[245,13,245,52],"457":[12,9,12,50],"458":[176,47,176,70],"464":[262,17,262,125],"465":[12,9,12,51],"466":[195,41,195,92],"472":[262,17,262,125],"473":[13,16,13,20],"474":[195,94,195,117],"480":[267,37,267,86],"481":[13,16,13,20],"488":[267,93,267,142],"489":[13,9,13,21],"490":[195,94,195,117],"496":[267,25,267,143],"497":[10,10,14,6],"498":[197,45,197,102],"504":[267,25,267,143],"505":[10,10,14,6],"506":[197,104,197,127],"512":[266,21,266,110],"513":[10,10,14,6],"520":[271,21,271,113],"521":[10,10,14,6],"522":[197,104,197,127],"528":[265,29,265,62],"529":[16,9,16,18],"530":[199,43,199,70],"536":[261,13,261,51],"537":[16,33,16,38],"538":[199,74,199,101],"544":[285,17,285,98],"545":[16,9,16,38],"546":[207,29,207,56],"552":[285,17,285,98],"553":[16,9,16,39],"554":[207,58,207,61],"560":[291,17,291,79],"561":[15,16,17,6],"568":[291,17,291,79],"569":[15,16,17,6],"570":[207,58,207,61],"576":[299,17,299,106],"577":[15,16,17,6],"578":[210,25,210,48],"584":[281,30,281,57],"585":[15,16,17,6],"586":[210,52,210,79],"592":[304,13,304,98],"593":[15,16,17,6],"594":[213,25,213,129],"600":[304,13,304,98],"601":[19,9,19,18],"602":[213,133,213,159],"608":[311,17,311,26],"609":[19,33,19,38],"610":[213,163,213,239],"617":[19,9,19,38],"618":[216,25,216,49],"625":[19,9,19,39],"626":[219,51,219,99],"633":[18,27,20,6],"634":[220,57,220,75],"641":[18,27,20,6],"642":[220,80,220,105],"649":[18,27,20,6],"650":[220,80,220,141],"657":[18,27,20,6],"658":[220,145,220,170],"665":[18,27,20,6],"666":[220,145,220,200],"673":[22,13,22,24],"674":[228,66,228,91],"681":[22,13,22,29],"682":[234,25,234,28],"689":[23,13,23,20],"697":[23,13,23,20],"698":[234,25,234,28],"705":[25,52,25,54],"706":[242,13,242,33],"713":[25,52,25,54],"714":[242,13,242,46],"721":[25,52,25,54],"722":[242,50,242,70],"729":[26,21,26,32],"730":[242,50,242,83],"737":[26,21,26,38],"738":[243,20,243,51],"745":[26,50,26,55],"746":[245,13,245,52],"753":[26,58,26,63],"754":[246,17,246,54],"761":[26,58,26,70],"762":[246,58,246,97],"769":[26,73,26,74],"770":[249,17,249,37],"777":[26,21,26,38],"778":[249,41,249,61],"785":[26,21,26,38],"786":[257,20,257,51],"793":[26,50,26,74],"794":[261,13,261,51],"801":[26,50,26,74],"802":[262,19,262,57],"809":[27,18,27,19],"810":[262,17,262,58],"817":[27,18,27,19],"818":[262,62,262,125],"825":[27,21,27,22],"826":[265,29,265,62],"833":[27,25,27,32],"834":[265,64,265,67],"849":[27,34,27,35],"850":[265,64,265,67],"857":[27,34,27,37],"858":[266,21,266,110],"866":[267,25,267,32],"873":[28,17,28,28],"874":[267,36,267,143],"881":[28,17,28,34],"882":[271,21,271,113],"889":[28,35,28,36],"890":[281,30,281,57],"897":[28,17,28,37],"898":[281,59,281,71],"905":[28,49,28,53],"913":[28,49,28,60],"914":[281,59,281,71],"921":[29,17,29,39],"922":[285,17,285,59],"929":[29,45,29,50],"930":[285,63,285,98],"937":[29,51,29,52],"938":[286,22,286,37],"945":[29,45,29,53],"946":[286,55,286,70],"953":[29,17,29,54],"954":[288,17,288,43],"955":[29,17,29,44],"961":[29,17,29,55],"969":[30,17,30,28],"970":[288,17,288,43],"977":[30,49,30,53],"978":[291,17,291,61],"985":[30,17,30,53],"986":[291,65,291,79],"993":[30,17,30,54],"994":[292,22,292,37],"1001":[33,21,33,32],"1002":[292,55,292,70],"1009":[33,21,33,38],"1010":[299,17,299,106],"1017":[33,21,33,38],"1018":[301,17,301,43],"1025":[33,21,33,38],"1033":[34,18,34,19],"1034":[301,17,301,43],"1041":[34,18,34,19],"1042":[304,13,304,59],"1049":[34,21,34,22],"1050":[304,63,304,98],"1057":[34,25,34,30],"1058":[305,18,305,33],"1065":[34,25,34,37],"1066":[305,51,305,66],"1074":[306,13,306,39],"1081":[34,39,34,40],"1089":[34,39,34,42],"1090":[306,13,306,39],"1098":[321,78,321,109],"1105":[35,32,35,37],"1106":[326,25,326,56],"1113":[35,38,35,39],"1114":[330,82,330,113],"1121":[35,32,35,40],"1122":[335,25,335,56],"1129":[35,53,35,65],"1137":[35,66,35,78],"1145":[35,66,35,85],"1153":[35,88,35,89],"1161":[35,53,35,90],"1169":[35,108,35,116],"1177":[35,108,35,127],"1185":[35,32,35,40],"1193":[35,32,35,40],"1201":[35,53,35,90],"1209":[35,53,35,90],"1217":[35,108,35,127],"1225":[35,108,35,127],"1233":[36,26,36,39],"1241":[36,42,36,55],"1249":[36,62,36,63],"1257":[36,42,36,64],"1259":[36,42,36,61],"1265":[36,72,36,94],"1273":[36,42,36,95],"1275":[36,42,36,71],"1281":[36,98,36,120],"1289":[36,26,36,120],"1297":[36,13,36,121],"1305":[37,17,37,27],"1313":[38,30,38,40],"1321":[39,28,39,46],"1329":[39,28,39,54],"1331":[39,28,39,52],"1337":[39,28,39,54],"1345":[39,21,39,55],"1353":[38,45,40,18],"1361":[38,45,40,18],"1369":[38,45,40,18],"1377":[38,45,40,18],"1385":[38,30,40,19],"1387":[38,30,38,44],"1393":[38,30,40,19],"1401":[38,17,40,20],"1409":[42,22,42,23],"1417":[42,22,42,23],"1425":[42,25,42,26],"1433":[42,29,42,39],"1441":[42,29,42,46],"1457":[42,48,42,49],"1465":[42,48,42,51],"1481":[43,17,43,21],"1489":[43,37,43,41],"1497":[43,17,43,41],"1505":[43,17,43,42],"1513":[44,26,44,36],"1521":[44,37,44,38],"1529":[44,26,44,39],"1537":[44,26,44,39],"1545":[44,17,44,40],"1553":[45,17,45,23],"1561":[45,42,45,54],"1569":[45,17,45,55],"1571":[45,17,45,41],"1577":[45,17,45,56],"1585":[46,17,46,23],"1593":[46,34,46,45],"1601":[46,17,46,45],"1609":[46,17,46,46],"1617":[47,21,47,22],"1625":[47,27,47,28],"1633":[48,21,48,27],"1641":[48,60,48,64],"1649":[48,21,48,64],"1657":[48,21,48,65],"1665":[50,17,50,21],"1673":[50,17,50,37],"1681":[50,38,50,42],"1689":[50,38,50,58],"1697":[50,38,50,65],"1705":[50,68,50,69],"1713":[50,17,50,70],"1721":[50,76,50,82],"1729":[50,17,50,83],"1731":[50,17,50,75],"1737":[50,17,50,84],"1745":[53,9,53,13],"1753":[53,9,53,22],"1761":[53,28,53,39],"1769":[53,28,53,49],"1777":[53,9,53,50],"1779":[53,9,53,27],"1785":[53,9,53,51],"1793":[21,19,54,6],"1801":[21,19,54,6],"1809":[21,19,54,6],"1817":[21,19,54,6],"1825":[21,19,54,6],"1833":[21,19,54,6],"1841":[21,19,54,6],"1849":[21,19,54,6],"1857":[21,19,54,6],"1865":[21,19,54,6],"1873":[21,19,54,6],"1881":[21,19,54,6],"1889":[21,19,54,6],"1897":[21,19,54,6],"1905":[21,19,54,6],"1913":[21,19,54,6],"1921":[56,14,56,25],"1929":[56,14,56,30],"1937":[57,13,57,17],"1945":[57,13,57,26],"1953":[57,36,57,40],"1961":[57,36,57,49],"1969":[57,36,57,56],"1977":[57,59,57,60],"1985":[57,13,57,60],"1993":[57,13,57,61],"2001":[55,22,59,6],"2009":[55,22,59,6],"2017":[55,22,59,6],"2025":[55,22,59,6],"2033":[61,9,61,18],"2041":[61,32,61,34],"2049":[61,9,61,34],"2057":[61,9,61,35],"2065":[62,9,62,13],"2073":[62,9,62,29],"2081":[62,35,62,44],"2089":[62,35,62,55],"2097":[62,9,62,56],"2099":[62,9,62,34],"2105":[62,9,62,57],"2113":[60,17,63,6],"2121":[60,17,63,6],"2129":[60,17,63,6],"2137":[60,17,63,6],"2145":[60,17,63,6],"2153":[65,9,65,13],"2161":[65,9,65,29],"2169":[65,39,65,43],"2177":[65,39,65,59],"2185":[65,39,65,66],"2193":[65,69,65,70],"2201":[65,9,65,70],"2209":[65,9,65,71],"2217":[64,20,66,6],"2225":[64,20,66,6],"2233":[64,20,66,6],"2241":[64,20,66,6],"2249":[68,9,68,22],"2257":[68,36,68,38],"2265":[68,9,68,38],"2273":[68,9,68,39],"2281":[69,9,69,13],"2289":[69,9,69,29],"2297":[69,35,69,48],"2305":[69,35,69,59],"2313":[69,9,69,60],"2315":[69,9,69,34],"2321":[69,9,69,61],"2329":[67,21,70,6],"2337":[67,21,70,6],"2345":[67,21,70,6],"2353":[67,21,70,6],"2361":[67,21,70,6],"2369":[72,9,72,13],"2377":[72,9,72,29],"2385":[72,39,72,43],"2393":[72,39,72,59],"2401":[72,39,72,66],"2409":[72,69,72,70],"2417":[72,9,72,70],"2425":[72,9,72,71],"2433":[71,24,73,6],"2441":[71,24,73,6],"2449":[71,24,73,6],"2457":[71,24,73,6],"2465":[9,33,74,2],"2473":[9,1,74,2],"2481":[9,1,74,3],"2489":[76,5,76,9],"2497":[76,25,76,32],"2505":[76,33,76,37],"2513":[76,21,76,38],"2521":[76,5,76,38],"2529":[76,5,76,39],"2537":[75,29,77,2],"2545":[75,29,77,2],"2553":[75,29,77,2],"2561":[75,29,77,2],"2569":[75,29,77,2],"2577":[78,1,78,22],"2585":[80,32,80,51],"2593":[80,28,80,53],"2601":[80,28,80,53],"2609":[80,28,80,53],"2617":[81,9,81,13],"2625":[81,30,81,32],"2633":[81,9,81,32],"2641":[81,9,81,33],"2649":[82,9,82,21],"2657":[82,26,82,30],"2665":[82,9,82,31],"2667":[82,9,82,25],"2673":[82,9,82,32],"2681":[83,14,83,26],"2689":[83,14,83,39],"2697":[84,20,84,24],"2705":[84,20,84,24],"2713":[84,13,84,25],"2721":[86,9,86,13],"2729":[86,27,86,31],"2737":[86,27,86,42],"2745":[86,50,86,54],"2753":[86,72,86,76],"2761":[86,72,86,87],"2769":[86,89,86,93],"2777":[86,89,86,104],"2785":[86,50,86,105],"2787":[86,50,86,71],"2793":[86,27,86,106],"2795":[86,27,86,49],"2801":[86,9,86,106],"2809":[86,9,86,107],"2817":[87,9,87,13],"2825":[87,33,87,37],"2833":[87,33,87,48],"2841":[87,32,87,49],"2849":[87,9,87,49],"2857":[87,9,87,50],"2865":[88,23,88,27],"2873":[88,23,88,36],"2881":[88,43,88,47],"2889":[88,23,88,48],"2891":[88,23,88,42],"2897":[88,23,88,48],"2905":[88,23,88,48],"2913":[89,9,89,13],"2921":[89,40,89,44],"2929":[89,40,89,55],"2937":[89,9,89,56],"2939":[89,9,89,39],"2945":[89,9,89,57],"2953":[90,16,90,23],"2961":[90,16,90,23],"2969":[90,9,90,24],"2977":[79,10,91,6],"2985":[79,10,91,6],"2993":[79,10,91,6],"3001":[79,10,91,6],"3009":[79,10,91,6],"3017":[79,10,91,6],"3025":[93,23,93,27],"3033":[93,23,93,41],"3041":[93,23,93,41],"3049":[93,23,93,41],"3057":[94,9,94,19],"3065":[95,21,95,27],"3073":[95,21,95,43],"3081":[95,47,95,53],"3089":[95,47,95,64],"3097":[95,47,95,71],"3105":[95,75,95,76],"3113":[95,20,95,76],"3121":[95,13,95,77],"3129":[94,27,96,10],"3137":[94,27,96,10],"3145":[94,27,96,10],"3153":[94,27,96,10],"3161":[94,9,96,11],"3163":[94,9,94,26],"3169":[97,28,97,39],"3177":[97,28,97,39],"3185":[97,28,97,39],"3193":[99,28,99,34],"3201":[99,28,99,43],"3209":[99,50,99,52],"3217":[99,28,99,53],"3219":[99,28,99,49],"3225":[99,28,99,53],"3233":[99,17,99,54],"3241":[100,15,101,14],"3249":[102,18,102,25],"3257":[102,26,102,32],"3265":[102,26,102,38],"3273":[102,41,102,44],"3281":[102,47,102,55],"3289":[102,18,102,56],"3297":[103,17,103,24],"3305":[103,25,103,31],"3313":[103,25,103,37],"3321":[103,40,103,43],"3329":[103,46,103,54],"3337":[103,58,103,62],"3345":[103,17,103,62],"3353":[103,17,103,63],"3361":[104,17,104,23],"3369":[104,29,104,40],"3377":[104,43,104,51],"3385":[104,54,104,73],"3393":[104,17,104,74],"3395":[104,17,104,28],"3401":[104,17,104,75],"3409":[96,20,106,10],"3417":[96,20,106,10],"3425":[96,20,106,10],"3433":[96,20,106,10],"3441":[96,20,106,10],"3449":[94,9,106,11],"3451":[94,9,96,19],"3457":[94,9,106,12],"3465":[92,32,107,6],"3473":[92,32,107,6],"3481":[92,32,107,6],"3489":[92,32,107,6],"3497":[92,32,107,6],"3505":[109,69,109,71],"3513":[109,102,109,106],"3521":[109,69,109,71],"3529":[109,69,109,71],"3537":[109,102,109,106],"3545":[109,102,109,106],"3553":[110,26,110,40],"3561":[110,44,110,45],"3569":[110,26,110,45],"3577":[110,9,110,46],"3585":[111,28,111,29],"3593":[111,28,111,29],"3601":[111,31,111,42],"3609":[111,45,111,56],"3617":[111,45,111,63],"3633":[111,65,111,76],"3641":[111,65,111,78],"3657":[112,38,112,39],"3665":[112,38,112,39],"3673":[112,41,112,58],"3681":[112,61,112,78],"3689":[112,61,112,85],"3705":[112,87,112,104],"3713":[112,87,112,106],"3729":[113,26,113,37],"3737":[113,38,113,49],"3745":[113,26,113,50],"3753":[113,26,113,50],"3761":[113,17,113,51],"3769":[114,32,114,49],"3777":[114,50,114,67],"3785":[114,32,114,68],"3793":[114,32,114,68],"3801":[114,17,114,69],"3809":[115,21,115,27],"3817":[115,21,115,38],"3825":[115,47,115,59],"3833":[115,47,115,69],"3841":[115,21,115,70],"3843":[115,21,115,46],"3849":[115,74,115,75],"3857":[118,33,118,45],"3865":[118,33,118,59],"3873":[118,60,118,61],"3881":[118,33,118,62],"3889":[118,32,118,63],"3897":[118,32,118,63],"3905":[118,17,118,64],"3913":[119,27,119,40],"3921":[119,51,119,57],"3929":[119,59,119,71],"3937":[119,27,119,72],"3939":[119,27,119,50],"3945":[119,27,119,72],"3953":[119,17,119,73],"3961":[120,21,120,28],"3969":[120,21,120,35],"3977":[121,21,121,27],"3985":[121,46,121,50],"3993":[121,21,121,50],"4001":[121,21,121,51],"4009":[122,21,122,27],"4017":[122,21,122,41],"4025":[123,36,123,48],"4033":[123,36,123,65],"4035":[123,36,123,63],"4041":[123,36,123,65],"4049":[123,36,123,65],"4057":[124,39,124,52],"4065":[124,68,124,75],"4073":[124,77,124,89],"4081":[124,91,124,103],"4089":[124,105,124,111],"4097":[124,105,124,123],"4099":[124,105,124,121],"4105":[124,39,124,124],"4107":[124,39,124,67],"4113":[124,39,124,124],"4121":[124,25,124,125],"4129":[125,41,125,45],"4137":[125,53,125,65],"4145":[125,53,125,74],"4153":[125,76,125,88],"4161":[125,76,125,95],"4169":[125,97,125,98],"4177":[125,100,125,112],"4185":[125,100,125,128],"4193":[125,130,125,134],"4201":[125,37,125,135],"4203":[125,41,125,52],"4209":[125,37,125,135],"4217":[125,25,125,136],"4225":[126,25,126,34],"4233":[126,51,126,62],"4241":[126,25,126,62],"4249":[126,25,126,63],"4257":[127,25,127,36],"4265":[127,37,127,48],"4273":[127,37,127,55],"4281":[127,58,127,59],"4289":[127,25,127,60],"4297":[127,75,127,84],"4305":[127,74,127,85],"4313":[127,25,127,85],"4321":[127,25,127,86],"4329":[128,25,128,37],"4337":[128,43,128,52],"4345":[128,25,128,53],"4347":[128,25,128,42],"4353":[128,25,128,54],"4361":[129,25,129,34],"4369":[129,45,129,57],"4377":[129,45,129,65],"4385":[129,25,129,65],"4393":[129,25,129,66],"4401":[130,25,130,34],"4409":[130,48,130,57],"4417":[130,48,130,68],"4425":[130,76,130,88],"4433":[130,76,130,99],"4441":[130,101,130,107],"4449":[130,101,130,118],"4457":[130,48,130,119],"4459":[130,48,130,75],"4465":[130,25,130,119],"4473":[130,25,130,120],"4481":[131,29,131,41],"4489":[131,29,131,71],"4497":[132,29,132,38],"4505":[132,71,132,75],"4513":[132,29,132,75],"4521":[132,29,132,76],"4529":[133,29,133,41],"4537":[133,29,133,49],"4545":[133,29,133,55],"4553":[133,61,133,72],"4561":[133,29,133,73],"4563":[133,29,133,60],"4569":[133,29,133,74],"4577":[122,50,135,22],"4585":[122,50,135,22],"4593":[122,50,135,22],"4601":[122,50,135,22],"4609":[122,50,135,22],"4617":[122,21,135,23],"4619":[122,21,122,49],"4625":[122,21,135,24],"4633":[139,13,139,25],"4641":[139,13,139,32],"4649":[140,13,140,17],"4665":[140,13,140,36],"4667":[140,13,140,36],"4681":[140,13,140,37],"4689":[141,17,141,31],"4697":[141,34,141,37],"4705":[142,35,142,58],"4713":[142,35,142,58],"4721":[142,35,142,58],"4729":[143,35,143,58],"4737":[143,35,143,58],"4745":[143,35,143,58],"4753":[145,35,145,47],"4761":[145,48,145,49],"4769":[145,35,145,50],"4777":[145,35,145,64],"4785":[145,65,145,66],"4793":[145,35,145,67],"4801":[145,35,145,75],"4803":[145,35,145,73],"4809":[145,35,145,75],"4817":[145,21,145,76],"4825":[146,35,146,47],"4833":[146,48,146,49],"4841":[146,35,146,50],"4849":[146,35,146,59],"4857":[146,35,146,67],"4859":[146,35,146,65],"4865":[146,35,146,67],"4873":[146,21,146,68],"4881":[147,19,148,18],"4889":[149,34,149,113],"4897":[149,116,149,127],"4905":[149,130,149,140],"4913":[149,143,149,154],"4921":[149,157,149,160],"4929":[149,23,149,162],"4937":[149,23,149,162],"4945":[149,17,149,163],"4953":[151,20,151,32],"4961":[151,40,151,53],"4969":[151,71,151,83],"4977":[151,85,151,102],"4985":[151,104,151,118],"4993":[151,121,151,122],"5001":[151,40,151,123],"5003":[151,40,151,70],"5009":[151,20,151,124],"5011":[151,20,151,39],"5017":[151,20,151,124],"5025":[151,13,151,125],"5033":[153,20,153,32],"5041":[153,20,153,32],"5049":[153,13,153,33],"5057":[108,23,155,6],"5065":[108,23,155,6],"5073":[108,23,155,6],"5081":[108,23,155,6],"5089":[108,23,155,6],"5097":[108,23,155,6],"5105":[108,23,155,6],"5113":[108,23,155,6],"5121":[108,23,155,6],"5129":[108,23,155,6],"5137":[108,23,155,6],"5145":[108,23,155,6],"5153":[108,23,155,6],"5161":[108,23,155,6],"5169":[108,23,155,6],"5177":[108,23,155,6],"5185":[108,23,155,6],"5193":[108,23,155,6],"5201":[157,9,157,18],"5209":[157,33,157,38],"5217":[157,9,157,38],"5225":[157,9,157,39],"5233":[156,16,158,6],"5241":[156,16,158,6],"5249":[156,16,158,6],"5257":[156,16,158,6],"5265":[156,16,158,6],"5273":[160,9,160,18],"5281":[160,33,160,38],"5289":[160,9,160,38],"5297":[160,9,160,39],"5305":[159,27,161,6],"5313":[159,27,161,6],"5321":[159,27,161,6],"5329":[159,27,161,6],"5337":[159,27,161,6],"5345":[163,9,163,18],"5353":[163,33,163,38],"5361":[163,9,163,38],"5369":[163,9,163,39],"5377":[162,20,164,6],"5385":[162,20,164,6],"5393":[162,20,164,6],"5401":[162,20,164,6],"5409":[162,20,164,6],"5417":[166,13,166,24],"5425":[166,13,166,29],"5433":[167,13,167,20],"5441":[167,13,167,20],"5449":[169,59,169,63],"5457":[169,59,169,79],"5465":[169,80,169,84],"5473":[169,80,169,100],"5481":[169,80,169,107],"5489":[169,110,169,111],"5497":[169,59,169,112],"5505":[169,131,169,133],"5513":[169,151,169,155],"5521":[169,59,169,112],"5529":[169,59,169,112],"5537":[169,131,169,133],"5545":[169,131,169,133],"5553":[169,151,169,155],"5561":[169,151,169,155],"5569":[170,28,170,29],"5577":[170,28,170,29],"5585":[170,31,170,42],"5593":[170,45,170,55],"5601":[170,45,170,62],"5617":[170,64,170,75],"5625":[170,64,170,77],"5641":[171,30,171,31],"5649":[171,30,171,31],"5657":[171,33,171,42],"5665":[171,45,171,56],"5673":[171,45,171,62],"5681":[171,45,171,69],"5697":[171,71,171,80],"5705":[171,71,171,82],"5721":[172,32,172,43],"5729":[172,32,172,49],"5737":[172,50,172,59],"5745":[172,32,172,60],"5753":[172,32,172,60],"5761":[172,17,172,61],"5769":[173,21,173,32],"5777":[173,21,173,50],"5785":[176,34,176,46],"5793":[176,47,176,59],"5801":[176,47,176,66],"5809":[176,69,176,70],"5817":[176,34,176,71],"5825":[176,34,176,82],"5833":[176,34,176,82],"5841":[176,34,176,82],"5849":[177,21,177,31],"5857":[177,35,177,45],"5865":[177,35,177,52],"5873":[180,27,180,31],"5881":[180,42,180,52],"5889":[180,53,180,64],"5897":[180,42,180,65],"5905":[180,67,180,79],"5913":[180,27,180,80],"5915":[180,27,180,41],"5921":[180,27,180,80],"5929":[180,17,180,81],"5937":[181,21,181,28],"5945":[181,21,181,35],"5953":[182,21,182,31],"5961":[182,32,182,43],"5969":[182,21,182,44],"5977":[182,63,182,67],"5985":[182,21,182,67],"5993":[182,21,182,68],"6001":[183,21,183,31],"6009":[183,32,183,43],"6017":[183,21,183,44],"6025":[183,21,183,58],"6033":[185,45,185,58],"6041":[185,74,185,81],"6049":[185,83,185,95],"6057":[185,97,185,109],"6065":[185,111,185,121],"6073":[185,122,185,133],"6081":[185,111,185,134],"6089":[185,111,185,146],"6091":[185,111,185,144],"6097":[185,45,185,147],"6099":[185,45,185,73],"6105":[185,45,185,147],"6113":[185,25,185,148],"6121":[186,25,186,39],"6129":[186,45,186,62],"6137":[186,25,186,63],"6139":[186,25,186,44],"6145":[186,25,186,64],"6153":[183,67,187,22],"6161":[183,67,187,22],"6169":[183,67,187,22],"6177":[183,67,187,22],"6185":[183,67,187,22],"6193":[183,21,187,23],"6195":[183,21,183,66],"6201":[183,21,187,24],"6209":[191,9,191,20],"6217":[191,29,191,40],"6225":[191,29,191,46],"6233":[191,54,191,68],"6241":[191,29,191,69],"6243":[191,29,191,53],"6249":[191,9,191,69],"6257":[191,9,191,70],"6265":[165,19,192,6],"6273":[165,19,192,6],"6281":[165,19,192,6],"6289":[165,19,192,6],"6297":[165,19,192,6],"6305":[165,19,192,6],"6313":[165,19,192,6],"6321":[165,19,192,6],"6329":[165,19,192,6],"6337":[165,19,192,6],"6345":[165,19,192,6],"6353":[165,19,192,6],"6361":[165,19,192,6],"6369":[194,132,194,136],"6377":[194,155,194,161],"6385":[194,155,194,170],"6393":[194,155,194,179],"6401":[194,200,194,202],"6409":[194,230,194,232],"6417":[194,132,194,136],"6425":[194,132,194,136],"6433":[194,155,194,179],"6441":[194,155,194,179],"6449":[194,200,194,202],"6457":[194,200,194,202],"6465":[194,230,194,232],"6473":[194,230,194,232],"6481":[195,38,195,39],"6489":[195,38,195,39],"6497":[195,41,195,62],"6505":[195,65,195,85],"6513":[195,65,195,92],"6529":[195,94,195,115],"6537":[195,94,195,117],"6553":[196,33,196,53],"6561":[196,54,196,75],"6569":[196,33,196,76],"6577":[196,33,196,76],"6585":[196,13,196,77],"6593":[197,42,197,43],"6601":[197,42,197,43],"6609":[197,45,197,66],"6617":[197,69,197,86],"6625":[197,69,197,95],"6633":[197,69,197,102],"6649":[197,104,197,125],"6657":[197,104,197,127],"6673":[198,35,198,52],"6681":[198,35,198,61],"6689":[198,62,198,83],"6697":[198,35,198,84],"6705":[198,35,198,84],"6713":[198,17,198,85],"6721":[199,21,199,27],"6729":[199,21,199,39],"6737":[199,43,199,64],"6745":[199,69,199,70],"6753":[199,74,199,95],"6761":[199,100,199,101],"6769":[200,21,200,37],"6777":[201,36,201,57],"6785":[202,32,202,53],"6793":[203,34,203,35],"6801":[204,44,204,59],"6809":[204,44,204,70],"6817":[200,43,205,22],"6825":[200,21,205,23],"6827":[200,21,200,42],"6833":[200,21,205,24],"6841":[207,26,207,27],"6849":[207,26,207,27],"6857":[207,29,207,30],"6865":[207,33,207,49],"6873":[207,33,207,56],"6889":[207,58,207,59],"6897":[207,58,207,61],"6913":[208,38,208,54],"6921":[208,55,208,56],"6929":[208,38,208,57],"6937":[208,38,208,57],"6945":[208,21,208,58],"6953":[209,40,209,55],"6961":[209,40,209,66],"6969":[209,40,209,72],"6977":[209,40,209,72],"6985":[209,21,209,73],"6993":[210,25,210,41],"7001":[210,46,210,48],"7009":[210,52,210,73],"7017":[210,78,210,79],"7025":[211,44,211,47],"7033":[211,44,211,47],"7041":[211,25,211,48],"7049":[213,26,213,39],"7057":[213,61,213,75],"7065":[213,76,213,90],"7073":[213,76,213,98],"7081":[213,61,213,99],"7089":[213,61,213,105],"7097":[213,107,213,122],"7105":[213,107,213,128],"7113":[213,26,213,129],"7115":[213,26,213,60],"7121":[213,133,213,147],"7129":[213,133,213,155],"7137":[213,158,213,159],"7145":[213,163,213,177],"7153":[213,178,213,192],"7161":[213,178,213,200],"7169":[213,163,213,201],"7177":[213,163,213,212],"7185":[213,163,213,218],"7193":[213,223,213,239],"7201":[214,42,214,46],"7209":[214,42,214,46],"7217":[214,25,214,47],"7225":[216,25,216,39],"7241":[216,25,216,49],"7243":[216,25,216,49],"7257":[216,25,216,50],"7265":[218,25,218,39],"7273":[219,25,219,39],"7281":[219,51,219,65],"7289":[219,51,219,73],"7297":[219,78,219,92],"7305":[219,78,219,99],"7313":[219,25,219,99],"7321":[219,25,219,100],"7329":[220,29,220,43],"7337":[220,29,220,52],"7345":[220,58,220,64],"7353":[220,58,220,75],"7361":[220,80,220,101],"7369":[220,104,220,105],"7377":[220,108,220,125],"7385":[220,108,220,134],"7393":[220,108,220,141],"7401":[220,145,220,166],"7409":[220,169,220,170],"7417":[220,173,220,193],"7425":[220,173,220,200],"7433":[221,46,221,50],"7441":[221,46,221,50],"7449":[221,29,221,51],"7457":[224,25,224,39],"7465":[225,29,225,43],"7473":[225,29,225,52],"7481":[226,29,226,43],"7489":[226,53,226,67],"7497":[226,53,226,74],"7505":[226,29,226,74],"7513":[226,29,226,75],"7521":[227,29,227,43],"7529":[227,59,227,80],"7537":[227,29,227,80],"7545":[227,29,227,81],"7553":[228,29,228,43],"7561":[228,66,228,87],"7569":[228,90,228,91],"7577":[228,29,228,91],"7585":[228,29,228,92],"7593":[229,29,229,45],"7601":[229,55,229,56],"7609":[229,29,229,56],"7617":[229,29,229,57],"7625":[230,29,230,36],"7633":[230,42,230,56],"7641":[230,29,230,57],"7643":[230,29,230,41],"7649":[230,29,230,58],"7657":[233,25,233,41],"7665":[233,49,233,50],"7673":[233,52,233,53],"7681":[233,25,233,54],"7683":[233,25,233,48],"7689":[233,25,233,55],"7705":[234,25,234,26],"7713":[234,25,234,28],"7729":[234,25,234,29],"7737":[239,16,239,23],"7745":[239,16,239,23],"7753":[239,9,239,24],"7761":[193,16,240,6],"7769":[193,16,240,6],"7777":[193,16,240,6],"7785":[193,16,240,6],"7793":[193,16,240,6],"7801":[193,16,240,6],"7809":[193,16,240,6],"7817":[193,16,240,6],"7825":[193,16,240,6],"7833":[193,16,240,6],"7841":[193,16,240,6],"7849":[193,16,240,6],"7857":[193,16,240,6],"7865":[193,16,240,6],"7873":[193,16,240,6],"7881":[193,16,240,6],"7889":[242,20,242,33],"7897":[242,38,242,46],"7905":[242,57,242,70],"7913":[242,75,242,83],"7921":[243,20,243,33],"7929":[243,38,243,51],"7937":[243,20,243,51],"7945":[243,13,243,52],"7953":[245,13,245,26],"7961":[245,38,245,42],"7969":[245,38,245,52],"7977":[246,17,246,30],"7985":[246,17,246,33],"7993":[246,38,246,51],"8001":[246,38,246,54],"8009":[246,58,246,71],"8017":[246,58,246,75],"8025":[246,80,246,93],"8033":[246,80,246,97],"8041":[247,24,247,29],"8049":[247,24,247,29],"8057":[247,17,247,30],"8065":[249,18,249,31],"8073":[249,18,249,37],"8081":[249,42,249,55],"8089":[249,42,249,61],"8097":[250,21,250,34],"8105":[250,21,250,40],"8113":[250,44,250,57],"8121":[250,44,250,63],"8129":[251,28,251,33],"8137":[251,28,251,33],"8145":[251,21,251,34],"8153":[253,24,253,28],"8161":[253,24,253,28],"8169":[253,17,253,29],"8177":[255,29,255,42],"8185":[255,29,255,48],"8193":[255,29,255,54],"8201":[255,58,255,71],"8209":[255,58,255,77],"8217":[255,29,255,77],"8225":[255,13,255,78],"8233":[256,29,256,42],"8241":[256,29,256,48],"8249":[256,29,256,54],"8257":[256,58,256,71],"8265":[256,58,256,77],"8273":[256,29,256,77],"8281":[256,13,256,78],"8289":[257,20,257,33],"8297":[257,38,257,51],"8305":[257,20,257,51],"8313":[257,13,257,52],"8321":[259,25,259,38],"8329":[259,25,259,44],"8337":[259,25,259,44],"8345":[259,9,259,45],"8353":[260,25,260,38],"8361":[260,25,260,44],"8369":[260,25,260,44],"8377":[260,9,260,45],"8385":[261,13,261,26],"8393":[261,38,261,42],"8401":[261,38,261,51],"8409":[262,19,262,32],"8417":[262,44,262,48],"8425":[262,44,262,57],"8433":[262,62,262,75],"8441":[262,62,262,84],"8449":[262,62,262,91],"8457":[262,96,262,109],"8465":[262,96,262,118],"8473":[262,96,262,125],"8481":[263,24,263,29],"8489":[263,24,263,29],"8497":[263,17,263,30],"8505":[265,26,265,27],"8513":[265,26,265,27],"8521":[265,26,265,27],"8529":[265,29,265,30],"8537":[265,33,265,46],"8545":[265,33,265,55],"8553":[265,33,265,62],"8569":[265,64,265,65],"8577":[265,64,265,67],"8593":[266,21,266,34],"8601":[266,21,266,43],"8609":[266,44,266,45],"8617":[266,21,266,46],"8625":[266,21,266,57],"8633":[266,21,266,63],"8641":[266,68,266,81],"8649":[266,68,266,90],"8657":[266,91,266,92],"8665":[266,68,266,93],"8673":[266,68,266,104],"8681":[266,68,266,110],"8689":[267,25,267,26],"8697":[267,31,267,32],"8705":[267,37,267,50],"8713":[267,37,267,59],"8721":[267,60,267,61],"8729":[267,37,267,62],"8737":[267,37,267,73],"8745":[267,37,267,79],"8753":[267,83,267,86],"8761":[267,93,267,106],"8769":[267,93,267,115],"8777":[267,116,267,117],"8785":[267,93,267,118],"8793":[267,93,267,129],"8801":[267,93,267,135],"8809":[267,139,267,142],"8817":[268,32,268,37],"8825":[268,32,268,37],"8833":[268,25,268,38],"8841":[271,22,271,26],"8849":[271,48,271,61],"8857":[271,48,271,70],"8865":[271,71,271,72],"8873":[271,48,271,73],"8881":[271,48,271,79],"8889":[271,81,271,94],"8897":[271,81,271,103],"8905":[271,104,271,105],"8913":[271,81,271,106],"8921":[271,81,271,112],"8929":[271,22,271,113],"8931":[271,22,271,47],"8937":[272,28,272,33],"8945":[272,28,272,33],"8953":[272,21,272,34],"8961":[275,20,275,24],"8969":[275,20,275,24],"8977":[275,13,275,25],"8985":[277,16,277,21],"8993":[277,16,277,21],"9001":[277,9,277,22],"9009":[241,27,278,6],"9017":[241,27,278,6],"9025":[241,27,278,6],"9033":[241,27,278,6],"9041":[241,27,278,6],"9049":[241,27,278,6],"9057":[280,40,280,41],"9065":[280,77,280,78],"9073":[280,87,280,89],"9081":[280,40,280,41],"9089":[280,40,280,41],"9097":[280,77,280,78],"9105":[280,77,280,78],"9113":[280,87,280,89],"9121":[280,87,280,89],"9129":[281,27,281,28],"9137":[281,27,281,28],"9145":[281,30,281,40],"9153":[281,43,281,50],"9161":[281,43,281,57],"9177":[281,59,281,69],"9185":[281,59,281,71],"9201":[282,21,282,28],"9209":[282,29,282,39],"9217":[282,21,282,40],"9225":[282,21,282,40],"9233":[282,13,282,41],"9241":[283,24,283,36],"9249":[283,37,283,42],"9257":[283,37,283,52],"9265":[283,24,283,53],"9273":[283,24,283,53],"9281":[283,13,283,54],"9289":[284,32,284,36],"9297":[284,45,284,50],"9305":[284,45,284,68],"9313":[284,70,284,89],"9321":[284,70,284,98],"9329":[284,99,284,100],"9337":[284,70,284,101],"9345":[284,70,284,107],"9353":[284,109,284,128],"9361":[284,109,284,137],"9369":[284,138,284,139],"9377":[284,109,284,140],"9385":[284,109,284,146],"9393":[284,148,284,167],"9401":[284,148,284,176],"9409":[284,177,284,178],"9417":[284,148,284,179],"9425":[284,148,284,195],"9433":[284,28,284,196],"9435":[284,32,284,44],"9441":[284,28,284,196],"9449":[284,13,284,197],"9457":[285,17,285,22],"9465":[285,17,285,32],"9473":[285,35,285,59],"9481":[285,63,285,94],"9489":[285,97,285,98],"9497":[286,17,286,21],"9505":[286,22,286,26],"9513":[286,22,286,33],"9521":[286,36,286,37],"9529":[286,17,286,38],"9537":[286,50,286,54],"9545":[286,55,286,59],"9553":[286,55,286,66],"9561":[286,69,286,70],"9569":[286,50,286,71],"9577":[286,50,286,80],"9585":[286,88,286,100],"9593":[286,101,286,125],"9601":[286,88,286,126],"9609":[286,88,286,135],"9617":[286,142,286,173],"9625":[286,88,286,174],"9627":[286,88,286,141],"9633":[286,50,286,175],"9635":[286,50,286,87],"9641":[286,17,286,175],"9649":[286,17,286,176],"9657":[287,51,287,52],"9665":[287,51,287,52],"9673":[287,17,287,53],"9689":[288,17,288,41],"9697":[288,17,288,43],"9713":[288,17,288,44],"9721":[290,27,290,35],"9729":[290,27,290,44],"9737":[290,51,290,82],"9745":[290,84,290,89],"9753":[290,84,290,95],"9761":[290,27,290,96],"9763":[290,27,290,50],"9769":[290,105,290,117],"9777":[290,104,290,118],"9785":[290,27,290,119],"9787":[290,27,290,103],"9793":[290,127,290,146],"9801":[290,127,290,155],"9809":[290,162,290,163],"9817":[290,127,290,164],"9819":[290,127,290,161],"9825":[290,27,290,165],"9827":[290,27,290,126],"9833":[290,27,290,165],"9841":[290,13,290,166],"9849":[291,17,291,41],"9857":[291,46,291,51],"9865":[291,46,291,61],"9873":[291,65,291,75],"9881":[291,78,291,79],"9889":[292,17,292,21],"9897":[292,22,292,26],"9905":[292,22,292,33],"9913":[292,36,292,37],"9921":[292,17,292,38],"9929":[292,50,292,54],"9937":[292,55,292,59],"9945":[292,55,292,66],"9953":[292,69,292,70],"9961":[292,50,292,71],"9969":[292,50,292,80],"9977":[292,88,292,99],"9985":[292,50,292,100],"9987":[292,50,292,87],"9993":[292,17,292,100],"10001":[292,17,292,101],"10009":[294,24,294,28],"10017":[294,36,294,48],"10025":[294,55,294,79],"10033":[294,81,294,86],"10041":[294,81,294,96],"10049":[294,36,294,97],"10051":[294,36,294,54],"10057":[294,24,294,98],"10059":[294,24,294,35],"10065":[294,24,294,98],"10073":[294,17,294,99],"10081":[295,17,295,21],"10089":[295,31,295,35],"10097":[295,45,295,56],"10105":[295,27,295,57],"10107":[295,31,295,44],"10113":[295,17,295,58],"10115":[295,17,295,26],"10121":[295,17,295,59],"10129":[297,40,297,45],"10137":[297,40,297,58],"10145":[297,40,297,58],"10153":[297,13,297,59],"10161":[298,47,298,52],"10169":[298,47,298,72],"10177":[298,47,298,72],"10185":[298,13,298,73],"10193":[299,17,299,48],"10201":[299,52,299,64],"10209":[299,65,299,89],"10217":[299,52,299,90],"10225":[299,52,299,99],"10233":[299,52,299,106],"10241":[300,51,300,52],"10249":[300,51,300,52],"10257":[300,17,300,53],"10273":[301,17,301,41],"10281":[301,17,301,43],"10297":[301,17,301,44],"10305":[304,13,304,37],"10313":[304,40,304,52],"10321":[304,40,304,59],"10329":[304,63,304,94],"10337":[304,97,304,98],"10345":[305,13,305,17],"10353":[305,18,305,22],"10361":[305,18,305,29],"10369":[305,32,305,33],"10377":[305,13,305,34],"10385":[305,46,305,50],"10393":[305,51,305,55],"10401":[305,51,305,62],"10409":[305,65,305,66],"10417":[305,46,305,67],"10425":[305,46,305,76],"10433":[305,84,305,96],"10441":[305,97,305,121],"10449":[305,84,305,122],"10457":[305,84,305,131],"10465":[305,138,305,169],"10473":[305,84,305,170],"10475":[305,84,305,137],"10481":[305,46,305,171],"10483":[305,46,305,83],"10489":[305,13,305,171],"10497":[305,13,305,172],"10513":[306,13,306,37],"10521":[306,13,306,39],"10537":[306,13,306,40],"10545":[308,16,308,20],"10553":[308,28,308,40],"10561":[308,47,308,71],"10569":[308,73,308,85],"10577":[308,73,308,92],"10585":[308,28,308,93],"10587":[308,28,308,46],"10593":[308,16,308,94],"10595":[308,16,308,27],"10601":[308,16,308,94],"10609":[308,9,308,95],"10617":[309,16,309,20],"10625":[310,27,310,39],"10633":[310,54,310,66],"10641":[310,54,310,75],"10649":[310,27,310,76],"10651":[310,27,310,53],"10657":[310,27,310,76],"10665":[310,27,310,76],"10673":[311,17,311,26],"10681":[312,17,312,24],"10689":[312,17,312,43],"10691":[312,17,312,41],"10697":[312,17,312,44],"10705":[314,17,314,24],"10713":[314,17,314,45],"10715":[314,17,314,43],"10721":[314,17,314,46],"10729":[316,20,316,27],"10737":[316,20,316,27],"10745":[316,13,316,28],"10753":[309,25,317,10],"10761":[309,25,317,10],"10769":[309,25,317,10],"10777":[309,25,317,10],"10785":[309,25,317,10],"10793":[309,16,317,11],"10795":[309,16,309,24],"10801":[309,16,317,11],"10809":[309,9,317,12],"10817":[318,16,318,20],"10825":[318,16,318,20],"10833":[318,9,318,21],"10841":[279,21,319,6],"10849":[279,21,319,6],"10857":[279,21,319,6],"10865":[279,21,319,6],"10873":[279,21,319,6],"10881":[279,21,319,6],"10889":[279,21,319,6],"10897":[279,21,319,6],"10905":[279,21,319,6],"10913":[279,21,319,6],"10921":[279,21,319,6],"10929":[279,21,319,6],"10937":[279,21,319,6],"10945":[279,21,319,6],"10953":[279,21,319,6],"10961":[321,29,321,38],"10969":[321,29,321,49],"10977":[321,57,321,61],"10985":[321,57,321,77],"10993":[321,78,321,82],"11001":[321,78,321,98],"11009":[321,78,321,105],"11017":[321,108,321,109],"11025":[321,57,321,110],"11033":[321,29,321,111],"11035":[321,29,321,56],"11041":[321,29,321,111],"11049":[321,29,321,111],"11057":[322,25,322,38],"11065":[322,46,322,50],"11073":[322,68,322,81],"11081":[322,83,322,92],"11089":[322,83,322,103],"11097":[322,46,322,104],"11099":[322,46,322,67],"11105":[322,25,322,105],"11107":[322,25,322,45],"11113":[322,25,322,105],"11121":[322,9,322,106],"11129":[323,9,323,13],"11137":[323,9,323,29],"11145":[323,35,323,48],"11153":[323,9,323,49],"11155":[323,9,323,34],"11161":[323,9,323,50],"11169":[320,17,324,6],"11177":[320,17,324,6],"11185":[320,17,324,6],"11193":[320,17,324,6],"11201":[320,17,324,6],"11209":[320,17,324,6],"11217":[326,25,326,29],"11225":[326,25,326,45],"11233":[326,25,326,52],"11241":[326,55,326,56],"11249":[326,25,326,56],"11257":[326,25,326,56],"11265":[327,9,327,13],"11273":[327,9,327,29],"11281":[327,39,327,48],"11289":[327,9,327,48],"11297":[327,9,327,49],"11305":[325,20,328,6],"11313":[325,20,328,6],"11321":[325,20,328,6],"11329":[325,20,328,6],"11337":[325,20,328,6],"11345":[330,29,330,42],"11353":[330,29,330,53],"11361":[330,61,330,65],"11369":[330,61,330,81],"11377":[330,82,330,86],"11385":[330,82,330,102],"11393":[330,82,330,109],"11401":[330,112,330,113],"11409":[330,61,330,114],"11417":[330,29,330,115],"11419":[330,29,330,60],"11425":[330,29,330,115],"11433":[330,29,330,115],"11441":[331,25,331,38],"11449":[331,46,331,50],"11457":[331,68,331,81],"11465":[331,83,331,96],"11473":[331,83,331,107],"11481":[331,46,331,108],"11483":[331,46,331,67],"11489":[331,25,331,109],"11491":[331,25,331,45],"11497":[331,25,331,109],"11505":[331,9,331,110],"11513":[332,9,332,13],"11521":[332,9,332,29],"11529":[332,35,332,48],"11537":[332,9,332,49],"11539":[332,9,332,34],"11545":[332,9,332,50],"11553":[329,21,333,6],"11561":[329,21,333,6],"11569":[329,21,333,6],"11577":[329,21,333,6],"11585":[329,21,333,6],"11593":[329,21,333,6],"11601":[335,25,335,29],"11609":[335,25,335,45],"11617":[335,25,335,52],"11625":[335,55,335,56],"11633":[335,25,335,56],"11641":[335,25,335,56],"11649":[336,9,336,13],"11657":[336,9,336,29],"11665":[336,39,336,48],"11673":[336,9,336,48],"11681":[336,9,336,49],"11689":[334,24,337,6],"11697":[334,24,337,6],"11705":[334,24,337,6],"11713":[334,24,337,6],"11721":[334,24,337,6],"11729":[78,35,338,2],"11737":[78,1,338,2],"11745":[78,1,338,3],"11753":[339,1,339,7],"11761":[339,18,339,39],"11769":[339,1,339,39],"11777":[339,1,339,40],"11785":[1,1,339,40],"11793":[1,1,339,40],"11801":[1,1,339,40],"11809":[1,1,339,40],"11817":[1,1,339,40],"11825":[1,1,339,40],"11833":[1,1,339,40],"11841":[1,1,339,40],"11849":[4,27,8,2],"11857":[4,27,8,2],"11865":[10,10,14,6],"11873":[10,10,14,6],"11881":[15,16,17,6],"11889":[15,16,17,6],"11897":[18,27,20,6],"11905":[18,27,20,6],"11913":[22,9,24,10],"11921":[26,50,26,74],"11929":[28,13,31,14],"11937":[27,9,32,10],"11945":[27,9,32,10],"11953":[27,9,32,10],"11961":[36,26,36,120],"11969":[38,45,40,18],"11977":[38,45,40,18],"11985":[37,13,41,14],"11993":[47,17,49,18],"12001":[42,13,51,14],"12009":[42,13,51,14],"12017":[42,13,51,14],"12025":[34,9,52,10],"12033":[34,9,52,10],"12041":[34,9,52,10],"12049":[21,19,54,6],"12057":[21,19,54,6],"12065":[56,9,58,10],"12073":[55,22,59,6],"12081":[55,22,59,6],"12089":[60,17,63,6],"12097":[60,17,63,6],"12105":[64,20,66,6],"12113":[64,20,66,6],"12121":[67,21,70,6],"12129":[67,21,70,6],"12137":[71,24,73,6],"12145":[71,24,73,6],"12153":[75,29,77,2],"12161":[75,29,77,2],"12169":[83,9,85,10],"12177":[79,10,91,6],"12185":[79,10,91,6],"12193":[94,27,96,10],"12201":[94,27,96,10],"12209":[102,13,105,14],"12217":[96,20,106,10],"12225":[96,20,106,10],"12233":[92,32,107,6],"12241":[92,32,107,6],"12249":[115,17,117,18],"12257":[131,25,134,26],"12265":[122,50,135,22],"12273":[122,50,135,22],"12281":[120,17,136,18],"12289":[112,13,137,14],"12297":[112,13,137,14],"12305":[112,13,137,14],"12313":[111,9,138,10],"12321":[111,9,138,10],"12329":[111,9,138,10],"12337":[141,13,150,14],"12345":[139,9,154,10],"12353":[108,23,155,6],"12361":[108,23,155,6],"12369":[156,16,158,6],"12377":[156,16,158,6],"12385":[159,27,161,6],"12393":[159,27,161,6],"12401":[162,20,164,6],"12409":[162,20,164,6],"12417":[166,9,168,10],"12425":[173,17,175,18],"12433":[177,17,179,18],"12441":[183,67,187,22],"12449":[183,67,187,22],"12457":[181,17,188,18],"12465":[171,13,189,14],"12473":[171,13,189,14],"12481":[171,13,189,14],"12489":[170,9,190,10],"12497":[170,9,190,10],"12505":[170,9,190,10],"12513":[165,19,192,6],"12521":[165,19,192,6],"12529":[199,17,206,18],"12537":[210,21,212,22],"12545":[213,21,217,22],"12553":[220,25,222,26],"12561":[218,21,223,22],"12569":[225,25,231,26],"12577":[224,21,235,22],"12585":[207,17,236,18],"12593":[207,17,236,18],"12601":[207,17,236,18],"12609":[197,13,237,14],"12617":[197,13,237,14],"12625":[197,13,237,14],"12633":[195,9,238,10],"12641":[195,9,238,10],"12649":[195,9,238,10],"12657":[193,16,240,6],"12665":[193,16,240,6],"12673":[242,9,244,10],"12681":[246,13,248,14],"12689":[250,17,252,18],"12697":[249,13,254,14],"12705":[245,9,258,10],"12713":[262,13,264,14],"12721":[267,21,269,22],"12729":[266,17,270,18],"12737":[271,17,273,18],"12745":[265,13,274,14],"12753":[265,13,274,14],"12761":[261,9,276,10],"12769":[241,27,278,6],"12777":[241,27,278,6],"12785":[285,13,289,14],"12793":[291,13,296,14],"12801":[299,13,302,14],"12809":[281,9,303,10],"12817":[281,9,303,10],"12825":[281,9,303,10],"12833":[304,9,307,10],"12841":[311,13,315,14],"12849":[309,25,317,10],"12857":[309,25,317,10],"12865":[279,21,319,6],"12873":[279,21,319,6],"12881":[320,17,324,6],"12889":[320,17,324,6],"12897":[325,20,328,6],"12905":[325,20,328,6],"12913":[329,21,333,6],"12921":[329,21,333,6],"12929":[334,24,337,6],"12937":[334,24,337,6],"12945":[1,1,339,40],"12953":[1,1,339,40],"nBranches":152,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/extend-visitor.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/extend-visitor_jalangi_.js","code":"var tree = require(\"../tree\"),\n    Visitor = require(\"./visitor\"),\n    logger = require(\"../logger\");\n\n/*jshint loopfunc:true */\n\nvar ExtendFinderVisitor = function() {\n    this._visitor = new Visitor(this);\n    this.contexts = [];\n    this.allExtendsStack = [[]];\n};\n\nExtendFinderVisitor.prototype = {\n    run: function (root) {\n        root = this._visitor.visit(root);\n        root.allExtends = this.allExtendsStack[0];\n        return root;\n    },\n    visitRule: function (ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n\n        var i, j, extend, allSelectorsExtendList = [], extendList;\n\n        // get &:extend(.a); rules which apply to all selectors in this ruleset\n        var rules = rulesetNode.rules, ruleCnt = rules ? rules.length : 0;\n        for (i = 0; i < ruleCnt; i++) {\n            if (rulesetNode.rules[i] instanceof tree.Extend) {\n                allSelectorsExtendList.push(rules[i]);\n                rulesetNode.extendOnEveryPath = true;\n            }\n        }\n\n        // now find every selector and apply the extends that apply to all extends\n        // and the ones which apply to an individual extend\n        var paths = rulesetNode.paths;\n        for (i = 0; i < paths.length; i++) {\n            var selectorPath = paths[i],\n                selector = selectorPath[selectorPath.length - 1],\n                selExtendList = selector.extendList;\n\n            extendList = selExtendList ? selExtendList.slice(0).concat(allSelectorsExtendList)\n                                       : allSelectorsExtendList;\n\n            if (extendList) {\n                extendList = extendList.map(function(allSelectorsExtend) {\n                    return allSelectorsExtend.clone();\n                });\n            }\n\n            for (j = 0; j < extendList.length; j++) {\n                this.foundExtends = true;\n                extend = extendList[j];\n                extend.findSelfSelectors(selectorPath);\n                extend.ruleset = rulesetNode;\n                if (j === 0) { extend.firstExtendOnThisSelectorPath = true; }\n                this.allExtendsStack[this.allExtendsStack.length - 1].push(extend);\n            }\n        }\n\n        this.contexts.push(rulesetNode.selectors);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        if (!rulesetNode.root) {\n            this.contexts.length = this.contexts.length - 1;\n        }\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        mediaNode.allExtends = [];\n        this.allExtendsStack.push(mediaNode.allExtends);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    },\n    visitDirective: function (directiveNode, visitArgs) {\n        directiveNode.allExtends = [];\n        this.allExtendsStack.push(directiveNode.allExtends);\n    },\n    visitDirectiveOut: function (directiveNode) {\n        this.allExtendsStack.length = this.allExtendsStack.length - 1;\n    }\n};\n\nvar ProcessExtendsVisitor = function() {\n    this._visitor = new Visitor(this);\n};\n\nProcessExtendsVisitor.prototype = {\n    run: function(root) {\n        var extendFinder = new ExtendFinderVisitor();\n        this.extendIndices = {};\n        extendFinder.run(root);\n        if (!extendFinder.foundExtends) { return root; }\n        root.allExtends = root.allExtends.concat(this.doExtendChaining(root.allExtends, root.allExtends));\n        this.allExtendsStack = [root.allExtends];\n        var newRoot = this._visitor.visit(root);\n        this.checkExtendsForNonMatched(root.allExtends);\n        return newRoot;\n    },\n    checkExtendsForNonMatched: function(extendList) {\n        var indices = this.extendIndices;\n        extendList.filter(function(extend) {\n            return !extend.hasFoundMatches && extend.parent_ids.length == 1;\n        }).forEach(function(extend) {\n                var selector = \"_unknown_\";\n                try {\n                    selector = extend.selector.toCSS({});\n                }\n                catch(_) {}\n\n                if (!indices[extend.index + ' ' + selector]) {\n                    indices[extend.index + ' ' + selector] = true;\n                    logger.warn(\"extend '\" + selector + \"' has no matches\");\n                }\n            });\n    },\n    doExtendChaining: function (extendsList, extendsListTarget, iterationCount) {\n        //\n        // chaining is different from normal extension.. if we extend an extend then we are not just copying, altering\n        // and pasting the selector we would do normally, but we are also adding an extend with the same target selector\n        // this means this new extend can then go and alter other extends\n        //\n        // this method deals with all the chaining work - without it, extend is flat and doesn't work on other extend selectors\n        // this is also the most expensive.. and a match on one selector can cause an extension of a selector we had already\n        // processed if we look at each selector at a time, as is done in visitRuleset\n\n        var extendIndex, targetExtendIndex, matches, extendsToAdd = [], newSelector, extendVisitor = this, selectorPath,\n            extend, targetExtend, newExtend;\n\n        iterationCount = iterationCount || 0;\n\n        //loop through comparing every extend with every target extend.\n        // a target extend is the one on the ruleset we are looking at copy/edit/pasting in place\n        // e.g.  .a:extend(.b) {}  and .b:extend(.c) {} then the first extend extends the second one\n        // and the second is the target.\n        // the separation into two lists allows us to process a subset of chains with a bigger set, as is the\n        // case when processing media queries\n        for (extendIndex = 0; extendIndex < extendsList.length; extendIndex++) {\n            for (targetExtendIndex = 0; targetExtendIndex < extendsListTarget.length; targetExtendIndex++) {\n\n                extend = extendsList[extendIndex];\n                targetExtend = extendsListTarget[targetExtendIndex];\n\n                // look for circular references\n                if ( extend.parent_ids.indexOf( targetExtend.object_id ) >= 0 ) { continue; }\n\n                // find a match in the target extends self selector (the bit before :extend)\n                selectorPath = [targetExtend.selfSelectors[0]];\n                matches = extendVisitor.findMatch(extend, selectorPath);\n\n                if (matches.length) {\n                    extend.hasFoundMatches = true;\n\n                    // we found a match, so for each self selector..\n                    extend.selfSelectors.forEach(function(selfSelector) {\n                        var info = targetExtend.visibilityInfo();\n\n                        // process the extend as usual\n                        newSelector = extendVisitor.extendSelector(matches, selectorPath, selfSelector, extend.isVisible());\n\n                        // but now we create a new extend from it\n                        newExtend = new(tree.Extend)(targetExtend.selector, targetExtend.option, 0, targetExtend.currentFileInfo, info);\n                        newExtend.selfSelectors = newSelector;\n\n                        // add the extend onto the list of extends for that selector\n                        newSelector[newSelector.length - 1].extendList = [newExtend];\n\n                        // record that we need to add it.\n                        extendsToAdd.push(newExtend);\n                        newExtend.ruleset = targetExtend.ruleset;\n\n                        //remember its parents for circular references\n                        newExtend.parent_ids = newExtend.parent_ids.concat(targetExtend.parent_ids, extend.parent_ids);\n\n                        // only process the selector once.. if we have :extend(.a,.b) then multiple\n                        // extends will look at the same selector path, so when extending\n                        // we know that any others will be duplicates in terms of what is added to the css\n                        if (targetExtend.firstExtendOnThisSelectorPath) {\n                            newExtend.firstExtendOnThisSelectorPath = true;\n                            targetExtend.ruleset.paths.push(newSelector);\n                        }\n                    });\n                }\n            }\n        }\n\n        if (extendsToAdd.length) {\n            // try to detect circular references to stop a stack overflow.\n            // may no longer be needed.\n            this.extendChainCount++;\n            if (iterationCount > 100) {\n                var selectorOne = \"{unable to calculate}\";\n                var selectorTwo = \"{unable to calculate}\";\n                try {\n                    selectorOne = extendsToAdd[0].selfSelectors[0].toCSS();\n                    selectorTwo = extendsToAdd[0].selector.toCSS();\n                }\n                catch(e) {}\n                throw { message: \"extend circular reference detected. One of the circular extends is currently:\" +\n                    selectorOne + \":extend(\" + selectorTwo + \")\"};\n            }\n\n            // now process the new extends on the existing rules so that we can handle a extending b extending c extending\n            // d extending e...\n            return extendsToAdd.concat(extendVisitor.doExtendChaining(extendsToAdd, extendsListTarget, iterationCount + 1));\n        } else {\n            return extendsToAdd;\n        }\n    },\n    visitRule: function (ruleNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitSelector: function (selectorNode, visitArgs) {\n        visitArgs.visitDeeper = false;\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        if (rulesetNode.root) {\n            return;\n        }\n        var matches, pathIndex, extendIndex, allExtends = this.allExtendsStack[this.allExtendsStack.length - 1],\n            selectorsToAdd = [], extendVisitor = this, selectorPath;\n\n        // look at each selector path in the ruleset, find any extend matches and then copy, find and replace\n\n        for (extendIndex = 0; extendIndex < allExtends.length; extendIndex++) {\n            for (pathIndex = 0; pathIndex < rulesetNode.paths.length; pathIndex++) {\n                selectorPath = rulesetNode.paths[pathIndex];\n\n                // extending extends happens initially, before the main pass\n                if (rulesetNode.extendOnEveryPath) { continue; }\n                var extendList = selectorPath[selectorPath.length - 1].extendList;\n                if (extendList && extendList.length) { continue; }\n\n                matches = this.findMatch(allExtends[extendIndex], selectorPath);\n\n                if (matches.length) {\n                    allExtends[extendIndex].hasFoundMatches = true;\n\n                    allExtends[extendIndex].selfSelectors.forEach(function(selfSelector) {\n                        var extendedSelectors;\n                        extendedSelectors = extendVisitor.extendSelector(matches, selectorPath, selfSelector, allExtends[extendIndex].isVisible());\n                        selectorsToAdd.push(extendedSelectors);\n                    });\n                }\n            }\n        }\n        rulesetNode.paths = rulesetNode.paths.concat(selectorsToAdd);\n    },\n    findMatch: function (extend, haystackSelectorPath) {\n        //\n        // look through the haystack selector path to try and find the needle - extend.selector\n        // returns an array of selector matches that can then be replaced\n        //\n        var haystackSelectorIndex, hackstackSelector, hackstackElementIndex, haystackElement,\n            targetCombinator, i,\n            extendVisitor = this,\n            needleElements = extend.selector.elements,\n            potentialMatches = [], potentialMatch, matches = [];\n\n        // loop through the haystack elements\n        for (haystackSelectorIndex = 0; haystackSelectorIndex < haystackSelectorPath.length; haystackSelectorIndex++) {\n            hackstackSelector = haystackSelectorPath[haystackSelectorIndex];\n\n            for (hackstackElementIndex = 0; hackstackElementIndex < hackstackSelector.elements.length; hackstackElementIndex++) {\n\n                haystackElement = hackstackSelector.elements[hackstackElementIndex];\n\n                // if we allow elements before our match we can add a potential match every time. otherwise only at the first element.\n                if (extend.allowBefore || (haystackSelectorIndex === 0 && hackstackElementIndex === 0)) {\n                    potentialMatches.push({pathIndex: haystackSelectorIndex, index: hackstackElementIndex, matched: 0,\n                        initialCombinator: haystackElement.combinator});\n                }\n\n                for (i = 0; i < potentialMatches.length; i++) {\n                    potentialMatch = potentialMatches[i];\n\n                    // selectors add \" \" onto the first element. When we use & it joins the selectors together, but if we don't\n                    // then each selector in haystackSelectorPath has a space before it added in the toCSS phase. so we need to\n                    // work out what the resulting combinator will be\n                    targetCombinator = haystackElement.combinator.value;\n                    if (targetCombinator === '' && hackstackElementIndex === 0) {\n                        targetCombinator = ' ';\n                    }\n\n                    // if we don't match, null our match to indicate failure\n                    if (!extendVisitor.isElementValuesEqual(needleElements[potentialMatch.matched].value, haystackElement.value) ||\n                        (potentialMatch.matched > 0 && needleElements[potentialMatch.matched].combinator.value !== targetCombinator)) {\n                        potentialMatch = null;\n                    } else {\n                        potentialMatch.matched++;\n                    }\n\n                    // if we are still valid and have finished, test whether we have elements after and whether these are allowed\n                    if (potentialMatch) {\n                        potentialMatch.finished = potentialMatch.matched === needleElements.length;\n                        if (potentialMatch.finished &&\n                            (!extend.allowAfter &&\n                                (hackstackElementIndex + 1 < hackstackSelector.elements.length || haystackSelectorIndex + 1 < haystackSelectorPath.length))) {\n                            potentialMatch = null;\n                        }\n                    }\n                    // if null we remove, if not, we are still valid, so either push as a valid match or continue\n                    if (potentialMatch) {\n                        if (potentialMatch.finished) {\n                            potentialMatch.length = needleElements.length;\n                            potentialMatch.endPathIndex = haystackSelectorIndex;\n                            potentialMatch.endPathElementIndex = hackstackElementIndex + 1; // index after end of match\n                            potentialMatches.length = 0; // we don't allow matches to overlap, so start matching again\n                            matches.push(potentialMatch);\n                        }\n                    } else {\n                        potentialMatches.splice(i, 1);\n                        i--;\n                    }\n                }\n            }\n        }\n        return matches;\n    },\n    isElementValuesEqual: function(elementValue1, elementValue2) {\n        if (typeof elementValue1 === \"string\" || typeof elementValue2 === \"string\") {\n            return elementValue1 === elementValue2;\n        }\n        if (elementValue1 instanceof tree.Attribute) {\n            if (elementValue1.op !== elementValue2.op || elementValue1.key !== elementValue2.key) {\n                return false;\n            }\n            if (!elementValue1.value || !elementValue2.value) {\n                if (elementValue1.value || elementValue2.value) {\n                    return false;\n                }\n                return true;\n            }\n            elementValue1 = elementValue1.value.value || elementValue1.value;\n            elementValue2 = elementValue2.value.value || elementValue2.value;\n            return elementValue1 === elementValue2;\n        }\n        elementValue1 = elementValue1.value;\n        elementValue2 = elementValue2.value;\n        if (elementValue1 instanceof tree.Selector) {\n            if (!(elementValue2 instanceof tree.Selector) || elementValue1.elements.length !== elementValue2.elements.length) {\n                return false;\n            }\n            for (var i = 0; i  < elementValue1.elements.length; i++) {\n                if (elementValue1.elements[i].combinator.value !== elementValue2.elements[i].combinator.value) {\n                    if (i !== 0 || (elementValue1.elements[i].combinator.value || ' ') !== (elementValue2.elements[i].combinator.value || ' ')) {\n                        return false;\n                    }\n                }\n                if (!this.isElementValuesEqual(elementValue1.elements[i].value, elementValue2.elements[i].value)) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    },\n    extendSelector:function (matches, selectorPath, replacementSelector, isVisible) {\n\n        //for a set of matches, replace each match with the replacement selector\n\n        var currentSelectorPathIndex = 0,\n            currentSelectorPathElementIndex = 0,\n            path = [],\n            matchIndex,\n            selector,\n            firstElement,\n            match,\n            newElements;\n\n        for (matchIndex = 0; matchIndex < matches.length; matchIndex++) {\n            match = matches[matchIndex];\n            selector = selectorPath[match.pathIndex];\n            firstElement = new tree.Element(\n                match.initialCombinator,\n                replacementSelector.elements[0].value,\n                replacementSelector.elements[0].index,\n                replacementSelector.elements[0].currentFileInfo\n            );\n\n            if (match.pathIndex > currentSelectorPathIndex && currentSelectorPathElementIndex > 0) {\n                path[path.length - 1].elements = path[path.length - 1]\n                    .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n\n            newElements = selector.elements\n                .slice(currentSelectorPathElementIndex, match.index)\n                .concat([firstElement])\n                .concat(replacementSelector.elements.slice(1));\n\n            if (currentSelectorPathIndex === match.pathIndex && matchIndex > 0) {\n                path[path.length - 1].elements =\n                    path[path.length - 1].elements.concat(newElements);\n            } else {\n                path = path.concat(selectorPath.slice(currentSelectorPathIndex, match.pathIndex));\n\n                path.push(new tree.Selector(\n                    newElements\n                ));\n            }\n            currentSelectorPathIndex = match.endPathIndex;\n            currentSelectorPathElementIndex = match.endPathElementIndex;\n            if (currentSelectorPathElementIndex >= selectorPath[currentSelectorPathIndex].elements.length) {\n                currentSelectorPathElementIndex = 0;\n                currentSelectorPathIndex++;\n            }\n        }\n\n        if (currentSelectorPathIndex < selectorPath.length && currentSelectorPathElementIndex > 0) {\n            path[path.length - 1].elements = path[path.length - 1]\n                .elements.concat(selectorPath[currentSelectorPathIndex].elements.slice(currentSelectorPathElementIndex));\n            currentSelectorPathIndex++;\n        }\n\n        path = path.concat(selectorPath.slice(currentSelectorPathIndex, selectorPath.length));\n        path = path.map(function (currentValue) {\n            // we can re-use elements here, because the visibility property matters only for selectors\n            var derived = currentValue.createDerived(currentValue.elements);\n            if (isVisible) {\n                derived.ensureVisibility();\n            } else {\n                derived.ensureInvisibility();\n            }\n            return derived;\n        });\n        return path;\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        var newAllExtends = mediaNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, mediaNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    },\n    visitMediaOut: function (mediaNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    },\n    visitDirective: function (directiveNode, visitArgs) {\n        var newAllExtends = directiveNode.allExtends.concat(this.allExtendsStack[this.allExtendsStack.length - 1]);\n        newAllExtends = newAllExtends.concat(this.doExtendChaining(newAllExtends, directiveNode.allExtends));\n        this.allExtendsStack.push(newAllExtends);\n    },\n    visitDirectiveOut: function (directiveNode) {\n        var lastIndex = this.allExtendsStack.length - 1;\n        this.allExtendsStack.length = lastIndex;\n    }\n};\n\nmodule.exports = ProcessExtendsVisitor;\n"};
jalangiLabel586:
    while (true) {
        try {
            J$.Se(11785, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/extend-visitor_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/extend-visitor.js');
            J$.N(11793, '__secret__S$', __secret__S$, 0);
            J$.N(11801, '__secret__traits__', __secret__traits__, 0);
            J$.N(11809, 'tree', tree, 0);
            J$.N(11817, 'Visitor', Visitor, 0);
            J$.N(11825, 'logger', logger, 0);
            J$.N(11833, 'ExtendFinderVisitor', ExtendFinderVisitor, 0);
            J$.N(11841, 'ProcessExtendsVisitor', ProcessExtendsVisitor, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var tree = J$.X1(161, J$.W(153, 'tree', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../tree', 21, false)), tree, 3)), Visitor = J$.X1(177, J$.W(169, 'Visitor', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './visitor', 21, false)), Visitor, 3)), logger = J$.X1(193, J$.W(185, 'logger', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, '../logger', 21, false)), logger, 3));
            var ExtendFinderVisitor = J$.X1(353, J$.W(345, 'ExtendFinderVisitor', J$.T(337, function () {
                jalangiLabel555:
                    while (true) {
                        try {
                            J$.Fe(321, arguments.callee, this, arguments);
                            arguments = J$.N(329, 'arguments', arguments, 4);
                            J$.X1(241, J$.P(233, J$.R(201, 'this', this, 0), '_visitor', J$.F(225, J$.R(209, 'Visitor', Visitor, 1), 1)(J$.R(217, 'this', this, 0)), 0));
                            J$.X1(273, J$.P(265, J$.R(249, 'this', this, 0), 'contexts', J$.T(257, [], 10, false), 0));
                            J$.X1(313, J$.P(305, J$.R(281, 'this', this, 0), 'allExtendsStack', J$.T(297, [J$.T(289, [], 10, false)], 10, false), 0));
                        } catch (J$e) {
                            J$.Ex(11849, J$e);
                        } finally {
                            if (J$.Fr(11857))
                                continue jalangiLabel555;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 321), ExtendFinderVisitor, 3));
            J$.X1(2481, J$.P(2473, J$.R(361, 'ExtendFinderVisitor', ExtendFinderVisitor, 1), 'prototype', J$.T(2465, {
                run: J$.T(521, function (root) {
                    jalangiLabel556:
                        while (true) {
                            try {
                                J$.Fe(497, arguments.callee, this, arguments);
                                arguments = J$.N(505, 'arguments', arguments, 4);
                                root = J$.N(513, 'root', root, 4);
                                J$.X1(409, root = J$.W(401, 'root', J$.M(393, J$.G(377, J$.R(369, 'this', this, 0), '_visitor', 0), 'visit', 0)(J$.R(385, 'root', root, 0)), root, 0));
                                J$.X1(465, J$.P(457, J$.R(417, 'root', root, 0), 'allExtends', J$.G(449, J$.G(433, J$.R(425, 'this', this, 0), 'allExtendsStack', 0), J$.T(441, 0, 22, false), 4), 0));
                                return J$.X1(489, J$.Rt(481, J$.R(473, 'root', root, 0)));
                            } catch (J$e) {
                                J$.Ex(11865, J$e);
                            } finally {
                                if (J$.Fr(11873))
                                    continue jalangiLabel556;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 497),
                visitRule: J$.T(593, function (ruleNode, visitArgs) {
                    jalangiLabel557:
                        while (true) {
                            try {
                                J$.Fe(561, arguments.callee, this, arguments);
                                arguments = J$.N(569, 'arguments', arguments, 4);
                                ruleNode = J$.N(577, 'ruleNode', ruleNode, 4);
                                visitArgs = J$.N(585, 'visitArgs', visitArgs, 4);
                                J$.X1(553, J$.P(545, J$.R(529, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(537, false, 23, false), 0));
                            } catch (J$e) {
                                J$.Ex(11881, J$e);
                            } finally {
                                if (J$.Fr(11889))
                                    continue jalangiLabel557;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 561),
                visitMixinDefinition: J$.T(665, function (mixinDefinitionNode, visitArgs) {
                    jalangiLabel558:
                        while (true) {
                            try {
                                J$.Fe(633, arguments.callee, this, arguments);
                                arguments = J$.N(641, 'arguments', arguments, 4);
                                mixinDefinitionNode = J$.N(649, 'mixinDefinitionNode', mixinDefinitionNode, 4);
                                visitArgs = J$.N(657, 'visitArgs', visitArgs, 4);
                                J$.X1(625, J$.P(617, J$.R(601, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(609, false, 23, false), 0));
                            } catch (J$e) {
                                J$.Ex(11897, J$e);
                            } finally {
                                if (J$.Fr(11905))
                                    continue jalangiLabel558;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 633),
                visitRuleset: J$.T(1913, function (rulesetNode, visitArgs) {
                    jalangiLabel560:
                        while (true) {
                            try {
                                J$.Fe(1793, arguments.callee, this, arguments);
                                arguments = J$.N(1801, 'arguments', arguments, 4);
                                rulesetNode = J$.N(1809, 'rulesetNode', rulesetNode, 4);
                                visitArgs = J$.N(1817, 'visitArgs', visitArgs, 4);
                                J$.N(1825, 'i', i, 0);
                                J$.N(1833, 'j', j, 0);
                                J$.N(1841, 'extend', extend, 0);
                                J$.N(1849, 'allSelectorsExtendList', allSelectorsExtendList, 0);
                                J$.N(1857, 'extendList', extendList, 0);
                                J$.N(1865, 'rules', rules, 0);
                                J$.N(1873, 'ruleCnt', ruleCnt, 0);
                                J$.N(1881, 'paths', paths, 0);
                                J$.N(1889, 'selectorPath', selectorPath, 0);
                                J$.N(1897, 'selector', selector, 0);
                                J$.N(1905, 'selExtendList', selExtendList, 0);
                                if (J$.X1(11913, J$.C(8, J$.G(681, J$.R(673, 'rulesetNode', rulesetNode, 0), 'root', 0)))) {
                                    return J$.X1(697, J$.Rt(689, undefined));
                                }
                                var i, j, extend, allSelectorsExtendList = J$.X1(721, J$.W(713, 'allSelectorsExtendList', J$.T(705, [], 10, false), allSelectorsExtendList, 1)), extendList;
                                var rules = J$.X1(785, J$.W(777, 'rules', J$.G(737, J$.R(729, 'rulesetNode', rulesetNode, 0), 'rules', 0), rules, 1)), ruleCnt = J$.X1(801, J$.W(793, 'ruleCnt', J$.X1(11921, J$.C(16, J$.R(745, 'rules', rules, 0))) ? J$.G(761, J$.R(753, 'rules', rules, 0), 'length', 0) : J$.T(769, 0, 22, false), ruleCnt, 1));
                                for (J$.X1(11945, i = J$.W(817, 'i', J$.T(809, 0, 22, false), i, 0)); J$.X1(11937, J$.C(32, J$.B(10, '<', J$.R(825, 'i', i, 0), J$.R(833, 'ruleCnt', ruleCnt, 0), 0))); J$.X1(11953, J$.B(34, '-', i = J$.W(857, 'i', J$.B(26, '+', J$.U(18, '+', J$.R(849, 'i', i, 0)), J$.T(841, 1, 22, false), 0), i, 0), J$.T(865, 1, 22, false), 0))) {
                                    if (J$.X1(11929, J$.C(24, J$.B(42, 'instanceof', J$.G(897, J$.G(881, J$.R(873, 'rulesetNode', rulesetNode, 0), 'rules', 0), J$.R(889, 'i', i, 0), 4), J$.G(913, J$.R(905, 'tree', tree, 1), 'Extend', 0), 0)))) {
                                        J$.X1(961, J$.M(953, J$.R(921, 'allSelectorsExtendList', allSelectorsExtendList, 0), 'push', 0)(J$.G(945, J$.R(929, 'rules', rules, 0), J$.R(937, 'i', i, 0), 4)));
                                        J$.X1(993, J$.P(985, J$.R(969, 'rulesetNode', rulesetNode, 0), 'extendOnEveryPath', J$.T(977, true, 23, false), 0));
                                    }
                                }
                                var paths = J$.X1(1025, J$.W(1017, 'paths', J$.G(1009, J$.R(1001, 'rulesetNode', rulesetNode, 0), 'paths', 0), paths, 1));
                                for (J$.X1(12033, i = J$.W(1041, 'i', J$.T(1033, 0, 22, false), i, 0)); J$.X1(12025, J$.C(72, J$.B(50, '<', J$.R(1049, 'i', i, 0), J$.G(1065, J$.R(1057, 'paths', paths, 0), 'length', 0), 0))); J$.X1(12041, J$.B(74, '-', i = J$.W(1089, 'i', J$.B(66, '+', J$.U(58, '+', J$.R(1081, 'i', i, 0)), J$.T(1073, 1, 22, false), 0), i, 0), J$.T(1097, 1, 22, false), 0))) {
                                    var selectorPath = J$.X1(1193, J$.W(1185, 'selectorPath', J$.G(1121, J$.R(1105, 'paths', paths, 0), J$.R(1113, 'i', i, 0), 4), selectorPath, 1)), selector = J$.X1(1209, J$.W(1201, 'selector', J$.G(1161, J$.R(1129, 'selectorPath', selectorPath, 0), J$.B(82, '-', J$.G(1145, J$.R(1137, 'selectorPath', selectorPath, 0), 'length', 0), J$.T(1153, 1, 22, false), 0), 4), selector, 1)), selExtendList = J$.X1(1225, J$.W(1217, 'selExtendList', J$.G(1177, J$.R(1169, 'selector', selector, 0), 'extendList', 0), selExtendList, 1));
                                    J$.X1(1297, extendList = J$.W(1289, 'extendList', J$.X1(11961, J$.C(40, J$.R(1233, 'selExtendList', selExtendList, 0))) ? J$.M(1273, J$.M(1257, J$.R(1241, 'selExtendList', selExtendList, 0), 'slice', 0)(J$.T(1249, 0, 22, false)), 'concat', 0)(J$.R(1265, 'allSelectorsExtendList', allSelectorsExtendList, 0)) : J$.R(1281, 'allSelectorsExtendList', allSelectorsExtendList, 0), extendList, 0));
                                    if (J$.X1(11985, J$.C(48, J$.R(1305, 'extendList', extendList, 0)))) {
                                        J$.X1(1401, extendList = J$.W(1393, 'extendList', J$.M(1385, J$.R(1313, 'extendList', extendList, 0), 'map', 0)(J$.T(1377, function (allSelectorsExtend) {
                                            jalangiLabel559:
                                                while (true) {
                                                    try {
                                                        J$.Fe(1353, arguments.callee, this, arguments);
                                                        arguments = J$.N(1361, 'arguments', arguments, 4);
                                                        allSelectorsExtend = J$.N(1369, 'allSelectorsExtend', allSelectorsExtend, 4);
                                                        return J$.X1(1345, J$.Rt(1337, J$.M(1329, J$.R(1321, 'allSelectorsExtend', allSelectorsExtend, 0), 'clone', 0)()));
                                                    } catch (J$e) {
                                                        J$.Ex(11969, J$e);
                                                    } finally {
                                                        if (J$.Fr(11977))
                                                            continue jalangiLabel559;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false, 1353)), extendList, 0));
                                    }
                                    for (J$.X1(12009, j = J$.W(1417, 'j', J$.T(1409, 0, 22, false), j, 0)); J$.X1(12001, J$.C(64, J$.B(90, '<', J$.R(1425, 'j', j, 0), J$.G(1441, J$.R(1433, 'extendList', extendList, 0), 'length', 0), 0))); J$.X1(12017, J$.B(114, '-', j = J$.W(1465, 'j', J$.B(106, '+', J$.U(98, '+', J$.R(1457, 'j', j, 0)), J$.T(1449, 1, 22, false), 0), j, 0), J$.T(1473, 1, 22, false), 0))) {
                                        J$.X1(1505, J$.P(1497, J$.R(1481, 'this', this, 0), 'foundExtends', J$.T(1489, true, 23, false), 0));
                                        J$.X1(1545, extend = J$.W(1537, 'extend', J$.G(1529, J$.R(1513, 'extendList', extendList, 0), J$.R(1521, 'j', j, 0), 4), extend, 0));
                                        J$.X1(1577, J$.M(1569, J$.R(1553, 'extend', extend, 0), 'findSelfSelectors', 0)(J$.R(1561, 'selectorPath', selectorPath, 0)));
                                        J$.X1(1609, J$.P(1601, J$.R(1585, 'extend', extend, 0), 'ruleset', J$.R(1593, 'rulesetNode', rulesetNode, 0), 0));
                                        if (J$.X1(11993, J$.C(56, J$.B(122, '===', J$.R(1617, 'j', j, 0), J$.T(1625, 0, 22, false), 0)))) {
                                            J$.X1(1657, J$.P(1649, J$.R(1633, 'extend', extend, 0), 'firstExtendOnThisSelectorPath', J$.T(1641, true, 23, false), 0));
                                        }
                                        J$.X1(1737, J$.M(1729, J$.G(1713, J$.G(1673, J$.R(1665, 'this', this, 0), 'allExtendsStack', 0), J$.B(130, '-', J$.G(1697, J$.G(1689, J$.R(1681, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(1705, 1, 22, false), 0), 4), 'push', 0)(J$.R(1721, 'extend', extend, 0)));
                                    }
                                }
                                J$.X1(1785, J$.M(1777, J$.G(1753, J$.R(1745, 'this', this, 0), 'contexts', 0), 'push', 0)(J$.G(1769, J$.R(1761, 'rulesetNode', rulesetNode, 0), 'selectors', 0)));
                            } catch (J$e) {
                                J$.Ex(12049, J$e);
                            } finally {
                                if (J$.Fr(12057))
                                    continue jalangiLabel560;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1793),
                visitRulesetOut: J$.T(2025, function (rulesetNode) {
                    jalangiLabel561:
                        while (true) {
                            try {
                                J$.Fe(2001, arguments.callee, this, arguments);
                                arguments = J$.N(2009, 'arguments', arguments, 4);
                                rulesetNode = J$.N(2017, 'rulesetNode', rulesetNode, 4);
                                if (J$.X1(12065, J$.C(80, J$.U(138, '!', J$.G(1929, J$.R(1921, 'rulesetNode', rulesetNode, 0), 'root', 0))))) {
                                    J$.X1(1993, J$.P(1985, J$.G(1945, J$.R(1937, 'this', this, 0), 'contexts', 0), 'length', J$.B(146, '-', J$.G(1969, J$.G(1961, J$.R(1953, 'this', this, 0), 'contexts', 0), 'length', 0), J$.T(1977, 1, 22, false), 0), 0));
                                }
                            } catch (J$e) {
                                J$.Ex(12073, J$e);
                            } finally {
                                if (J$.Fr(12081))
                                    continue jalangiLabel561;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2001),
                visitMedia: J$.T(2145, function (mediaNode, visitArgs) {
                    jalangiLabel562:
                        while (true) {
                            try {
                                J$.Fe(2113, arguments.callee, this, arguments);
                                arguments = J$.N(2121, 'arguments', arguments, 4);
                                mediaNode = J$.N(2129, 'mediaNode', mediaNode, 4);
                                visitArgs = J$.N(2137, 'visitArgs', visitArgs, 4);
                                J$.X1(2057, J$.P(2049, J$.R(2033, 'mediaNode', mediaNode, 0), 'allExtends', J$.T(2041, [], 10, false), 0));
                                J$.X1(2105, J$.M(2097, J$.G(2073, J$.R(2065, 'this', this, 0), 'allExtendsStack', 0), 'push', 0)(J$.G(2089, J$.R(2081, 'mediaNode', mediaNode, 0), 'allExtends', 0)));
                            } catch (J$e) {
                                J$.Ex(12089, J$e);
                            } finally {
                                if (J$.Fr(12097))
                                    continue jalangiLabel562;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2113),
                visitMediaOut: J$.T(2241, function (mediaNode) {
                    jalangiLabel563:
                        while (true) {
                            try {
                                J$.Fe(2217, arguments.callee, this, arguments);
                                arguments = J$.N(2225, 'arguments', arguments, 4);
                                mediaNode = J$.N(2233, 'mediaNode', mediaNode, 4);
                                J$.X1(2209, J$.P(2201, J$.G(2161, J$.R(2153, 'this', this, 0), 'allExtendsStack', 0), 'length', J$.B(154, '-', J$.G(2185, J$.G(2177, J$.R(2169, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(2193, 1, 22, false), 0), 0));
                            } catch (J$e) {
                                J$.Ex(12105, J$e);
                            } finally {
                                if (J$.Fr(12113))
                                    continue jalangiLabel563;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2217),
                visitDirective: J$.T(2361, function (directiveNode, visitArgs) {
                    jalangiLabel564:
                        while (true) {
                            try {
                                J$.Fe(2329, arguments.callee, this, arguments);
                                arguments = J$.N(2337, 'arguments', arguments, 4);
                                directiveNode = J$.N(2345, 'directiveNode', directiveNode, 4);
                                visitArgs = J$.N(2353, 'visitArgs', visitArgs, 4);
                                J$.X1(2273, J$.P(2265, J$.R(2249, 'directiveNode', directiveNode, 0), 'allExtends', J$.T(2257, [], 10, false), 0));
                                J$.X1(2321, J$.M(2313, J$.G(2289, J$.R(2281, 'this', this, 0), 'allExtendsStack', 0), 'push', 0)(J$.G(2305, J$.R(2297, 'directiveNode', directiveNode, 0), 'allExtends', 0)));
                            } catch (J$e) {
                                J$.Ex(12121, J$e);
                            } finally {
                                if (J$.Fr(12129))
                                    continue jalangiLabel564;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2329),
                visitDirectiveOut: J$.T(2457, function (directiveNode) {
                    jalangiLabel565:
                        while (true) {
                            try {
                                J$.Fe(2433, arguments.callee, this, arguments);
                                arguments = J$.N(2441, 'arguments', arguments, 4);
                                directiveNode = J$.N(2449, 'directiveNode', directiveNode, 4);
                                J$.X1(2425, J$.P(2417, J$.G(2377, J$.R(2369, 'this', this, 0), 'allExtendsStack', 0), 'length', J$.B(162, '-', J$.G(2401, J$.G(2393, J$.R(2385, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(2409, 1, 22, false), 0), 0));
                            } catch (J$e) {
                                J$.Ex(12137, J$e);
                            } finally {
                                if (J$.Fr(12145))
                                    continue jalangiLabel565;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2433)
            }, 11, false), 0));
            var ProcessExtendsVisitor = J$.X1(2569, J$.W(2561, 'ProcessExtendsVisitor', J$.T(2553, function () {
                jalangiLabel566:
                    while (true) {
                        try {
                            J$.Fe(2537, arguments.callee, this, arguments);
                            arguments = J$.N(2545, 'arguments', arguments, 4);
                            J$.X1(2529, J$.P(2521, J$.R(2489, 'this', this, 0), '_visitor', J$.F(2513, J$.R(2497, 'Visitor', Visitor, 1), 1)(J$.R(2505, 'this', this, 0)), 0));
                        } catch (J$e) {
                            J$.Ex(12153, J$e);
                        } finally {
                            if (J$.Fr(12161))
                                continue jalangiLabel566;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 2537), ProcessExtendsVisitor, 3));
            J$.X1(11745, J$.P(11737, J$.R(2577, 'ProcessExtendsVisitor', ProcessExtendsVisitor, 1), 'prototype', J$.T(11729, {
                run: J$.T(3017, function (root) {
                    jalangiLabel567:
                        while (true) {
                            try {
                                J$.Fe(2977, arguments.callee, this, arguments);
                                arguments = J$.N(2985, 'arguments', arguments, 4);
                                root = J$.N(2993, 'root', root, 4);
                                J$.N(3001, 'extendFinder', extendFinder, 0);
                                J$.N(3009, 'newRoot', newRoot, 0);
                                var extendFinder = J$.X1(2609, J$.W(2601, 'extendFinder', J$.F(2593, J$.R(2585, 'ExtendFinderVisitor', ExtendFinderVisitor, 1), 1)(), extendFinder, 1));
                                J$.X1(2641, J$.P(2633, J$.R(2617, 'this', this, 0), 'extendIndices', J$.T(2625, {}, 11, false), 0));
                                J$.X1(2673, J$.M(2665, J$.R(2649, 'extendFinder', extendFinder, 0), 'run', 0)(J$.R(2657, 'root', root, 0)));
                                if (J$.X1(12169, J$.C(88, J$.U(170, '!', J$.G(2689, J$.R(2681, 'extendFinder', extendFinder, 0), 'foundExtends', 0))))) {
                                    return J$.X1(2713, J$.Rt(2705, J$.R(2697, 'root', root, 0)));
                                }
                                J$.X1(2809, J$.P(2801, J$.R(2721, 'root', root, 0), 'allExtends', J$.M(2793, J$.G(2737, J$.R(2729, 'root', root, 0), 'allExtends', 0), 'concat', 0)(J$.M(2785, J$.R(2745, 'this', this, 0), 'doExtendChaining', 0)(J$.G(2761, J$.R(2753, 'root', root, 0), 'allExtends', 0), J$.G(2777, J$.R(2769, 'root', root, 0), 'allExtends', 0))), 0));
                                J$.X1(2857, J$.P(2849, J$.R(2817, 'this', this, 0), 'allExtendsStack', J$.T(2841, [J$.G(2833, J$.R(2825, 'root', root, 0), 'allExtends', 0)], 10, false), 0));
                                var newRoot = J$.X1(2905, J$.W(2897, 'newRoot', J$.M(2889, J$.G(2873, J$.R(2865, 'this', this, 0), '_visitor', 0), 'visit', 0)(J$.R(2881, 'root', root, 0)), newRoot, 1));
                                J$.X1(2945, J$.M(2937, J$.R(2913, 'this', this, 0), 'checkExtendsForNonMatched', 0)(J$.G(2929, J$.R(2921, 'root', root, 0), 'allExtends', 0)));
                                return J$.X1(2969, J$.Rt(2961, J$.R(2953, 'newRoot', newRoot, 0)));
                            } catch (J$e) {
                                J$.Ex(12177, J$e);
                            } finally {
                                if (J$.Fr(12185))
                                    continue jalangiLabel567;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2977),
                checkExtendsForNonMatched: J$.T(3497, function (extendList) {
                    jalangiLabel570:
                        while (true) {
                            try {
                                J$.Fe(3465, arguments.callee, this, arguments);
                                arguments = J$.N(3473, 'arguments', arguments, 4);
                                extendList = J$.N(3481, 'extendList', extendList, 4);
                                J$.N(3489, 'indices', indices, 0);
                                var indices = J$.X1(3049, J$.W(3041, 'indices', J$.G(3033, J$.R(3025, 'this', this, 0), 'extendIndices', 0), indices, 1));
                                J$.X1(3457, J$.M(3449, J$.M(3161, J$.R(3057, 'extendList', extendList, 0), 'filter', 0)(J$.T(3153, function (extend) {
                                    jalangiLabel568:
                                        while (true) {
                                            try {
                                                J$.Fe(3129, arguments.callee, this, arguments);
                                                arguments = J$.N(3137, 'arguments', arguments, 4);
                                                extend = J$.N(3145, 'extend', extend, 4);
                                                return J$.X1(3121, J$.Rt(3113, J$.C(96, J$.U(178, '!', J$.G(3073, J$.R(3065, 'extend', extend, 0), 'hasFoundMatches', 0))) ? J$.B(186, '==', J$.G(3097, J$.G(3089, J$.R(3081, 'extend', extend, 0), 'parent_ids', 0), 'length', 0), J$.T(3105, 1, 22, false), 0) : J$._()));
                                            } catch (J$e) {
                                                J$.Ex(12193, J$e);
                                            } finally {
                                                if (J$.Fr(12201))
                                                    continue jalangiLabel568;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 3129)), 'forEach', 0)(J$.T(3441, function (extend) {
                                    jalangiLabel569:
                                        while (true) {
                                            try {
                                                J$.Fe(3409, arguments.callee, this, arguments);
                                                arguments = J$.N(3417, 'arguments', arguments, 4);
                                                extend = J$.N(3425, 'extend', extend, 4);
                                                J$.N(3433, 'selector', selector, 0);
                                                var selector = J$.X1(3185, J$.W(3177, 'selector', J$.T(3169, '_unknown_', 21, false), selector, 1));
                                                try {
                                                    J$.X1(3233, selector = J$.W(3225, 'selector', J$.M(3217, J$.G(3201, J$.R(3193, 'extend', extend, 0), 'selector', 0), 'toCSS', 0)(J$.T(3209, {}, 11, false)), selector, 0));
                                                } catch (_) {
                                                    _ = J$.N(3241, '_', _, 1);
                                                }
                                                if (J$.X1(12209, J$.C(104, J$.U(210, '!', J$.G(3289, J$.R(3249, 'indices', indices, 0), J$.B(202, '+', J$.B(194, '+', J$.G(3265, J$.R(3257, 'extend', extend, 0), 'index', 0), J$.T(3273, ' ', 21, false), 0), J$.R(3281, 'selector', selector, 0), 0), 4))))) {
                                                    J$.X1(3353, J$.P(3345, J$.R(3297, 'indices', indices, 0), J$.B(226, '+', J$.B(218, '+', J$.G(3313, J$.R(3305, 'extend', extend, 0), 'index', 0), J$.T(3321, ' ', 21, false), 0), J$.R(3329, 'selector', selector, 0), 0), J$.T(3337, true, 23, false), 2));
                                                    J$.X1(3401, J$.M(3393, J$.R(3361, 'logger', logger, 1), 'warn', 0)(J$.B(242, '+', J$.B(234, '+', J$.T(3369, 'extend \'', 21, false), J$.R(3377, 'selector', selector, 0), 0), J$.T(3385, '\' has no matches', 21, false), 0)));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(12217, J$e);
                                            } finally {
                                                if (J$.Fr(12225))
                                                    continue jalangiLabel569;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 3409)));
                            } catch (J$e) {
                                J$.Ex(12233, J$e);
                            } finally {
                                if (J$.Fr(12241))
                                    continue jalangiLabel570;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3465),
                doExtendChaining: J$.T(5193, function (extendsList, extendsListTarget, iterationCount) {
                    jalangiLabel572:
                        while (true) {
                            try {
                                J$.Fe(5057, arguments.callee, this, arguments);
                                arguments = J$.N(5065, 'arguments', arguments, 4);
                                extendsList = J$.N(5073, 'extendsList', extendsList, 4);
                                extendsListTarget = J$.N(5081, 'extendsListTarget', extendsListTarget, 4);
                                iterationCount = J$.N(5089, 'iterationCount', iterationCount, 4);
                                J$.N(5097, 'extendIndex', extendIndex, 0);
                                J$.N(5105, 'targetExtendIndex', targetExtendIndex, 0);
                                J$.N(5113, 'matches', matches, 0);
                                J$.N(5121, 'extendsToAdd', extendsToAdd, 0);
                                J$.N(5129, 'newSelector', newSelector, 0);
                                J$.N(5137, 'extendVisitor', extendVisitor, 0);
                                J$.N(5145, 'selectorPath', selectorPath, 0);
                                J$.N(5153, 'extend', extend, 0);
                                J$.N(5161, 'targetExtend', targetExtend, 0);
                                J$.N(5169, 'newExtend', newExtend, 0);
                                J$.N(5177, 'selectorOne', selectorOne, 0);
                                J$.N(5185, 'selectorTwo', selectorTwo, 0);
                                var extendIndex, targetExtendIndex, matches, extendsToAdd = J$.X1(3529, J$.W(3521, 'extendsToAdd', J$.T(3505, [], 10, false), extendsToAdd, 1)), newSelector, extendVisitor = J$.X1(3545, J$.W(3537, 'extendVisitor', J$.R(3513, 'this', this, 0), extendVisitor, 1)), selectorPath, extend, targetExtend, newExtend;
                                J$.X1(3577, iterationCount = J$.W(3569, 'iterationCount', J$.C(112, J$.R(3553, 'iterationCount', iterationCount, 0)) ? J$._() : J$.T(3561, 0, 22, false), iterationCount, 0));
                                for (J$.X1(12321, extendIndex = J$.W(3593, 'extendIndex', J$.T(3585, 0, 22, false), extendIndex, 0)); J$.X1(12313, J$.C(152, J$.B(250, '<', J$.R(3601, 'extendIndex', extendIndex, 0), J$.G(3617, J$.R(3609, 'extendsList', extendsList, 0), 'length', 0), 0))); J$.X1(12329, J$.B(274, '-', extendIndex = J$.W(3641, 'extendIndex', J$.B(266, '+', J$.U(258, '+', J$.R(3633, 'extendIndex', extendIndex, 0)), J$.T(3625, 1, 22, false), 0), extendIndex, 0), J$.T(3649, 1, 22, false), 0))) {
                                    for (J$.X1(12297, targetExtendIndex = J$.W(3665, 'targetExtendIndex', J$.T(3657, 0, 22, false), targetExtendIndex, 0)); J$.X1(12289, J$.C(144, J$.B(282, '<', J$.R(3673, 'targetExtendIndex', targetExtendIndex, 0), J$.G(3689, J$.R(3681, 'extendsListTarget', extendsListTarget, 0), 'length', 0), 0))); J$.X1(12305, J$.B(306, '-', targetExtendIndex = J$.W(3713, 'targetExtendIndex', J$.B(298, '+', J$.U(290, '+', J$.R(3705, 'targetExtendIndex', targetExtendIndex, 0)), J$.T(3697, 1, 22, false), 0), targetExtendIndex, 0), J$.T(3721, 1, 22, false), 0))) {
                                        J$.X1(3761, extend = J$.W(3753, 'extend', J$.G(3745, J$.R(3729, 'extendsList', extendsList, 0), J$.R(3737, 'extendIndex', extendIndex, 0), 4), extend, 0));
                                        J$.X1(3801, targetExtend = J$.W(3793, 'targetExtend', J$.G(3785, J$.R(3769, 'extendsListTarget', extendsListTarget, 0), J$.R(3777, 'targetExtendIndex', targetExtendIndex, 0), 4), targetExtend, 0));
                                        if (J$.X1(12249, J$.C(120, J$.B(314, '>=', J$.M(3841, J$.G(3817, J$.R(3809, 'extend', extend, 0), 'parent_ids', 0), 'indexOf', 0)(J$.G(3833, J$.R(3825, 'targetExtend', targetExtend, 0), 'object_id', 0)), J$.T(3849, 0, 22, false), 0)))) {
                                            continue;
                                        }
                                        J$.X1(3905, selectorPath = J$.W(3897, 'selectorPath', J$.T(3889, [J$.G(3881, J$.G(3865, J$.R(3857, 'targetExtend', targetExtend, 0), 'selfSelectors', 0), J$.T(3873, 0, 22, false), 4)], 10, false), selectorPath, 0));
                                        J$.X1(3953, matches = J$.W(3945, 'matches', J$.M(3937, J$.R(3913, 'extendVisitor', extendVisitor, 0), 'findMatch', 0)(J$.R(3921, 'extend', extend, 0), J$.R(3929, 'selectorPath', selectorPath, 0)), matches, 0));
                                        if (J$.X1(12281, J$.C(136, J$.G(3969, J$.R(3961, 'matches', matches, 0), 'length', 0)))) {
                                            J$.X1(4001, J$.P(3993, J$.R(3977, 'extend', extend, 0), 'hasFoundMatches', J$.T(3985, true, 23, false), 0));
                                            J$.X1(4625, J$.M(4617, J$.G(4017, J$.R(4009, 'extend', extend, 0), 'selfSelectors', 0), 'forEach', 0)(J$.T(4609, function (selfSelector) {
                                                jalangiLabel571:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(4577, arguments.callee, this, arguments);
                                                            arguments = J$.N(4585, 'arguments', arguments, 4);
                                                            selfSelector = J$.N(4593, 'selfSelector', selfSelector, 4);
                                                            J$.N(4601, 'info', info, 0);
                                                            var info = J$.X1(4049, J$.W(4041, 'info', J$.M(4033, J$.R(4025, 'targetExtend', targetExtend, 0), 'visibilityInfo', 0)(), info, 1));
                                                            J$.X1(4121, newSelector = J$.W(4113, 'newSelector', J$.M(4105, J$.R(4057, 'extendVisitor', extendVisitor, 0), 'extendSelector', 0)(J$.R(4065, 'matches', matches, 0), J$.R(4073, 'selectorPath', selectorPath, 0), J$.R(4081, 'selfSelector', selfSelector, 0), J$.M(4097, J$.R(4089, 'extend', extend, 0), 'isVisible', 0)()), newSelector, 0));
                                                            J$.X1(4217, newExtend = J$.W(4209, 'newExtend', J$.M(4201, J$.R(4129, 'tree', tree, 1), 'Extend', 2)(J$.G(4145, J$.R(4137, 'targetExtend', targetExtend, 0), 'selector', 0), J$.G(4161, J$.R(4153, 'targetExtend', targetExtend, 0), 'option', 0), J$.T(4169, 0, 22, false), J$.G(4185, J$.R(4177, 'targetExtend', targetExtend, 0), 'currentFileInfo', 0), J$.R(4193, 'info', info, 0)), newExtend, 0));
                                                            J$.X1(4249, J$.P(4241, J$.R(4225, 'newExtend', newExtend, 0), 'selfSelectors', J$.R(4233, 'newSelector', newSelector, 0), 0));
                                                            J$.X1(4321, J$.P(4313, J$.G(4289, J$.R(4257, 'newSelector', newSelector, 0), J$.B(322, '-', J$.G(4273, J$.R(4265, 'newSelector', newSelector, 0), 'length', 0), J$.T(4281, 1, 22, false), 0), 4), 'extendList', J$.T(4305, [J$.R(4297, 'newExtend', newExtend, 0)], 10, false), 0));
                                                            J$.X1(4353, J$.M(4345, J$.R(4329, 'extendsToAdd', extendsToAdd, 0), 'push', 0)(J$.R(4337, 'newExtend', newExtend, 0)));
                                                            J$.X1(4393, J$.P(4385, J$.R(4361, 'newExtend', newExtend, 0), 'ruleset', J$.G(4377, J$.R(4369, 'targetExtend', targetExtend, 0), 'ruleset', 0), 0));
                                                            J$.X1(4473, J$.P(4465, J$.R(4401, 'newExtend', newExtend, 0), 'parent_ids', J$.M(4457, J$.G(4417, J$.R(4409, 'newExtend', newExtend, 0), 'parent_ids', 0), 'concat', 0)(J$.G(4433, J$.R(4425, 'targetExtend', targetExtend, 0), 'parent_ids', 0), J$.G(4449, J$.R(4441, 'extend', extend, 0), 'parent_ids', 0)), 0));
                                                            if (J$.X1(12257, J$.C(128, J$.G(4489, J$.R(4481, 'targetExtend', targetExtend, 0), 'firstExtendOnThisSelectorPath', 0)))) {
                                                                J$.X1(4521, J$.P(4513, J$.R(4497, 'newExtend', newExtend, 0), 'firstExtendOnThisSelectorPath', J$.T(4505, true, 23, false), 0));
                                                                J$.X1(4569, J$.M(4561, J$.G(4545, J$.G(4537, J$.R(4529, 'targetExtend', targetExtend, 0), 'ruleset', 0), 'paths', 0), 'push', 0)(J$.R(4553, 'newSelector', newSelector, 0)));
                                                            }
                                                        } catch (J$e) {
                                                            J$.Ex(12265, J$e);
                                                        } finally {
                                                            if (J$.Fr(12273))
                                                                continue jalangiLabel571;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 4577)));
                                        }
                                    }
                                }
                                if (J$.X1(12345, J$.C(168, J$.G(4641, J$.R(4633, 'extendsToAdd', extendsToAdd, 0), 'length', 0)))) {
                                    J$.X1(4681, J$.B(330, '-', J$.A(4665, J$.R(4649, 'this', this, 0), 'extendChainCount', '+', 0)(J$.T(4657, 1, 22, false)), J$.T(4673, 1, 22, false), 0));
                                    if (J$.X1(12337, J$.C(160, J$.B(338, '>', J$.R(4689, 'iterationCount', iterationCount, 0), J$.T(4697, 100, 22, false), 0)))) {
                                        var selectorOne = J$.X1(4721, J$.W(4713, 'selectorOne', J$.T(4705, '{unable to calculate}', 21, false), selectorOne, 1));
                                        var selectorTwo = J$.X1(4745, J$.W(4737, 'selectorTwo', J$.T(4729, '{unable to calculate}', 21, false), selectorTwo, 1));
                                        try {
                                            J$.X1(4817, selectorOne = J$.W(4809, 'selectorOne', J$.M(4801, J$.G(4793, J$.G(4777, J$.G(4769, J$.R(4753, 'extendsToAdd', extendsToAdd, 0), J$.T(4761, 0, 22, false), 4), 'selfSelectors', 0), J$.T(4785, 0, 22, false), 4), 'toCSS', 0)(), selectorOne, 0));
                                            J$.X1(4873, selectorTwo = J$.W(4865, 'selectorTwo', J$.M(4857, J$.G(4849, J$.G(4841, J$.R(4825, 'extendsToAdd', extendsToAdd, 0), J$.T(4833, 0, 22, false), 4), 'selector', 0), 'toCSS', 0)(), selectorTwo, 0));
                                        } catch (e) {
                                            e = J$.N(4881, 'e', e, 1);
                                        }
                                        throw J$.X1(4945, J$.Th(4937, J$.T(4929, {
                                            message: J$.B(370, '+', J$.B(362, '+', J$.B(354, '+', J$.B(346, '+', J$.T(4889, 'extend circular reference detected. One of the circular extends is currently:', 21, false), J$.R(4897, 'selectorOne', selectorOne, 0), 0), J$.T(4905, ':extend(', 21, false), 0), J$.R(4913, 'selectorTwo', selectorTwo, 0), 0), J$.T(4921, ')', 21, false), 0)
                                        }, 11, false)));
                                    }
                                    return J$.X1(5025, J$.Rt(5017, J$.M(5009, J$.R(4953, 'extendsToAdd', extendsToAdd, 0), 'concat', 0)(J$.M(5001, J$.R(4961, 'extendVisitor', extendVisitor, 0), 'doExtendChaining', 0)(J$.R(4969, 'extendsToAdd', extendsToAdd, 0), J$.R(4977, 'extendsListTarget', extendsListTarget, 0), J$.B(378, '+', J$.R(4985, 'iterationCount', iterationCount, 0), J$.T(4993, 1, 22, false), 0)))));
                                } else {
                                    return J$.X1(5049, J$.Rt(5041, J$.R(5033, 'extendsToAdd', extendsToAdd, 0)));
                                }
                            } catch (J$e) {
                                J$.Ex(12353, J$e);
                            } finally {
                                if (J$.Fr(12361))
                                    continue jalangiLabel572;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5057),
                visitRule: J$.T(5265, function (ruleNode, visitArgs) {
                    jalangiLabel573:
                        while (true) {
                            try {
                                J$.Fe(5233, arguments.callee, this, arguments);
                                arguments = J$.N(5241, 'arguments', arguments, 4);
                                ruleNode = J$.N(5249, 'ruleNode', ruleNode, 4);
                                visitArgs = J$.N(5257, 'visitArgs', visitArgs, 4);
                                J$.X1(5225, J$.P(5217, J$.R(5201, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(5209, false, 23, false), 0));
                            } catch (J$e) {
                                J$.Ex(12369, J$e);
                            } finally {
                                if (J$.Fr(12377))
                                    continue jalangiLabel573;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5233),
                visitMixinDefinition: J$.T(5337, function (mixinDefinitionNode, visitArgs) {
                    jalangiLabel574:
                        while (true) {
                            try {
                                J$.Fe(5305, arguments.callee, this, arguments);
                                arguments = J$.N(5313, 'arguments', arguments, 4);
                                mixinDefinitionNode = J$.N(5321, 'mixinDefinitionNode', mixinDefinitionNode, 4);
                                visitArgs = J$.N(5329, 'visitArgs', visitArgs, 4);
                                J$.X1(5297, J$.P(5289, J$.R(5273, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(5281, false, 23, false), 0));
                            } catch (J$e) {
                                J$.Ex(12385, J$e);
                            } finally {
                                if (J$.Fr(12393))
                                    continue jalangiLabel574;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5305),
                visitSelector: J$.T(5409, function (selectorNode, visitArgs) {
                    jalangiLabel575:
                        while (true) {
                            try {
                                J$.Fe(5377, arguments.callee, this, arguments);
                                arguments = J$.N(5385, 'arguments', arguments, 4);
                                selectorNode = J$.N(5393, 'selectorNode', selectorNode, 4);
                                visitArgs = J$.N(5401, 'visitArgs', visitArgs, 4);
                                J$.X1(5369, J$.P(5361, J$.R(5345, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(5353, false, 23, false), 0));
                            } catch (J$e) {
                                J$.Ex(12401, J$e);
                            } finally {
                                if (J$.Fr(12409))
                                    continue jalangiLabel575;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5377),
                visitRuleset: J$.T(6361, function (rulesetNode, visitArgs) {
                    jalangiLabel577:
                        while (true) {
                            try {
                                J$.Fe(6265, arguments.callee, this, arguments);
                                arguments = J$.N(6273, 'arguments', arguments, 4);
                                rulesetNode = J$.N(6281, 'rulesetNode', rulesetNode, 4);
                                visitArgs = J$.N(6289, 'visitArgs', visitArgs, 4);
                                J$.N(6297, 'matches', matches, 0);
                                J$.N(6305, 'pathIndex', pathIndex, 0);
                                J$.N(6313, 'extendIndex', extendIndex, 0);
                                J$.N(6321, 'allExtends', allExtends, 0);
                                J$.N(6329, 'selectorsToAdd', selectorsToAdd, 0);
                                J$.N(6337, 'extendVisitor', extendVisitor, 0);
                                J$.N(6345, 'selectorPath', selectorPath, 0);
                                J$.N(6353, 'extendList', extendList, 0);
                                if (J$.X1(12417, J$.C(176, J$.G(5425, J$.R(5417, 'rulesetNode', rulesetNode, 0), 'root', 0)))) {
                                    return J$.X1(5441, J$.Rt(5433, undefined));
                                }
                                var matches, pathIndex, extendIndex, allExtends = J$.X1(5529, J$.W(5521, 'allExtends', J$.G(5497, J$.G(5457, J$.R(5449, 'this', this, 0), 'allExtendsStack', 0), J$.B(386, '-', J$.G(5481, J$.G(5473, J$.R(5465, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(5489, 1, 22, false), 0), 4), allExtends, 1)), selectorsToAdd = J$.X1(5545, J$.W(5537, 'selectorsToAdd', J$.T(5505, [], 10, false), selectorsToAdd, 1)), extendVisitor = J$.X1(5561, J$.W(5553, 'extendVisitor', J$.R(5513, 'this', this, 0), extendVisitor, 1)), selectorPath;
                                for (J$.X1(12497, extendIndex = J$.W(5577, 'extendIndex', J$.T(5569, 0, 22, false), extendIndex, 0)); J$.X1(12489, J$.C(224, J$.B(394, '<', J$.R(5585, 'extendIndex', extendIndex, 0), J$.G(5601, J$.R(5593, 'allExtends', allExtends, 0), 'length', 0), 0))); J$.X1(12505, J$.B(418, '-', extendIndex = J$.W(5625, 'extendIndex', J$.B(410, '+', J$.U(402, '+', J$.R(5617, 'extendIndex', extendIndex, 0)), J$.T(5609, 1, 22, false), 0), extendIndex, 0), J$.T(5633, 1, 22, false), 0))) {
                                    for (J$.X1(12473, pathIndex = J$.W(5649, 'pathIndex', J$.T(5641, 0, 22, false), pathIndex, 0)); J$.X1(12465, J$.C(216, J$.B(426, '<', J$.R(5657, 'pathIndex', pathIndex, 0), J$.G(5681, J$.G(5673, J$.R(5665, 'rulesetNode', rulesetNode, 0), 'paths', 0), 'length', 0), 0))); J$.X1(12481, J$.B(450, '-', pathIndex = J$.W(5705, 'pathIndex', J$.B(442, '+', J$.U(434, '+', J$.R(5697, 'pathIndex', pathIndex, 0)), J$.T(5689, 1, 22, false), 0), pathIndex, 0), J$.T(5713, 1, 22, false), 0))) {
                                        J$.X1(5761, selectorPath = J$.W(5753, 'selectorPath', J$.G(5745, J$.G(5729, J$.R(5721, 'rulesetNode', rulesetNode, 0), 'paths', 0), J$.R(5737, 'pathIndex', pathIndex, 0), 4), selectorPath, 0));
                                        if (J$.X1(12425, J$.C(184, J$.G(5777, J$.R(5769, 'rulesetNode', rulesetNode, 0), 'extendOnEveryPath', 0)))) {
                                            continue;
                                        }
                                        var extendList = J$.X1(5841, J$.W(5833, 'extendList', J$.G(5825, J$.G(5817, J$.R(5785, 'selectorPath', selectorPath, 0), J$.B(458, '-', J$.G(5801, J$.R(5793, 'selectorPath', selectorPath, 0), 'length', 0), J$.T(5809, 1, 22, false), 0), 4), 'extendList', 0), extendList, 1));
                                        if (J$.X1(12433, J$.C(200, J$.C(192, J$.R(5849, 'extendList', extendList, 0)) ? J$.G(5865, J$.R(5857, 'extendList', extendList, 0), 'length', 0) : J$._()))) {
                                            continue;
                                        }
                                        J$.X1(5929, matches = J$.W(5921, 'matches', J$.M(5913, J$.R(5873, 'this', this, 0), 'findMatch', 0)(J$.G(5897, J$.R(5881, 'allExtends', allExtends, 0), J$.R(5889, 'extendIndex', extendIndex, 0), 4), J$.R(5905, 'selectorPath', selectorPath, 0)), matches, 0));
                                        if (J$.X1(12457, J$.C(208, J$.G(5945, J$.R(5937, 'matches', matches, 0), 'length', 0)))) {
                                            J$.X1(5993, J$.P(5985, J$.G(5969, J$.R(5953, 'allExtends', allExtends, 0), J$.R(5961, 'extendIndex', extendIndex, 0), 4), 'hasFoundMatches', J$.T(5977, true, 23, false), 0));
                                            J$.X1(6201, J$.M(6193, J$.G(6025, J$.G(6017, J$.R(6001, 'allExtends', allExtends, 0), J$.R(6009, 'extendIndex', extendIndex, 0), 4), 'selfSelectors', 0), 'forEach', 0)(J$.T(6185, function (selfSelector) {
                                                jalangiLabel576:
                                                    while (true) {
                                                        try {
                                                            J$.Fe(6153, arguments.callee, this, arguments);
                                                            arguments = J$.N(6161, 'arguments', arguments, 4);
                                                            selfSelector = J$.N(6169, 'selfSelector', selfSelector, 4);
                                                            J$.N(6177, 'extendedSelectors', extendedSelectors, 0);
                                                            var extendedSelectors;
                                                            J$.X1(6113, extendedSelectors = J$.W(6105, 'extendedSelectors', J$.M(6097, J$.R(6033, 'extendVisitor', extendVisitor, 0), 'extendSelector', 0)(J$.R(6041, 'matches', matches, 0), J$.R(6049, 'selectorPath', selectorPath, 0), J$.R(6057, 'selfSelector', selfSelector, 0), J$.M(6089, J$.G(6081, J$.R(6065, 'allExtends', allExtends, 0), J$.R(6073, 'extendIndex', extendIndex, 0), 4), 'isVisible', 0)()), extendedSelectors, 0));
                                                            J$.X1(6145, J$.M(6137, J$.R(6121, 'selectorsToAdd', selectorsToAdd, 0), 'push', 0)(J$.R(6129, 'extendedSelectors', extendedSelectors, 0)));
                                                        } catch (J$e) {
                                                            J$.Ex(12441, J$e);
                                                        } finally {
                                                            if (J$.Fr(12449))
                                                                continue jalangiLabel576;
                                                            else
                                                                return J$.Ra();
                                                        }
                                                    }
                                            }, 12, false, 6153)));
                                        }
                                    }
                                }
                                J$.X1(6257, J$.P(6249, J$.R(6209, 'rulesetNode', rulesetNode, 0), 'paths', J$.M(6241, J$.G(6225, J$.R(6217, 'rulesetNode', rulesetNode, 0), 'paths', 0), 'concat', 0)(J$.R(6233, 'selectorsToAdd', selectorsToAdd, 0)), 0));
                            } catch (J$e) {
                                J$.Ex(12513, J$e);
                            } finally {
                                if (J$.Fr(12521))
                                    continue jalangiLabel577;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 6265),
                findMatch: J$.T(7881, function (extend, haystackSelectorPath) {
                    jalangiLabel578:
                        while (true) {
                            try {
                                J$.Fe(7761, arguments.callee, this, arguments);
                                arguments = J$.N(7769, 'arguments', arguments, 4);
                                extend = J$.N(7777, 'extend', extend, 4);
                                haystackSelectorPath = J$.N(7785, 'haystackSelectorPath', haystackSelectorPath, 4);
                                J$.N(7793, 'haystackSelectorIndex', haystackSelectorIndex, 0);
                                J$.N(7801, 'hackstackSelector', hackstackSelector, 0);
                                J$.N(7809, 'hackstackElementIndex', hackstackElementIndex, 0);
                                J$.N(7817, 'haystackElement', haystackElement, 0);
                                J$.N(7825, 'targetCombinator', targetCombinator, 0);
                                J$.N(7833, 'i', i, 0);
                                J$.N(7841, 'extendVisitor', extendVisitor, 0);
                                J$.N(7849, 'needleElements', needleElements, 0);
                                J$.N(7857, 'potentialMatches', potentialMatches, 0);
                                J$.N(7865, 'potentialMatch', potentialMatch, 0);
                                J$.N(7873, 'matches', matches, 0);
                                var haystackSelectorIndex, hackstackSelector, hackstackElementIndex, haystackElement, targetCombinator, i, extendVisitor = J$.X1(6425, J$.W(6417, 'extendVisitor', J$.R(6369, 'this', this, 0), extendVisitor, 1)), needleElements = J$.X1(6441, J$.W(6433, 'needleElements', J$.G(6393, J$.G(6385, J$.R(6377, 'extend', extend, 0), 'selector', 0), 'elements', 0), needleElements, 1)), potentialMatches = J$.X1(6457, J$.W(6449, 'potentialMatches', J$.T(6401, [], 10, false), potentialMatches, 1)), potentialMatch, matches = J$.X1(6473, J$.W(6465, 'matches', J$.T(6409, [], 10, false), matches, 1));
                                for (J$.X1(12641, haystackSelectorIndex = J$.W(6489, 'haystackSelectorIndex', J$.T(6481, 0, 22, false), haystackSelectorIndex, 0)); J$.X1(12633, J$.C(368, J$.B(466, '<', J$.R(6497, 'haystackSelectorIndex', haystackSelectorIndex, 0), J$.G(6513, J$.R(6505, 'haystackSelectorPath', haystackSelectorPath, 0), 'length', 0), 0))); J$.X1(12649, J$.B(490, '-', haystackSelectorIndex = J$.W(6537, 'haystackSelectorIndex', J$.B(482, '+', J$.U(474, '+', J$.R(6529, 'haystackSelectorIndex', haystackSelectorIndex, 0)), J$.T(6521, 1, 22, false), 0), haystackSelectorIndex, 0), J$.T(6545, 1, 22, false), 0))) {
                                    J$.X1(6585, hackstackSelector = J$.W(6577, 'hackstackSelector', J$.G(6569, J$.R(6553, 'haystackSelectorPath', haystackSelectorPath, 0), J$.R(6561, 'haystackSelectorIndex', haystackSelectorIndex, 0), 4), hackstackSelector, 0));
                                    for (J$.X1(12617, hackstackElementIndex = J$.W(6601, 'hackstackElementIndex', J$.T(6593, 0, 22, false), hackstackElementIndex, 0)); J$.X1(12609, J$.C(360, J$.B(498, '<', J$.R(6609, 'hackstackElementIndex', hackstackElementIndex, 0), J$.G(6633, J$.G(6625, J$.R(6617, 'hackstackSelector', hackstackSelector, 0), 'elements', 0), 'length', 0), 0))); J$.X1(12625, J$.B(522, '-', hackstackElementIndex = J$.W(6657, 'hackstackElementIndex', J$.B(514, '+', J$.U(506, '+', J$.R(6649, 'hackstackElementIndex', hackstackElementIndex, 0)), J$.T(6641, 1, 22, false), 0), hackstackElementIndex, 0), J$.T(6665, 1, 22, false), 0))) {
                                        J$.X1(6713, haystackElement = J$.W(6705, 'haystackElement', J$.G(6697, J$.G(6681, J$.R(6673, 'hackstackSelector', hackstackSelector, 0), 'elements', 0), J$.R(6689, 'hackstackElementIndex', hackstackElementIndex, 0), 4), haystackElement, 0));
                                        if (J$.X1(12529, J$.C(248, J$.C(240, J$.G(6729, J$.R(6721, 'extend', extend, 0), 'allowBefore', 0)) ? J$._() : J$.C(232, J$.B(530, '===', J$.R(6737, 'haystackSelectorIndex', haystackSelectorIndex, 0), J$.T(6745, 0, 22, false), 0)) ? J$.B(538, '===', J$.R(6753, 'hackstackElementIndex', hackstackElementIndex, 0), J$.T(6761, 0, 22, false), 0) : J$._()))) {
                                            J$.X1(6833, J$.M(6825, J$.R(6769, 'potentialMatches', potentialMatches, 0), 'push', 0)(J$.T(6817, {
                                                pathIndex: J$.R(6777, 'haystackSelectorIndex', haystackSelectorIndex, 0),
                                                index: J$.R(6785, 'hackstackElementIndex', hackstackElementIndex, 0),
                                                matched: J$.T(6793, 0, 22, false),
                                                initialCombinator: J$.G(6809, J$.R(6801, 'haystackElement', haystackElement, 0), 'combinator', 0)
                                            }, 11, false)));
                                        }
                                        for (J$.X1(12593, i = J$.W(6849, 'i', J$.T(6841, 0, 22, false), i, 0)); J$.X1(12585, J$.C(352, J$.B(546, '<', J$.R(6857, 'i', i, 0), J$.G(6873, J$.R(6865, 'potentialMatches', potentialMatches, 0), 'length', 0), 0))); J$.X1(12601, J$.B(570, '-', i = J$.W(6897, 'i', J$.B(562, '+', J$.U(554, '+', J$.R(6889, 'i', i, 0)), J$.T(6881, 1, 22, false), 0), i, 0), J$.T(6905, 1, 22, false), 0))) {
                                            J$.X1(6945, potentialMatch = J$.W(6937, 'potentialMatch', J$.G(6929, J$.R(6913, 'potentialMatches', potentialMatches, 0), J$.R(6921, 'i', i, 0), 4), potentialMatch, 0));
                                            J$.X1(6985, targetCombinator = J$.W(6977, 'targetCombinator', J$.G(6969, J$.G(6961, J$.R(6953, 'haystackElement', haystackElement, 0), 'combinator', 0), 'value', 0), targetCombinator, 0));
                                            if (J$.X1(12537, J$.C(264, J$.C(256, J$.B(578, '===', J$.R(6993, 'targetCombinator', targetCombinator, 0), J$.T(7001, '', 21, false), 0)) ? J$.B(586, '===', J$.R(7009, 'hackstackElementIndex', hackstackElementIndex, 0), J$.T(7017, 0, 22, false), 0) : J$._()))) {
                                                J$.X1(7041, targetCombinator = J$.W(7033, 'targetCombinator', J$.T(7025, ' ', 21, false), targetCombinator, 0));
                                            }
                                            if (J$.X1(12545, J$.C(288, J$.C(280, J$.U(594, '!', J$.M(7113, J$.R(7049, 'extendVisitor', extendVisitor, 0), 'isElementValuesEqual', 0)(J$.G(7089, J$.G(7081, J$.R(7057, 'needleElements', needleElements, 0), J$.G(7073, J$.R(7065, 'potentialMatch', potentialMatch, 0), 'matched', 0), 4), 'value', 0), J$.G(7105, J$.R(7097, 'haystackElement', haystackElement, 0), 'value', 0)))) ? J$._() : J$.C(272, J$.B(602, '>', J$.G(7129, J$.R(7121, 'potentialMatch', potentialMatch, 0), 'matched', 0), J$.T(7137, 0, 22, false), 0)) ? J$.B(610, '!==', J$.G(7185, J$.G(7177, J$.G(7169, J$.R(7145, 'needleElements', needleElements, 0), J$.G(7161, J$.R(7153, 'potentialMatch', potentialMatch, 0), 'matched', 0), 4), 'combinator', 0), 'value', 0), J$.R(7193, 'targetCombinator', targetCombinator, 0), 0) : J$._()))) {
                                                J$.X1(7217, potentialMatch = J$.W(7209, 'potentialMatch', J$.T(7201, null, 25, false), potentialMatch, 0));
                                            } else {
                                                J$.X1(7257, J$.B(618, '-', J$.A(7241, J$.R(7225, 'potentialMatch', potentialMatch, 0), 'matched', '+', 0)(J$.T(7233, 1, 22, false)), J$.T(7249, 1, 22, false), 0));
                                            }
                                            if (J$.X1(12561, J$.C(328, J$.R(7265, 'potentialMatch', potentialMatch, 0)))) {
                                                J$.X1(7321, J$.P(7313, J$.R(7273, 'potentialMatch', potentialMatch, 0), 'finished', J$.B(626, '===', J$.G(7289, J$.R(7281, 'potentialMatch', potentialMatch, 0), 'matched', 0), J$.G(7305, J$.R(7297, 'needleElements', needleElements, 0), 'length', 0), 0), 0));
                                                if (J$.X1(12553, J$.C(320, J$.C(312, J$.G(7337, J$.R(7329, 'potentialMatch', potentialMatch, 0), 'finished', 0)) ? J$.C(304, J$.U(634, '!', J$.G(7353, J$.R(7345, 'extend', extend, 0), 'allowAfter', 0))) ? J$.C(296, J$.B(650, '<', J$.B(642, '+', J$.R(7361, 'hackstackElementIndex', hackstackElementIndex, 0), J$.T(7369, 1, 22, false), 0), J$.G(7393, J$.G(7385, J$.R(7377, 'hackstackSelector', hackstackSelector, 0), 'elements', 0), 'length', 0), 0)) ? J$._() : J$.B(666, '<', J$.B(658, '+', J$.R(7401, 'haystackSelectorIndex', haystackSelectorIndex, 0), J$.T(7409, 1, 22, false), 0), J$.G(7425, J$.R(7417, 'haystackSelectorPath', haystackSelectorPath, 0), 'length', 0), 0) : J$._() : J$._()))) {
                                                    J$.X1(7449, potentialMatch = J$.W(7441, 'potentialMatch', J$.T(7433, null, 25, false), potentialMatch, 0));
                                                }
                                            }
                                            if (J$.X1(12577, J$.C(344, J$.R(7457, 'potentialMatch', potentialMatch, 0)))) {
                                                if (J$.X1(12569, J$.C(336, J$.G(7473, J$.R(7465, 'potentialMatch', potentialMatch, 0), 'finished', 0)))) {
                                                    J$.X1(7513, J$.P(7505, J$.R(7481, 'potentialMatch', potentialMatch, 0), 'length', J$.G(7497, J$.R(7489, 'needleElements', needleElements, 0), 'length', 0), 0));
                                                    J$.X1(7545, J$.P(7537, J$.R(7521, 'potentialMatch', potentialMatch, 0), 'endPathIndex', J$.R(7529, 'haystackSelectorIndex', haystackSelectorIndex, 0), 0));
                                                    J$.X1(7585, J$.P(7577, J$.R(7553, 'potentialMatch', potentialMatch, 0), 'endPathElementIndex', J$.B(674, '+', J$.R(7561, 'hackstackElementIndex', hackstackElementIndex, 0), J$.T(7569, 1, 22, false), 0), 0));
                                                    J$.X1(7617, J$.P(7609, J$.R(7593, 'potentialMatches', potentialMatches, 0), 'length', J$.T(7601, 0, 22, false), 0));
                                                    J$.X1(7649, J$.M(7641, J$.R(7625, 'matches', matches, 0), 'push', 0)(J$.R(7633, 'potentialMatch', potentialMatch, 0)));
                                                }
                                            } else {
                                                J$.X1(7689, J$.M(7681, J$.R(7657, 'potentialMatches', potentialMatches, 0), 'splice', 0)(J$.R(7665, 'i', i, 0), J$.T(7673, 1, 22, false)));
                                                J$.X1(7729, J$.B(698, '+', i = J$.W(7713, 'i', J$.B(690, '-', J$.U(682, '+', J$.R(7705, 'i', i, 0)), J$.T(7697, 1, 22, false), 0), i, 0), J$.T(7721, 1, 22, false), 0));
                                            }
                                        }
                                    }
                                }
                                return J$.X1(7753, J$.Rt(7745, J$.R(7737, 'matches', matches, 0)));
                            } catch (J$e) {
                                J$.Ex(12657, J$e);
                            } finally {
                                if (J$.Fr(12665))
                                    continue jalangiLabel578;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 7761),
                isElementValuesEqual: J$.T(9049, function (elementValue1, elementValue2) {
                    jalangiLabel579:
                        while (true) {
                            try {
                                J$.Fe(9009, arguments.callee, this, arguments);
                                arguments = J$.N(9017, 'arguments', arguments, 4);
                                elementValue1 = J$.N(9025, 'elementValue1', elementValue1, 4);
                                elementValue2 = J$.N(9033, 'elementValue2', elementValue2, 4);
                                J$.N(9041, 'i', i, 0);
                                if (J$.X1(12673, J$.C(384, J$.C(376, J$.B(714, '===', J$.U(706, 'typeof', J$.R(7889, 'elementValue1', elementValue1, 0)), J$.T(7897, 'string', 21, false), 0)) ? J$._() : J$.B(730, '===', J$.U(722, 'typeof', J$.R(7905, 'elementValue2', elementValue2, 0)), J$.T(7913, 'string', 21, false), 0)))) {
                                    return J$.X1(7945, J$.Rt(7937, J$.B(738, '===', J$.R(7921, 'elementValue1', elementValue1, 0), J$.R(7929, 'elementValue2', elementValue2, 0), 0)));
                                }
                                if (J$.X1(12705, J$.C(456, J$.B(746, 'instanceof', J$.R(7953, 'elementValue1', elementValue1, 0), J$.G(7969, J$.R(7961, 'tree', tree, 1), 'Attribute', 0), 0)))) {
                                    if (J$.X1(12681, J$.C(400, J$.C(392, J$.B(754, '!==', J$.G(7985, J$.R(7977, 'elementValue1', elementValue1, 0), 'op', 0), J$.G(8001, J$.R(7993, 'elementValue2', elementValue2, 0), 'op', 0), 0)) ? J$._() : J$.B(762, '!==', J$.G(8017, J$.R(8009, 'elementValue1', elementValue1, 0), 'key', 0), J$.G(8033, J$.R(8025, 'elementValue2', elementValue2, 0), 'key', 0), 0)))) {
                                        return J$.X1(8057, J$.Rt(8049, J$.T(8041, false, 23, false)));
                                    }
                                    if (J$.X1(12697, J$.C(432, J$.C(408, J$.U(770, '!', J$.G(8073, J$.R(8065, 'elementValue1', elementValue1, 0), 'value', 0))) ? J$._() : J$.U(778, '!', J$.G(8089, J$.R(8081, 'elementValue2', elementValue2, 0), 'value', 0))))) {
                                        if (J$.X1(12689, J$.C(424, J$.C(416, J$.G(8105, J$.R(8097, 'elementValue1', elementValue1, 0), 'value', 0)) ? J$._() : J$.G(8121, J$.R(8113, 'elementValue2', elementValue2, 0), 'value', 0)))) {
                                            return J$.X1(8145, J$.Rt(8137, J$.T(8129, false, 23, false)));
                                        }
                                        return J$.X1(8169, J$.Rt(8161, J$.T(8153, true, 23, false)));
                                    }
                                    J$.X1(8225, elementValue1 = J$.W(8217, 'elementValue1', J$.C(440, J$.G(8193, J$.G(8185, J$.R(8177, 'elementValue1', elementValue1, 0), 'value', 0), 'value', 0)) ? J$._() : J$.G(8209, J$.R(8201, 'elementValue1', elementValue1, 0), 'value', 0), elementValue1, 0));
                                    J$.X1(8281, elementValue2 = J$.W(8273, 'elementValue2', J$.C(448, J$.G(8249, J$.G(8241, J$.R(8233, 'elementValue2', elementValue2, 0), 'value', 0), 'value', 0)) ? J$._() : J$.G(8265, J$.R(8257, 'elementValue2', elementValue2, 0), 'value', 0), elementValue2, 0));
                                    return J$.X1(8313, J$.Rt(8305, J$.B(786, '===', J$.R(8289, 'elementValue1', elementValue1, 0), J$.R(8297, 'elementValue2', elementValue2, 0), 0)));
                                }
                                J$.X1(8345, elementValue1 = J$.W(8337, 'elementValue1', J$.G(8329, J$.R(8321, 'elementValue1', elementValue1, 0), 'value', 0), elementValue1, 0));
                                J$.X1(8377, elementValue2 = J$.W(8369, 'elementValue2', J$.G(8361, J$.R(8353, 'elementValue2', elementValue2, 0), 'value', 0), elementValue2, 0));
                                if (J$.X1(12761, J$.C(536, J$.B(794, 'instanceof', J$.R(8385, 'elementValue1', elementValue1, 0), J$.G(8401, J$.R(8393, 'tree', tree, 1), 'Selector', 0), 0)))) {
                                    if (J$.X1(12713, J$.C(472, J$.C(464, J$.U(810, '!', J$.B(802, 'instanceof', J$.R(8409, 'elementValue2', elementValue2, 0), J$.G(8425, J$.R(8417, 'tree', tree, 1), 'Selector', 0), 0))) ? J$._() : J$.B(818, '!==', J$.G(8449, J$.G(8441, J$.R(8433, 'elementValue1', elementValue1, 0), 'elements', 0), 'length', 0), J$.G(8473, J$.G(8465, J$.R(8457, 'elementValue2', elementValue2, 0), 'elements', 0), 'length', 0), 0)))) {
                                        return J$.X1(8497, J$.Rt(8489, J$.T(8481, false, 23, false)));
                                    }
                                    for (var i = J$.X1(8521, J$.W(8513, 'i', J$.T(8505, 0, 22, false), i, 1)); J$.X1(12745, J$.C(528, J$.B(826, '<', J$.R(8529, 'i', i, 0), J$.G(8553, J$.G(8545, J$.R(8537, 'elementValue1', elementValue1, 0), 'elements', 0), 'length', 0), 0))); J$.X1(12753, J$.B(850, '-', i = J$.W(8577, 'i', J$.B(842, '+', J$.U(834, '+', J$.R(8569, 'i', i, 0)), J$.T(8561, 1, 22, false), 0), i, 0), J$.T(8585, 1, 22, false), 0))) {
                                        if (J$.X1(12729, J$.C(512, J$.B(858, '!==', J$.G(8633, J$.G(8625, J$.G(8617, J$.G(8601, J$.R(8593, 'elementValue1', elementValue1, 0), 'elements', 0), J$.R(8609, 'i', i, 0), 4), 'combinator', 0), 'value', 0), J$.G(8681, J$.G(8673, J$.G(8665, J$.G(8649, J$.R(8641, 'elementValue2', elementValue2, 0), 'elements', 0), J$.R(8657, 'i', i, 0), 4), 'combinator', 0), 'value', 0), 0)))) {
                                            if (J$.X1(12721, J$.C(504, J$.C(496, J$.B(866, '!==', J$.R(8689, 'i', i, 0), J$.T(8697, 0, 22, false), 0)) ? J$._() : J$.B(874, '!==', J$.C(480, J$.G(8745, J$.G(8737, J$.G(8729, J$.G(8713, J$.R(8705, 'elementValue1', elementValue1, 0), 'elements', 0), J$.R(8721, 'i', i, 0), 4), 'combinator', 0), 'value', 0)) ? J$._() : J$.T(8753, ' ', 21, false), J$.C(488, J$.G(8801, J$.G(8793, J$.G(8785, J$.G(8769, J$.R(8761, 'elementValue2', elementValue2, 0), 'elements', 0), J$.R(8777, 'i', i, 0), 4), 'combinator', 0), 'value', 0)) ? J$._() : J$.T(8809, ' ', 21, false), 0)))) {
                                                return J$.X1(8833, J$.Rt(8825, J$.T(8817, false, 23, false)));
                                            }
                                        }
                                        if (J$.X1(12737, J$.C(520, J$.U(882, '!', J$.M(8929, J$.R(8841, 'this', this, 0), 'isElementValuesEqual', 0)(J$.G(8881, J$.G(8873, J$.G(8857, J$.R(8849, 'elementValue1', elementValue1, 0), 'elements', 0), J$.R(8865, 'i', i, 0), 4), 'value', 0), J$.G(8921, J$.G(8913, J$.G(8897, J$.R(8889, 'elementValue2', elementValue2, 0), 'elements', 0), J$.R(8905, 'i', i, 0), 4), 'value', 0)))))) {
                                            return J$.X1(8953, J$.Rt(8945, J$.T(8937, false, 23, false)));
                                        }
                                    }
                                    return J$.X1(8977, J$.Rt(8969, J$.T(8961, true, 23, false)));
                                }
                                return J$.X1(9001, J$.Rt(8993, J$.T(8985, false, 23, false)));
                            } catch (J$e) {
                                J$.Ex(12769, J$e);
                            } finally {
                                if (J$.Fr(12777))
                                    continue jalangiLabel579;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 9009),
                extendSelector: J$.T(10953, function (matches, selectorPath, replacementSelector, isVisible) {
                    jalangiLabel581:
                        while (true) {
                            try {
                                J$.Fe(10841, arguments.callee, this, arguments);
                                arguments = J$.N(10849, 'arguments', arguments, 4);
                                matches = J$.N(10857, 'matches', matches, 4);
                                selectorPath = J$.N(10865, 'selectorPath', selectorPath, 4);
                                replacementSelector = J$.N(10873, 'replacementSelector', replacementSelector, 4);
                                isVisible = J$.N(10881, 'isVisible', isVisible, 4);
                                J$.N(10889, 'currentSelectorPathIndex', currentSelectorPathIndex, 0);
                                J$.N(10897, 'currentSelectorPathElementIndex', currentSelectorPathElementIndex, 0);
                                J$.N(10905, 'path', path, 0);
                                J$.N(10913, 'matchIndex', matchIndex, 0);
                                J$.N(10921, 'selector', selector, 0);
                                J$.N(10929, 'firstElement', firstElement, 0);
                                J$.N(10937, 'match', match, 0);
                                J$.N(10945, 'newElements', newElements, 0);
                                var currentSelectorPathIndex = J$.X1(9089, J$.W(9081, 'currentSelectorPathIndex', J$.T(9057, 0, 22, false), currentSelectorPathIndex, 1)), currentSelectorPathElementIndex = J$.X1(9105, J$.W(9097, 'currentSelectorPathElementIndex', J$.T(9065, 0, 22, false), currentSelectorPathElementIndex, 1)), path = J$.X1(9121, J$.W(9113, 'path', J$.T(9073, [], 10, false), path, 1)), matchIndex, selector, firstElement, match, newElements;
                                for (J$.X1(12817, matchIndex = J$.W(9137, 'matchIndex', J$.T(9129, 0, 22, false), matchIndex, 0)); J$.X1(12809, J$.C(584, J$.B(890, '<', J$.R(9145, 'matchIndex', matchIndex, 0), J$.G(9161, J$.R(9153, 'matches', matches, 0), 'length', 0), 0))); J$.X1(12825, J$.B(914, '-', matchIndex = J$.W(9185, 'matchIndex', J$.B(906, '+', J$.U(898, '+', J$.R(9177, 'matchIndex', matchIndex, 0)), J$.T(9169, 1, 22, false), 0), matchIndex, 0), J$.T(9193, 1, 22, false), 0))) {
                                    J$.X1(9233, match = J$.W(9225, 'match', J$.G(9217, J$.R(9201, 'matches', matches, 0), J$.R(9209, 'matchIndex', matchIndex, 0), 4), match, 0));
                                    J$.X1(9281, selector = J$.W(9273, 'selector', J$.G(9265, J$.R(9241, 'selectorPath', selectorPath, 0), J$.G(9257, J$.R(9249, 'match', match, 0), 'pathIndex', 0), 4), selector, 0));
                                    J$.X1(9449, firstElement = J$.W(9441, 'firstElement', J$.M(9433, J$.R(9289, 'tree', tree, 1), 'Element', 2)(J$.G(9305, J$.R(9297, 'match', match, 0), 'initialCombinator', 0), J$.G(9345, J$.G(9337, J$.G(9321, J$.R(9313, 'replacementSelector', replacementSelector, 0), 'elements', 0), J$.T(9329, 0, 22, false), 4), 'value', 0), J$.G(9385, J$.G(9377, J$.G(9361, J$.R(9353, 'replacementSelector', replacementSelector, 0), 'elements', 0), J$.T(9369, 0, 22, false), 4), 'index', 0), J$.G(9425, J$.G(9417, J$.G(9401, J$.R(9393, 'replacementSelector', replacementSelector, 0), 'elements', 0), J$.T(9409, 0, 22, false), 4), 'currentFileInfo', 0)), firstElement, 0));
                                    if (J$.X1(12785, J$.C(552, J$.C(544, J$.B(922, '>', J$.G(9465, J$.R(9457, 'match', match, 0), 'pathIndex', 0), J$.R(9473, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), 0)) ? J$.B(930, '>', J$.R(9481, 'currentSelectorPathElementIndex', currentSelectorPathElementIndex, 0), J$.T(9489, 0, 22, false), 0) : J$._()))) {
                                        J$.X1(9649, J$.P(9641, J$.G(9529, J$.R(9497, 'path', path, 0), J$.B(938, '-', J$.G(9513, J$.R(9505, 'path', path, 0), 'length', 0), J$.T(9521, 1, 22, false), 0), 4), 'elements', J$.M(9633, J$.G(9577, J$.G(9569, J$.R(9537, 'path', path, 0), J$.B(946, '-', J$.G(9553, J$.R(9545, 'path', path, 0), 'length', 0), J$.T(9561, 1, 22, false), 0), 4), 'elements', 0), 'concat', 0)(J$.M(9625, J$.G(9609, J$.G(9601, J$.R(9585, 'selectorPath', selectorPath, 0), J$.R(9593, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), 4), 'elements', 0), 'slice', 0)(J$.R(9617, 'currentSelectorPathElementIndex', currentSelectorPathElementIndex, 0))), 0));
                                        J$.X1(9673, currentSelectorPathElementIndex = J$.W(9665, 'currentSelectorPathElementIndex', J$.T(9657, 0, 22, false), currentSelectorPathElementIndex, 0));
                                        J$.X1(9713, J$.B(970, '-', currentSelectorPathIndex = J$.W(9697, 'currentSelectorPathIndex', J$.B(962, '+', J$.U(954, '+', J$.R(9689, 'currentSelectorPathIndex', currentSelectorPathIndex, 0)), J$.T(9681, 1, 22, false), 0), currentSelectorPathIndex, 0), J$.T(9705, 1, 22, false), 0));
                                    }
                                    J$.X1(9841, newElements = J$.W(9833, 'newElements', J$.M(9825, J$.M(9785, J$.M(9761, J$.G(9729, J$.R(9721, 'selector', selector, 0), 'elements', 0), 'slice', 0)(J$.R(9737, 'currentSelectorPathElementIndex', currentSelectorPathElementIndex, 0), J$.G(9753, J$.R(9745, 'match', match, 0), 'index', 0)), 'concat', 0)(J$.T(9777, [J$.R(9769, 'firstElement', firstElement, 0)], 10, false)), 'concat', 0)(J$.M(9817, J$.G(9801, J$.R(9793, 'replacementSelector', replacementSelector, 0), 'elements', 0), 'slice', 0)(J$.T(9809, 1, 22, false))), newElements, 0));
                                    if (J$.X1(12793, J$.C(568, J$.C(560, J$.B(978, '===', J$.R(9849, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), J$.G(9865, J$.R(9857, 'match', match, 0), 'pathIndex', 0), 0)) ? J$.B(986, '>', J$.R(9873, 'matchIndex', matchIndex, 0), J$.T(9881, 0, 22, false), 0) : J$._()))) {
                                        J$.X1(10001, J$.P(9993, J$.G(9921, J$.R(9889, 'path', path, 0), J$.B(994, '-', J$.G(9905, J$.R(9897, 'path', path, 0), 'length', 0), J$.T(9913, 1, 22, false), 0), 4), 'elements', J$.M(9985, J$.G(9969, J$.G(9961, J$.R(9929, 'path', path, 0), J$.B(1002, '-', J$.G(9945, J$.R(9937, 'path', path, 0), 'length', 0), J$.T(9953, 1, 22, false), 0), 4), 'elements', 0), 'concat', 0)(J$.R(9977, 'newElements', newElements, 0)), 0));
                                    } else {
                                        J$.X1(10073, path = J$.W(10065, 'path', J$.M(10057, J$.R(10009, 'path', path, 0), 'concat', 0)(J$.M(10049, J$.R(10017, 'selectorPath', selectorPath, 0), 'slice', 0)(J$.R(10025, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), J$.G(10041, J$.R(10033, 'match', match, 0), 'pathIndex', 0))), path, 0));
                                        J$.X1(10121, J$.M(10113, J$.R(10081, 'path', path, 0), 'push', 0)(J$.M(10105, J$.R(10089, 'tree', tree, 1), 'Selector', 2)(J$.R(10097, 'newElements', newElements, 0))));
                                    }
                                    J$.X1(10153, currentSelectorPathIndex = J$.W(10145, 'currentSelectorPathIndex', J$.G(10137, J$.R(10129, 'match', match, 0), 'endPathIndex', 0), currentSelectorPathIndex, 0));
                                    J$.X1(10185, currentSelectorPathElementIndex = J$.W(10177, 'currentSelectorPathElementIndex', J$.G(10169, J$.R(10161, 'match', match, 0), 'endPathElementIndex', 0), currentSelectorPathElementIndex, 0));
                                    if (J$.X1(12801, J$.C(576, J$.B(1010, '>=', J$.R(10193, 'currentSelectorPathElementIndex', currentSelectorPathElementIndex, 0), J$.G(10233, J$.G(10225, J$.G(10217, J$.R(10201, 'selectorPath', selectorPath, 0), J$.R(10209, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), 4), 'elements', 0), 'length', 0), 0)))) {
                                        J$.X1(10257, currentSelectorPathElementIndex = J$.W(10249, 'currentSelectorPathElementIndex', J$.T(10241, 0, 22, false), currentSelectorPathElementIndex, 0));
                                        J$.X1(10297, J$.B(1034, '-', currentSelectorPathIndex = J$.W(10281, 'currentSelectorPathIndex', J$.B(1026, '+', J$.U(1018, '+', J$.R(10273, 'currentSelectorPathIndex', currentSelectorPathIndex, 0)), J$.T(10265, 1, 22, false), 0), currentSelectorPathIndex, 0), J$.T(10289, 1, 22, false), 0));
                                    }
                                }
                                if (J$.X1(12833, J$.C(600, J$.C(592, J$.B(1042, '<', J$.R(10305, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), J$.G(10321, J$.R(10313, 'selectorPath', selectorPath, 0), 'length', 0), 0)) ? J$.B(1050, '>', J$.R(10329, 'currentSelectorPathElementIndex', currentSelectorPathElementIndex, 0), J$.T(10337, 0, 22, false), 0) : J$._()))) {
                                    J$.X1(10497, J$.P(10489, J$.G(10377, J$.R(10345, 'path', path, 0), J$.B(1058, '-', J$.G(10361, J$.R(10353, 'path', path, 0), 'length', 0), J$.T(10369, 1, 22, false), 0), 4), 'elements', J$.M(10481, J$.G(10425, J$.G(10417, J$.R(10385, 'path', path, 0), J$.B(1066, '-', J$.G(10401, J$.R(10393, 'path', path, 0), 'length', 0), J$.T(10409, 1, 22, false), 0), 4), 'elements', 0), 'concat', 0)(J$.M(10473, J$.G(10457, J$.G(10449, J$.R(10433, 'selectorPath', selectorPath, 0), J$.R(10441, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), 4), 'elements', 0), 'slice', 0)(J$.R(10465, 'currentSelectorPathElementIndex', currentSelectorPathElementIndex, 0))), 0));
                                    J$.X1(10537, J$.B(1090, '-', currentSelectorPathIndex = J$.W(10521, 'currentSelectorPathIndex', J$.B(1082, '+', J$.U(1074, '+', J$.R(10513, 'currentSelectorPathIndex', currentSelectorPathIndex, 0)), J$.T(10505, 1, 22, false), 0), currentSelectorPathIndex, 0), J$.T(10529, 1, 22, false), 0));
                                }
                                J$.X1(10609, path = J$.W(10601, 'path', J$.M(10593, J$.R(10545, 'path', path, 0), 'concat', 0)(J$.M(10585, J$.R(10553, 'selectorPath', selectorPath, 0), 'slice', 0)(J$.R(10561, 'currentSelectorPathIndex', currentSelectorPathIndex, 0), J$.G(10577, J$.R(10569, 'selectorPath', selectorPath, 0), 'length', 0))), path, 0));
                                J$.X1(10809, path = J$.W(10801, 'path', J$.M(10793, J$.R(10617, 'path', path, 0), 'map', 0)(J$.T(10785, function (currentValue) {
                                    jalangiLabel580:
                                        while (true) {
                                            try {
                                                J$.Fe(10753, arguments.callee, this, arguments);
                                                arguments = J$.N(10761, 'arguments', arguments, 4);
                                                currentValue = J$.N(10769, 'currentValue', currentValue, 4);
                                                J$.N(10777, 'derived', derived, 0);
                                                var derived = J$.X1(10665, J$.W(10657, 'derived', J$.M(10649, J$.R(10625, 'currentValue', currentValue, 0), 'createDerived', 0)(J$.G(10641, J$.R(10633, 'currentValue', currentValue, 0), 'elements', 0)), derived, 1));
                                                if (J$.X1(12841, J$.C(608, J$.R(10673, 'isVisible', isVisible, 0)))) {
                                                    J$.X1(10697, J$.M(10689, J$.R(10681, 'derived', derived, 0), 'ensureVisibility', 0)());
                                                } else {
                                                    J$.X1(10721, J$.M(10713, J$.R(10705, 'derived', derived, 0), 'ensureInvisibility', 0)());
                                                }
                                                return J$.X1(10745, J$.Rt(10737, J$.R(10729, 'derived', derived, 0)));
                                            } catch (J$e) {
                                                J$.Ex(12849, J$e);
                                            } finally {
                                                if (J$.Fr(12857))
                                                    continue jalangiLabel580;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 10753)), path, 0));
                                return J$.X1(10833, J$.Rt(10825, J$.R(10817, 'path', path, 0)));
                            } catch (J$e) {
                                J$.Ex(12865, J$e);
                            } finally {
                                if (J$.Fr(12873))
                                    continue jalangiLabel581;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 10841),
                visitMedia: J$.T(11209, function (mediaNode, visitArgs) {
                    jalangiLabel582:
                        while (true) {
                            try {
                                J$.Fe(11169, arguments.callee, this, arguments);
                                arguments = J$.N(11177, 'arguments', arguments, 4);
                                mediaNode = J$.N(11185, 'mediaNode', mediaNode, 4);
                                visitArgs = J$.N(11193, 'visitArgs', visitArgs, 4);
                                J$.N(11201, 'newAllExtends', newAllExtends, 0);
                                var newAllExtends = J$.X1(11049, J$.W(11041, 'newAllExtends', J$.M(11033, J$.G(10969, J$.R(10961, 'mediaNode', mediaNode, 0), 'allExtends', 0), 'concat', 0)(J$.G(11025, J$.G(10985, J$.R(10977, 'this', this, 0), 'allExtendsStack', 0), J$.B(1098, '-', J$.G(11009, J$.G(11001, J$.R(10993, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(11017, 1, 22, false), 0), 4)), newAllExtends, 1));
                                J$.X1(11121, newAllExtends = J$.W(11113, 'newAllExtends', J$.M(11105, J$.R(11057, 'newAllExtends', newAllExtends, 0), 'concat', 0)(J$.M(11097, J$.R(11065, 'this', this, 0), 'doExtendChaining', 0)(J$.R(11073, 'newAllExtends', newAllExtends, 0), J$.G(11089, J$.R(11081, 'mediaNode', mediaNode, 0), 'allExtends', 0))), newAllExtends, 0));
                                J$.X1(11161, J$.M(11153, J$.G(11137, J$.R(11129, 'this', this, 0), 'allExtendsStack', 0), 'push', 0)(J$.R(11145, 'newAllExtends', newAllExtends, 0)));
                            } catch (J$e) {
                                J$.Ex(12881, J$e);
                            } finally {
                                if (J$.Fr(12889))
                                    continue jalangiLabel582;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 11169),
                visitMediaOut: J$.T(11337, function (mediaNode) {
                    jalangiLabel583:
                        while (true) {
                            try {
                                J$.Fe(11305, arguments.callee, this, arguments);
                                arguments = J$.N(11313, 'arguments', arguments, 4);
                                mediaNode = J$.N(11321, 'mediaNode', mediaNode, 4);
                                J$.N(11329, 'lastIndex', lastIndex, 0);
                                var lastIndex = J$.X1(11257, J$.W(11249, 'lastIndex', J$.B(1106, '-', J$.G(11233, J$.G(11225, J$.R(11217, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(11241, 1, 22, false), 0), lastIndex, 1));
                                J$.X1(11297, J$.P(11289, J$.G(11273, J$.R(11265, 'this', this, 0), 'allExtendsStack', 0), 'length', J$.R(11281, 'lastIndex', lastIndex, 0), 0));
                            } catch (J$e) {
                                J$.Ex(12897, J$e);
                            } finally {
                                if (J$.Fr(12905))
                                    continue jalangiLabel583;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 11305),
                visitDirective: J$.T(11593, function (directiveNode, visitArgs) {
                    jalangiLabel584:
                        while (true) {
                            try {
                                J$.Fe(11553, arguments.callee, this, arguments);
                                arguments = J$.N(11561, 'arguments', arguments, 4);
                                directiveNode = J$.N(11569, 'directiveNode', directiveNode, 4);
                                visitArgs = J$.N(11577, 'visitArgs', visitArgs, 4);
                                J$.N(11585, 'newAllExtends', newAllExtends, 0);
                                var newAllExtends = J$.X1(11433, J$.W(11425, 'newAllExtends', J$.M(11417, J$.G(11353, J$.R(11345, 'directiveNode', directiveNode, 0), 'allExtends', 0), 'concat', 0)(J$.G(11409, J$.G(11369, J$.R(11361, 'this', this, 0), 'allExtendsStack', 0), J$.B(1114, '-', J$.G(11393, J$.G(11385, J$.R(11377, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(11401, 1, 22, false), 0), 4)), newAllExtends, 1));
                                J$.X1(11505, newAllExtends = J$.W(11497, 'newAllExtends', J$.M(11489, J$.R(11441, 'newAllExtends', newAllExtends, 0), 'concat', 0)(J$.M(11481, J$.R(11449, 'this', this, 0), 'doExtendChaining', 0)(J$.R(11457, 'newAllExtends', newAllExtends, 0), J$.G(11473, J$.R(11465, 'directiveNode', directiveNode, 0), 'allExtends', 0))), newAllExtends, 0));
                                J$.X1(11545, J$.M(11537, J$.G(11521, J$.R(11513, 'this', this, 0), 'allExtendsStack', 0), 'push', 0)(J$.R(11529, 'newAllExtends', newAllExtends, 0)));
                            } catch (J$e) {
                                J$.Ex(12913, J$e);
                            } finally {
                                if (J$.Fr(12921))
                                    continue jalangiLabel584;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 11553),
                visitDirectiveOut: J$.T(11721, function (directiveNode) {
                    jalangiLabel585:
                        while (true) {
                            try {
                                J$.Fe(11689, arguments.callee, this, arguments);
                                arguments = J$.N(11697, 'arguments', arguments, 4);
                                directiveNode = J$.N(11705, 'directiveNode', directiveNode, 4);
                                J$.N(11713, 'lastIndex', lastIndex, 0);
                                var lastIndex = J$.X1(11641, J$.W(11633, 'lastIndex', J$.B(1122, '-', J$.G(11617, J$.G(11609, J$.R(11601, 'this', this, 0), 'allExtendsStack', 0), 'length', 0), J$.T(11625, 1, 22, false), 0), lastIndex, 1));
                                J$.X1(11681, J$.P(11673, J$.G(11657, J$.R(11649, 'this', this, 0), 'allExtendsStack', 0), 'length', J$.R(11665, 'lastIndex', lastIndex, 0), 0));
                            } catch (J$e) {
                                J$.Ex(12929, J$e);
                            } finally {
                                if (J$.Fr(12937))
                                    continue jalangiLabel585;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 11689)
            }, 11, false), 0));
            J$.X1(11777, J$.P(11769, J$.R(11753, 'module', module, 2), 'exports', J$.R(11761, 'ProcessExtendsVisitor', ProcessExtendsVisitor, 1), 0));
        } catch (J$e) {
            J$.Ex(12945, J$e);
        } finally {
            if (J$.Sr(12953)) {
                J$.L();
                continue jalangiLabel586;
            } else {
                J$.L();
                break jalangiLabel586;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
