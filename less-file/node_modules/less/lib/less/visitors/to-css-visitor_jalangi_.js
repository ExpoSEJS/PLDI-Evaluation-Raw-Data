J$.iids = {"8":[11,13,11,30],"9":[1,20,1,27],"10":[11,13,11,30],"16":[16,17,16,62],"17":[1,28,1,32],"18":[14,25,14,45],"24":[16,17,16,90],"25":[1,20,1,33],"26":[14,47,14,50],"32":[16,17,16,90],"33":[1,20,1,33],"40":[14,25,14,45],"41":[1,20,1,33],"42":[14,47,14,50],"48":[23,13,23,49],"49":[2,26,2,38],"50":[16,66,16,90],"56":[23,13,23,49],"57":[2,26,2,45],"58":[23,13,23,26],"64":[31,13,31,49],"65":[2,26,2,45],"66":[23,30,23,49],"72":[31,13,31,49],"73":[2,26,2,45],"74":[31,13,31,26],"80":[37,13,37,61],"81":[3,12,3,19],"82":[31,30,31,49],"88":[37,13,37,61],"89":[3,20,3,29],"90":[34,16,34,40],"96":[44,17,44,89],"97":[3,12,3,30],"98":[37,13,37,32],"104":[44,17,44,89],"105":[3,42,3,49],"106":[37,36,37,61],"112":[43,13,43,37],"113":[3,50,3,61],"114":[40,16,40,44],"120":[51,13,51,44],"121":[3,42,3,62],"122":[43,13,43,37],"128":[59,13,59,34],"129":[3,12,3,30],"130":[44,39,44,89],"136":[62,13,62,38],"137":[3,12,3,30],"138":[65,13,65,30],"144":[65,13,65,71],"145":[3,42,3,62],"146":[65,34,65,71],"152":[65,13,65,71],"153":[3,42,3,62],"154":[120,20,120,42],"160":[82,13,82,61],"161":[5,5,5,9],"162":[120,47,120,66],"168":[82,13,82,61],"169":[5,25,5,32],"170":[120,70,120,101],"176":[93,13,93,82],"177":[5,33,5,37],"178":[132,13,132,47],"184":[93,13,93,82],"185":[5,21,5,38],"186":[141,13,141,46],"192":[105,13,105,42],"193":[5,5,5,38],"194":[144,52,144,113],"200":[111,13,111,62],"201":[5,5,5,39],"202":[144,52,144,123],"208":[111,13,111,62],"209":[6,5,6,9],"210":[155,13,155,19],"216":[120,47,120,101],"217":[6,21,6,28],"218":[158,25,158,41],"224":[120,20,120,102],"225":[6,5,6,28],"226":[158,43,158,46],"232":[124,17,124,46],"233":[6,5,6,29],"240":[132,13,132,47],"241":[4,23,7,2],"242":[158,43,158,46],"248":[138,13,138,45],"249":[4,23,7,2],"250":[160,27,160,56],"256":[143,21,143,44],"257":[4,23,7,2],"258":[160,60,160,78],"264":[142,17,142,29],"265":[4,23,7,2],"266":[167,17,167,46],"272":[141,13,141,46],"273":[4,23,7,2],"274":[169,30,169,59],"280":[155,13,155,19],"281":[4,23,7,2],"282":[169,30,169,79],"288":[160,17,160,56],"289":[8,1,8,16],"290":[174,34,174,53],"296":[160,17,160,78],"297":[11,13,11,22],"298":[176,30,176,94],"304":[164,31,164,92],"305":[11,26,11,30],"306":[186,13,186,30],"312":[160,17,160,78],"313":[12,20,12,25],"314":[189,29,189,44],"320":[171,31,171,92],"321":[12,20,12,25],"322":[194,21,194,34],"328":[167,17,167,46],"329":[12,13,12,26],"336":[174,17,174,53],"337":[14,22,14,23],"338":[194,21,194,34],"344":[178,31,178,92],"345":[14,22,14,23],"346":[197,17,197,20],"352":[174,17,174,53],"353":[14,22,14,23],"360":[158,25,158,41],"361":[14,25,14,26],"362":[197,17,197,20],"368":[188,62,188,71],"369":[14,29,14,38],"370":[199,17,199,32],"376":[191,21,191,39],"377":[14,29,14,45],"378":[217,13,217,34],"384":[191,21,191,39],"386":[226,21,226,62],"392":[189,29,189,44],"393":[14,47,14,48],"394":[229,29,229,41],"400":[199,17,199,32],"401":[14,47,14,50],"402":[229,43,229,46],"408":[186,13,186,30],"416":[209,13,209,30],"417":[15,20,15,29],"418":[229,43,229,46],"424":[213,13,213,53],"425":[15,30,15,31],"426":[239,13,239,19],"432":[217,13,217,34],"433":[15,20,15,32],"434":[243,18,243,34],"440":[226,21,226,62],"441":[15,20,15,32],"442":[243,36,243,42],"448":[230,25,230,63],"449":[15,13,15,33],"450":[243,44,243,47],"456":[230,25,230,63],"457":[16,17,16,21],"464":[229,29,229,41],"465":[16,17,16,30],"466":[243,44,243,47],"472":[223,13,223,30],"473":[16,34,16,38],"474":[245,17,245,42],"480":[239,13,239,19],"481":[16,48,16,52],"482":[246,21,246,42],"488":[250,25,250,54],"489":[16,48,16,61],"490":[250,25,250,54],"496":[254,25,254,57],"497":[16,34,16,62],"498":[254,55,254,57],"499":[16,34,16,47],"504":[246,21,246,42],"505":[16,67,16,71],"506":[254,25,254,57],"512":[245,17,245,42],"513":[16,67,16,90],"514":[264,13,264,19],"515":[16,67,16,88],"520":[243,36,243,42],"521":[17,24,17,28],"522":[268,25,268,41],"528":[264,13,264,19],"529":[17,24,17,28],"530":[268,43,268,46],"536":[270,17,270,56],"537":[17,17,17,29],"544":[273,21,273,35],"545":[20,16,20,21],"546":[268,43,268,46],"552":[275,21,275,33],"553":[20,16,20,21],"554":[270,17,270,42],"560":[270,17,270,56],"561":[20,9,20,22],"562":[275,21,275,33],"568":[268,25,268,41],"569":[9,36,21,6],"570":[278,34,278,37],"576":[301,29,301,55],"577":[9,36,21,6],"584":[300,25,300,40],"585":[9,36,21,6],"586":[278,34,278,37],"592":[295,17,295,33],"593":[9,36,21,6],"594":[295,17,295,33],"600":[314,13,314,45],"601":[9,36,21,6],"602":[300,25,300,40],"609":[9,36,21,6],"610":[301,29,301,55],"617":[23,13,23,18],"625":[23,22,23,26],"633":[23,30,23,35],"641":[23,30,23,41],"649":[23,45,23,49],"657":[24,13,24,20],"665":[24,13,24,20],"673":[26,9,26,14],"681":[26,23,26,28],"689":[26,23,26,34],"697":[27,20,27,25],"705":[27,20,27,37],"707":[27,20,27,35],"713":[27,20,27,37],"721":[27,13,27,38],"729":[26,42,28,10],"737":[26,42,28,10],"745":[26,42,28,10],"753":[26,42,28,10],"761":[26,23,28,11],"763":[26,23,26,41],"769":[26,9,28,11],"777":[26,9,28,12],"785":[22,28,29,6],"793":[22,28,29,6],"801":[22,28,29,6],"809":[22,28,29,6],"817":[31,13,31,18],"825":[31,22,31,26],"833":[31,30,31,35],"841":[31,30,31,41],"849":[31,45,31,49],"857":[32,20,32,24],"865":[32,20,32,24],"873":[32,13,32,25],"881":[34,16,34,21],"889":[34,16,34,27],"897":[34,16,34,34],"905":[34,39,34,40],"913":[34,16,34,40],"921":[34,9,34,41],"929":[30,14,35,6],"937":[30,14,35,6],"945":[30,14,35,6],"953":[30,14,35,6],"961":[37,13,37,24],"969":[37,28,37,32],"977":[37,36,37,47],"985":[37,36,37,53],"993":[37,57,37,61],"1001":[38,20,38,25],"1009":[38,20,38,25],"1017":[38,13,38,26],"1025":[40,16,40,27],"1033":[40,16,40,33],"1041":[40,16,40,40],"1049":[40,43,40,44],"1057":[40,16,40,44],"1065":[40,9,40,45],"1073":[36,25,41,6],"1081":[36,25,41,6],"1089":[36,25,41,6],"1097":[36,25,41,6],"1105":[43,14,43,18],"1113":[43,14,43,37],"1115":[43,14,43,35],"1121":[44,17,44,21],"1129":[44,30,44,34],"1137":[44,17,44,35],"1139":[44,17,44,29],"1145":[44,40,44,44],"1153":[44,75,44,88],"1161":[44,40,44,89],"1163":[44,40,44,74],"1169":[45,17,45,24],"1177":[45,17,45,24],"1185":[47,20,47,24],"1193":[47,20,47,24],"1201":[47,13,47,25],"1209":[49,33,49,37],"1217":[49,33,49,43],"1225":[49,44,49,45],"1233":[49,33,49,46],"1241":[49,33,49,46],"1249":[49,33,49,46],"1257":[50,9,50,13],"1265":[50,36,50,53],"1273":[50,9,50,54],"1275":[50,9,50,35],"1281":[50,9,50,55],"1289":[51,13,51,17],"1297":[51,26,51,43],"1305":[51,13,51,44],"1307":[51,13,51,25],"1313":[52,13,52,20],"1321":[52,13,52,20],"1329":[54,9,54,13],"1337":[54,9,54,32],"1339":[54,9,54,30],"1345":[54,9,54,33],"1353":[55,9,55,13],"1361":[55,9,55,37],"1363":[55,9,55,35],"1369":[55,9,55,38],"1377":[56,16,56,20],"1385":[56,16,56,20],"1393":[56,9,56,21],"1401":[42,24,57,6],"1409":[42,24,57,6],"1417":[42,24,57,6],"1425":[42,24,57,6],"1433":[42,24,57,6],"1441":[42,24,57,6],"1449":[59,13,59,24],"1457":[59,13,59,34],"1465":[60,20,60,24],"1473":[60,20,60,24],"1481":[60,13,60,25],"1489":[62,13,62,17],"1497":[62,26,62,37],"1505":[62,13,62,38],"1507":[62,13,62,25],"1513":[63,20,63,25],"1521":[63,20,63,25],"1529":[63,13,63,26],"1537":[65,14,65,25],"1545":[65,14,65,30],"1553":[65,35,65,39],"1561":[65,59,65,70],"1569":[65,35,65,71],"1571":[65,35,65,58],"1577":[66,20,66,25],"1585":[66,20,66,25],"1593":[66,13,66,26],"1601":[68,16,68,20],"1609":[68,16,68,20],"1617":[68,9,68,21],"1625":[58,23,69,6],"1633":[58,23,69,6],"1641":[58,23,69,6],"1649":[58,23,69,6],"1657":[8,29,70,2],"1665":[8,1,70,2],"1673":[8,1,70,3],"1681":[72,5,72,9],"1689":[72,25,72,32],"1697":[72,33,72,37],"1705":[72,21,72,38],"1713":[72,5,72,38],"1721":[72,5,72,39],"1729":[73,5,73,9],"1737":[73,21,73,28],"1745":[73,5,73,28],"1753":[73,5,73,29],"1761":[74,5,74,9],"1769":[74,22,74,37],"1777":[74,38,74,45],"1785":[74,18,74,46],"1793":[74,5,74,46],"1801":[74,5,74,47],"1809":[71,20,75,2],"1817":[71,20,75,2],"1825":[71,20,75,2],"1833":[71,20,75,2],"1841":[71,20,75,2],"1849":[71,20,75,2],"1857":[76,1,76,13],"1865":[77,18,77,22],"1873":[79,16,79,20],"1881":[79,16,79,29],"1889":[79,36,79,40],"1897":[79,16,79,41],"1899":[79,16,79,35],"1905":[79,16,79,41],"1913":[79,9,79,42],"1921":[78,10,80,6],"1929":[78,10,80,6],"1937":[78,10,80,6],"1945":[78,10,80,6],"1953":[82,13,82,21],"1961":[82,13,82,40],"1963":[82,13,82,38],"1969":[82,44,82,52],"1977":[82,44,82,61],"1985":[83,13,83,20],"1993":[83,13,83,20],"2001":[85,16,85,24],"2009":[85,16,85,24],"2017":[85,9,85,25],"2025":[81,16,86,6],"2033":[81,16,86,6],"2041":[81,16,86,6],"2049":[81,16,86,6],"2057":[81,16,86,6],"2065":[88,9,88,18],"2073":[88,28,88,30],"2081":[88,9,88,30],"2089":[88,9,88,31],"2097":[87,27,89,6],"2105":[87,27,89,6],"2113":[87,27,89,6],"2121":[87,27,89,6],"2129":[87,27,89,6],"2137":[90,18,91,6],"2145":[90,18,91,6],"2153":[90,18,91,6],"2161":[90,18,91,6],"2169":[90,18,91,6],"2177":[93,13,93,24],"2185":[93,13,93,43],"2187":[93,13,93,41],"2193":[93,47,93,58],"2201":[93,68,93,72],"2209":[93,68,93,81],"2217":[93,47,93,82],"2219":[93,47,93,67],"2225":[94,13,94,20],"2233":[94,13,94,20],"2241":[96,16,96,27],"2249":[96,16,96,27],"2257":[96,9,96,28],"2265":[92,19,97,6],"2273":[92,19,97,6],"2281":[92,19,97,6],"2289":[92,19,97,6],"2297":[92,19,97,6],"2305":[99,29,99,38],"2313":[99,29,99,44],"2321":[99,45,99,46],"2329":[99,29,99,47],"2337":[99,29,99,53],"2345":[99,29,99,53],"2353":[99,29,99,53],"2361":[100,9,100,18],"2369":[100,26,100,30],"2377":[100,26,100,39],"2385":[100,9,100,40],"2387":[100,9,100,25],"2393":[100,9,100,41],"2401":[101,9,101,18],"2409":[101,33,101,38],"2417":[101,9,101,38],"2425":[101,9,101,39],"2433":[102,16,102,20],"2441":[102,16,102,26],"2449":[102,45,102,54],"2457":[102,56,102,69],"2465":[102,16,102,70],"2467":[102,16,102,44],"2473":[102,16,102,70],"2481":[102,9,102,71],"2489":[98,17,103,6],"2497":[98,17,103,6],"2505":[98,17,103,6],"2513":[98,17,103,6],"2521":[98,17,103,6],"2529":[98,17,103,6],"2537":[105,13,105,23],"2545":[105,13,105,42],"2547":[105,13,105,40],"2553":[106,13,106,20],"2561":[106,13,106,20],"2569":[108,16,108,26],"2577":[108,16,108,26],"2585":[108,9,108,27],"2593":[104,18,109,6],"2601":[104,18,109,6],"2609":[104,18,109,6],"2617":[104,18,109,6],"2625":[104,18,109,6],"2633":[111,13,111,26],"2641":[111,13,111,32],"2649":[111,36,111,49],"2657":[111,36,111,55],"2665":[111,36,111,62],"2673":[112,20,112,24],"2681":[112,48,112,61],"2689":[112,63,112,72],"2697":[112,20,112,73],"2699":[112,20,112,47],"2705":[112,20,112,73],"2713":[112,13,112,74],"2721":[114,20,114,24],"2729":[114,51,114,64],"2737":[114,66,114,75],"2745":[114,20,114,76],"2747":[114,20,114,50],"2753":[114,20,114,76],"2761":[114,13,114,77],"2769":[110,21,116,6],"2777":[110,21,116,6],"2785":[110,21,116,6],"2793":[110,21,116,6],"2801":[110,21,116,6],"2809":[119,29,119,42],"2817":[119,29,119,48],"2825":[119,29,119,48],"2833":[119,29,119,48],"2841":[120,20,120,29],"2849":[120,20,120,36],"2857":[120,41,120,42],"2865":[120,48,120,57],"2873":[120,58,120,59],"2881":[120,48,120,60],"2889":[120,48,120,66],"2897":[120,70,120,79],"2905":[120,80,120,81],"2913":[120,70,120,82],"2921":[120,70,120,88],"2929":[120,70,120,95],"2937":[120,100,120,101],"2945":[120,20,120,102],"2953":[120,13,120,103],"2961":[118,9,121,10],"2969":[118,9,121,10],"2977":[118,9,121,10],"2985":[118,9,121,10],"2993":[123,29,123,42],"3001":[123,29,123,48],"3009":[123,29,123,48],"3017":[123,29,123,48],"3025":[124,17,124,31],"3033":[124,32,124,45],"3041":[124,17,124,46],"3049":[125,24,125,33],"3057":[125,34,125,35],"3065":[125,24,125,36],"3073":[125,24,125,42],"3081":[125,24,125,42],"3089":[125,17,125,43],"3097":[127,20,127,29],"3105":[127,20,127,29],"3113":[127,13,127,30],"3121":[122,9,128,10],"3129":[122,9,128,10],"3137":[122,9,128,10],"3145":[122,9,128,10],"3153":[129,29,129,41],"3161":[129,42,129,55],"3169":[129,29,129,56],"3177":[129,29,129,56],"3185":[129,29,129,56],"3193":[130,9,130,22],"3201":[130,30,130,34],"3209":[130,30,130,43],"3217":[130,9,130,44],"3219":[130,9,130,29],"3225":[130,9,130,45],"3233":[131,9,131,18],"3241":[131,33,131,38],"3249":[131,9,131,38],"3257":[131,9,131,39],"3265":[132,14,132,18],"3273":[132,14,132,24],"3281":[132,33,132,46],"3289":[132,14,132,47],"3291":[132,14,132,32],"3297":[133,13,133,17],"3305":[133,30,133,43],"3313":[133,30,133,49],"3321":[133,50,133,51],"3329":[133,30,133,52],"3337":[133,30,133,58],"3345":[133,13,133,59],"3347":[133,13,133,29],"3353":[133,13,133,60],"3361":[135,16,135,20],"3369":[135,16,135,26],"3377":[135,45,135,58],"3385":[135,60,135,73],"3393":[135,16,135,74],"3395":[135,16,135,44],"3401":[135,16,135,74],"3409":[135,9,135,75],"3417":[117,29,136,6],"3425":[117,29,136,6],"3433":[117,29,136,6],"3441":[117,29,136,6],"3449":[118,9,121,10],"3457":[117,29,136,6],"3465":[122,9,128,10],"3473":[117,29,136,6],"3481":[117,29,136,6],"3489":[117,29,136,6],"3497":[138,13,138,26],"3505":[138,13,138,45],"3507":[138,13,138,43],"3513":[139,13,139,20],"3521":[139,13,139,20],"3529":[141,13,141,26],"3537":[141,13,141,31],"3545":[141,36,141,46],"3553":[142,17,142,21],"3561":[142,17,142,29],"3569":[143,21,143,34],"3577":[143,21,143,44],"3585":[144,39,144,43],"3593":[144,52,144,57],"3601":[144,60,144,73],"3609":[144,80,144,84],"3617":[144,80,144,93],"3625":[144,60,144,94],"3627":[144,60,144,79],"3633":[144,103,144,108],"3641":[144,110,144,112],"3649":[144,60,144,113],"3651":[144,60,144,102],"3657":[144,116,144,123],"3665":[144,35,144,124],"3667":[144,39,144,51],"3673":[144,35,144,124],"3681":[144,35,144,124],"3689":[145,21,145,28],"3697":[145,41,145,54],"3705":[145,41,145,64],"3713":[145,21,145,64],"3721":[145,21,145,65],"3729":[146,28,146,32],"3737":[146,28,146,41],"3745":[146,48,146,55],"3753":[146,28,146,56],"3755":[146,28,146,47],"3761":[146,28,146,56],"3769":[146,21,146,57],"3777":[148,17,148,24],"3785":[148,17,148,24],"3793":[150,13,150,17],"3801":[150,28,150,32],"3809":[150,13,150,32],"3817":[150,13,150,33],"3825":[152,16,152,29],"3833":[152,16,152,29],"3841":[152,9,152,30],"3849":[137,32,153,6],"3857":[137,32,153,6],"3865":[137,32,153,6],"3873":[137,32,153,6],"3881":[137,32,153,6],"3889":[137,32,153,6],"3897":[155,14,155,19],"3905":[156,13,156,20],"3913":[156,13,156,20],"3921":[158,22,158,23],"3929":[158,22,158,23],"3937":[158,22,158,23],"3945":[158,25,158,26],"3953":[158,29,158,34],"3961":[158,29,158,41],"3977":[158,43,158,44],"3985":[158,43,158,46],"4001":[159,28,159,33],"4009":[159,34,159,35],"4017":[159,28,159,36],"4025":[159,28,159,36],"4033":[159,28,159,36],"4041":[160,17,160,23],"4049":[160,27,160,35],"4057":[160,47,160,51],"4065":[160,47,160,56],"4073":[160,61,160,69],"4081":[160,61,160,78],"4089":[162,30,162,101],"4097":[163,28,163,36],"4105":[163,28,163,42],"4113":[164,31,164,39],"4121":[164,31,164,55],"4129":[164,59,164,67],"4137":[164,59,164,83],"4145":[164,59,164,92],"4153":[161,23,165,18],"4161":[161,23,165,18],"4169":[161,17,165,19],"4177":[167,17,167,25],"4185":[167,37,167,41],"4193":[167,37,167,46],"4201":[169,30,169,43],"4209":[169,46,169,54],"4217":[169,46,169,59],"4225":[169,62,169,79],"4233":[170,28,170,36],"4241":[170,28,170,42],"4249":[171,31,171,39],"4257":[171,31,171,55],"4265":[171,59,171,67],"4273":[171,59,171,83],"4281":[171,59,171,92],"4289":[168,23,172,18],"4297":[168,23,172,18],"4305":[168,17,172,19],"4313":[174,17,174,25],"4321":[174,17,174,30],"4329":[174,35,174,43],"4337":[174,35,174,53],"4345":[176,30,176,38],"4353":[176,30,176,43],"4361":[176,46,176,94],"4369":[177,28,177,36],"4377":[177,28,177,42],"4385":[178,31,178,39],"4393":[178,31,178,55],"4401":[178,59,178,67],"4409":[178,59,178,83],"4417":[178,59,178,92],"4425":[175,23,179,18],"4433":[175,23,179,18],"4441":[175,17,179,19],"4449":[154,22,182,6],"4457":[154,22,182,6],"4465":[154,22,182,6],"4473":[154,22,182,6],"4481":[154,22,182,6],"4489":[154,22,182,6],"4497":[154,22,182,6],"4505":[184,30,184,32],"4513":[184,30,184,32],"4521":[184,30,184,32],"4529":[185,9,185,13],"4537":[185,30,185,41],"4545":[185,30,185,47],"4553":[185,49,185,60],"4561":[185,49,185,70],"4569":[185,9,185,71],"4571":[185,9,185,29],"4577":[185,9,185,72],"4585":[186,14,186,25],"4593":[186,14,186,30],"4601":[187,13,187,17],"4609":[187,39,187,50],"4617":[187,13,187,51],"4619":[187,13,187,38],"4625":[187,13,187,52],"4633":[188,29,188,40],"4641":[188,29,188,46],"4649":[188,62,188,71],"4657":[188,74,188,83],"4665":[188,74,188,90],"4673":[188,93,188,94],"4681":[188,29,188,46],"4689":[188,29,188,46],"4697":[188,62,188,94],"4705":[188,62,188,94],"4713":[189,26,189,27],"4721":[189,26,189,27],"4729":[189,26,189,27],"4737":[189,29,189,30],"4745":[189,33,189,44],"4753":[190,24,190,33],"4761":[190,34,190,35],"4769":[190,24,190,36],"4777":[190,24,190,36],"4785":[190,17,190,37],"4793":[191,21,191,25],"4801":[191,29,191,33],"4809":[191,29,191,39],"4817":[192,21,192,29],"4825":[192,35,192,39],"4833":[192,35,192,48],"4841":[192,55,192,59],"4849":[192,35,192,60],"4851":[192,35,192,54],"4857":[192,21,192,61],"4859":[192,21,192,34],"4865":[192,21,192,62],"4873":[193,21,193,30],"4881":[193,38,193,39],"4889":[193,41,193,42],"4897":[193,21,193,43],"4899":[193,21,193,37],"4905":[193,21,193,44],"4921":[194,21,194,32],"4929":[194,21,194,34],"4945":[194,21,194,35],"4961":[197,17,197,18],"4969":[197,17,197,20],"4985":[197,17,197,21],"4993":[199,17,199,28],"5001":[199,31,199,32],"5009":[200,17,200,28],"5017":[200,36,200,40],"5025":[200,36,200,49],"5033":[200,17,200,50],"5035":[200,17,200,35],"5041":[200,17,200,51],"5049":[202,17,202,28],"5057":[202,37,202,41],"5065":[202,17,202,41],"5073":[202,17,202,42],"5081":[204,13,204,22],"5089":[204,37,204,42],"5097":[204,13,204,42],"5105":[204,13,204,43],"5113":[206,13,206,24],"5121":[206,32,206,36],"5129":[206,32,206,45],"5137":[206,13,206,46],"5139":[206,13,206,31],"5145":[206,13,206,47],"5153":[207,13,207,22],"5161":[207,37,207,42],"5169":[207,13,207,42],"5177":[207,13,207,43],"5185":[209,13,209,24],"5193":[209,13,209,30],"5201":[210,13,210,17],"5209":[210,30,210,41],"5217":[210,30,210,47],"5225":[210,13,210,48],"5227":[210,13,210,29],"5233":[210,13,210,49],"5241":[211,13,211,17],"5249":[211,40,211,51],"5257":[211,40,211,57],"5265":[211,13,211,58],"5267":[211,13,211,39],"5273":[211,13,211,59],"5281":[213,13,213,17],"5289":[213,13,213,23],"5297":[213,41,213,52],"5305":[213,13,213,53],"5307":[213,13,213,40],"5313":[214,13,214,24],"5321":[214,13,214,43],"5323":[214,13,214,41],"5329":[214,13,214,44],"5337":[215,13,215,21],"5345":[215,29,215,30],"5353":[215,32,215,33],"5361":[215,35,215,46],"5369":[215,13,215,47],"5371":[215,13,215,28],"5377":[215,13,215,48],"5385":[217,13,217,21],"5393":[217,13,217,28],"5401":[217,33,217,34],"5409":[218,20,218,28],"5417":[218,29,218,30],"5425":[218,20,218,31],"5433":[218,20,218,31],"5441":[218,13,218,32],"5449":[220,16,220,24],"5457":[220,16,220,24],"5465":[220,9,220,25],"5473":[183,19,221,6],"5481":[183,19,221,6],"5489":[183,19,221,6],"5497":[183,19,221,6],"5505":[183,19,221,6],"5513":[183,19,221,6],"5521":[183,19,221,6],"5529":[183,19,221,6],"5537":[183,19,221,6],"5545":[183,19,221,6],"5553":[223,13,223,24],"5561":[223,13,223,30],"5569":[224,13,224,24],"5577":[224,33,224,44],"5585":[224,33,224,50],"5593":[226,21,226,22],"5601":[226,23,226,24],"5609":[226,21,226,25],"5617":[226,21,226,34],"5625":[226,35,226,36],"5633":[226,21,226,37],"5641":[226,21,226,48],"5649":[226,21,226,54],"5657":[226,59,226,62],"5665":[227,21,227,22],"5673":[227,23,227,24],"5681":[227,21,227,25],"5689":[227,21,227,34],"5697":[227,35,227,36],"5705":[227,21,227,37],"5713":[227,55,227,59],"5721":[227,71,227,73],"5729":[227,51,227,74],"5731":[227,55,227,70],"5737":[227,21,227,74],"5745":[227,21,227,75],"5753":[229,26,229,27],"5761":[229,26,229,27],"5769":[229,29,229,30],"5777":[229,33,229,34],"5785":[229,33,229,41],"5801":[229,43,229,44],"5809":[229,43,229,46],"5825":[230,25,230,26],"5833":[230,27,230,28],"5841":[230,25,230,29],"5849":[230,25,230,41],"5851":[230,25,230,39],"5857":[230,45,230,46],"5865":[230,47,230,48],"5873":[230,45,230,49],"5881":[230,45,230,63],"5883":[230,45,230,61],"5889":[231,32,231,36],"5897":[231,32,231,36],"5905":[231,25,231,37],"5913":[234,24,234,29],"5921":[234,24,234,29],"5929":[234,17,234,30],"5937":[224,58,235,14],"5945":[224,58,235,14],"5953":[224,58,235,14],"5961":[224,58,235,14],"5969":[224,58,235,14],"5977":[224,33,235,15],"5979":[224,33,224,57],"5985":[224,13,235,15],"5993":[224,13,235,16],"6001":[222,27,237,6],"6009":[222,27,237,6],"6017":[222,27,237,6],"6025":[222,27,237,6],"6033":[239,14,239,19],"6041":[240,13,240,20],"6049":[240,13,240,20],"6057":[242,25,242,27],"6065":[242,25,242,27],"6073":[242,25,242,27],"6081":[243,18,243,23],"6089":[243,18,243,30],"6097":[243,33,243,34],"6105":[243,18,243,34],"6113":[243,36,243,37],"6121":[243,41,243,42],"6137":[243,44,243,45],"6145":[243,44,243,47],"6161":[244,20,244,25],"6169":[244,26,244,27],"6177":[244,20,244,28],"6185":[244,20,244,28],"6193":[244,13,244,29],"6201":[245,17,245,21],"6209":[245,33,245,37],"6217":[245,33,245,42],"6225":[246,22,246,31],"6233":[246,32,246,36],"6241":[246,32,246,41],"6249":[246,22,246,42],"6257":[247,21,247,30],"6265":[247,31,247,35],"6273":[247,31,247,40],"6281":[247,44,247,48],"6289":[247,21,247,48],"6297":[247,21,247,49],"6305":[249,32,249,41],"6313":[249,42,249,46],"6321":[249,42,249,51],"6329":[249,32,249,52],"6337":[249,32,249,52],"6345":[249,21,249,53],"6353":[250,25,250,33],"6361":[250,45,250,49],"6369":[250,45,250,54],"6377":[251,36,251,45],"6385":[251,46,251,50],"6393":[251,46,251,55],"6401":[251,60,251,69],"6409":[251,70,251,74],"6417":[251,70,251,79],"6425":[251,60,251,80],"6433":[251,87,251,91],"6441":[251,87,251,100],"6449":[251,60,251,101],"6451":[251,60,251,86],"6457":[251,59,251,102],"6465":[251,36,251,102],"6473":[251,36,251,102],"6481":[251,25,251,103],"6489":[253,35,253,39],"6497":[253,46,253,50],"6505":[253,46,253,59],"6513":[253,35,253,60],"6515":[253,35,253,45],"6521":[253,35,253,60],"6529":[253,35,253,60],"6537":[254,25,254,33],"6545":[254,42,254,49],"6553":[254,25,254,50],"6555":[254,25,254,41],"6561":[254,56,254,57],"6569":[255,25,255,30],"6577":[255,38,255,39],"6585":[255,41,255,42],"6593":[255,25,255,43],"6595":[255,25,255,37],"6601":[255,25,255,44],"6609":[257,25,257,33],"6617":[257,39,257,46],"6625":[257,25,257,47],"6627":[257,25,257,38],"6633":[257,25,257,48],"6641":[238,28,262,6],"6649":[238,28,262,6],"6657":[238,28,262,6],"6665":[238,28,262,6],"6673":[238,28,262,6],"6681":[238,28,262,6],"6689":[238,28,262,6],"6697":[238,28,262,6],"6705":[238,28,262,6],"6713":[264,14,264,19],"6721":[265,13,265,20],"6729":[265,13,265,20],"6737":[267,22,267,24],"6745":[267,22,267,24],"6753":[267,22,267,24],"6761":[268,22,268,23],"6769":[268,22,268,23],"6777":[268,22,268,23],"6785":[268,25,268,26],"6793":[268,29,268,34],"6801":[268,29,268,41],"6817":[268,43,268,44],"6825":[268,43,268,46],"6841":[269,20,269,25],"6849":[269,26,269,27],"6857":[269,20,269,28],"6865":[269,20,269,28],"6873":[269,13,269,29],"6881":[270,17,270,21],"6889":[270,33,270,37],"6897":[270,33,270,42],"6905":[270,46,270,50],"6913":[270,46,270,56],"6921":[272,21,272,25],"6929":[272,21,272,30],"6937":[273,21,273,25],"6945":[273,21,273,35],"6953":[273,38,273,41],"6961":[273,44,273,46],"6969":[271,23,274,18],"6977":[274,24,274,27],"6985":[271,23,274,28],"6987":[271,23,274,23],"6993":[271,23,274,28],"7001":[271,17,274,29],"7009":[275,22,275,28],"7017":[275,29,275,32],"7025":[275,22,275,33],"7033":[276,21,276,27],"7041":[276,28,276,31],"7049":[276,35,276,37],"7057":[276,21,276,37],"7065":[276,21,276,38],"7073":[278,21,278,26],"7089":[278,34,278,35],"7097":[278,34,278,37],"7113":[278,39,278,40],"7121":[278,21,278,41],"7123":[278,21,278,33],"7129":[278,21,278,42],"7137":[280,17,280,23],"7145":[280,24,280,27],"7153":[280,17,280,28],"7161":[280,34,280,38],"7169":[280,17,280,39],"7171":[280,17,280,33],"7177":[280,17,280,40],"7185":[283,9,283,15],"7193":[283,21,283,27],"7201":[283,9,283,28],"7203":[283,9,283,20],"7209":[285,28,285,32],"7217":[285,44,285,50],"7225":[286,28,286,29],"7233":[286,28,286,35],"7241":[286,28,286,35],"7249":[286,21,286,36],"7257":[285,55,287,18],"7265":[285,55,287,18],"7273":[285,55,287,18],"7281":[285,55,287,18],"7289":[285,44,287,19],"7291":[285,44,285,54],"7297":[285,24,287,20],"7299":[285,28,285,43],"7305":[285,24,287,20],"7313":[285,17,287,21],"7321":[284,13,288,14],"7329":[284,13,288,14],"7337":[284,13,288,14],"7345":[290,28,290,32],"7353":[290,39,290,45],"7361":[291,28,291,29],"7369":[291,28,291,29],"7377":[291,21,291,30],"7385":[290,50,292,18],"7393":[290,50,292,18],"7401":[290,50,292,18],"7409":[290,50,292,18],"7417":[290,39,292,19],"7419":[290,39,290,49],"7425":[290,24,292,20],"7427":[290,28,290,38],"7433":[290,24,292,20],"7441":[290,17,292,21],"7449":[289,13,293,14],"7457":[289,13,293,14],"7465":[289,13,293,14],"7473":[294,21,294,27],"7481":[294,28,294,29],"7489":[294,21,294,30],"7497":[294,21,294,30],"7505":[294,13,294,31],"7513":[295,17,295,22],"7521":[295,17,295,29],"7529":[295,32,295,33],"7537":[296,24,296,29],"7545":[296,30,296,31],"7553":[296,24,296,32],"7561":[296,24,296,32],"7569":[296,17,296,33],"7577":[297,36,297,38],"7585":[297,36,297,38],"7593":[297,36,297,38],"7601":[298,39,298,41],"7609":[298,39,298,41],"7617":[298,39,298,41],"7625":[299,17,299,22],"7633":[300,25,300,26],"7641":[300,25,300,32],"7649":[300,37,300,40],"7657":[301,29,301,44],"7665":[301,29,301,51],"7673":[301,54,301,55],"7681":[302,29,302,41],"7689":[302,47,302,59],"7697":[302,60,302,75],"7705":[302,47,302,76],"7713":[302,29,302,77],"7715":[302,29,302,46],"7721":[302,29,302,78],"7729":[304,43,304,45],"7737":[304,43,304,45],"7745":[304,25,304,46],"7753":[306,21,306,36],"7761":[306,42,306,43],"7769":[306,21,306,44],"7771":[306,21,306,41],"7777":[306,21,306,45],"7785":[299,27,307,18],"7793":[299,27,307,18],"7801":[299,27,307,18],"7809":[299,27,307,18],"7817":[299,17,307,19],"7819":[299,17,299,26],"7825":[299,17,307,20],"7833":[308,17,308,29],"7841":[308,35,308,47],"7849":[308,48,308,63],"7857":[308,35,308,64],"7865":[308,17,308,65],"7867":[308,17,308,34],"7873":[308,17,308,66],"7881":[309,17,309,21],"7889":[309,30,309,37],"7897":[309,38,309,50],"7905":[309,30,309,51],"7913":[309,17,309,51],"7921":[309,17,309,52],"7929":[283,33,311,10],"7937":[283,33,311,10],"7945":[283,33,311,10],"7953":[284,13,288,14],"7961":[283,33,311,10],"7969":[289,13,293,14],"7977":[283,33,311,10],"7985":[283,33,311,10],"7993":[283,33,311,10],"8001":[283,33,311,10],"8009":[283,9,311,11],"8011":[283,9,283,32],"8017":[283,9,311,12],"8025":[263,18,312,6],"8033":[263,18,312,6],"8041":[263,18,312,6],"8049":[263,18,312,6],"8057":[263,18,312,6],"8065":[263,18,312,6],"8073":[263,18,312,6],"8081":[263,18,312,6],"8089":[263,18,312,6],"8097":[314,13,314,26],"8105":[314,13,314,45],"8107":[314,13,314,43],"8113":[315,13,315,20],"8121":[315,13,315,20],"8129":[317,9,317,22],"8137":[317,30,317,34],"8145":[317,30,317,43],"8153":[317,9,317,44],"8155":[317,9,317,29],"8161":[317,9,317,45],"8169":[318,16,318,29],"8177":[318,16,318,29],"8185":[318,9,318,30],"8193":[313,21,319,6],"8201":[313,21,319,6],"8209":[313,21,319,6],"8217":[313,21,319,6],"8225":[313,21,319,6],"8233":[76,26,320,2],"8241":[76,1,320,2],"8249":[76,1,320,3],"8257":[321,1,321,7],"8265":[321,18,321,30],"8273":[321,1,321,30],"8281":[321,1,321,31],"8289":[1,1,321,31],"8297":[1,1,321,31],"8305":[1,1,321,31],"8313":[1,1,321,31],"8321":[1,1,321,31],"8329":[1,1,321,31],"8337":[1,1,321,31],"8345":[4,23,7,2],"8353":[4,23,7,2],"8361":[11,9,13,10],"8369":[16,13,18,14],"8377":[14,9,19,10],"8385":[14,9,19,10],"8393":[9,36,21,6],"8401":[9,36,21,6],"8409":[23,9,25,10],"8417":[26,42,28,10],"8425":[26,42,28,10],"8433":[22,28,29,6],"8441":[22,28,29,6],"8449":[31,9,33,10],"8457":[30,14,35,6],"8465":[30,14,35,6],"8473":[37,9,39,10],"8481":[36,25,41,6],"8489":[36,25,41,6],"8497":[44,13,46,14],"8505":[43,9,48,10],"8513":[51,9,53,10],"8521":[42,24,57,6],"8529":[42,24,57,6],"8537":[59,9,61,10],"8545":[62,9,64,10],"8553":[65,9,67,10],"8561":[58,23,69,6],"8569":[58,23,69,6],"8577":[71,20,75,2],"8585":[71,20,75,2],"8593":[78,10,80,6],"8601":[78,10,80,6],"8609":[82,9,84,10],"8617":[81,16,86,6],"8625":[81,16,86,6],"8633":[87,27,89,6],"8641":[87,27,89,6],"8649":[90,18,91,6],"8657":[90,18,91,6],"8665":[93,9,95,10],"8673":[92,19,97,6],"8681":[92,19,97,6],"8689":[98,17,103,6],"8697":[98,17,103,6],"8705":[105,9,107,10],"8713":[104,18,109,6],"8721":[104,18,109,6],"8729":[111,9,115,10],"8737":[110,21,116,6],"8745":[110,21,116,6],"8753":[118,9,121,10],"8761":[118,9,121,10],"8769":[124,13,126,14],"8777":[122,9,128,10],"8785":[122,9,128,10],"8793":[132,9,134,10],"8801":[117,29,136,6],"8809":[117,29,136,6],"8817":[138,9,140,10],"8825":[143,17,147,18],"8833":[142,13,149,14],"8841":[141,9,151,10],"8849":[137,32,153,6],"8857":[137,32,153,6],"8865":[155,9,157,10],"8873":[160,13,166,14],"8881":[167,13,173,14],"8889":[174,13,180,14],"8897":[158,9,181,10],"8905":[158,9,181,10],"8913":[154,22,182,6],"8921":[154,22,182,6],"8929":[188,62,188,94],"8937":[191,17,196,18],"8945":[189,13,198,14],"8953":[199,13,203,14],"8961":[186,9,208,10],"8969":[209,9,212,10],"8977":[213,9,216,10],"8985":[217,9,219,10],"8993":[183,19,221,6],"9001":[183,19,221,6],"9009":[226,17,228,18],"9017":[230,21,232,22],"9025":[229,17,233,18],"9033":[229,17,233,18],"9041":[229,17,233,18],"9049":[224,58,235,14],"9057":[224,58,235,14],"9065":[223,9,236,10],"9073":[222,27,237,6],"9081":[222,27,237,6],"9089":[239,9,241,10],"9097":[250,21,252,22],"9105":[254,21,258,22],"9113":[246,17,259,18],"9121":[245,13,260,14],"9129":[243,9,261,10],"9137":[243,9,261,10],"9145":[243,9,261,10],"9153":[238,28,262,6],"9161":[238,28,262,6],"9169":[264,9,266,10],"9177":[273,21,273,46],"9185":[275,17,279,18],"9193":[270,13,281,14],"9201":[268,9,282,10],"9209":[268,9,282,10],"9217":[285,55,287,18],"9225":[285,55,287,18],"9233":[284,13,288,14],"9241":[284,13,288,14],"9249":[290,50,292,18],"9257":[290,50,292,18],"9265":[289,13,293,14],"9273":[289,13,293,14],"9281":[301,25,303,26],"9289":[300,21,305,22],"9297":[299,27,307,18],"9305":[299,27,307,18],"9313":[295,13,310,14],"9321":[283,33,311,10],"9329":[283,33,311,10],"9337":[263,18,312,6],"9345":[263,18,312,6],"9353":[314,9,316,10],"9361":[313,21,319,6],"9369":[313,21,319,6],"9377":[1,1,321,31],"9385":[1,1,321,31],"nBranches":150,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/to-css-visitor.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/to-css-visitor_jalangi_.js","code":"var tree = require(\"../tree\"),\n    Visitor = require(\"./visitor\");\n\nvar CSSVisitorUtils = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n};\n\nCSSVisitorUtils.prototype = {\n    containsSilentNonBlockedChild: function(bodyRules) {\n        var rule;\n        if (bodyRules == null) {\n            return false;\n        }\n        for (var r = 0; r < bodyRules.length; r++) {\n            rule = bodyRules[r];\n            if (rule.isSilent && rule.isSilent(this._context) && !rule.blocksVisibility()) {\n                //the directive contains something that was referenced (likely by extend)\n                //therefore it needs to be shown in output too\n                return true;\n            }\n        }\n        return false;\n    },\n\n    keepOnlyVisibleChilds: function(owner) {\n        if (owner == null || owner.rules == null) {\n            return ;\n        }\n\n        owner.rules = owner.rules.filter(function(thing) {\n                return thing.isVisible();\n            }\n        );\n    },\n\n    isEmpty: function(owner) {\n        if (owner == null || owner.rules == null) {\n            return true;\n        }\n        return owner.rules.length === 0;\n    },\n\n    hasVisibleSelector: function(rulesetNode) {\n        if (rulesetNode == null || rulesetNode.paths == null) {\n            return false;\n        }\n        return rulesetNode.paths.length > 0;\n    },\n\n    resolveVisibility: function (node, originalRules) {\n        if (!node.blocksVisibility()) {\n            if (this.isEmpty(node) && !this.containsSilentNonBlockedChild(originalRules)) {\n                return ;\n            }\n\n            return node;\n        }\n\n        var compiledRulesBody = node.rules[0];\n        this.keepOnlyVisibleChilds(compiledRulesBody);\n\n        if (this.isEmpty(compiledRulesBody)) {\n            return ;\n        }\n\n        node.ensureVisibility();\n        node.removeVisibilityBlock();\n\n        return node;\n    },\n\n    isVisibleRuleset: function(rulesetNode) {\n        if (rulesetNode.firstRoot) {\n            return true;\n        }\n\n        if (this.isEmpty(rulesetNode)) {\n            return false;\n        }\n\n        if (!rulesetNode.root && !this.hasVisibleSelector(rulesetNode)) {\n            return false;\n        }\n\n        return true;\n    }\n\n};\n\nvar ToCSSVisitor = function(context) {\n    this._visitor = new Visitor(this);\n    this._context = context;\n    this.utils = new CSSVisitorUtils(context);\n};\n\nToCSSVisitor.prototype = {\n    isReplacing: true,\n    run: function (root) {\n        return this._visitor.visit(root);\n    },\n\n    visitRule: function (ruleNode, visitArgs) {\n        if (ruleNode.blocksVisibility() || ruleNode.variable) {\n            return;\n        }\n        return ruleNode;\n    },\n\n    visitMixinDefinition: function (mixinNode, visitArgs) {\n        // mixin definitions do not get eval'd - this means they keep state\n        // so we have to clear that state here so it isn't used if toCSS is called twice\n        mixinNode.frames = [];\n    },\n\n    visitExtend: function (extendNode, visitArgs) {\n    },\n\n    visitComment: function (commentNode, visitArgs) {\n        if (commentNode.blocksVisibility() || commentNode.isSilent(this._context)) {\n            return;\n        }\n        return commentNode;\n    },\n\n    visitMedia: function(mediaNode, visitArgs) {\n        var originalRules = mediaNode.rules[0].rules;\n        mediaNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        return this.utils.resolveVisibility(mediaNode, originalRules);\n    },\n\n    visitImport: function (importNode, visitArgs) {\n        if (importNode.blocksVisibility()) {\n            return ;\n        }\n        return importNode;\n    },\n\n    visitDirective: function(directiveNode, visitArgs) {\n        if (directiveNode.rules && directiveNode.rules.length) {\n            return this.visitDirectiveWithBody(directiveNode, visitArgs);\n        } else {\n            return this.visitDirectiveWithoutBody(directiveNode, visitArgs);\n        }\n    },\n\n    visitDirectiveWithBody: function(directiveNode, visitArgs) {\n        //if there is only one nested ruleset and that one has no path, then it is\n        //just fake ruleset\n        function hasFakeRuleset(directiveNode) {\n            var bodyRules = directiveNode.rules;\n            return bodyRules.length === 1 && (!bodyRules[0].paths || bodyRules[0].paths.length === 0);\n        }\n        function getBodyRules(directiveNode) {\n            var nodeRules = directiveNode.rules;\n            if (hasFakeRuleset(directiveNode)) {\n                return nodeRules[0].rules;\n            }\n\n            return nodeRules;\n        }\n        //it is still true that it is only one ruleset in array\n        //this is last such moment\n        //process childs\n        var originalRules = getBodyRules(directiveNode);\n        directiveNode.accept(this._visitor);\n        visitArgs.visitDeeper = false;\n\n        if (!this.utils.isEmpty(directiveNode)) {\n            this._mergeRules(directiveNode.rules[0].rules);\n        }\n\n        return this.utils.resolveVisibility(directiveNode, originalRules);\n    },\n\n    visitDirectiveWithoutBody: function(directiveNode, visitArgs) {\n        if (directiveNode.blocksVisibility()) {\n            return;\n        }\n\n        if (directiveNode.name === \"@charset\") {\n            // Only output the debug info together with subsequent @charset definitions\n            // a comment (or @media statement) before the actual @charset directive would\n            // be considered illegal css as it has to be on the first line\n            if (this.charset) {\n                if (directiveNode.debugInfo) {\n                    var comment = new tree.Comment(\"/* \" + directiveNode.toCSS(this._context).replace(/\\n/g, \"\") + \" */\\n\");\n                    comment.debugInfo = directiveNode.debugInfo;\n                    return this._visitor.visit(comment);\n                }\n                return;\n            }\n            this.charset = true;\n        }\n\n        return directiveNode;\n    },\n\n    checkValidNodes: function(rules, isRoot) {\n        if (!rules) {\n            return;\n        }\n\n        for (var i = 0; i < rules.length; i++) {\n            var ruleNode = rules[i];\n            if (isRoot && ruleNode instanceof tree.Rule && !ruleNode.variable) {\n                throw { message: \"Properties must be inside selector blocks. They cannot be in the root\",\n                    index: ruleNode.index, filename: ruleNode.currentFileInfo && ruleNode.currentFileInfo.filename};\n            }\n            if (ruleNode instanceof tree.Call) {\n                throw { message: \"Function '\" + ruleNode.name + \"' is undefined\",\n                    index: ruleNode.index, filename: ruleNode.currentFileInfo && ruleNode.currentFileInfo.filename};\n            }\n            if (ruleNode.type && !ruleNode.allowRoot) {\n                throw { message: ruleNode.type + \" node returned by a function is not valid here\",\n                    index: ruleNode.index, filename: ruleNode.currentFileInfo && ruleNode.currentFileInfo.filename};\n            }\n        }\n    },\n\n    visitRuleset: function (rulesetNode, visitArgs) {\n        //at this point rulesets are nested into each other\n        var rule, rulesets = [];\n\n        this.checkValidNodes(rulesetNode.rules, rulesetNode.firstRoot);\n\n        if (! rulesetNode.root) {\n            //remove invisible paths\n            this._compileRulesetPaths(rulesetNode);\n\n            // remove rulesets from this ruleset body and compile them separately\n            var nodeRules = rulesetNode.rules, nodeRuleCnt = nodeRules ? nodeRules.length : 0;\n            for (var i = 0; i < nodeRuleCnt; ) {\n                rule = nodeRules[i];\n                if (rule && rule.rules) {\n                    // visit because we are moving them out from being a child\n                    rulesets.push(this._visitor.visit(rule));\n                    nodeRules.splice(i, 1);\n                    nodeRuleCnt--;\n                    continue;\n                }\n                i++;\n            }\n            // accept the visitor to remove rules and refactor itself\n            // then we can decide nogw whether we want it or not\n            // compile body\n            if (nodeRuleCnt > 0) {\n                rulesetNode.accept(this._visitor);\n            } else {\n                rulesetNode.rules = null;\n            }\n            visitArgs.visitDeeper = false;\n\n        } else { //if (! rulesetNode.root) {\n            rulesetNode.accept(this._visitor);\n            visitArgs.visitDeeper = false;\n        }\n\n        if (rulesetNode.rules) {\n            this._mergeRules(rulesetNode.rules);\n            this._removeDuplicateRules(rulesetNode.rules);\n        }\n\n        //now decide whether we keep the ruleset\n        if (this.utils.isVisibleRuleset(rulesetNode)) {\n            rulesetNode.ensureVisibility();\n            rulesets.splice(0, 0, rulesetNode);\n        }\n\n        if (rulesets.length === 1) {\n            return rulesets[0];\n        }\n        return rulesets;\n    },\n\n    _compileRulesetPaths: function(rulesetNode) {\n        if (rulesetNode.paths) {\n            rulesetNode.paths = rulesetNode.paths\n                .filter(function(p) {\n                    var i;\n                    if (p[0].elements[0].combinator.value === ' ') {\n                        p[0].elements[0].combinator = new(tree.Combinator)('');\n                    }\n                    for (i = 0; i < p.length; i++) {\n                        if (p[i].isVisible() && p[i].getIsOutput()) {\n                            return true;\n                        }\n                    }\n                    return false;\n                });\n        }\n    },\n\n    _removeDuplicateRules: function(rules) {\n        if (!rules) { return; }\n\n        // remove duplicates\n        var ruleCache = {},\n            ruleList, rule, i;\n\n        for (i = rules.length - 1; i >= 0 ; i--) {\n            rule = rules[i];\n            if (rule instanceof tree.Rule) {\n                if (!ruleCache[rule.name]) {\n                    ruleCache[rule.name] = rule;\n                } else {\n                    ruleList = ruleCache[rule.name];\n                    if (ruleList instanceof tree.Rule) {\n                        ruleList = ruleCache[rule.name] = [ruleCache[rule.name].toCSS(this._context)];\n                    }\n                    var ruleCSS = rule.toCSS(this._context);\n                    if (ruleList.indexOf(ruleCSS) !== -1) {\n                        rules.splice(i, 1);\n                    } else {\n                        ruleList.push(ruleCSS);\n                    }\n                }\n            }\n        }\n    },\n\n    _mergeRules: function (rules) {\n        if (!rules) { return; }\n\n        var groups = {},\n            parts,\n            rule,\n            key;\n\n        for (var i = 0; i < rules.length; i++) {\n            rule = rules[i];\n\n            if ((rule instanceof tree.Rule) && rule.merge) {\n                key = [rule.name,\n                    rule.important ? \"!\" : \"\"].join(\",\");\n\n                if (!groups[key]) {\n                    groups[key] = [];\n                } else {\n                    rules.splice(i--, 1);\n                }\n\n                groups[key].push(rule);\n            }\n        }\n\n        Object.keys(groups).map(function (k) {\n\n            function toExpression(values) {\n                return new (tree.Expression)(values.map(function (p) {\n                    return p.value;\n                }));\n            }\n\n            function toValue(values) {\n                return new (tree.Value)(values.map(function (p) {\n                    return p;\n                }));\n            }\n\n            parts = groups[k];\n\n            if (parts.length > 1) {\n                rule = parts[0];\n                var spacedGroups = [];\n                var lastSpacedGroup = [];\n                parts.map(function (p) {\n                    if (p.merge === \"+\") {\n                        if (lastSpacedGroup.length > 0) {\n                            spacedGroups.push(toExpression(lastSpacedGroup));\n                        }\n                        lastSpacedGroup = [];\n                    }\n                    lastSpacedGroup.push(p);\n                });\n                spacedGroups.push(toExpression(lastSpacedGroup));\n                rule.value = toValue(spacedGroups);\n            }\n        });\n    },\n\n    visitAnonymous: function(anonymousNode, visitArgs) {\n        if (anonymousNode.blocksVisibility()) {\n            return ;\n        }\n        anonymousNode.accept(this._visitor);\n        return anonymousNode;\n    }\n};\n\nmodule.exports = ToCSSVisitor;\n"};
jalangiLabel631:
    while (true) {
        try {
            J$.Se(8289, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/to-css-visitor_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/to-css-visitor.js');
            J$.N(8297, '__secret__S$', __secret__S$, 0);
            J$.N(8305, '__secret__traits__', __secret__traits__, 0);
            J$.N(8313, 'tree', tree, 0);
            J$.N(8321, 'Visitor', Visitor, 0);
            J$.N(8329, 'CSSVisitorUtils', CSSVisitorUtils, 0);
            J$.N(8337, 'ToCSSVisitor', ToCSSVisitor, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var tree = J$.X1(137, J$.W(129, 'tree', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../tree', 21, false)), tree, 3)), Visitor = J$.X1(153, J$.W(145, 'Visitor', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './visitor', 21, false)), Visitor, 3));
            var CSSVisitorUtils = J$.X1(281, J$.W(273, 'CSSVisitorUtils', J$.T(265, function (context) {
                jalangiLabel597:
                    while (true) {
                        try {
                            J$.Fe(241, arguments.callee, this, arguments);
                            arguments = J$.N(249, 'arguments', arguments, 4);
                            context = J$.N(257, 'context', context, 4);
                            J$.X1(201, J$.P(193, J$.R(161, 'this', this, 0), '_visitor', J$.F(185, J$.R(169, 'Visitor', Visitor, 1), 1)(J$.R(177, 'this', this, 0)), 0));
                            J$.X1(233, J$.P(225, J$.R(209, 'this', this, 0), '_context', J$.R(217, 'context', context, 0), 0));
                        } catch (J$e) {
                            J$.Ex(8345, J$e);
                        } finally {
                            if (J$.Fr(8353))
                                continue jalangiLabel597;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 241), CSSVisitorUtils, 3));
            J$.X1(1673, J$.P(1665, J$.R(289, 'CSSVisitorUtils', CSSVisitorUtils, 1), 'prototype', J$.T(1657, {
                containsSilentNonBlockedChild: J$.T(609, function (bodyRules) {
                    jalangiLabel598:
                        while (true) {
                            try {
                                J$.Fe(569, arguments.callee, this, arguments);
                                arguments = J$.N(577, 'arguments', arguments, 4);
                                bodyRules = J$.N(585, 'bodyRules', bodyRules, 4);
                                J$.N(593, 'rule', rule, 0);
                                J$.N(601, 'r', r, 0);
                                var rule;
                                if (J$.X1(8361, J$.C(8, J$.B(10, '==', J$.R(297, 'bodyRules', bodyRules, 0), J$.T(305, null, 25, false), 0)))) {
                                    return J$.X1(329, J$.Rt(321, J$.T(313, false, 23, false)));
                                }
                                for (var r = J$.X1(353, J$.W(345, 'r', J$.T(337, 0, 22, false), r, 1)); J$.X1(8377, J$.C(40, J$.B(18, '<', J$.R(361, 'r', r, 0), J$.G(377, J$.R(369, 'bodyRules', bodyRules, 0), 'length', 0), 0))); J$.X1(8385, J$.B(42, '-', r = J$.W(401, 'r', J$.B(34, '+', J$.U(26, '+', J$.R(393, 'r', r, 0)), J$.T(385, 1, 22, false), 0), r, 0), J$.T(409, 1, 22, false), 0))) {
                                    J$.X1(449, rule = J$.W(441, 'rule', J$.G(433, J$.R(417, 'bodyRules', bodyRules, 0), J$.R(425, 'r', r, 0), 4), rule, 0));
                                    if (J$.X1(8369, J$.C(32, J$.C(24, J$.C(16, J$.G(465, J$.R(457, 'rule', rule, 0), 'isSilent', 0)) ? J$.M(497, J$.R(473, 'rule', rule, 0), 'isSilent', 0)(J$.G(489, J$.R(481, 'this', this, 0), '_context', 0)) : J$._()) ? J$.U(50, '!', J$.M(513, J$.R(505, 'rule', rule, 0), 'blocksVisibility', 0)()) : J$._()))) {
                                        return J$.X1(537, J$.Rt(529, J$.T(521, true, 23, false)));
                                    }
                                }
                                return J$.X1(561, J$.Rt(553, J$.T(545, false, 23, false)));
                            } catch (J$e) {
                                J$.Ex(8393, J$e);
                            } finally {
                                if (J$.Fr(8401))
                                    continue jalangiLabel598;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 569),
                keepOnlyVisibleChilds: J$.T(809, function (owner) {
                    jalangiLabel600:
                        while (true) {
                            try {
                                J$.Fe(785, arguments.callee, this, arguments);
                                arguments = J$.N(793, 'arguments', arguments, 4);
                                owner = J$.N(801, 'owner', owner, 4);
                                if (J$.X1(8409, J$.C(56, J$.C(48, J$.B(58, '==', J$.R(617, 'owner', owner, 0), J$.T(625, null, 25, false), 0)) ? J$._() : J$.B(66, '==', J$.G(641, J$.R(633, 'owner', owner, 0), 'rules', 0), J$.T(649, null, 25, false), 0)))) {
                                    return J$.X1(665, J$.Rt(657, undefined));
                                }
                                J$.X1(777, J$.P(769, J$.R(673, 'owner', owner, 0), 'rules', J$.M(761, J$.G(689, J$.R(681, 'owner', owner, 0), 'rules', 0), 'filter', 0)(J$.T(753, function (thing) {
                                    jalangiLabel599:
                                        while (true) {
                                            try {
                                                J$.Fe(729, arguments.callee, this, arguments);
                                                arguments = J$.N(737, 'arguments', arguments, 4);
                                                thing = J$.N(745, 'thing', thing, 4);
                                                return J$.X1(721, J$.Rt(713, J$.M(705, J$.R(697, 'thing', thing, 0), 'isVisible', 0)()));
                                            } catch (J$e) {
                                                J$.Ex(8417, J$e);
                                            } finally {
                                                if (J$.Fr(8425))
                                                    continue jalangiLabel599;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 729)), 0));
                            } catch (J$e) {
                                J$.Ex(8433, J$e);
                            } finally {
                                if (J$.Fr(8441))
                                    continue jalangiLabel600;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 785),
                isEmpty: J$.T(953, function (owner) {
                    jalangiLabel601:
                        while (true) {
                            try {
                                J$.Fe(929, arguments.callee, this, arguments);
                                arguments = J$.N(937, 'arguments', arguments, 4);
                                owner = J$.N(945, 'owner', owner, 4);
                                if (J$.X1(8449, J$.C(72, J$.C(64, J$.B(74, '==', J$.R(817, 'owner', owner, 0), J$.T(825, null, 25, false), 0)) ? J$._() : J$.B(82, '==', J$.G(841, J$.R(833, 'owner', owner, 0), 'rules', 0), J$.T(849, null, 25, false), 0)))) {
                                    return J$.X1(873, J$.Rt(865, J$.T(857, true, 23, false)));
                                }
                                return J$.X1(921, J$.Rt(913, J$.B(90, '===', J$.G(897, J$.G(889, J$.R(881, 'owner', owner, 0), 'rules', 0), 'length', 0), J$.T(905, 0, 22, false), 0)));
                            } catch (J$e) {
                                J$.Ex(8457, J$e);
                            } finally {
                                if (J$.Fr(8465))
                                    continue jalangiLabel601;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 929),
                hasVisibleSelector: J$.T(1097, function (rulesetNode) {
                    jalangiLabel602:
                        while (true) {
                            try {
                                J$.Fe(1073, arguments.callee, this, arguments);
                                arguments = J$.N(1081, 'arguments', arguments, 4);
                                rulesetNode = J$.N(1089, 'rulesetNode', rulesetNode, 4);
                                if (J$.X1(8473, J$.C(88, J$.C(80, J$.B(98, '==', J$.R(961, 'rulesetNode', rulesetNode, 0), J$.T(969, null, 25, false), 0)) ? J$._() : J$.B(106, '==', J$.G(985, J$.R(977, 'rulesetNode', rulesetNode, 0), 'paths', 0), J$.T(993, null, 25, false), 0)))) {
                                    return J$.X1(1017, J$.Rt(1009, J$.T(1001, false, 23, false)));
                                }
                                return J$.X1(1065, J$.Rt(1057, J$.B(114, '>', J$.G(1041, J$.G(1033, J$.R(1025, 'rulesetNode', rulesetNode, 0), 'paths', 0), 'length', 0), J$.T(1049, 0, 22, false), 0)));
                            } catch (J$e) {
                                J$.Ex(8481, J$e);
                            } finally {
                                if (J$.Fr(8489))
                                    continue jalangiLabel602;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1073),
                resolveVisibility: J$.T(1441, function (node, originalRules) {
                    jalangiLabel603:
                        while (true) {
                            try {
                                J$.Fe(1401, arguments.callee, this, arguments);
                                arguments = J$.N(1409, 'arguments', arguments, 4);
                                node = J$.N(1417, 'node', node, 4);
                                originalRules = J$.N(1425, 'originalRules', originalRules, 4);
                                J$.N(1433, 'compiledRulesBody', compiledRulesBody, 0);
                                if (J$.X1(8505, J$.C(112, J$.U(122, '!', J$.M(1113, J$.R(1105, 'node', node, 0), 'blocksVisibility', 0)())))) {
                                    if (J$.X1(8497, J$.C(104, J$.C(96, J$.M(1137, J$.R(1121, 'this', this, 0), 'isEmpty', 0)(J$.R(1129, 'node', node, 0))) ? J$.U(130, '!', J$.M(1161, J$.R(1145, 'this', this, 0), 'containsSilentNonBlockedChild', 0)(J$.R(1153, 'originalRules', originalRules, 0))) : J$._()))) {
                                        return J$.X1(1177, J$.Rt(1169, undefined));
                                    }
                                    return J$.X1(1201, J$.Rt(1193, J$.R(1185, 'node', node, 0)));
                                }
                                var compiledRulesBody = J$.X1(1249, J$.W(1241, 'compiledRulesBody', J$.G(1233, J$.G(1217, J$.R(1209, 'node', node, 0), 'rules', 0), J$.T(1225, 0, 22, false), 4), compiledRulesBody, 1));
                                J$.X1(1281, J$.M(1273, J$.R(1257, 'this', this, 0), 'keepOnlyVisibleChilds', 0)(J$.R(1265, 'compiledRulesBody', compiledRulesBody, 0)));
                                if (J$.X1(8513, J$.C(120, J$.M(1305, J$.R(1289, 'this', this, 0), 'isEmpty', 0)(J$.R(1297, 'compiledRulesBody', compiledRulesBody, 0))))) {
                                    return J$.X1(1321, J$.Rt(1313, undefined));
                                }
                                J$.X1(1345, J$.M(1337, J$.R(1329, 'node', node, 0), 'ensureVisibility', 0)());
                                J$.X1(1369, J$.M(1361, J$.R(1353, 'node', node, 0), 'removeVisibilityBlock', 0)());
                                return J$.X1(1393, J$.Rt(1385, J$.R(1377, 'node', node, 0)));
                            } catch (J$e) {
                                J$.Ex(8521, J$e);
                            } finally {
                                if (J$.Fr(8529))
                                    continue jalangiLabel603;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1401),
                isVisibleRuleset: J$.T(1649, function (rulesetNode) {
                    jalangiLabel604:
                        while (true) {
                            try {
                                J$.Fe(1625, arguments.callee, this, arguments);
                                arguments = J$.N(1633, 'arguments', arguments, 4);
                                rulesetNode = J$.N(1641, 'rulesetNode', rulesetNode, 4);
                                if (J$.X1(8537, J$.C(128, J$.G(1457, J$.R(1449, 'rulesetNode', rulesetNode, 0), 'firstRoot', 0)))) {
                                    return J$.X1(1481, J$.Rt(1473, J$.T(1465, true, 23, false)));
                                }
                                if (J$.X1(8545, J$.C(136, J$.M(1505, J$.R(1489, 'this', this, 0), 'isEmpty', 0)(J$.R(1497, 'rulesetNode', rulesetNode, 0))))) {
                                    return J$.X1(1529, J$.Rt(1521, J$.T(1513, false, 23, false)));
                                }
                                if (J$.X1(8553, J$.C(152, J$.C(144, J$.U(138, '!', J$.G(1545, J$.R(1537, 'rulesetNode', rulesetNode, 0), 'root', 0))) ? J$.U(146, '!', J$.M(1569, J$.R(1553, 'this', this, 0), 'hasVisibleSelector', 0)(J$.R(1561, 'rulesetNode', rulesetNode, 0))) : J$._()))) {
                                    return J$.X1(1593, J$.Rt(1585, J$.T(1577, false, 23, false)));
                                }
                                return J$.X1(1617, J$.Rt(1609, J$.T(1601, true, 23, false)));
                            } catch (J$e) {
                                J$.Ex(8561, J$e);
                            } finally {
                                if (J$.Fr(8569))
                                    continue jalangiLabel604;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1625)
            }, 11, false), 0));
            var ToCSSVisitor = J$.X1(1849, J$.W(1841, 'ToCSSVisitor', J$.T(1833, function (context) {
                jalangiLabel605:
                    while (true) {
                        try {
                            J$.Fe(1809, arguments.callee, this, arguments);
                            arguments = J$.N(1817, 'arguments', arguments, 4);
                            context = J$.N(1825, 'context', context, 4);
                            J$.X1(1721, J$.P(1713, J$.R(1681, 'this', this, 0), '_visitor', J$.F(1705, J$.R(1689, 'Visitor', Visitor, 1), 1)(J$.R(1697, 'this', this, 0)), 0));
                            J$.X1(1753, J$.P(1745, J$.R(1729, 'this', this, 0), '_context', J$.R(1737, 'context', context, 0), 0));
                            J$.X1(1801, J$.P(1793, J$.R(1761, 'this', this, 0), 'utils', J$.F(1785, J$.R(1769, 'CSSVisitorUtils', CSSVisitorUtils, 1), 1)(J$.R(1777, 'context', context, 0)), 0));
                        } catch (J$e) {
                            J$.Ex(8577, J$e);
                        } finally {
                            if (J$.Fr(8585))
                                continue jalangiLabel605;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 1809), ToCSSVisitor, 3));
            J$.X1(8249, J$.P(8241, J$.R(1857, 'ToCSSVisitor', ToCSSVisitor, 1), 'prototype', J$.T(8233, {
                isReplacing: J$.T(1865, true, 23, false),
                run: J$.T(1945, function (root) {
                    jalangiLabel606:
                        while (true) {
                            try {
                                J$.Fe(1921, arguments.callee, this, arguments);
                                arguments = J$.N(1929, 'arguments', arguments, 4);
                                root = J$.N(1937, 'root', root, 4);
                                return J$.X1(1913, J$.Rt(1905, J$.M(1897, J$.G(1881, J$.R(1873, 'this', this, 0), '_visitor', 0), 'visit', 0)(J$.R(1889, 'root', root, 0))));
                            } catch (J$e) {
                                J$.Ex(8593, J$e);
                            } finally {
                                if (J$.Fr(8601))
                                    continue jalangiLabel606;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1921),
                visitRule: J$.T(2057, function (ruleNode, visitArgs) {
                    jalangiLabel607:
                        while (true) {
                            try {
                                J$.Fe(2025, arguments.callee, this, arguments);
                                arguments = J$.N(2033, 'arguments', arguments, 4);
                                ruleNode = J$.N(2041, 'ruleNode', ruleNode, 4);
                                visitArgs = J$.N(2049, 'visitArgs', visitArgs, 4);
                                if (J$.X1(8609, J$.C(168, J$.C(160, J$.M(1961, J$.R(1953, 'ruleNode', ruleNode, 0), 'blocksVisibility', 0)()) ? J$._() : J$.G(1977, J$.R(1969, 'ruleNode', ruleNode, 0), 'variable', 0)))) {
                                    return J$.X1(1993, J$.Rt(1985, undefined));
                                }
                                return J$.X1(2017, J$.Rt(2009, J$.R(2001, 'ruleNode', ruleNode, 0)));
                            } catch (J$e) {
                                J$.Ex(8617, J$e);
                            } finally {
                                if (J$.Fr(8625))
                                    continue jalangiLabel607;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2025),
                visitMixinDefinition: J$.T(2129, function (mixinNode, visitArgs) {
                    jalangiLabel608:
                        while (true) {
                            try {
                                J$.Fe(2097, arguments.callee, this, arguments);
                                arguments = J$.N(2105, 'arguments', arguments, 4);
                                mixinNode = J$.N(2113, 'mixinNode', mixinNode, 4);
                                visitArgs = J$.N(2121, 'visitArgs', visitArgs, 4);
                                J$.X1(2089, J$.P(2081, J$.R(2065, 'mixinNode', mixinNode, 0), 'frames', J$.T(2073, [], 10, false), 0));
                            } catch (J$e) {
                                J$.Ex(8633, J$e);
                            } finally {
                                if (J$.Fr(8641))
                                    continue jalangiLabel608;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2097),
                visitExtend: J$.T(2169, function (extendNode, visitArgs) {
                    jalangiLabel609:
                        while (true) {
                            try {
                                J$.Fe(2137, arguments.callee, this, arguments);
                                arguments = J$.N(2145, 'arguments', arguments, 4);
                                extendNode = J$.N(2153, 'extendNode', extendNode, 4);
                                visitArgs = J$.N(2161, 'visitArgs', visitArgs, 4);
                            } catch (J$e) {
                                J$.Ex(8649, J$e);
                            } finally {
                                if (J$.Fr(8657))
                                    continue jalangiLabel609;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2137),
                visitComment: J$.T(2297, function (commentNode, visitArgs) {
                    jalangiLabel610:
                        while (true) {
                            try {
                                J$.Fe(2265, arguments.callee, this, arguments);
                                arguments = J$.N(2273, 'arguments', arguments, 4);
                                commentNode = J$.N(2281, 'commentNode', commentNode, 4);
                                visitArgs = J$.N(2289, 'visitArgs', visitArgs, 4);
                                if (J$.X1(8665, J$.C(184, J$.C(176, J$.M(2185, J$.R(2177, 'commentNode', commentNode, 0), 'blocksVisibility', 0)()) ? J$._() : J$.M(2217, J$.R(2193, 'commentNode', commentNode, 0), 'isSilent', 0)(J$.G(2209, J$.R(2201, 'this', this, 0), '_context', 0))))) {
                                    return J$.X1(2233, J$.Rt(2225, undefined));
                                }
                                return J$.X1(2257, J$.Rt(2249, J$.R(2241, 'commentNode', commentNode, 0)));
                            } catch (J$e) {
                                J$.Ex(8673, J$e);
                            } finally {
                                if (J$.Fr(8681))
                                    continue jalangiLabel610;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2265),
                visitMedia: J$.T(2529, function (mediaNode, visitArgs) {
                    jalangiLabel611:
                        while (true) {
                            try {
                                J$.Fe(2489, arguments.callee, this, arguments);
                                arguments = J$.N(2497, 'arguments', arguments, 4);
                                mediaNode = J$.N(2505, 'mediaNode', mediaNode, 4);
                                visitArgs = J$.N(2513, 'visitArgs', visitArgs, 4);
                                J$.N(2521, 'originalRules', originalRules, 0);
                                var originalRules = J$.X1(2353, J$.W(2345, 'originalRules', J$.G(2337, J$.G(2329, J$.G(2313, J$.R(2305, 'mediaNode', mediaNode, 0), 'rules', 0), J$.T(2321, 0, 22, false), 4), 'rules', 0), originalRules, 1));
                                J$.X1(2393, J$.M(2385, J$.R(2361, 'mediaNode', mediaNode, 0), 'accept', 0)(J$.G(2377, J$.R(2369, 'this', this, 0), '_visitor', 0)));
                                J$.X1(2425, J$.P(2417, J$.R(2401, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(2409, false, 23, false), 0));
                                return J$.X1(2481, J$.Rt(2473, J$.M(2465, J$.G(2441, J$.R(2433, 'this', this, 0), 'utils', 0), 'resolveVisibility', 0)(J$.R(2449, 'mediaNode', mediaNode, 0), J$.R(2457, 'originalRules', originalRules, 0))));
                            } catch (J$e) {
                                J$.Ex(8689, J$e);
                            } finally {
                                if (J$.Fr(8697))
                                    continue jalangiLabel611;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2489),
                visitImport: J$.T(2625, function (importNode, visitArgs) {
                    jalangiLabel612:
                        while (true) {
                            try {
                                J$.Fe(2593, arguments.callee, this, arguments);
                                arguments = J$.N(2601, 'arguments', arguments, 4);
                                importNode = J$.N(2609, 'importNode', importNode, 4);
                                visitArgs = J$.N(2617, 'visitArgs', visitArgs, 4);
                                if (J$.X1(8705, J$.C(192, J$.M(2545, J$.R(2537, 'importNode', importNode, 0), 'blocksVisibility', 0)()))) {
                                    return J$.X1(2561, J$.Rt(2553, undefined));
                                }
                                return J$.X1(2585, J$.Rt(2577, J$.R(2569, 'importNode', importNode, 0)));
                            } catch (J$e) {
                                J$.Ex(8713, J$e);
                            } finally {
                                if (J$.Fr(8721))
                                    continue jalangiLabel612;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2593),
                visitDirective: J$.T(2801, function (directiveNode, visitArgs) {
                    jalangiLabel613:
                        while (true) {
                            try {
                                J$.Fe(2769, arguments.callee, this, arguments);
                                arguments = J$.N(2777, 'arguments', arguments, 4);
                                directiveNode = J$.N(2785, 'directiveNode', directiveNode, 4);
                                visitArgs = J$.N(2793, 'visitArgs', visitArgs, 4);
                                if (J$.X1(8729, J$.C(208, J$.C(200, J$.G(2641, J$.R(2633, 'directiveNode', directiveNode, 0), 'rules', 0)) ? J$.G(2665, J$.G(2657, J$.R(2649, 'directiveNode', directiveNode, 0), 'rules', 0), 'length', 0) : J$._()))) {
                                    return J$.X1(2713, J$.Rt(2705, J$.M(2697, J$.R(2673, 'this', this, 0), 'visitDirectiveWithBody', 0)(J$.R(2681, 'directiveNode', directiveNode, 0), J$.R(2689, 'visitArgs', visitArgs, 0))));
                                } else {
                                    return J$.X1(2761, J$.Rt(2753, J$.M(2745, J$.R(2721, 'this', this, 0), 'visitDirectiveWithoutBody', 0)(J$.R(2729, 'directiveNode', directiveNode, 0), J$.R(2737, 'visitArgs', visitArgs, 0))));
                                }
                            } catch (J$e) {
                                J$.Ex(8737, J$e);
                            } finally {
                                if (J$.Fr(8745))
                                    continue jalangiLabel613;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2769),
                visitDirectiveWithBody: J$.T(3489, function (directiveNode, visitArgs) {
                    jalangiLabel616:
                        while (true) {
                            try {
                                J$.Fe(3417, arguments.callee, this, arguments);
                                function hasFakeRuleset(directiveNode) {
                                    jalangiLabel614:
                                        while (true) {
                                            try {
                                                J$.Fe(2961, arguments.callee, this, arguments);
                                                arguments = J$.N(2969, 'arguments', arguments, 4);
                                                directiveNode = J$.N(2977, 'directiveNode', directiveNode, 4);
                                                J$.N(2985, 'bodyRules', bodyRules, 0);
                                                var bodyRules = J$.X1(2833, J$.W(2825, 'bodyRules', J$.G(2817, J$.R(2809, 'directiveNode', directiveNode, 0), 'rules', 0), bodyRules, 1));
                                                return J$.X1(2953, J$.Rt(2945, J$.C(224, J$.B(154, '===', J$.G(2849, J$.R(2841, 'bodyRules', bodyRules, 0), 'length', 0), J$.T(2857, 1, 22, false), 0)) ? J$.C(216, J$.U(162, '!', J$.G(2889, J$.G(2881, J$.R(2865, 'bodyRules', bodyRules, 0), J$.T(2873, 0, 22, false), 4), 'paths', 0))) ? J$._() : J$.B(170, '===', J$.G(2929, J$.G(2921, J$.G(2913, J$.R(2897, 'bodyRules', bodyRules, 0), J$.T(2905, 0, 22, false), 4), 'paths', 0), 'length', 0), J$.T(2937, 0, 22, false), 0) : J$._()));
                                            } catch (J$e) {
                                                J$.Ex(8753, J$e);
                                            } finally {
                                                if (J$.Fr(8761))
                                                    continue jalangiLabel614;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }
                                function getBodyRules(directiveNode) {
                                    jalangiLabel615:
                                        while (true) {
                                            try {
                                                J$.Fe(3121, arguments.callee, this, arguments);
                                                arguments = J$.N(3129, 'arguments', arguments, 4);
                                                directiveNode = J$.N(3137, 'directiveNode', directiveNode, 4);
                                                J$.N(3145, 'nodeRules', nodeRules, 0);
                                                var nodeRules = J$.X1(3017, J$.W(3009, 'nodeRules', J$.G(3001, J$.R(2993, 'directiveNode', directiveNode, 0), 'rules', 0), nodeRules, 1));
                                                if (J$.X1(8769, J$.C(232, J$.F(3041, J$.R(3025, 'hasFakeRuleset', hasFakeRuleset, 0), 0)(J$.R(3033, 'directiveNode', directiveNode, 0))))) {
                                                    return J$.X1(3089, J$.Rt(3081, J$.G(3073, J$.G(3065, J$.R(3049, 'nodeRules', nodeRules, 0), J$.T(3057, 0, 22, false), 4), 'rules', 0)));
                                                }
                                                return J$.X1(3113, J$.Rt(3105, J$.R(3097, 'nodeRules', nodeRules, 0)));
                                            } catch (J$e) {
                                                J$.Ex(8777, J$e);
                                            } finally {
                                                if (J$.Fr(8785))
                                                    continue jalangiLabel615;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }
                                arguments = J$.N(3425, 'arguments', arguments, 4);
                                directiveNode = J$.N(3433, 'directiveNode', directiveNode, 4);
                                visitArgs = J$.N(3441, 'visitArgs', visitArgs, 4);
                                hasFakeRuleset = J$.N(3457, 'hasFakeRuleset', J$.T(3449, hasFakeRuleset, 12, false, 2961), 0);
                                getBodyRules = J$.N(3473, 'getBodyRules', J$.T(3465, getBodyRules, 12, false, 3121), 0);
                                J$.N(3481, 'originalRules', originalRules, 0);
                                var originalRules = J$.X1(3185, J$.W(3177, 'originalRules', J$.F(3169, J$.R(3153, 'getBodyRules', getBodyRules, 0), 0)(J$.R(3161, 'directiveNode', directiveNode, 0)), originalRules, 1));
                                J$.X1(3225, J$.M(3217, J$.R(3193, 'directiveNode', directiveNode, 0), 'accept', 0)(J$.G(3209, J$.R(3201, 'this', this, 0), '_visitor', 0)));
                                J$.X1(3257, J$.P(3249, J$.R(3233, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(3241, false, 23, false), 0));
                                if (J$.X1(8793, J$.C(240, J$.U(178, '!', J$.M(3289, J$.G(3273, J$.R(3265, 'this', this, 0), 'utils', 0), 'isEmpty', 0)(J$.R(3281, 'directiveNode', directiveNode, 0)))))) {
                                    J$.X1(3353, J$.M(3345, J$.R(3297, 'this', this, 0), '_mergeRules', 0)(J$.G(3337, J$.G(3329, J$.G(3313, J$.R(3305, 'directiveNode', directiveNode, 0), 'rules', 0), J$.T(3321, 0, 22, false), 4), 'rules', 0)));
                                }
                                return J$.X1(3409, J$.Rt(3401, J$.M(3393, J$.G(3369, J$.R(3361, 'this', this, 0), 'utils', 0), 'resolveVisibility', 0)(J$.R(3377, 'directiveNode', directiveNode, 0), J$.R(3385, 'originalRules', originalRules, 0))));
                            } catch (J$e) {
                                J$.Ex(8801, J$e);
                            } finally {
                                if (J$.Fr(8809))
                                    continue jalangiLabel616;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3417),
                visitDirectiveWithoutBody: J$.T(3889, function (directiveNode, visitArgs) {
                    jalangiLabel617:
                        while (true) {
                            try {
                                J$.Fe(3849, arguments.callee, this, arguments);
                                arguments = J$.N(3857, 'arguments', arguments, 4);
                                directiveNode = J$.N(3865, 'directiveNode', directiveNode, 4);
                                visitArgs = J$.N(3873, 'visitArgs', visitArgs, 4);
                                J$.N(3881, 'comment', comment, 0);
                                if (J$.X1(8817, J$.C(248, J$.M(3505, J$.R(3497, 'directiveNode', directiveNode, 0), 'blocksVisibility', 0)()))) {
                                    return J$.X1(3521, J$.Rt(3513, undefined));
                                }
                                if (J$.X1(8841, J$.C(272, J$.B(186, '===', J$.G(3537, J$.R(3529, 'directiveNode', directiveNode, 0), 'name', 0), J$.T(3545, '@charset', 21, false), 0)))) {
                                    if (J$.X1(8833, J$.C(264, J$.G(3561, J$.R(3553, 'this', this, 0), 'charset', 0)))) {
                                        if (J$.X1(8825, J$.C(256, J$.G(3577, J$.R(3569, 'directiveNode', directiveNode, 0), 'debugInfo', 0)))) {
                                            var comment = J$.X1(3681, J$.W(3673, 'comment', J$.M(3665, J$.R(3585, 'tree', tree, 1), 'Comment', 2)(J$.B(202, '+', J$.B(194, '+', J$.T(3593, '/* ', 21, false), J$.M(3649, J$.M(3625, J$.R(3601, 'directiveNode', directiveNode, 0), 'toCSS', 0)(J$.G(3617, J$.R(3609, 'this', this, 0), '_context', 0)), 'replace', 0)(J$.T(3633, /\n/g, 14, false), J$.T(3641, '', 21, false)), 0), J$.T(3657, ' */\n', 21, false), 0)), comment, 1));
                                            J$.X1(3721, J$.P(3713, J$.R(3689, 'comment', comment, 0), 'debugInfo', J$.G(3705, J$.R(3697, 'directiveNode', directiveNode, 0), 'debugInfo', 0), 0));
                                            return J$.X1(3769, J$.Rt(3761, J$.M(3753, J$.G(3737, J$.R(3729, 'this', this, 0), '_visitor', 0), 'visit', 0)(J$.R(3745, 'comment', comment, 0))));
                                        }
                                        return J$.X1(3785, J$.Rt(3777, undefined));
                                    }
                                    J$.X1(3817, J$.P(3809, J$.R(3793, 'this', this, 0), 'charset', J$.T(3801, true, 23, false), 0));
                                }
                                return J$.X1(3841, J$.Rt(3833, J$.R(3825, 'directiveNode', directiveNode, 0)));
                            } catch (J$e) {
                                J$.Ex(8849, J$e);
                            } finally {
                                if (J$.Fr(8857))
                                    continue jalangiLabel617;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3849),
                checkValidNodes: J$.T(4497, function (rules, isRoot) {
                    jalangiLabel618:
                        while (true) {
                            try {
                                J$.Fe(4449, arguments.callee, this, arguments);
                                arguments = J$.N(4457, 'arguments', arguments, 4);
                                rules = J$.N(4465, 'rules', rules, 4);
                                isRoot = J$.N(4473, 'isRoot', isRoot, 4);
                                J$.N(4481, 'i', i, 0);
                                J$.N(4489, 'ruleNode', ruleNode, 0);
                                if (J$.X1(8865, J$.C(280, J$.U(210, '!', J$.R(3897, 'rules', rules, 0))))) {
                                    return J$.X1(3913, J$.Rt(3905, undefined));
                                }
                                for (var i = J$.X1(3937, J$.W(3929, 'i', J$.T(3921, 0, 22, false), i, 1)); J$.X1(8897, J$.C(360, J$.B(218, '<', J$.R(3945, 'i', i, 0), J$.G(3961, J$.R(3953, 'rules', rules, 0), 'length', 0), 0))); J$.X1(8905, J$.B(242, '-', i = J$.W(3985, 'i', J$.B(234, '+', J$.U(226, '+', J$.R(3977, 'i', i, 0)), J$.T(3969, 1, 22, false), 0), i, 0), J$.T(3993, 1, 22, false), 0))) {
                                    var ruleNode = J$.X1(4033, J$.W(4025, 'ruleNode', J$.G(4017, J$.R(4001, 'rules', rules, 0), J$.R(4009, 'i', i, 0), 4), ruleNode, 1));
                                    if (J$.X1(8873, J$.C(312, J$.C(296, J$.C(288, J$.R(4041, 'isRoot', isRoot, 0)) ? J$.B(250, 'instanceof', J$.R(4049, 'ruleNode', ruleNode, 0), J$.G(4065, J$.R(4057, 'tree', tree, 1), 'Rule', 0), 0) : J$._()) ? J$.U(258, '!', J$.G(4081, J$.R(4073, 'ruleNode', ruleNode, 0), 'variable', 0)) : J$._()))) {
                                        throw J$.X1(4169, J$.Th(4161, J$.T(4153, {
                                            message: J$.T(4089, 'Properties must be inside selector blocks. They cannot be in the root', 21, false),
                                            index: J$.G(4105, J$.R(4097, 'ruleNode', ruleNode, 0), 'index', 0),
                                            filename: J$.C(304, J$.G(4121, J$.R(4113, 'ruleNode', ruleNode, 0), 'currentFileInfo', 0)) ? J$.G(4145, J$.G(4137, J$.R(4129, 'ruleNode', ruleNode, 0), 'currentFileInfo', 0), 'filename', 0) : J$._()
                                        }, 11, false)));
                                    }
                                    if (J$.X1(8881, J$.C(328, J$.B(266, 'instanceof', J$.R(4177, 'ruleNode', ruleNode, 0), J$.G(4193, J$.R(4185, 'tree', tree, 1), 'Call', 0), 0)))) {
                                        throw J$.X1(4305, J$.Th(4297, J$.T(4289, {
                                            message: J$.B(282, '+', J$.B(274, '+', J$.T(4201, 'Function \'', 21, false), J$.G(4217, J$.R(4209, 'ruleNode', ruleNode, 0), 'name', 0), 0), J$.T(4225, '\' is undefined', 21, false), 0),
                                            index: J$.G(4241, J$.R(4233, 'ruleNode', ruleNode, 0), 'index', 0),
                                            filename: J$.C(320, J$.G(4257, J$.R(4249, 'ruleNode', ruleNode, 0), 'currentFileInfo', 0)) ? J$.G(4281, J$.G(4273, J$.R(4265, 'ruleNode', ruleNode, 0), 'currentFileInfo', 0), 'filename', 0) : J$._()
                                        }, 11, false)));
                                    }
                                    if (J$.X1(8889, J$.C(352, J$.C(336, J$.G(4321, J$.R(4313, 'ruleNode', ruleNode, 0), 'type', 0)) ? J$.U(290, '!', J$.G(4337, J$.R(4329, 'ruleNode', ruleNode, 0), 'allowRoot', 0)) : J$._()))) {
                                        throw J$.X1(4441, J$.Th(4433, J$.T(4425, {
                                            message: J$.B(298, '+', J$.G(4353, J$.R(4345, 'ruleNode', ruleNode, 0), 'type', 0), J$.T(4361, ' node returned by a function is not valid here', 21, false), 0),
                                            index: J$.G(4377, J$.R(4369, 'ruleNode', ruleNode, 0), 'index', 0),
                                            filename: J$.C(344, J$.G(4393, J$.R(4385, 'ruleNode', ruleNode, 0), 'currentFileInfo', 0)) ? J$.G(4417, J$.G(4409, J$.R(4401, 'ruleNode', ruleNode, 0), 'currentFileInfo', 0), 'filename', 0) : J$._()
                                        }, 11, false)));
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(8913, J$e);
                            } finally {
                                if (J$.Fr(8921))
                                    continue jalangiLabel618;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4449),
                visitRuleset: J$.T(5545, function (rulesetNode, visitArgs) {
                    jalangiLabel619:
                        while (true) {
                            try {
                                J$.Fe(5473, arguments.callee, this, arguments);
                                arguments = J$.N(5481, 'arguments', arguments, 4);
                                rulesetNode = J$.N(5489, 'rulesetNode', rulesetNode, 4);
                                visitArgs = J$.N(5497, 'visitArgs', visitArgs, 4);
                                J$.N(5505, 'rule', rule, 0);
                                J$.N(5513, 'rulesets', rulesets, 0);
                                J$.N(5521, 'nodeRules', nodeRules, 0);
                                J$.N(5529, 'nodeRuleCnt', nodeRuleCnt, 0);
                                J$.N(5537, 'i', i, 0);
                                var rule, rulesets = J$.X1(4521, J$.W(4513, 'rulesets', J$.T(4505, [], 10, false), rulesets, 1));
                                J$.X1(4577, J$.M(4569, J$.R(4529, 'this', this, 0), 'checkValidNodes', 0)(J$.G(4545, J$.R(4537, 'rulesetNode', rulesetNode, 0), 'rules', 0), J$.G(4561, J$.R(4553, 'rulesetNode', rulesetNode, 0), 'firstRoot', 0)));
                                if (J$.X1(8961, J$.C(408, J$.U(306, '!', J$.G(4593, J$.R(4585, 'rulesetNode', rulesetNode, 0), 'root', 0))))) {
                                    J$.X1(4625, J$.M(4617, J$.R(4601, 'this', this, 0), '_compileRulesetPaths', 0)(J$.R(4609, 'rulesetNode', rulesetNode, 0)));
                                    var nodeRules = J$.X1(4689, J$.W(4681, 'nodeRules', J$.G(4641, J$.R(4633, 'rulesetNode', rulesetNode, 0), 'rules', 0), nodeRules, 1)), nodeRuleCnt = J$.X1(4705, J$.W(4697, 'nodeRuleCnt', J$.X1(8929, J$.C(368, J$.R(4649, 'nodeRules', nodeRules, 0))) ? J$.G(4665, J$.R(4657, 'nodeRules', nodeRules, 0), 'length', 0) : J$.T(4673, 0, 22, false), nodeRuleCnt, 1));
                                    for (var i = J$.X1(4729, J$.W(4721, 'i', J$.T(4713, 0, 22, false), i, 1)); J$.X1(8945, J$.C(392, J$.B(314, '<', J$.R(4737, 'i', i, 0), J$.R(4745, 'nodeRuleCnt', nodeRuleCnt, 0), 0)));) {
                                        J$.X1(4785, rule = J$.W(4777, 'rule', J$.G(4769, J$.R(4753, 'nodeRules', nodeRules, 0), J$.R(4761, 'i', i, 0), 4), rule, 0));
                                        if (J$.X1(8937, J$.C(384, J$.C(376, J$.R(4793, 'rule', rule, 0)) ? J$.G(4809, J$.R(4801, 'rule', rule, 0), 'rules', 0) : J$._()))) {
                                            J$.X1(4865, J$.M(4857, J$.R(4817, 'rulesets', rulesets, 0), 'push', 0)(J$.M(4849, J$.G(4833, J$.R(4825, 'this', this, 0), '_visitor', 0), 'visit', 0)(J$.R(4841, 'rule', rule, 0))));
                                            J$.X1(4905, J$.M(4897, J$.R(4873, 'nodeRules', nodeRules, 0), 'splice', 0)(J$.R(4881, 'i', i, 0), J$.T(4889, 1, 22, false)));
                                            J$.X1(4945, J$.B(338, '+', nodeRuleCnt = J$.W(4929, 'nodeRuleCnt', J$.B(330, '-', J$.U(322, '+', J$.R(4921, 'nodeRuleCnt', nodeRuleCnt, 0)), J$.T(4913, 1, 22, false), 0), nodeRuleCnt, 0), J$.T(4937, 1, 22, false), 0));
                                            continue;
                                        }
                                        J$.X1(4985, J$.B(362, '-', i = J$.W(4969, 'i', J$.B(354, '+', J$.U(346, '+', J$.R(4961, 'i', i, 0)), J$.T(4953, 1, 22, false), 0), i, 0), J$.T(4977, 1, 22, false), 0));
                                    }
                                    if (J$.X1(8953, J$.C(400, J$.B(370, '>', J$.R(4993, 'nodeRuleCnt', nodeRuleCnt, 0), J$.T(5001, 0, 22, false), 0)))) {
                                        J$.X1(5041, J$.M(5033, J$.R(5009, 'rulesetNode', rulesetNode, 0), 'accept', 0)(J$.G(5025, J$.R(5017, 'this', this, 0), '_visitor', 0)));
                                    } else {
                                        J$.X1(5073, J$.P(5065, J$.R(5049, 'rulesetNode', rulesetNode, 0), 'rules', J$.T(5057, null, 25, false), 0));
                                    }
                                    J$.X1(5105, J$.P(5097, J$.R(5081, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(5089, false, 23, false), 0));
                                } else {
                                    J$.X1(5145, J$.M(5137, J$.R(5113, 'rulesetNode', rulesetNode, 0), 'accept', 0)(J$.G(5129, J$.R(5121, 'this', this, 0), '_visitor', 0)));
                                    J$.X1(5177, J$.P(5169, J$.R(5153, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(5161, false, 23, false), 0));
                                }
                                if (J$.X1(8969, J$.C(416, J$.G(5193, J$.R(5185, 'rulesetNode', rulesetNode, 0), 'rules', 0)))) {
                                    J$.X1(5233, J$.M(5225, J$.R(5201, 'this', this, 0), '_mergeRules', 0)(J$.G(5217, J$.R(5209, 'rulesetNode', rulesetNode, 0), 'rules', 0)));
                                    J$.X1(5273, J$.M(5265, J$.R(5241, 'this', this, 0), '_removeDuplicateRules', 0)(J$.G(5257, J$.R(5249, 'rulesetNode', rulesetNode, 0), 'rules', 0)));
                                }
                                if (J$.X1(8977, J$.C(424, J$.M(5305, J$.G(5289, J$.R(5281, 'this', this, 0), 'utils', 0), 'isVisibleRuleset', 0)(J$.R(5297, 'rulesetNode', rulesetNode, 0))))) {
                                    J$.X1(5329, J$.M(5321, J$.R(5313, 'rulesetNode', rulesetNode, 0), 'ensureVisibility', 0)());
                                    J$.X1(5377, J$.M(5369, J$.R(5337, 'rulesets', rulesets, 0), 'splice', 0)(J$.T(5345, 0, 22, false), J$.T(5353, 0, 22, false), J$.R(5361, 'rulesetNode', rulesetNode, 0)));
                                }
                                if (J$.X1(8985, J$.C(432, J$.B(378, '===', J$.G(5393, J$.R(5385, 'rulesets', rulesets, 0), 'length', 0), J$.T(5401, 1, 22, false), 0)))) {
                                    return J$.X1(5441, J$.Rt(5433, J$.G(5425, J$.R(5409, 'rulesets', rulesets, 0), J$.T(5417, 0, 22, false), 4)));
                                }
                                return J$.X1(5465, J$.Rt(5457, J$.R(5449, 'rulesets', rulesets, 0)));
                            } catch (J$e) {
                                J$.Ex(8993, J$e);
                            } finally {
                                if (J$.Fr(9001))
                                    continue jalangiLabel619;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 5473),
                _compileRulesetPaths: J$.T(6025, function (rulesetNode) {
                    jalangiLabel621:
                        while (true) {
                            try {
                                J$.Fe(6001, arguments.callee, this, arguments);
                                arguments = J$.N(6009, 'arguments', arguments, 4);
                                rulesetNode = J$.N(6017, 'rulesetNode', rulesetNode, 4);
                                if (J$.X1(9065, J$.C(472, J$.G(5561, J$.R(5553, 'rulesetNode', rulesetNode, 0), 'paths', 0)))) {
                                    J$.X1(5993, J$.P(5985, J$.R(5569, 'rulesetNode', rulesetNode, 0), 'paths', J$.M(5977, J$.G(5585, J$.R(5577, 'rulesetNode', rulesetNode, 0), 'paths', 0), 'filter', 0)(J$.T(5969, function (p) {
                                        jalangiLabel620:
                                            while (true) {
                                                try {
                                                    J$.Fe(5937, arguments.callee, this, arguments);
                                                    arguments = J$.N(5945, 'arguments', arguments, 4);
                                                    p = J$.N(5953, 'p', p, 4);
                                                    J$.N(5961, 'i', i, 0);
                                                    var i;
                                                    if (J$.X1(9009, J$.C(440, J$.B(386, '===', J$.G(5649, J$.G(5641, J$.G(5633, J$.G(5617, J$.G(5609, J$.R(5593, 'p', p, 0), J$.T(5601, 0, 22, false), 4), 'elements', 0), J$.T(5625, 0, 22, false), 4), 'combinator', 0), 'value', 0), J$.T(5657, ' ', 21, false), 0)))) {
                                                        J$.X1(5745, J$.P(5737, J$.G(5705, J$.G(5689, J$.G(5681, J$.R(5665, 'p', p, 0), J$.T(5673, 0, 22, false), 4), 'elements', 0), J$.T(5697, 0, 22, false), 4), 'combinator', J$.M(5729, J$.R(5713, 'tree', tree, 1), 'Combinator', 2)(J$.T(5721, '', 21, false)), 0));
                                                    }
                                                    for (J$.X1(9033, i = J$.W(5761, 'i', J$.T(5753, 0, 22, false), i, 0)); J$.X1(9025, J$.C(464, J$.B(394, '<', J$.R(5769, 'i', i, 0), J$.G(5785, J$.R(5777, 'p', p, 0), 'length', 0), 0))); J$.X1(9041, J$.B(418, '-', i = J$.W(5809, 'i', J$.B(410, '+', J$.U(402, '+', J$.R(5801, 'i', i, 0)), J$.T(5793, 1, 22, false), 0), i, 0), J$.T(5817, 1, 22, false), 0))) {
                                                        if (J$.X1(9017, J$.C(456, J$.C(448, J$.M(5849, J$.G(5841, J$.R(5825, 'p', p, 0), J$.R(5833, 'i', i, 0), 4), 'isVisible', 0)()) ? J$.M(5881, J$.G(5873, J$.R(5857, 'p', p, 0), J$.R(5865, 'i', i, 0), 4), 'getIsOutput', 0)() : J$._()))) {
                                                            return J$.X1(5905, J$.Rt(5897, J$.T(5889, true, 23, false)));
                                                        }
                                                    }
                                                    return J$.X1(5929, J$.Rt(5921, J$.T(5913, false, 23, false)));
                                                } catch (J$e) {
                                                    J$.Ex(9049, J$e);
                                                } finally {
                                                    if (J$.Fr(9057))
                                                        continue jalangiLabel620;
                                                    else
                                                        return J$.Ra();
                                                }
                                            }
                                    }, 12, false, 5937)), 0));
                                }
                            } catch (J$e) {
                                J$.Ex(9073, J$e);
                            } finally {
                                if (J$.Fr(9081))
                                    continue jalangiLabel621;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 6001),
                _removeDuplicateRules: J$.T(6705, function (rules) {
                    jalangiLabel622:
                        while (true) {
                            try {
                                J$.Fe(6641, arguments.callee, this, arguments);
                                arguments = J$.N(6649, 'arguments', arguments, 4);
                                rules = J$.N(6657, 'rules', rules, 4);
                                J$.N(6665, 'ruleCache', ruleCache, 0);
                                J$.N(6673, 'ruleList', ruleList, 0);
                                J$.N(6681, 'rule', rule, 0);
                                J$.N(6689, 'i', i, 0);
                                J$.N(6697, 'ruleCSS', ruleCSS, 0);
                                if (J$.X1(9089, J$.C(480, J$.U(426, '!', J$.R(6033, 'rules', rules, 0))))) {
                                    return J$.X1(6049, J$.Rt(6041, undefined));
                                }
                                var ruleCache = J$.X1(6073, J$.W(6065, 'ruleCache', J$.T(6057, {}, 11, false), ruleCache, 1)), ruleList, rule, i;
                                for (J$.X1(9137, i = J$.W(6105, 'i', J$.B(434, '-', J$.G(6089, J$.R(6081, 'rules', rules, 0), 'length', 0), J$.T(6097, 1, 22, false), 0), i, 0)); J$.X1(9129, J$.C(520, J$.B(442, '>=', J$.R(6113, 'i', i, 0), J$.T(6121, 0, 22, false), 0))); J$.X1(9145, J$.B(466, '+', i = J$.W(6145, 'i', J$.B(458, '-', J$.U(450, '+', J$.R(6137, 'i', i, 0)), J$.T(6129, 1, 22, false), 0), i, 0), J$.T(6153, 1, 22, false), 0))) {
                                    J$.X1(6193, rule = J$.W(6185, 'rule', J$.G(6177, J$.R(6161, 'rules', rules, 0), J$.R(6169, 'i', i, 0), 4), rule, 0));
                                    if (J$.X1(9121, J$.C(512, J$.B(474, 'instanceof', J$.R(6201, 'rule', rule, 0), J$.G(6217, J$.R(6209, 'tree', tree, 1), 'Rule', 0), 0)))) {
                                        if (J$.X1(9113, J$.C(504, J$.U(482, '!', J$.G(6249, J$.R(6225, 'ruleCache', ruleCache, 0), J$.G(6241, J$.R(6233, 'rule', rule, 0), 'name', 0), 4))))) {
                                            J$.X1(6297, J$.P(6289, J$.R(6257, 'ruleCache', ruleCache, 0), J$.G(6273, J$.R(6265, 'rule', rule, 0), 'name', 0), J$.R(6281, 'rule', rule, 0), 2));
                                        } else {
                                            J$.X1(6345, ruleList = J$.W(6337, 'ruleList', J$.G(6329, J$.R(6305, 'ruleCache', ruleCache, 0), J$.G(6321, J$.R(6313, 'rule', rule, 0), 'name', 0), 4), ruleList, 0));
                                            if (J$.X1(9097, J$.C(488, J$.B(490, 'instanceof', J$.R(6353, 'ruleList', ruleList, 0), J$.G(6369, J$.R(6361, 'tree', tree, 1), 'Rule', 0), 0)))) {
                                                J$.X1(6481, ruleList = J$.W(6473, 'ruleList', J$.P(6465, J$.R(6377, 'ruleCache', ruleCache, 0), J$.G(6393, J$.R(6385, 'rule', rule, 0), 'name', 0), J$.T(6457, [J$.M(6449, J$.G(6425, J$.R(6401, 'ruleCache', ruleCache, 0), J$.G(6417, J$.R(6409, 'rule', rule, 0), 'name', 0), 4), 'toCSS', 0)(J$.G(6441, J$.R(6433, 'this', this, 0), '_context', 0))], 10, false), 2), ruleList, 0));
                                            }
                                            var ruleCSS = J$.X1(6529, J$.W(6521, 'ruleCSS', J$.M(6513, J$.R(6489, 'rule', rule, 0), 'toCSS', 0)(J$.G(6505, J$.R(6497, 'this', this, 0), '_context', 0)), ruleCSS, 1));
                                            if (J$.X1(9105, J$.C(496, J$.B(506, '!==', J$.M(6553, J$.R(6537, 'ruleList', ruleList, 0), 'indexOf', 0)(J$.R(6545, 'ruleCSS', ruleCSS, 0)), J$.U(498, '-', J$.T(6561, 1, 22, false)), 0)))) {
                                                J$.X1(6601, J$.M(6593, J$.R(6569, 'rules', rules, 0), 'splice', 0)(J$.R(6577, 'i', i, 0), J$.T(6585, 1, 22, false)));
                                            } else {
                                                J$.X1(6633, J$.M(6625, J$.R(6609, 'ruleList', ruleList, 0), 'push', 0)(J$.R(6617, 'ruleCSS', ruleCSS, 0)));
                                            }
                                        }
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(9153, J$e);
                            } finally {
                                if (J$.Fr(9161))
                                    continue jalangiLabel622;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 6641),
                _mergeRules: J$.T(8089, function (rules) {
                    jalangiLabel629:
                        while (true) {
                            try {
                                J$.Fe(8025, arguments.callee, this, arguments);
                                arguments = J$.N(8033, 'arguments', arguments, 4);
                                rules = J$.N(8041, 'rules', rules, 4);
                                J$.N(8049, 'groups', groups, 0);
                                J$.N(8057, 'parts', parts, 0);
                                J$.N(8065, 'rule', rule, 0);
                                J$.N(8073, 'key', key, 0);
                                J$.N(8081, 'i', i, 0);
                                if (J$.X1(9169, J$.C(528, J$.U(514, '!', J$.R(6713, 'rules', rules, 0))))) {
                                    return J$.X1(6729, J$.Rt(6721, undefined));
                                }
                                var groups = J$.X1(6753, J$.W(6745, 'groups', J$.T(6737, {}, 11, false), groups, 1)), parts, rule, key;
                                for (var i = J$.X1(6777, J$.W(6769, 'i', J$.T(6761, 0, 22, false), i, 1)); J$.X1(9201, J$.C(568, J$.B(522, '<', J$.R(6785, 'i', i, 0), J$.G(6801, J$.R(6793, 'rules', rules, 0), 'length', 0), 0))); J$.X1(9209, J$.B(546, '-', i = J$.W(6825, 'i', J$.B(538, '+', J$.U(530, '+', J$.R(6817, 'i', i, 0)), J$.T(6809, 1, 22, false), 0), i, 0), J$.T(6833, 1, 22, false), 0))) {
                                    J$.X1(6873, rule = J$.W(6865, 'rule', J$.G(6857, J$.R(6841, 'rules', rules, 0), J$.R(6849, 'i', i, 0), 4), rule, 0));
                                    if (J$.X1(9193, J$.C(560, J$.C(536, J$.B(554, 'instanceof', J$.R(6881, 'rule', rule, 0), J$.G(6897, J$.R(6889, 'tree', tree, 1), 'Rule', 0), 0)) ? J$.G(6913, J$.R(6905, 'rule', rule, 0), 'merge', 0) : J$._()))) {
                                        J$.X1(7001, key = J$.W(6993, 'key', J$.M(6985, J$.T(6969, [
                                            J$.G(6929, J$.R(6921, 'rule', rule, 0), 'name', 0),
                                            J$.X1(9177, J$.C(544, J$.G(6945, J$.R(6937, 'rule', rule, 0), 'important', 0))) ? J$.T(6953, '!', 21, false) : J$.T(6961, '', 21, false)
                                        ], 10, false), 'join', 0)(J$.T(6977, ',', 21, false)), key, 0));
                                        if (J$.X1(9185, J$.C(552, J$.U(562, '!', J$.G(7025, J$.R(7009, 'groups', groups, 0), J$.R(7017, 'key', key, 0), 4))))) {
                                            J$.X1(7065, J$.P(7057, J$.R(7033, 'groups', groups, 0), J$.R(7041, 'key', key, 0), J$.T(7049, [], 10, false), 2));
                                        } else {
                                            J$.X1(7129, J$.M(7121, J$.R(7073, 'rules', rules, 0), 'splice', 0)(J$.B(586, '+', i = J$.W(7097, 'i', J$.B(578, '-', J$.U(570, '+', J$.R(7089, 'i', i, 0)), J$.T(7081, 1, 22, false), 0), i, 0), J$.T(7105, 1, 22, false), 0), J$.T(7113, 1, 22, false)));
                                        }
                                        J$.X1(7177, J$.M(7169, J$.G(7153, J$.R(7137, 'groups', groups, 0), J$.R(7145, 'key', key, 0), 4), 'push', 0)(J$.R(7161, 'rule', rule, 0)));
                                    }
                                }
                                J$.X1(8017, J$.M(8009, J$.M(7201, J$.R(7185, 'Object', Object, 2), 'keys', 0)(J$.R(7193, 'groups', groups, 0)), 'map', 0)(J$.T(8001, function (k) {
                                    jalangiLabel628:
                                        while (true) {
                                            try {
                                                J$.Fe(7929, arguments.callee, this, arguments);
                                                function toExpression(values) {
                                                    jalangiLabel624:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7321, arguments.callee, this, arguments);
                                                                arguments = J$.N(7329, 'arguments', arguments, 4);
                                                                values = J$.N(7337, 'values', values, 4);
                                                                return J$.X1(7313, J$.Rt(7305, J$.M(7297, J$.R(7209, 'tree', tree, 1), 'Expression', 2)(J$.M(7289, J$.R(7217, 'values', values, 0), 'map', 0)(J$.T(7281, function (p) {
                                                                    jalangiLabel623:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(7257, arguments.callee, this, arguments);
                                                                                arguments = J$.N(7265, 'arguments', arguments, 4);
                                                                                p = J$.N(7273, 'p', p, 4);
                                                                                return J$.X1(7249, J$.Rt(7241, J$.G(7233, J$.R(7225, 'p', p, 0), 'value', 0)));
                                                                            } catch (J$e) {
                                                                                J$.Ex(9217, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(9225))
                                                                                    continue jalangiLabel623;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 7257)))));
                                                            } catch (J$e) {
                                                                J$.Ex(9233, J$e);
                                                            } finally {
                                                                if (J$.Fr(9241))
                                                                    continue jalangiLabel624;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }
                                                function toValue(values) {
                                                    jalangiLabel626:
                                                        while (true) {
                                                            try {
                                                                J$.Fe(7449, arguments.callee, this, arguments);
                                                                arguments = J$.N(7457, 'arguments', arguments, 4);
                                                                values = J$.N(7465, 'values', values, 4);
                                                                return J$.X1(7441, J$.Rt(7433, J$.M(7425, J$.R(7345, 'tree', tree, 1), 'Value', 2)(J$.M(7417, J$.R(7353, 'values', values, 0), 'map', 0)(J$.T(7409, function (p) {
                                                                    jalangiLabel625:
                                                                        while (true) {
                                                                            try {
                                                                                J$.Fe(7385, arguments.callee, this, arguments);
                                                                                arguments = J$.N(7393, 'arguments', arguments, 4);
                                                                                p = J$.N(7401, 'p', p, 4);
                                                                                return J$.X1(7377, J$.Rt(7369, J$.R(7361, 'p', p, 0)));
                                                                            } catch (J$e) {
                                                                                J$.Ex(9249, J$e);
                                                                            } finally {
                                                                                if (J$.Fr(9257))
                                                                                    continue jalangiLabel625;
                                                                                else
                                                                                    return J$.Ra();
                                                                            }
                                                                        }
                                                                }, 12, false, 7385)))));
                                                            } catch (J$e) {
                                                                J$.Ex(9265, J$e);
                                                            } finally {
                                                                if (J$.Fr(9273))
                                                                    continue jalangiLabel626;
                                                                else
                                                                    return J$.Ra();
                                                            }
                                                        }
                                                }
                                                arguments = J$.N(7937, 'arguments', arguments, 4);
                                                k = J$.N(7945, 'k', k, 4);
                                                toExpression = J$.N(7961, 'toExpression', J$.T(7953, toExpression, 12, false, 7321), 0);
                                                toValue = J$.N(7977, 'toValue', J$.T(7969, toValue, 12, false, 7449), 0);
                                                J$.N(7985, 'spacedGroups', spacedGroups, 0);
                                                J$.N(7993, 'lastSpacedGroup', lastSpacedGroup, 0);
                                                J$.X1(7505, parts = J$.W(7497, 'parts', J$.G(7489, J$.R(7473, 'groups', groups, 0), J$.R(7481, 'k', k, 0), 4), parts, 0));
                                                if (J$.X1(9313, J$.C(592, J$.B(594, '>', J$.G(7521, J$.R(7513, 'parts', parts, 0), 'length', 0), J$.T(7529, 1, 22, false), 0)))) {
                                                    J$.X1(7569, rule = J$.W(7561, 'rule', J$.G(7553, J$.R(7537, 'parts', parts, 0), J$.T(7545, 0, 22, false), 4), rule, 0));
                                                    var spacedGroups = J$.X1(7593, J$.W(7585, 'spacedGroups', J$.T(7577, [], 10, false), spacedGroups, 1));
                                                    var lastSpacedGroup = J$.X1(7617, J$.W(7609, 'lastSpacedGroup', J$.T(7601, [], 10, false), lastSpacedGroup, 1));
                                                    J$.X1(7825, J$.M(7817, J$.R(7625, 'parts', parts, 0), 'map', 0)(J$.T(7809, function (p) {
                                                        jalangiLabel627:
                                                            while (true) {
                                                                try {
                                                                    J$.Fe(7785, arguments.callee, this, arguments);
                                                                    arguments = J$.N(7793, 'arguments', arguments, 4);
                                                                    p = J$.N(7801, 'p', p, 4);
                                                                    if (J$.X1(9289, J$.C(584, J$.B(602, '===', J$.G(7641, J$.R(7633, 'p', p, 0), 'merge', 0), J$.T(7649, '+', 21, false), 0)))) {
                                                                        if (J$.X1(9281, J$.C(576, J$.B(610, '>', J$.G(7665, J$.R(7657, 'lastSpacedGroup', lastSpacedGroup, 0), 'length', 0), J$.T(7673, 0, 22, false), 0)))) {
                                                                            J$.X1(7721, J$.M(7713, J$.R(7681, 'spacedGroups', spacedGroups, 0), 'push', 0)(J$.F(7705, J$.R(7689, 'toExpression', toExpression, 0), 0)(J$.R(7697, 'lastSpacedGroup', lastSpacedGroup, 0))));
                                                                        }
                                                                        J$.X1(7745, lastSpacedGroup = J$.W(7737, 'lastSpacedGroup', J$.T(7729, [], 10, false), lastSpacedGroup, 0));
                                                                    }
                                                                    J$.X1(7777, J$.M(7769, J$.R(7753, 'lastSpacedGroup', lastSpacedGroup, 0), 'push', 0)(J$.R(7761, 'p', p, 0)));
                                                                } catch (J$e) {
                                                                    J$.Ex(9297, J$e);
                                                                } finally {
                                                                    if (J$.Fr(9305))
                                                                        continue jalangiLabel627;
                                                                    else
                                                                        return J$.Ra();
                                                                }
                                                            }
                                                    }, 12, false, 7785)));
                                                    J$.X1(7873, J$.M(7865, J$.R(7833, 'spacedGroups', spacedGroups, 0), 'push', 0)(J$.F(7857, J$.R(7841, 'toExpression', toExpression, 0), 0)(J$.R(7849, 'lastSpacedGroup', lastSpacedGroup, 0))));
                                                    J$.X1(7921, J$.P(7913, J$.R(7881, 'rule', rule, 0), 'value', J$.F(7905, J$.R(7889, 'toValue', toValue, 0), 0)(J$.R(7897, 'spacedGroups', spacedGroups, 0)), 0));
                                                }
                                            } catch (J$e) {
                                                J$.Ex(9321, J$e);
                                            } finally {
                                                if (J$.Fr(9329))
                                                    continue jalangiLabel628;
                                                else
                                                    return J$.Ra();
                                            }
                                        }
                                }, 12, false, 7929)));
                            } catch (J$e) {
                                J$.Ex(9337, J$e);
                            } finally {
                                if (J$.Fr(9345))
                                    continue jalangiLabel629;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 8025),
                visitAnonymous: J$.T(8225, function (anonymousNode, visitArgs) {
                    jalangiLabel630:
                        while (true) {
                            try {
                                J$.Fe(8193, arguments.callee, this, arguments);
                                arguments = J$.N(8201, 'arguments', arguments, 4);
                                anonymousNode = J$.N(8209, 'anonymousNode', anonymousNode, 4);
                                visitArgs = J$.N(8217, 'visitArgs', visitArgs, 4);
                                if (J$.X1(9353, J$.C(600, J$.M(8105, J$.R(8097, 'anonymousNode', anonymousNode, 0), 'blocksVisibility', 0)()))) {
                                    return J$.X1(8121, J$.Rt(8113, undefined));
                                }
                                J$.X1(8161, J$.M(8153, J$.R(8129, 'anonymousNode', anonymousNode, 0), 'accept', 0)(J$.G(8145, J$.R(8137, 'this', this, 0), '_visitor', 0)));
                                return J$.X1(8185, J$.Rt(8177, J$.R(8169, 'anonymousNode', anonymousNode, 0)));
                            } catch (J$e) {
                                J$.Ex(9361, J$e);
                            } finally {
                                if (J$.Fr(9369))
                                    continue jalangiLabel630;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 8193)
            }, 11, false), 0));
            J$.X1(8281, J$.P(8273, J$.R(8257, 'module', module, 2), 'exports', J$.R(8265, 'ToCSSVisitor', ToCSSVisitor, 1), 0));
        } catch (J$e) {
            J$.Ex(9377, J$e);
        } finally {
            if (J$.Sr(9385)) {
                J$.L();
                continue jalangiLabel631;
            } else {
                J$.L();
                break jalangiLabel631;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
