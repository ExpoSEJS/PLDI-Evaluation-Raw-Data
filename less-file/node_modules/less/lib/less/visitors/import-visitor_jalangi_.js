J$.iids = {"8":[26,13,26,29],"9":[1,20,1,27],"10":[26,13,26,29],"16":[33,13,33,41],"17":[1,28,1,32],"18":[33,13,33,28],"24":[37,17,37,46],"25":[1,20,1,33],"26":[36,13,36,31],"32":[33,13,33,41],"33":[1,20,1,33],"34":[50,17,50,28],"40":[50,17,50,28],"41":[1,20,1,33],"42":[57,33,57,53],"48":[57,33,57,66],"49":[2,26,2,38],"50":[61,42,61,75],"56":[57,13,57,67],"57":[2,26,2,45],"58":[62,29,62,58],"64":[58,17,58,49],"65":[2,26,2,45],"66":[62,60,62,63],"72":[63,21,63,57],"73":[2,26,2,45],"80":[62,29,62,58],"81":[3,16,3,23],"82":[62,60,62,63],"88":[72,17,72,32],"89":[3,24,3,37],"90":[63,21,63,57],"96":[57,13,57,67],"97":[3,16,3,38],"98":[71,13,71,31],"104":[79,17,79,28],"105":[3,50,3,57],"106":[79,17,79,28],"112":[78,13,78,14],"113":[3,58,3,69],"114":[85,190,85,233],"120":[85,172,85,233],"121":[3,50,3,70],"122":[86,13,86,36],"128":[91,25,91,71],"129":[3,90,3,97],"130":[91,25,91,71],"136":[87,17,87,32],"137":[3,98,3,118],"138":[99,13,99,22],"144":[86,13,86,36],"145":[3,90,3,119],"146":[105,17,105,27],"152":[99,13,99,36],"153":[3,16,3,38],"154":[105,31,105,40],"160":[99,13,99,36],"161":[3,16,3,38],"162":[105,71,105,87],"168":[105,17,105,40],"169":[3,50,3,70],"170":[117,9,117,36],"176":[105,45,105,87],"177":[3,50,3,70],"178":[123,13,123,54],"184":[105,17,105,88],"185":[3,90,3,119],"186":[130,13,130,54],"192":[105,17,105,88],"193":[3,90,3,119],"200":[102,13,102,17],"201":[5,5,5,9],"208":[118,13,118,37],"209":[5,25,5,32],"216":[123,13,123,54],"217":[5,33,5,37],"224":[130,13,130,54],"225":[5,21,5,38],"233":[5,5,5,38],"241":[5,5,5,39],"249":[6,5,6,9],"257":[6,22,6,30],"265":[6,5,6,30],"273":[6,5,6,31],"281":[7,5,7,9],"289":[7,20,7,26],"297":[7,5,7,26],"305":[7,5,7,27],"313":[8,5,8,9],"321":[8,24,8,32],"329":[8,20,8,39],"331":[8,24,8,37],"337":[8,5,8,39],"345":[8,5,8,40],"353":[9,5,9,9],"361":[9,24,9,25],"369":[9,5,9,25],"377":[9,5,9,26],"385":[10,5,10,9],"393":[10,33,10,35],"401":[10,5,10,35],"409":[10,5,10,36],"417":[11,5,11,9],"425":[11,30,11,32],"433":[11,5,11,32],"441":[11,5,11,33],"449":[12,5,12,9],"457":[12,27,12,42],"465":[12,43,12,47],"473":[12,43,12,65],"481":[12,71,12,75],"489":[12,43,12,76],"491":[12,43,12,70],"497":[12,23,12,77],"505":[12,5,12,77],"513":[12,5,12,78],"521":[4,21,13,2],"529":[4,21,13,2],"537":[4,21,13,2],"545":[4,21,13,2],"553":[4,21,13,2],"561":[4,21,13,2],"569":[4,21,13,2],"577":[14,1,14,14],"585":[15,18,15,23],"593":[18,13,18,17],"601":[18,13,18,26],"609":[18,33,18,37],"617":[18,13,18,38],"619":[18,13,18,32],"625":[18,13,18,39],"633":[20,13,20,17],"641":[20,26,20,27],"649":[20,13,20,27],"657":[20,13,20,28],"665":[19,11,21,10],"673":[22,9,22,13],"681":[22,27,22,31],"689":[22,9,22,31],"697":[22,9,22,32],"705":[23,9,23,13],"713":[23,9,23,24],"721":[23,9,23,33],"723":[23,9,23,31],"729":[23,9,23,34],"737":[16,10,24,6],"745":[16,10,24,6],"753":[16,10,24,6],"761":[16,10,24,6],"769":[26,14,26,18],"777":[26,14,26,29],"785":[27,13,27,20],"793":[27,13,27,20],"801":[29,9,29,13],"809":[29,22,29,26],"817":[29,22,29,32],"825":[29,9,29,33],"827":[29,9,29,21],"833":[29,9,29,34],"841":[25,24,30,6],"849":[25,24,30,6],"857":[25,24,30,6],"865":[32,25,32,35],"873":[32,25,32,43],"881":[32,25,32,50],"889":[32,25,32,50],"897":[32,25,32,50],"905":[33,14,33,24],"913":[33,14,33,28],"921":[33,32,33,41],"929":[34,31,34,39],"937":[34,45,34,49],"945":[34,45,34,57],"953":[34,59,34,63],"961":[34,59,34,71],"969":[34,59,34,78],"977":[34,85,34,86],"985":[34,59,34,87],"987":[34,59,34,84],"993":[34,27,34,88],"995":[34,31,34,44],"1001":[34,27,34,88],"1009":[34,27,34,88],"1017":[35,32,35,39],"1025":[35,32,35,46],"1033":[35,47,35,48],"1041":[35,32,35,49],"1049":[35,32,35,49],"1057":[35,32,35,49],"1065":[36,13,36,17],"1081":[36,13,36,31],"1083":[36,13,36,31],"1097":[36,13,36,32],"1105":[37,17,37,27],"1113":[37,17,37,46],"1115":[37,17,37,44],"1121":[38,17,38,21],"1129":[38,17,38,32],"1137":[38,51,38,55],"1145":[38,51,38,73],"1153":[38,79,38,83],"1161":[38,85,38,95],"1169":[38,97,38,104],"1177":[38,106,38,118],"1185":[38,51,38,119],"1187":[38,51,38,78],"1193":[38,17,38,120],"1195":[38,17,38,50],"1201":[38,17,38,121],"1209":[40,17,40,21],"1217":[40,40,40,50],"1225":[40,52,40,59],"1233":[40,61,40,73],"1241":[40,17,40,74],"1243":[40,17,40,39],"1249":[40,17,40,75],"1257":[43,9,43,18],"1265":[43,33,43,38],"1273":[43,9,43,38],"1281":[43,9,43,39],"1289":[31,18,44,6],"1297":[31,18,44,6],"1305":[31,18,44,6],"1313":[31,18,44,6],"1321":[31,18,44,6],"1329":[31,18,44,6],"1337":[31,18,44,6],"1345":[31,18,44,6],"1353":[46,42,46,52],"1361":[46,42,46,60],"1369":[46,42,46,67],"1377":[46,42,46,67],"1385":[46,42,46,67],"1393":[48,31,48,41],"1401":[48,56,48,63],"1409":[48,31,48,64],"1411":[48,31,48,55],"1417":[48,31,48,64],"1425":[48,13,48,65],"1433":[50,18,50,19],"1441":[50,18,50,28],"1449":[51,17,51,18],"1457":[51,27,51,37],"1465":[51,27,51,43],"1473":[51,17,51,43],"1481":[51,17,51,44],"1489":[52,17,52,18],"1497":[52,30,52,40],"1505":[52,30,52,56],"1513":[52,30,52,65],"1521":[52,17,52,65],"1529":[52,17,52,66],"1537":[54,13,54,23],"1545":[54,30,54,34],"1553":[54,13,54,34],"1561":[54,13,54,35],"1569":[55,13,55,23],"1577":[55,32,55,33],"1585":[55,13,55,33],"1593":[55,13,55,34],"1601":[49,11,56,10],"1609":[57,13,57,28],"1617":[57,34,57,49],"1625":[57,34,57,53],"1633":[57,57,57,66],"1641":[58,17,58,32],"1649":[58,17,58,40],"1657":[58,17,58,49],"1665":[59,17,59,24],"1673":[59,42,59,46],"1681":[59,17,59,46],"1689":[59,17,59,47],"1697":[61,42,61,57],"1705":[61,42,61,61],"1713":[61,66,61,75],"1721":[61,42,61,75],"1729":[61,42,61,75],"1737":[62,26,62,27],"1745":[62,26,62,27],"1753":[62,26,62,27],"1761":[62,29,62,30],"1769":[62,33,62,45],"1777":[62,33,62,51],"1785":[62,33,62,58],"1801":[62,60,62,61],"1809":[62,60,62,63],"1825":[63,21,63,33],"1833":[63,21,63,39],"1841":[63,40,63,41],"1849":[63,21,63,42],"1857":[63,47,63,57],"1865":[64,21,64,33],"1873":[64,21,64,39],"1881":[64,40,64,41],"1889":[64,45,64,60],"1897":[64,21,64,60],"1905":[64,21,64,61],"1913":[68,30,68,34],"1921":[68,30,68,45],"1929":[68,51,68,55],"1937":[68,57,68,72],"1945":[68,74,68,81],"1953":[68,30,68,82],"1955":[68,30,68,50],"1961":[68,106,68,110],"1969":[68,106,68,121],"1977":[68,132,68,142],"1985":[68,106,68,143],"1987":[68,106,68,131],"1993":[68,30,68,82],"2001":[68,30,68,82],"2009":[68,106,68,143],"2017":[68,106,68,143],"2025":[69,13,69,17],"2033":[69,13,69,27],"2041":[69,33,69,48],"2049":[69,33,69,58],"2051":[69,33,69,56],"2057":[69,60,69,82],"2065":[69,84,69,99],"2073":[69,84,69,115],"2081":[69,117,69,132],"2089":[69,117,69,140],"2097":[69,142,69,161],"2105":[69,13,69,162],"2107":[69,13,69,32],"2113":[69,13,69,163],"2121":[71,13,71,17],"2137":[71,13,71,31],"2139":[71,13,71,31],"2153":[71,13,71,32],"2161":[72,17,72,21],"2169":[72,17,72,32],"2177":[73,17,73,21],"2185":[73,17,73,32],"2193":[73,17,73,41],"2195":[73,17,73,39],"2201":[73,17,73,42],"2209":[45,24,76,6],"2217":[45,24,76,6],"2225":[45,24,76,6],"2233":[45,24,76,6],"2241":[45,24,76,6],"2249":[45,24,76,6],"2257":[45,24,76,6],"2265":[45,24,76,6],"2273":[45,24,76,6],"2281":[45,24,76,6],"2289":[45,24,76,6],"2297":[45,24,76,6],"2305":[78,13,78,14],"2313":[79,18,79,19],"2321":[79,18,79,28],"2329":[80,17,80,18],"2337":[80,27,80,37],"2345":[80,27,80,43],"2353":[80,17,80,43],"2361":[80,17,80,44],"2369":[81,17,81,18],"2377":[81,30,81,40],"2385":[81,30,81,56],"2393":[81,30,81,65],"2401":[81,17,81,65],"2409":[81,17,81,66],"2417":[83,13,83,17],"2425":[83,26,83,27],"2433":[83,13,83,27],"2441":[83,13,83,28],"2449":[85,29,85,33],"2457":[85,47,85,57],"2465":[85,47,85,65],"2473":[85,47,85,72],"2481":[85,85,85,95],"2489":[85,85,85,103],"2497":[85,85,85,110],"2505":[85,125,85,135],"2513":[85,125,85,143],"2521":[85,125,85,152],"2529":[85,172,85,186],"2537":[85,190,85,198],"2545":[85,202,85,215],"2553":[85,202,85,233],"2561":[85,29,85,33],"2569":[85,29,85,33],"2577":[85,47,85,72],"2585":[85,47,85,72],"2593":[85,85,85,110],"2601":[85,85,85,110],"2609":[85,125,85,152],"2617":[85,125,85,152],"2625":[85,172,85,233],"2633":[85,172,85,233],"2641":[86,14,86,21],"2649":[86,14,86,36],"2657":[87,17,87,32],"2665":[88,17,88,27],"2673":[88,35,88,39],"2681":[88,17,88,39],"2689":[88,17,88,40],"2697":[90,17,90,27],"2705":[91,25,91,33],"2713":[91,37,91,50],"2721":[91,37,91,71],"2729":[92,32,92,36],"2737":[92,32,92,36],"2745":[92,25,92,37],"2753":[94,21,94,34],"2761":[94,21,94,55],"2769":[94,56,94,64],"2777":[94,68,94,72],"2785":[94,21,94,72],"2793":[94,21,94,73],"2801":[95,28,95,33],"2809":[95,28,95,33],"2817":[95,21,95,34],"2825":[90,35,96,18],"2833":[90,35,96,18],"2841":[90,35,96,18],"2849":[90,17,96,18],"2857":[90,17,96,19],"2865":[99,14,99,22],"2873":[99,26,99,36],"2881":[100,13,100,23],"2889":[100,31,100,35],"2897":[100,13,100,35],"2905":[100,13,100,36],"2913":[102,13,102,17],"2921":[103,13,103,23],"2929":[103,31,103,35],"2937":[103,13,103,35],"2945":[103,13,103,36],"2953":[104,13,104,23],"2961":[104,43,104,51],"2969":[104,13,104,51],"2977":[104,13,104,52],"2985":[105,18,105,27],"2993":[105,32,105,40],"3001":[105,45,105,52],"3009":[105,45,105,67],"3017":[105,72,105,87],"3025":[106,17,106,30],"3033":[106,17,106,48],"3041":[106,49,106,57],"3049":[106,61,106,65],"3057":[106,17,106,65],"3065":[106,17,106,66],"3073":[107,34,107,38],"3081":[107,34,107,46],"3089":[107,34,107,46],"3097":[107,34,107,46],"3105":[108,17,108,21],"3113":[108,32,108,39],"3121":[108,17,108,39],"3129":[108,17,108,40],"3137":[110,21,110,25],"3145":[110,21,110,34],"3153":[110,41,110,45],"3161":[110,21,110,46],"3163":[110,21,110,40],"3169":[110,21,110,47],"3177":[112,21,112,25],"3185":[112,34,112,35],"3193":[112,21,112,35],"3201":[112,21,112,36],"3209":[111,19,113,18],"3217":[114,17,114,21],"3225":[114,32,114,42],"3233":[114,17,114,42],"3241":[114,17,114,43],"3249":[117,9,117,22],"3265":[117,9,117,36],"3267":[117,9,117,36],"3281":[117,9,117,37],"3289":[118,13,118,26],"3297":[118,13,118,37],"3305":[119,13,119,26],"3313":[119,13,119,37],"3321":[119,13,119,46],"3323":[119,13,119,44],"3329":[119,13,119,47],"3337":[77,17,121,6],"3345":[77,17,121,6],"3353":[77,17,121,6],"3361":[77,17,121,6],"3369":[77,17,121,6],"3377":[77,17,121,6],"3385":[77,17,121,6],"3393":[77,17,121,6],"3401":[77,17,121,6],"3409":[77,17,121,6],"3417":[77,17,121,6],"3425":[77,17,121,6],"3433":[77,17,121,6],"3441":[77,17,121,6],"3449":[77,17,121,6],"3457":[123,13,123,21],"3465":[123,13,123,27],"3473":[123,13,123,32],"3481":[123,37,123,54],"3489":[124,13,124,17],"3497":[124,13,124,25],"3505":[124,13,124,32],"3513":[124,41,124,49],"3521":[124,13,124,50],"3523":[124,13,124,40],"3529":[124,13,124,51],"3537":[126,13,126,22],"3545":[126,37,126,42],"3553":[126,13,126,42],"3561":[126,13,126,43],"3569":[122,16,128,6],"3577":[122,16,128,6],"3585":[122,16,128,6],"3593":[122,16,128,6],"3601":[122,16,128,6],"3609":[130,13,130,21],"3617":[130,13,130,27],"3625":[130,13,130,32],"3633":[130,37,130,54],"3641":[131,13,131,17],"3649":[131,13,131,25],"3657":[131,13,131,32],"3665":[131,13,131,40],"3667":[131,13,131,38],"3673":[131,13,131,41],"3681":[129,19,133,6],"3689":[129,19,133,6],"3697":[129,19,133,6],"3705":[129,19,133,6],"3713":[135,9,135,13],"3721":[135,9,135,21],"3729":[135,9,135,28],"3737":[135,37,135,50],"3745":[135,9,135,51],"3747":[135,9,135,36],"3753":[135,9,135,52],"3761":[134,21,136,6],"3769":[134,21,136,6],"3777":[134,21,136,6],"3785":[134,21,136,6],"3793":[134,21,136,6],"3801":[138,9,138,13],"3809":[138,9,138,21],"3817":[138,9,138,28],"3825":[138,9,138,36],"3827":[138,9,138,34],"3833":[138,9,138,37],"3841":[137,24,139,6],"3849":[137,24,139,6],"3857":[137,24,139,6],"3865":[137,24,139,6],"3873":[141,9,141,13],"3881":[141,9,141,21],"3889":[141,9,141,28],"3897":[141,37,141,56],"3905":[141,9,141,57],"3907":[141,9,141,36],"3913":[141,9,141,58],"3921":[140,27,142,6],"3929":[140,27,142,6],"3937":[140,27,142,6],"3945":[140,27,142,6],"3953":[140,27,142,6],"3961":[144,9,144,13],"3969":[144,9,144,21],"3977":[144,9,144,28],"3985":[144,9,144,36],"3987":[144,9,144,34],"3993":[144,9,144,37],"4001":[143,30,145,6],"4009":[143,30,145,6],"4017":[143,30,145,6],"4025":[143,30,145,6],"4033":[147,9,147,13],"4041":[147,9,147,21],"4049":[147,9,147,28],"4057":[147,37,147,48],"4065":[147,9,147,49],"4067":[147,9,147,36],"4073":[147,9,147,50],"4081":[146,19,148,6],"4089":[146,19,148,6],"4097":[146,19,148,6],"4105":[146,19,148,6],"4113":[146,19,148,6],"4121":[150,9,150,13],"4129":[150,9,150,21],"4137":[150,9,150,28],"4145":[150,9,150,36],"4147":[150,9,150,34],"4153":[150,9,150,37],"4161":[149,22,151,6],"4169":[149,22,151,6],"4177":[149,22,151,6],"4185":[149,22,151,6],"4193":[153,9,153,13],"4201":[153,9,153,21],"4209":[153,9,153,28],"4217":[153,37,153,46],"4225":[153,37,153,52],"4233":[153,53,153,54],"4241":[153,37,153,55],"4249":[153,9,153,56],"4251":[153,9,153,36],"4257":[153,9,153,57],"4265":[152,17,154,6],"4273":[152,17,154,6],"4281":[152,17,154,6],"4289":[152,17,154,6],"4297":[152,17,154,6],"4305":[156,9,156,13],"4313":[156,9,156,21],"4321":[156,9,156,28],"4329":[156,9,156,36],"4331":[156,9,156,34],"4337":[156,9,156,37],"4345":[155,20,157,6],"4353":[155,20,157,6],"4361":[155,20,157,6],"4369":[155,20,157,6],"4377":[14,27,158,2],"4385":[14,1,158,2],"4393":[14,1,158,3],"4401":[159,1,159,7],"4409":[159,18,159,31],"4417":[159,1,159,31],"4425":[159,1,159,32],"4433":[1,1,159,32],"4441":[1,1,159,32],"4449":[1,1,159,32],"4457":[1,1,159,32],"4465":[1,1,159,32],"4473":[1,1,159,32],"4481":[1,1,159,32],"4489":[4,21,13,2],"4497":[4,21,13,2],"4505":[16,10,24,6],"4513":[16,10,24,6],"4521":[26,9,28,10],"4529":[25,24,30,6],"4537":[25,24,30,6],"4545":[37,13,41,14],"4553":[33,9,42,10],"4561":[31,18,44,6],"4569":[31,18,44,6],"4577":[50,13,53,14],"4585":[58,13,60,14],"4593":[63,17,66,18],"4601":[62,13,67,14],"4609":[62,13,67,14],"4617":[72,13,74,14],"4625":[57,9,75,10],"4633":[45,24,76,6],"4641":[45,24,76,6],"4649":[79,13,82,14],"4657":[78,9,84,10],"4665":[91,21,93,22],"4673":[90,35,96,18],"4681":[90,35,96,18],"4689":[87,13,97,14],"4697":[86,9,98,10],"4705":[99,9,101,10],"4713":[105,13,115,14],"4721":[102,9,116,10],"4729":[118,9,120,10],"4737":[77,17,121,6],"4745":[77,17,121,6],"4753":[123,9,127,10],"4761":[122,16,128,6],"4769":[122,16,128,6],"4777":[130,9,132,10],"4785":[129,19,133,6],"4793":[129,19,133,6],"4801":[134,21,136,6],"4809":[134,21,136,6],"4817":[137,24,139,6],"4825":[137,24,139,6],"4833":[140,27,142,6],"4841":[140,27,142,6],"4849":[143,30,145,6],"4857":[143,30,145,6],"4865":[146,19,148,6],"4873":[146,19,148,6],"4881":[149,22,151,6],"4889":[149,22,151,6],"4897":[152,17,154,6],"4905":[152,17,154,6],"4913":[155,20,157,6],"4921":[155,20,157,6],"4929":[1,1,159,32],"4937":[1,1,159,32],"nBranches":56,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/import-visitor.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/import-visitor_jalangi_.js","code":"var contexts = require(\"../contexts\"),\n    Visitor = require(\"./visitor\"),\n    ImportSequencer = require(\"./import-sequencer\");\n\nvar ImportVisitor = function(importer, finish) {\n\n    this._visitor = new Visitor(this);\n    this._importer = importer;\n    this._finish = finish;\n    this.context = new contexts.Eval();\n    this.importCount = 0;\n    this.onceFileDetectionMap = {};\n    this.recursionDetector = {};\n    this._sequencer = new ImportSequencer(this._onSequencerEmpty.bind(this));\n};\n\nImportVisitor.prototype = {\n    isReplacing: false,\n    run: function (root) {\n        try {\n            // process the contents\n            this._visitor.visit(root);\n        }\n        catch(e) {\n            this.error = e;\n        }\n\n        this.isFinished = true;\n        this._sequencer.tryRun();\n    },\n    _onSequencerEmpty: function() {\n        if (!this.isFinished) {\n            return;\n        }\n        this._finish(this.error);\n    },\n    visitImport: function (importNode, visitArgs) {\n        var inlineCSS = importNode.options.inline;\n\n        if (!importNode.css || inlineCSS) {\n\n            var context = new contexts.Eval(this.context, this.context.frames.slice(0));\n            var importParent = context.frames[0];\n\n            this.importCount++;\n            if (importNode.isVariableImport()) {\n                this._sequencer.addVariableImport(this.processImportNode.bind(this, importNode, context, importParent));\n            } else {\n                this.processImportNode(importNode, context, importParent);\n            }\n        }\n        visitArgs.visitDeeper = false;\n    },\n    processImportNode: function(importNode, context, importParent) {\n        var evaldImportNode,\n            inlineCSS = importNode.options.inline;\n\n        try {\n            evaldImportNode = importNode.evalForImport(context);\n        } catch(e) {\n            if (!e.filename) { e.index = importNode.index; e.filename = importNode.currentFileInfo.filename; }\n            // attempt to eval properly and treat as css\n            importNode.css = true;\n            // if that fails, this error will be thrown\n            importNode.error = e;\n        }\n\n        if (evaldImportNode && (!evaldImportNode.css || inlineCSS)) {\n\n            if (evaldImportNode.options.multiple) {\n                context.importMultiple = true;\n            }\n\n            // try appending if we haven't determined if it is css or not\n            var tryAppendLessExtension = evaldImportNode.css === undefined;\n\n            for (var i = 0; i < importParent.rules.length; i++) {\n                if (importParent.rules[i] === importNode) {\n                    importParent.rules[i] = evaldImportNode;\n                    break;\n                }\n            }\n\n            var onImported = this.onImported.bind(this, evaldImportNode, context),\n                sequencedOnImported = this._sequencer.addImport(onImported);\n\n            this._importer.push(evaldImportNode.getPath(), tryAppendLessExtension, evaldImportNode.currentFileInfo,\n                evaldImportNode.options, sequencedOnImported);\n        } else {\n            this.importCount--;\n            if (this.isFinished) {\n                this._sequencer.tryRun();\n            }\n        }\n    },\n    onImported: function (importNode, context, e, root, importedAtRoot, fullPath) {\n        if (e) {\n            if (!e.filename) {\n                e.index = importNode.index; e.filename = importNode.currentFileInfo.filename;\n            }\n            this.error = e;\n        }\n\n        var importVisitor = this,\n            inlineCSS = importNode.options.inline,\n            isPlugin = importNode.options.plugin,\n            isOptional = importNode.options.optional,\n            duplicateImport = importedAtRoot || fullPath in importVisitor.recursionDetector;\n\n        if (!context.importMultiple) {\n            if (duplicateImport) {\n                importNode.skip = true;\n            } else {\n                importNode.skip = function() {\n                    if (fullPath in importVisitor.onceFileDetectionMap) {\n                        return true;\n                    }\n                    importVisitor.onceFileDetectionMap[fullPath] = true;\n                    return false;\n                };\n            }\n        }\n\n        if (!fullPath && isOptional) {\n            importNode.skip = true;\n        }\n\n        if (root) {\n            importNode.root = root;\n            importNode.importedFilename = fullPath;\n\n            if (!inlineCSS && !isPlugin && (context.importMultiple || !duplicateImport)) {\n                importVisitor.recursionDetector[fullPath] = true;\n\n                var oldContext = this.context;\n                this.context = context;\n                try {\n                    this._visitor.visit(root);\n                } catch (e) {\n                    this.error = e;\n                }\n                this.context = oldContext;\n            }\n        }\n\n        importVisitor.importCount--;\n\n        if (importVisitor.isFinished) {\n            importVisitor._sequencer.tryRun();\n        }\n    },\n    visitRule: function (ruleNode, visitArgs) {\n        if (ruleNode.value.type === \"DetachedRuleset\") {\n            this.context.frames.unshift(ruleNode);\n        } else {\n            visitArgs.visitDeeper = false;\n        }\n    },\n    visitRuleOut : function(ruleNode) {\n        if (ruleNode.value.type === \"DetachedRuleset\") {\n            this.context.frames.shift();\n        }\n    },\n    visitDirective: function (directiveNode, visitArgs) {\n        this.context.frames.unshift(directiveNode);\n    },\n    visitDirectiveOut: function (directiveNode) {\n        this.context.frames.shift();\n    },\n    visitMixinDefinition: function (mixinDefinitionNode, visitArgs) {\n        this.context.frames.unshift(mixinDefinitionNode);\n    },\n    visitMixinDefinitionOut: function (mixinDefinitionNode) {\n        this.context.frames.shift();\n    },\n    visitRuleset: function (rulesetNode, visitArgs) {\n        this.context.frames.unshift(rulesetNode);\n    },\n    visitRulesetOut: function (rulesetNode) {\n        this.context.frames.shift();\n    },\n    visitMedia: function (mediaNode, visitArgs) {\n        this.context.frames.unshift(mediaNode.rules[0]);\n    },\n    visitMediaOut: function (mediaNode) {\n        this.context.frames.shift();\n    }\n};\nmodule.exports = ImportVisitor;\n"};
jalangiLabel543:
    while (true) {
        try {
            J$.Se(4433, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/import-visitor_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/import-visitor.js');
            J$.N(4441, '__secret__S$', __secret__S$, 0);
            J$.N(4449, '__secret__traits__', __secret__traits__, 0);
            J$.N(4457, 'contexts', contexts, 0);
            J$.N(4465, 'Visitor', Visitor, 0);
            J$.N(4473, 'ImportSequencer', ImportSequencer, 0);
            J$.N(4481, 'ImportVisitor', ImportVisitor, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var contexts = J$.X1(161, J$.W(153, 'contexts', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../contexts', 21, false)), contexts, 3)), Visitor = J$.X1(177, J$.W(169, 'Visitor', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, './visitor', 21, false)), Visitor, 3)), ImportSequencer = J$.X1(193, J$.W(185, 'ImportSequencer', J$.F(145, J$.R(129, 'require', require, 2), 0)(J$.T(137, './import-sequencer', 21, false)), ImportSequencer, 3));
            var ImportVisitor = J$.X1(569, J$.W(561, 'ImportVisitor', J$.T(553, function (importer, finish) {
                jalangiLabel526:
                    while (true) {
                        try {
                            J$.Fe(521, arguments.callee, this, arguments);
                            arguments = J$.N(529, 'arguments', arguments, 4);
                            importer = J$.N(537, 'importer', importer, 4);
                            finish = J$.N(545, 'finish', finish, 4);
                            J$.X1(241, J$.P(233, J$.R(201, 'this', this, 0), '_visitor', J$.F(225, J$.R(209, 'Visitor', Visitor, 1), 1)(J$.R(217, 'this', this, 0)), 0));
                            J$.X1(273, J$.P(265, J$.R(249, 'this', this, 0), '_importer', J$.R(257, 'importer', importer, 0), 0));
                            J$.X1(305, J$.P(297, J$.R(281, 'this', this, 0), '_finish', J$.R(289, 'finish', finish, 0), 0));
                            J$.X1(345, J$.P(337, J$.R(313, 'this', this, 0), 'context', J$.M(329, J$.R(321, 'contexts', contexts, 1), 'Eval', 2)(), 0));
                            J$.X1(377, J$.P(369, J$.R(353, 'this', this, 0), 'importCount', J$.T(361, 0, 22, false), 0));
                            J$.X1(409, J$.P(401, J$.R(385, 'this', this, 0), 'onceFileDetectionMap', J$.T(393, {}, 11, false), 0));
                            J$.X1(441, J$.P(433, J$.R(417, 'this', this, 0), 'recursionDetector', J$.T(425, {}, 11, false), 0));
                            J$.X1(513, J$.P(505, J$.R(449, 'this', this, 0), '_sequencer', J$.F(497, J$.R(457, 'ImportSequencer', ImportSequencer, 1), 1)(J$.M(489, J$.G(473, J$.R(465, 'this', this, 0), '_onSequencerEmpty', 0), 'bind', 0)(J$.R(481, 'this', this, 0))), 0));
                        } catch (J$e) {
                            J$.Ex(4489, J$e);
                        } finally {
                            if (J$.Fr(4497))
                                continue jalangiLabel526;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 521), ImportVisitor, 3));
            J$.X1(4393, J$.P(4385, J$.R(577, 'ImportVisitor', ImportVisitor, 1), 'prototype', J$.T(4377, {
                isReplacing: J$.T(585, false, 23, false),
                run: J$.T(761, function (root) {
                    jalangiLabel527:
                        while (true) {
                            try {
                                J$.Fe(737, arguments.callee, this, arguments);
                                arguments = J$.N(745, 'arguments', arguments, 4);
                                root = J$.N(753, 'root', root, 4);
                                try {
                                    J$.X1(625, J$.M(617, J$.G(601, J$.R(593, 'this', this, 0), '_visitor', 0), 'visit', 0)(J$.R(609, 'root', root, 0)));
                                } catch (e) {
                                    e = J$.N(665, 'e', e, 1);
                                    J$.X1(657, J$.P(649, J$.R(633, 'this', this, 0), 'error', J$.R(641, 'e', e, 0), 0));
                                }
                                J$.X1(697, J$.P(689, J$.R(673, 'this', this, 0), 'isFinished', J$.T(681, true, 23, false), 0));
                                J$.X1(729, J$.M(721, J$.G(713, J$.R(705, 'this', this, 0), '_sequencer', 0), 'tryRun', 0)());
                            } catch (J$e) {
                                J$.Ex(4505, J$e);
                            } finally {
                                if (J$.Fr(4513))
                                    continue jalangiLabel527;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 737),
                _onSequencerEmpty: J$.T(857, function () {
                    jalangiLabel528:
                        while (true) {
                            try {
                                J$.Fe(841, arguments.callee, this, arguments);
                                arguments = J$.N(849, 'arguments', arguments, 4);
                                if (J$.X1(4521, J$.C(8, J$.U(10, '!', J$.G(777, J$.R(769, 'this', this, 0), 'isFinished', 0))))) {
                                    return J$.X1(793, J$.Rt(785, undefined));
                                }
                                J$.X1(833, J$.M(825, J$.R(801, 'this', this, 0), '_finish', 0)(J$.G(817, J$.R(809, 'this', this, 0), 'error', 0)));
                            } catch (J$e) {
                                J$.Ex(4529, J$e);
                            } finally {
                                if (J$.Fr(4537))
                                    continue jalangiLabel528;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 841),
                visitImport: J$.T(1345, function (importNode, visitArgs) {
                    jalangiLabel529:
                        while (true) {
                            try {
                                J$.Fe(1289, arguments.callee, this, arguments);
                                arguments = J$.N(1297, 'arguments', arguments, 4);
                                importNode = J$.N(1305, 'importNode', importNode, 4);
                                visitArgs = J$.N(1313, 'visitArgs', visitArgs, 4);
                                J$.N(1321, 'inlineCSS', inlineCSS, 0);
                                J$.N(1329, 'context', context, 0);
                                J$.N(1337, 'importParent', importParent, 0);
                                var inlineCSS = J$.X1(897, J$.W(889, 'inlineCSS', J$.G(881, J$.G(873, J$.R(865, 'importNode', importNode, 0), 'options', 0), 'inline', 0), inlineCSS, 1));
                                if (J$.X1(4553, J$.C(32, J$.C(16, J$.U(18, '!', J$.G(913, J$.R(905, 'importNode', importNode, 0), 'css', 0))) ? J$._() : J$.R(921, 'inlineCSS', inlineCSS, 0)))) {
                                    var context = J$.X1(1009, J$.W(1001, 'context', J$.M(993, J$.R(929, 'contexts', contexts, 1), 'Eval', 2)(J$.G(945, J$.R(937, 'this', this, 0), 'context', 0), J$.M(985, J$.G(969, J$.G(961, J$.R(953, 'this', this, 0), 'context', 0), 'frames', 0), 'slice', 0)(J$.T(977, 0, 22, false))), context, 1));
                                    var importParent = J$.X1(1057, J$.W(1049, 'importParent', J$.G(1041, J$.G(1025, J$.R(1017, 'context', context, 0), 'frames', 0), J$.T(1033, 0, 22, false), 4), importParent, 1));
                                    J$.X1(1097, J$.B(26, '-', J$.A(1081, J$.R(1065, 'this', this, 0), 'importCount', '+', 0)(J$.T(1073, 1, 22, false)), J$.T(1089, 1, 22, false), 0));
                                    if (J$.X1(4545, J$.C(24, J$.M(1113, J$.R(1105, 'importNode', importNode, 0), 'isVariableImport', 0)()))) {
                                        J$.X1(1201, J$.M(1193, J$.G(1129, J$.R(1121, 'this', this, 0), '_sequencer', 0), 'addVariableImport', 0)(J$.M(1185, J$.G(1145, J$.R(1137, 'this', this, 0), 'processImportNode', 0), 'bind', 0)(J$.R(1153, 'this', this, 0), J$.R(1161, 'importNode', importNode, 0), J$.R(1169, 'context', context, 0), J$.R(1177, 'importParent', importParent, 0))));
                                    } else {
                                        J$.X1(1249, J$.M(1241, J$.R(1209, 'this', this, 0), 'processImportNode', 0)(J$.R(1217, 'importNode', importNode, 0), J$.R(1225, 'context', context, 0), J$.R(1233, 'importParent', importParent, 0)));
                                    }
                                }
                                J$.X1(1281, J$.P(1273, J$.R(1257, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(1265, false, 23, false), 0));
                            } catch (J$e) {
                                J$.Ex(4561, J$e);
                            } finally {
                                if (J$.Fr(4569))
                                    continue jalangiLabel529;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1289),
                processImportNode: J$.T(2297, function (importNode, context, importParent) {
                    jalangiLabel530:
                        while (true) {
                            try {
                                J$.Fe(2209, arguments.callee, this, arguments);
                                arguments = J$.N(2217, 'arguments', arguments, 4);
                                importNode = J$.N(2225, 'importNode', importNode, 4);
                                context = J$.N(2233, 'context', context, 4);
                                importParent = J$.N(2241, 'importParent', importParent, 4);
                                J$.N(2249, 'evaldImportNode', evaldImportNode, 0);
                                J$.N(2257, 'inlineCSS', inlineCSS, 0);
                                J$.N(2265, 'tryAppendLessExtension', tryAppendLessExtension, 0);
                                J$.N(2273, 'i', i, 0);
                                J$.N(2281, 'onImported', onImported, 0);
                                J$.N(2289, 'sequencedOnImported', sequencedOnImported, 0);
                                var evaldImportNode, inlineCSS = J$.X1(1385, J$.W(1377, 'inlineCSS', J$.G(1369, J$.G(1361, J$.R(1353, 'importNode', importNode, 0), 'options', 0), 'inline', 0), inlineCSS, 1));
                                try {
                                    J$.X1(1425, evaldImportNode = J$.W(1417, 'evaldImportNode', J$.M(1409, J$.R(1393, 'importNode', importNode, 0), 'evalForImport', 0)(J$.R(1401, 'context', context, 0)), evaldImportNode, 0));
                                } catch (e) {
                                    e = J$.N(1601, 'e', e, 1);
                                    if (J$.X1(4577, J$.C(40, J$.U(34, '!', J$.G(1441, J$.R(1433, 'e', e, 0), 'filename', 0))))) {
                                        J$.X1(1481, J$.P(1473, J$.R(1449, 'e', e, 0), 'index', J$.G(1465, J$.R(1457, 'importNode', importNode, 0), 'index', 0), 0));
                                        J$.X1(1529, J$.P(1521, J$.R(1489, 'e', e, 0), 'filename', J$.G(1513, J$.G(1505, J$.R(1497, 'importNode', importNode, 0), 'currentFileInfo', 0), 'filename', 0), 0));
                                    }
                                    J$.X1(1561, J$.P(1553, J$.R(1537, 'importNode', importNode, 0), 'css', J$.T(1545, true, 23, false), 0));
                                    J$.X1(1593, J$.P(1585, J$.R(1569, 'importNode', importNode, 0), 'error', J$.R(1577, 'e', e, 0), 0));
                                }
                                if (J$.X1(4625, J$.C(96, J$.C(56, J$.R(1609, 'evaldImportNode', evaldImportNode, 0)) ? J$.C(48, J$.U(42, '!', J$.G(1625, J$.R(1617, 'evaldImportNode', evaldImportNode, 0), 'css', 0))) ? J$._() : J$.R(1633, 'inlineCSS', inlineCSS, 0) : J$._()))) {
                                    if (J$.X1(4585, J$.C(64, J$.G(1657, J$.G(1649, J$.R(1641, 'evaldImportNode', evaldImportNode, 0), 'options', 0), 'multiple', 0)))) {
                                        J$.X1(1689, J$.P(1681, J$.R(1665, 'context', context, 0), 'importMultiple', J$.T(1673, true, 23, false), 0));
                                    }
                                    var tryAppendLessExtension = J$.X1(1729, J$.W(1721, 'tryAppendLessExtension', J$.B(50, '===', J$.G(1705, J$.R(1697, 'evaldImportNode', evaldImportNode, 0), 'css', 0), J$.T(1713, undefined, 24, false), 0), tryAppendLessExtension, 1));
                                    for (var i = J$.X1(1753, J$.W(1745, 'i', J$.T(1737, 0, 22, false), i, 1)); J$.X1(4601, J$.C(80, J$.B(58, '<', J$.R(1761, 'i', i, 0), J$.G(1785, J$.G(1777, J$.R(1769, 'importParent', importParent, 0), 'rules', 0), 'length', 0), 0))); J$.X1(4609, J$.B(82, '-', i = J$.W(1809, 'i', J$.B(74, '+', J$.U(66, '+', J$.R(1801, 'i', i, 0)), J$.T(1793, 1, 22, false), 0), i, 0), J$.T(1817, 1, 22, false), 0))) {
                                        if (J$.X1(4593, J$.C(72, J$.B(90, '===', J$.G(1849, J$.G(1833, J$.R(1825, 'importParent', importParent, 0), 'rules', 0), J$.R(1841, 'i', i, 0), 4), J$.R(1857, 'importNode', importNode, 0), 0)))) {
                                            J$.X1(1905, J$.P(1897, J$.G(1873, J$.R(1865, 'importParent', importParent, 0), 'rules', 0), J$.R(1881, 'i', i, 0), J$.R(1889, 'evaldImportNode', evaldImportNode, 0), 2));
                                            break;
                                        }
                                    }
                                    var onImported = J$.X1(2001, J$.W(1993, 'onImported', J$.M(1953, J$.G(1921, J$.R(1913, 'this', this, 0), 'onImported', 0), 'bind', 0)(J$.R(1929, 'this', this, 0), J$.R(1937, 'evaldImportNode', evaldImportNode, 0), J$.R(1945, 'context', context, 0)), onImported, 1)), sequencedOnImported = J$.X1(2017, J$.W(2009, 'sequencedOnImported', J$.M(1985, J$.G(1969, J$.R(1961, 'this', this, 0), '_sequencer', 0), 'addImport', 0)(J$.R(1977, 'onImported', onImported, 0)), sequencedOnImported, 1));
                                    J$.X1(2113, J$.M(2105, J$.G(2033, J$.R(2025, 'this', this, 0), '_importer', 0), 'push', 0)(J$.M(2049, J$.R(2041, 'evaldImportNode', evaldImportNode, 0), 'getPath', 0)(), J$.R(2057, 'tryAppendLessExtension', tryAppendLessExtension, 0), J$.G(2073, J$.R(2065, 'evaldImportNode', evaldImportNode, 0), 'currentFileInfo', 0), J$.G(2089, J$.R(2081, 'evaldImportNode', evaldImportNode, 0), 'options', 0), J$.R(2097, 'sequencedOnImported', sequencedOnImported, 0)));
                                } else {
                                    J$.X1(2153, J$.B(98, '+', J$.A(2137, J$.R(2121, 'this', this, 0), 'importCount', '-', 0)(J$.T(2129, 1, 22, false)), J$.T(2145, 1, 22, false), 0));
                                    if (J$.X1(4617, J$.C(88, J$.G(2169, J$.R(2161, 'this', this, 0), 'isFinished', 0)))) {
                                        J$.X1(2201, J$.M(2193, J$.G(2185, J$.R(2177, 'this', this, 0), '_sequencer', 0), 'tryRun', 0)());
                                    }
                                }
                            } catch (J$e) {
                                J$.Ex(4633, J$e);
                            } finally {
                                if (J$.Fr(4641))
                                    continue jalangiLabel530;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2209),
                onImported: J$.T(3449, function (importNode, context, e, root, importedAtRoot, fullPath) {
                    jalangiLabel532:
                        while (true) {
                            try {
                                J$.Fe(3337, arguments.callee, this, arguments);
                                arguments = J$.N(3345, 'arguments', arguments, 4);
                                importNode = J$.N(3353, 'importNode', importNode, 4);
                                context = J$.N(3361, 'context', context, 4);
                                e = J$.N(3369, 'e', e, 4);
                                root = J$.N(3377, 'root', root, 4);
                                importedAtRoot = J$.N(3385, 'importedAtRoot', importedAtRoot, 4);
                                fullPath = J$.N(3393, 'fullPath', fullPath, 4);
                                J$.N(3401, 'importVisitor', importVisitor, 0);
                                J$.N(3409, 'inlineCSS', inlineCSS, 0);
                                J$.N(3417, 'isPlugin', isPlugin, 0);
                                J$.N(3425, 'isOptional', isOptional, 0);
                                J$.N(3433, 'duplicateImport', duplicateImport, 0);
                                J$.N(3441, 'oldContext', oldContext, 0);
                                if (J$.X1(4657, J$.C(112, J$.R(2305, 'e', e, 0)))) {
                                    if (J$.X1(4649, J$.C(104, J$.U(106, '!', J$.G(2321, J$.R(2313, 'e', e, 0), 'filename', 0))))) {
                                        J$.X1(2361, J$.P(2353, J$.R(2329, 'e', e, 0), 'index', J$.G(2345, J$.R(2337, 'importNode', importNode, 0), 'index', 0), 0));
                                        J$.X1(2409, J$.P(2401, J$.R(2369, 'e', e, 0), 'filename', J$.G(2393, J$.G(2385, J$.R(2377, 'importNode', importNode, 0), 'currentFileInfo', 0), 'filename', 0), 0));
                                    }
                                    J$.X1(2441, J$.P(2433, J$.R(2417, 'this', this, 0), 'error', J$.R(2425, 'e', e, 0), 0));
                                }
                                var importVisitor = J$.X1(2569, J$.W(2561, 'importVisitor', J$.R(2449, 'this', this, 0), importVisitor, 1)), inlineCSS = J$.X1(2585, J$.W(2577, 'inlineCSS', J$.G(2473, J$.G(2465, J$.R(2457, 'importNode', importNode, 0), 'options', 0), 'inline', 0), inlineCSS, 1)), isPlugin = J$.X1(2601, J$.W(2593, 'isPlugin', J$.G(2497, J$.G(2489, J$.R(2481, 'importNode', importNode, 0), 'options', 0), 'plugin', 0), isPlugin, 1)), isOptional = J$.X1(2617, J$.W(2609, 'isOptional', J$.G(2521, J$.G(2513, J$.R(2505, 'importNode', importNode, 0), 'options', 0), 'optional', 0), isOptional, 1)), duplicateImport = J$.X1(2633, J$.W(2625, 'duplicateImport', J$.C(120, J$.R(2529, 'importedAtRoot', importedAtRoot, 0)) ? J$._() : J$.B(114, 'in', J$.R(2537, 'fullPath', fullPath, 0), J$.G(2553, J$.R(2545, 'importVisitor', importVisitor, 0), 'recursionDetector', 0), 0), duplicateImport, 1));
                                if (J$.X1(4697, J$.C(144, J$.U(122, '!', J$.G(2649, J$.R(2641, 'context', context, 0), 'importMultiple', 0))))) {
                                    if (J$.X1(4689, J$.C(136, J$.R(2657, 'duplicateImport', duplicateImport, 0)))) {
                                        J$.X1(2689, J$.P(2681, J$.R(2665, 'importNode', importNode, 0), 'skip', J$.T(2673, true, 23, false), 0));
                                    } else {
                                        J$.X1(2857, J$.P(2849, J$.R(2697, 'importNode', importNode, 0), 'skip', J$.T(2841, function () {
                                            jalangiLabel531:
                                                while (true) {
                                                    try {
                                                        J$.Fe(2825, arguments.callee, this, arguments);
                                                        arguments = J$.N(2833, 'arguments', arguments, 4);
                                                        if (J$.X1(4665, J$.C(128, J$.B(130, 'in', J$.R(2705, 'fullPath', fullPath, 0), J$.G(2721, J$.R(2713, 'importVisitor', importVisitor, 0), 'onceFileDetectionMap', 0), 0)))) {
                                                            return J$.X1(2745, J$.Rt(2737, J$.T(2729, true, 23, false)));
                                                        }
                                                        J$.X1(2793, J$.P(2785, J$.G(2761, J$.R(2753, 'importVisitor', importVisitor, 0), 'onceFileDetectionMap', 0), J$.R(2769, 'fullPath', fullPath, 0), J$.T(2777, true, 23, false), 2));
                                                        return J$.X1(2817, J$.Rt(2809, J$.T(2801, false, 23, false)));
                                                    } catch (J$e) {
                                                        J$.Ex(4673, J$e);
                                                    } finally {
                                                        if (J$.Fr(4681))
                                                            continue jalangiLabel531;
                                                        else
                                                            return J$.Ra();
                                                    }
                                                }
                                        }, 12, false, 2825), 0));
                                    }
                                }
                                if (J$.X1(4705, J$.C(160, J$.C(152, J$.U(138, '!', J$.R(2865, 'fullPath', fullPath, 0))) ? J$.R(2873, 'isOptional', isOptional, 0) : J$._()))) {
                                    J$.X1(2905, J$.P(2897, J$.R(2881, 'importNode', importNode, 0), 'skip', J$.T(2889, true, 23, false), 0));
                                }
                                if (J$.X1(4721, J$.C(200, J$.R(2913, 'root', root, 0)))) {
                                    J$.X1(2945, J$.P(2937, J$.R(2921, 'importNode', importNode, 0), 'root', J$.R(2929, 'root', root, 0), 0));
                                    J$.X1(2977, J$.P(2969, J$.R(2953, 'importNode', importNode, 0), 'importedFilename', J$.R(2961, 'fullPath', fullPath, 0), 0));
                                    if (J$.X1(4713, J$.C(192, J$.C(184, J$.C(168, J$.U(146, '!', J$.R(2985, 'inlineCSS', inlineCSS, 0))) ? J$.U(154, '!', J$.R(2993, 'isPlugin', isPlugin, 0)) : J$._()) ? J$.C(176, J$.G(3009, J$.R(3001, 'context', context, 0), 'importMultiple', 0)) ? J$._() : J$.U(162, '!', J$.R(3017, 'duplicateImport', duplicateImport, 0)) : J$._()))) {
                                        J$.X1(3065, J$.P(3057, J$.G(3033, J$.R(3025, 'importVisitor', importVisitor, 0), 'recursionDetector', 0), J$.R(3041, 'fullPath', fullPath, 0), J$.T(3049, true, 23, false), 2));
                                        var oldContext = J$.X1(3097, J$.W(3089, 'oldContext', J$.G(3081, J$.R(3073, 'this', this, 0), 'context', 0), oldContext, 1));
                                        J$.X1(3129, J$.P(3121, J$.R(3105, 'this', this, 0), 'context', J$.R(3113, 'context', context, 0), 0));
                                        try {
                                            J$.X1(3169, J$.M(3161, J$.G(3145, J$.R(3137, 'this', this, 0), '_visitor', 0), 'visit', 0)(J$.R(3153, 'root', root, 0)));
                                        } catch (e) {
                                            e = J$.N(3209, 'e', e, 1);
                                            J$.X1(3201, J$.P(3193, J$.R(3177, 'this', this, 0), 'error', J$.R(3185, 'e', e, 0), 0));
                                        }
                                        J$.X1(3241, J$.P(3233, J$.R(3217, 'this', this, 0), 'context', J$.R(3225, 'oldContext', oldContext, 0), 0));
                                    }
                                }
                                J$.X1(3281, J$.B(170, '+', J$.A(3265, J$.R(3249, 'importVisitor', importVisitor, 0), 'importCount', '-', 0)(J$.T(3257, 1, 22, false)), J$.T(3273, 1, 22, false), 0));
                                if (J$.X1(4729, J$.C(208, J$.G(3297, J$.R(3289, 'importVisitor', importVisitor, 0), 'isFinished', 0)))) {
                                    J$.X1(3329, J$.M(3321, J$.G(3313, J$.R(3305, 'importVisitor', importVisitor, 0), '_sequencer', 0), 'tryRun', 0)());
                                }
                            } catch (J$e) {
                                J$.Ex(4737, J$e);
                            } finally {
                                if (J$.Fr(4745))
                                    continue jalangiLabel532;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3337),
                visitRule: J$.T(3601, function (ruleNode, visitArgs) {
                    jalangiLabel533:
                        while (true) {
                            try {
                                J$.Fe(3569, arguments.callee, this, arguments);
                                arguments = J$.N(3577, 'arguments', arguments, 4);
                                ruleNode = J$.N(3585, 'ruleNode', ruleNode, 4);
                                visitArgs = J$.N(3593, 'visitArgs', visitArgs, 4);
                                if (J$.X1(4753, J$.C(216, J$.B(178, '===', J$.G(3473, J$.G(3465, J$.R(3457, 'ruleNode', ruleNode, 0), 'value', 0), 'type', 0), J$.T(3481, 'DetachedRuleset', 21, false), 0)))) {
                                    J$.X1(3529, J$.M(3521, J$.G(3505, J$.G(3497, J$.R(3489, 'this', this, 0), 'context', 0), 'frames', 0), 'unshift', 0)(J$.R(3513, 'ruleNode', ruleNode, 0)));
                                } else {
                                    J$.X1(3561, J$.P(3553, J$.R(3537, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(3545, false, 23, false), 0));
                                }
                            } catch (J$e) {
                                J$.Ex(4761, J$e);
                            } finally {
                                if (J$.Fr(4769))
                                    continue jalangiLabel533;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3569),
                visitRuleOut: J$.T(3705, function (ruleNode) {
                    jalangiLabel534:
                        while (true) {
                            try {
                                J$.Fe(3681, arguments.callee, this, arguments);
                                arguments = J$.N(3689, 'arguments', arguments, 4);
                                ruleNode = J$.N(3697, 'ruleNode', ruleNode, 4);
                                if (J$.X1(4777, J$.C(224, J$.B(186, '===', J$.G(3625, J$.G(3617, J$.R(3609, 'ruleNode', ruleNode, 0), 'value', 0), 'type', 0), J$.T(3633, 'DetachedRuleset', 21, false), 0)))) {
                                    J$.X1(3673, J$.M(3665, J$.G(3657, J$.G(3649, J$.R(3641, 'this', this, 0), 'context', 0), 'frames', 0), 'shift', 0)());
                                }
                            } catch (J$e) {
                                J$.Ex(4785, J$e);
                            } finally {
                                if (J$.Fr(4793))
                                    continue jalangiLabel534;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3681),
                visitDirective: J$.T(3793, function (directiveNode, visitArgs) {
                    jalangiLabel535:
                        while (true) {
                            try {
                                J$.Fe(3761, arguments.callee, this, arguments);
                                arguments = J$.N(3769, 'arguments', arguments, 4);
                                directiveNode = J$.N(3777, 'directiveNode', directiveNode, 4);
                                visitArgs = J$.N(3785, 'visitArgs', visitArgs, 4);
                                J$.X1(3753, J$.M(3745, J$.G(3729, J$.G(3721, J$.R(3713, 'this', this, 0), 'context', 0), 'frames', 0), 'unshift', 0)(J$.R(3737, 'directiveNode', directiveNode, 0)));
                            } catch (J$e) {
                                J$.Ex(4801, J$e);
                            } finally {
                                if (J$.Fr(4809))
                                    continue jalangiLabel535;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3761),
                visitDirectiveOut: J$.T(3865, function (directiveNode) {
                    jalangiLabel536:
                        while (true) {
                            try {
                                J$.Fe(3841, arguments.callee, this, arguments);
                                arguments = J$.N(3849, 'arguments', arguments, 4);
                                directiveNode = J$.N(3857, 'directiveNode', directiveNode, 4);
                                J$.X1(3833, J$.M(3825, J$.G(3817, J$.G(3809, J$.R(3801, 'this', this, 0), 'context', 0), 'frames', 0), 'shift', 0)());
                            } catch (J$e) {
                                J$.Ex(4817, J$e);
                            } finally {
                                if (J$.Fr(4825))
                                    continue jalangiLabel536;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3841),
                visitMixinDefinition: J$.T(3953, function (mixinDefinitionNode, visitArgs) {
                    jalangiLabel537:
                        while (true) {
                            try {
                                J$.Fe(3921, arguments.callee, this, arguments);
                                arguments = J$.N(3929, 'arguments', arguments, 4);
                                mixinDefinitionNode = J$.N(3937, 'mixinDefinitionNode', mixinDefinitionNode, 4);
                                visitArgs = J$.N(3945, 'visitArgs', visitArgs, 4);
                                J$.X1(3913, J$.M(3905, J$.G(3889, J$.G(3881, J$.R(3873, 'this', this, 0), 'context', 0), 'frames', 0), 'unshift', 0)(J$.R(3897, 'mixinDefinitionNode', mixinDefinitionNode, 0)));
                            } catch (J$e) {
                                J$.Ex(4833, J$e);
                            } finally {
                                if (J$.Fr(4841))
                                    continue jalangiLabel537;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 3921),
                visitMixinDefinitionOut: J$.T(4025, function (mixinDefinitionNode) {
                    jalangiLabel538:
                        while (true) {
                            try {
                                J$.Fe(4001, arguments.callee, this, arguments);
                                arguments = J$.N(4009, 'arguments', arguments, 4);
                                mixinDefinitionNode = J$.N(4017, 'mixinDefinitionNode', mixinDefinitionNode, 4);
                                J$.X1(3993, J$.M(3985, J$.G(3977, J$.G(3969, J$.R(3961, 'this', this, 0), 'context', 0), 'frames', 0), 'shift', 0)());
                            } catch (J$e) {
                                J$.Ex(4849, J$e);
                            } finally {
                                if (J$.Fr(4857))
                                    continue jalangiLabel538;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4001),
                visitRuleset: J$.T(4113, function (rulesetNode, visitArgs) {
                    jalangiLabel539:
                        while (true) {
                            try {
                                J$.Fe(4081, arguments.callee, this, arguments);
                                arguments = J$.N(4089, 'arguments', arguments, 4);
                                rulesetNode = J$.N(4097, 'rulesetNode', rulesetNode, 4);
                                visitArgs = J$.N(4105, 'visitArgs', visitArgs, 4);
                                J$.X1(4073, J$.M(4065, J$.G(4049, J$.G(4041, J$.R(4033, 'this', this, 0), 'context', 0), 'frames', 0), 'unshift', 0)(J$.R(4057, 'rulesetNode', rulesetNode, 0)));
                            } catch (J$e) {
                                J$.Ex(4865, J$e);
                            } finally {
                                if (J$.Fr(4873))
                                    continue jalangiLabel539;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4081),
                visitRulesetOut: J$.T(4185, function (rulesetNode) {
                    jalangiLabel540:
                        while (true) {
                            try {
                                J$.Fe(4161, arguments.callee, this, arguments);
                                arguments = J$.N(4169, 'arguments', arguments, 4);
                                rulesetNode = J$.N(4177, 'rulesetNode', rulesetNode, 4);
                                J$.X1(4153, J$.M(4145, J$.G(4137, J$.G(4129, J$.R(4121, 'this', this, 0), 'context', 0), 'frames', 0), 'shift', 0)());
                            } catch (J$e) {
                                J$.Ex(4881, J$e);
                            } finally {
                                if (J$.Fr(4889))
                                    continue jalangiLabel540;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4161),
                visitMedia: J$.T(4297, function (mediaNode, visitArgs) {
                    jalangiLabel541:
                        while (true) {
                            try {
                                J$.Fe(4265, arguments.callee, this, arguments);
                                arguments = J$.N(4273, 'arguments', arguments, 4);
                                mediaNode = J$.N(4281, 'mediaNode', mediaNode, 4);
                                visitArgs = J$.N(4289, 'visitArgs', visitArgs, 4);
                                J$.X1(4257, J$.M(4249, J$.G(4209, J$.G(4201, J$.R(4193, 'this', this, 0), 'context', 0), 'frames', 0), 'unshift', 0)(J$.G(4241, J$.G(4225, J$.R(4217, 'mediaNode', mediaNode, 0), 'rules', 0), J$.T(4233, 0, 22, false), 4)));
                            } catch (J$e) {
                                J$.Ex(4897, J$e);
                            } finally {
                                if (J$.Fr(4905))
                                    continue jalangiLabel541;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4265),
                visitMediaOut: J$.T(4369, function (mediaNode) {
                    jalangiLabel542:
                        while (true) {
                            try {
                                J$.Fe(4345, arguments.callee, this, arguments);
                                arguments = J$.N(4353, 'arguments', arguments, 4);
                                mediaNode = J$.N(4361, 'mediaNode', mediaNode, 4);
                                J$.X1(4337, J$.M(4329, J$.G(4321, J$.G(4313, J$.R(4305, 'this', this, 0), 'context', 0), 'frames', 0), 'shift', 0)());
                            } catch (J$e) {
                                J$.Ex(4913, J$e);
                            } finally {
                                if (J$.Fr(4921))
                                    continue jalangiLabel542;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 4345)
            }, 11, false), 0));
            J$.X1(4425, J$.P(4417, J$.R(4401, 'module', module, 2), 'exports', J$.R(4409, 'ImportVisitor', ImportVisitor, 1), 0));
        } catch (J$e) {
            J$.Ex(4929, J$e);
        } finally {
            if (J$.Sr(4937)) {
                J$.L();
                continue jalangiLabel543;
            } else {
                J$.L();
                break jalangiLabel543;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
