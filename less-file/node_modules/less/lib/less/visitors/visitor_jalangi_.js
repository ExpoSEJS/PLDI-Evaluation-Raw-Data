J$.iids = {"8":[15,21,15,60],"9":[1,20,1,27],"10":[13,21,13,33],"16":[15,21,15,60],"17":[1,28,1,32],"18":[16,49,16,57],"24":[13,21,13,33],"25":[1,20,1,33],"32":[14,18,14,28],"33":[1,20,1,33],"34":[16,49,16,57],"40":[19,18,19,26],"41":[1,20,1,33],"42":[30,9,30,21],"48":[11,13,11,39],"49":[2,26,2,38],"50":[37,13,37,18],"56":[30,9,30,21],"57":[2,26,2,45],"58":[41,13,41,27],"64":[37,13,37,18],"65":[2,26,2,45],"66":[44,87,44,105],"72":[41,13,41,27],"73":[2,26,2,45],"74":[44,121,44,132],"80":[48,20,48,41],"81":[3,12,3,19],"82":[46,13,46,18],"88":[49,23,49,52],"89":[3,20,3,29],"90":[47,22,47,41],"96":[46,13,46,18],"97":[3,12,3,30],"98":[49,28,49,42],"104":[55,17,55,33],"105":[3,12,3,30],"106":[53,13,53,27],"112":[53,13,53,27],"113":[3,12,3,30],"114":[62,13,62,29],"120":[59,13,59,42],"121":[4,33,4,37],"122":[68,13,68,19],"128":[59,13,59,57],"129":[4,18,4,39],"130":[72,29,72,62],"136":[59,13,59,57],"137":[4,55,4,60],"138":[73,25,73,32],"144":[62,13,62,29],"145":[4,18,4,39],"146":[73,34,73,37],"152":[68,13,68,19],"153":[4,18,4,39],"160":[72,13,72,62],"161":[4,55,4,60],"162":[73,34,73,37],"168":[73,25,73,32],"169":[4,55,4,60],"170":[79,21,79,28],"176":[72,13,72,62],"177":[6,12,6,16],"178":[79,30,79,33],"184":[81,17,81,36],"185":[6,12,6,16],"192":[86,24,86,36],"193":[6,5,6,17],"194":[79,30,79,33],"200":[84,17,84,30],"201":[5,1,7,2],"202":[81,17,81,36],"208":[79,21,79,28],"209":[5,1,7,2],"210":[84,17,84,30],"216":[93,13,93,17],"217":[5,1,7,2],"218":[93,13,93,17],"224":[99,17,99,35],"225":[10,17,10,23],"226":[97,39,97,46],"232":[102,17,102,29],"233":[11,13,11,19],"234":[97,48,97,51],"240":[108,21,108,45],"241":[11,35,11,38],"248":[113,28,113,45],"249":[11,13,11,39],"250":[97,48,97,51],"251":[11,13,11,34],"256":[111,21,111,39],"257":[12,21,12,27],"258":[99,17,99,35],"264":[106,50,106,63],"265":[12,28,12,31],"266":[102,17,102,29],"272":[97,39,97,46],"273":[12,21,12,32],"274":[106,50,106,63],"281":[12,21,12,32],"282":[106,65,106,68],"289":[12,13,12,33],"297":[13,28,13,33],"298":[106,65,106,68],"305":[15,21,15,26],"306":[108,21,108,45],"313":[15,21,15,36],"314":[111,21,111,39],"321":[15,40,15,45],"329":[15,40,15,55],"337":[15,40,15,60],"345":[16,21,16,26],"353":[16,21,16,36],"369":[16,49,16,55],"377":[16,49,16,57],"393":[16,21,16,57],"401":[16,21,16,58],"409":[14,18,14,28],"417":[20,26,20,40],"425":[20,41,20,46],"433":[20,48,20,54],"441":[20,26,20,55],"449":[20,26,20,55],"457":[20,17,20,56],"465":[19,18,19,26],"473":[10,17,10,23],"481":[10,5,24,6],"489":[10,5,24,6],"497":[25,12,25,18],"505":[25,12,25,18],"513":[25,5,25,19],"521":[8,1,26,2],"529":[8,1,26,2],"537":[8,1,26,2],"545":[8,1,26,2],"553":[8,1,26,2],"561":[8,1,26,2],"569":[28,5,28,9],"577":[28,28,28,42],"585":[28,5,28,42],"593":[28,5,28,43],"601":[29,5,29,9],"609":[29,26,29,28],"617":[29,5,29,28],"625":[29,5,29,29],"633":[30,10,30,21],"641":[31,9,31,23],"649":[31,24,31,28],"657":[31,30,31,31],"665":[31,9,31,32],"673":[31,9,31,33],"681":[32,23,32,27],"689":[32,23,32,27],"697":[32,9,32,28],"705":[27,15,34,2],"713":[27,15,34,2],"721":[27,15,34,2],"729":[27,15,34,2],"737":[27,15,34,2],"745":[27,15,34,2],"753":[35,1,35,8],"761":[37,14,37,18],"769":[38,20,38,24],"777":[38,20,38,24],"785":[38,13,38,25],"793":[40,29,40,33],"801":[40,29,40,43],"809":[40,29,40,43],"817":[40,29,40,43],"825":[41,14,41,27],"833":[42,20,42,24],"841":[42,20,42,24],"849":[42,13,42,25],"857":[44,28,44,32],"865":[44,28,44,46],"873":[44,55,44,59],"881":[44,55,44,75],"889":[44,87,44,100],"897":[44,104,44,105],"905":[44,121,44,128],"913":[44,131,44,132],"921":[44,141,44,153],"929":[44,154,44,161],"937":[44,141,44,162],"945":[44,174,44,186],"953":[44,187,44,198],"961":[44,174,44,199],"969":[44,213,44,223],"977":[44,28,44,46],"985":[44,28,44,46],"993":[44,55,44,75],"1001":[44,55,44,75],"1009":[44,87,44,105],"1017":[44,87,44,105],"1025":[44,121,44,132],"1033":[44,121,44,132],"1041":[44,141,44,162],"1049":[44,141,44,162],"1057":[44,174,44,199],"1065":[44,174,44,199],"1073":[44,213,44,223],"1081":[44,213,44,223],"1089":[45,9,45,18],"1097":[45,33,45,37],"1105":[45,9,45,37],"1113":[45,9,45,38],"1121":[46,14,46,18],"1129":[47,22,47,29],"1137":[47,32,47,36],"1145":[47,32,47,41],"1153":[47,22,47,41],"1161":[47,13,47,42],"1169":[48,20,48,24],"1177":[48,25,48,31],"1185":[48,20,48,32],"1193":[48,36,48,41],"1201":[48,20,48,41],"1209":[48,13,48,42],"1217":[49,23,49,27],"1225":[49,28,49,34],"1233":[49,37,49,42],"1241":[49,23,49,43],"1249":[49,47,49,52],"1257":[49,23,49,52],"1265":[49,13,49,53],"1273":[50,13,50,25],"1281":[50,26,50,33],"1289":[50,37,50,41],"1297":[50,13,50,41],"1305":[50,13,50,42],"1313":[51,13,51,25],"1321":[51,26,51,37],"1329":[51,41,51,48],"1337":[51,13,51,48],"1345":[51,13,51,49],"1353":[53,13,53,17],"1361":[53,22,53,27],"1369":[54,27,54,31],"1377":[54,37,54,41],"1385":[54,43,54,47],"1393":[54,49,54,58],"1401":[54,27,54,59],"1403":[54,27,54,36],"1409":[54,27,54,59],"1417":[54,27,54,59],"1425":[55,17,55,21],"1433":[55,17,55,33],"1441":[56,24,56,31],"1449":[56,24,56,31],"1457":[56,17,56,32],"1465":[59,13,59,22],"1473":[59,13,59,34],"1481":[59,38,59,42],"1489":[59,46,59,50],"1497":[59,46,59,57],"1505":[60,13,60,17],"1513":[60,25,60,29],"1521":[60,13,60,30],"1523":[60,13,60,24],"1529":[60,13,60,31],"1537":[62,13,62,20],"1545":[62,24,62,29],"1553":[63,13,63,20],"1561":[63,26,63,30],"1569":[63,32,63,36],"1577":[63,13,63,37],"1579":[63,13,63,25],"1585":[63,13,63,38],"1593":[65,16,65,20],"1601":[65,16,65,20],"1609":[65,9,65,21],"1617":[36,12,66,6],"1625":[36,12,66,6],"1633":[36,12,66,6],"1641":[36,12,66,6],"1649":[36,12,66,6],"1657":[36,12,66,6],"1665":[36,12,66,6],"1673":[36,12,66,6],"1681":[36,12,66,6],"1689":[36,12,66,6],"1697":[36,12,66,6],"1705":[36,12,66,6],"1713":[36,12,66,6],"1721":[36,12,66,6],"1729":[68,14,68,19],"1737":[69,20,69,25],"1745":[69,20,69,25],"1753":[69,13,69,26],"1761":[71,19,71,24],"1769":[71,19,71,31],"1777":[71,19,71,31],"1785":[71,19,71,31],"1793":[72,13,72,25],"1801":[72,30,72,34],"1809":[72,30,72,50],"1817":[72,30,72,62],"1825":[73,22,73,23],"1833":[73,22,73,23],"1841":[73,25,73,26],"1849":[73,29,73,32],"1865":[73,34,73,35],"1873":[73,34,73,37],"1889":[74,17,74,21],"1897":[74,28,74,33],"1905":[74,34,74,35],"1913":[74,28,74,36],"1921":[74,17,74,37],"1923":[74,17,74,27],"1929":[74,17,74,38],"1937":[76,20,76,25],"1945":[76,20,76,25],"1953":[76,13,76,26],"1961":[78,19,78,21],"1969":[78,19,78,21],"1977":[78,19,78,21],"1985":[79,18,79,19],"1993":[79,18,79,19],"2001":[79,21,79,22],"2009":[79,25,79,28],"2025":[79,30,79,31],"2033":[79,30,79,33],"2049":[80,25,80,29],"2057":[80,36,80,41],"2065":[80,42,80,43],"2073":[80,36,80,44],"2081":[80,25,80,45],"2083":[80,25,80,35],"2089":[80,25,80,45],"2097":[80,25,80,45],"2105":[81,17,81,22],"2113":[81,27,81,36],"2121":[84,18,84,23],"2129":[84,18,84,30],"2137":[85,17,85,20],"2145":[85,26,85,31],"2153":[85,17,85,32],"2155":[85,17,85,25],"2161":[85,17,85,33],"2169":[86,24,86,29],"2177":[86,24,86,36],"2185":[87,17,87,21],"2193":[87,30,87,35],"2201":[87,37,87,40],"2209":[87,17,87,41],"2211":[87,17,87,29],"2217":[87,17,87,42],"2225":[90,16,90,19],"2233":[90,16,90,19],"2241":[90,9,90,20],"2249":[67,17,91,6],"2257":[67,17,91,6],"2265":[67,17,91,6],"2273":[67,17,91,6],"2281":[67,17,91,6],"2289":[67,17,91,6],"2297":[67,17,91,6],"2305":[67,17,91,6],"2313":[67,17,91,6],"2321":[93,14,93,17],"2329":[94,19,94,21],"2337":[94,19,94,21],"2345":[94,13,94,22],"2353":[97,18,97,19],"2361":[97,18,97,19],"2369":[97,27,97,30],"2377":[97,27,97,37],"2385":[97,27,97,37],"2393":[97,14,97,19],"2401":[97,39,97,40],"2409":[97,43,97,46],"2425":[97,48,97,49],"2433":[97,48,97,51],"2449":[98,20,98,23],"2457":[98,24,98,25],"2465":[98,20,98,26],"2473":[98,20,98,26],"2481":[98,13,98,27],"2489":[99,17,99,21],"2497":[99,26,99,35],"2505":[102,18,102,22],"2513":[102,18,102,29],"2521":[103,17,103,20],"2529":[103,26,103,30],"2537":[103,17,103,31],"2539":[103,17,103,25],"2545":[103,17,103,32],"2553":[106,22,106,23],"2561":[106,22,106,23],"2569":[106,37,106,41],"2577":[106,37,106,48],"2585":[106,37,106,48],"2593":[106,18,106,23],"2601":[106,50,106,51],"2609":[106,54,106,63],"2625":[106,65,106,66],"2633":[106,65,106,68],"2649":[107,30,107,34],"2657":[107,35,107,36],"2665":[107,30,107,37],"2673":[107,30,107,37],"2681":[107,17,107,38],"2689":[108,21,108,31],"2697":[108,36,108,45],"2705":[111,22,111,32],"2713":[111,22,111,39],"2721":[112,21,112,24],"2729":[112,30,112,40],"2737":[112,21,112,41],"2739":[112,21,112,29],"2745":[112,21,112,42],"2753":[113,28,113,38],"2761":[113,28,113,45],"2769":[114,21,114,25],"2777":[114,34,114,44],"2785":[114,46,114,49],"2793":[114,21,114,50],"2795":[114,21,114,33],"2801":[114,21,114,51],"2809":[118,16,118,19],"2817":[118,16,118,19],"2825":[118,9,118,20],"2833":[92,14,119,6],"2841":[92,14,119,6],"2849":[92,14,119,6],"2857":[92,14,119,6],"2865":[92,14,119,6],"2873":[92,14,119,6],"2881":[92,14,119,6],"2889":[92,14,119,6],"2897":[92,14,119,6],"2905":[92,14,119,6],"2913":[92,14,119,6],"2921":[35,21,120,2],"2929":[35,1,120,2],"2937":[35,1,120,3],"2945":[121,1,121,7],"2953":[121,18,121,25],"2961":[121,1,121,25],"2969":[121,1,121,26],"2977":[1,1,121,26],"2985":[1,1,121,26],"2993":[1,1,121,26],"3001":[1,1,121,26],"3009":[1,1,121,26],"3017":[1,1,121,26],"3025":[5,1,7,2],"3033":[1,1,121,26],"3041":[8,1,26,2],"3049":[1,1,121,26],"3057":[1,1,121,26],"3065":[5,1,7,2],"3073":[5,1,7,2],"3081":[15,17,17,18],"3089":[13,21,13,33],"3097":[14,18,14,28],"3105":[19,18,19,26],"3113":[11,9,23,10],"3121":[8,1,26,2],"3129":[8,1,26,2],"3137":[30,5,33,6],"3145":[27,15,34,2],"3153":[27,15,34,2],"3161":[37,9,39,10],"3169":[41,9,43,10],"3177":[46,9,52,10],"3185":[55,13,57,14],"3193":[53,9,58,10],"3201":[59,9,61,10],"3209":[62,9,64,10],"3217":[36,12,66,6],"3225":[36,12,66,6],"3233":[68,9,70,10],"3241":[73,13,75,14],"3249":[73,13,75,14],"3257":[73,13,75,14],"3265":[72,9,77,10],"3273":[81,13,83,14],"3281":[86,20,88,14],"3289":[84,13,88,14],"3297":[79,9,89,10],"3305":[79,9,89,10],"3313":[79,9,89,10],"3321":[67,17,91,6],"3329":[67,17,91,6],"3337":[93,9,95,10],"3345":[99,13,101,14],"3353":[102,13,105,14],"3361":[108,17,110,18],"3369":[113,24,115,18],"3377":[111,17,115,18],"3385":[106,13,116,14],"3393":[106,13,116,14],"3401":[106,13,116,14],"3409":[97,9,117,10],"3417":[97,9,117,10],"3425":[97,9,117,10],"3433":[92,14,119,6],"3441":[92,14,119,6],"3449":[1,1,121,26],"3457":[1,1,121,26],"nBranches":68,"originalCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/visitor.js","instrumentedCodeFileName":"/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/visitor_jalangi_.js","code":"var tree = require(\"../tree\");\n\nvar _visitArgs = { visitDeeper: true },\n    _hasIndexed = false;\n\nfunction _noop(node) {\n    return node;\n}\n\nfunction indexNodeTypes(parent, ticker) {\n    // add .typeIndex to tree node types for lookup table\n    var key, child;\n    for (key in parent) {\n        if (parent.hasOwnProperty(key)) {\n            child = parent[key];\n            switch (typeof child) {\n                case \"function\":\n                    // ignore bound functions directly on tree which do not have a prototype\n                    // or aren't nodes\n                    if (child.prototype && child.prototype.type) {\n                        child.prototype.typeIndex = ticker++;\n                    }\n                    break;\n                case \"object\":\n                    ticker = indexNodeTypes(child, ticker);\n                    break;\n            }\n        }\n    }\n    return ticker;\n}\n\nvar Visitor = function(implementation) {\n    this._implementation = implementation;\n    this._visitFnCache = [];\n\n    if (!_hasIndexed) {\n        indexNodeTypes(tree, 1);\n        _hasIndexed = true;\n    }\n};\n\nVisitor.prototype = {\n    visit: function(node) {\n        if (!node) {\n            return node;\n        }\n\n        var nodeTypeIndex = node.typeIndex;\n        if (!nodeTypeIndex) {\n            return node;\n        }\n\n        var visitFnCache = this._visitFnCache,\n            impl = this._implementation,\n            aryIndx = nodeTypeIndex << 1,\n            outAryIndex = aryIndx | 1,\n            func = visitFnCache[aryIndx],\n            funcOut = visitFnCache[outAryIndex],\n            visitArgs = _visitArgs,\n            fnName;\n\n        visitArgs.visitDeeper = true;\n\n        if (!func) {\n            fnName = \"visit\" + node.type;\n            func = impl[fnName] || _noop;\n            funcOut = impl[fnName + \"Out\"] || _noop;\n            visitFnCache[aryIndx] = func;\n            visitFnCache[outAryIndex] = funcOut;\n        }\n\n        if (func !== _noop) {\n            var newNode = func.call(impl, node, visitArgs);\n            if (impl.isReplacing) {\n                node = newNode;\n            }\n        }\n\n        if (visitArgs.visitDeeper && node && node.accept) {\n            node.accept(this);\n        }\n\n        if (funcOut != _noop) {\n            funcOut.call(impl, node);\n        }\n\n        return node;\n    },\n    visitArray: function(nodes, nonReplacing) {\n        if (!nodes) {\n            return nodes;\n        }\n\n        var cnt = nodes.length, i;\n\n        // Non-replacing\n        if (nonReplacing || !this._implementation.isReplacing) {\n            for (i = 0; i < cnt; i++) {\n                this.visit(nodes[i]);\n            }\n            return nodes;\n        }\n\n        // Replacing\n        var out = [];\n        for (i = 0; i < cnt; i++) {\n            var evald = this.visit(nodes[i]);\n            if (evald === undefined) { continue; }\n            if (!evald.splice) {\n                out.push(evald);\n            } else if (evald.length) {\n                this.flatten(evald, out);\n            }\n        }\n        return out;\n    },\n    flatten: function(arr, out) {\n        if (!out) {\n            out = [];\n        }\n\n        var cnt, i, item,\n            nestedCnt, j, nestedItem;\n\n        for (i = 0, cnt = arr.length; i < cnt; i++) {\n            item = arr[i];\n            if (item === undefined) {\n                continue;\n            }\n            if (!item.splice) {\n                out.push(item);\n                continue;\n            }\n\n            for (j = 0, nestedCnt = item.length; j < nestedCnt; j++) {\n                nestedItem = item[j];\n                if (nestedItem === undefined) {\n                    continue;\n                }\n                if (!nestedItem.splice) {\n                    out.push(nestedItem);\n                } else if (nestedItem.length) {\n                    this.flatten(nestedItem, out);\n                }\n            }\n        }\n\n        return out;\n    }\n};\nmodule.exports = Visitor;\n"};
jalangiLabel525:
    while (true) {
        try {
            J$.Se(2977, '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/visitor_jalangi_.js', '/home/blake/ExpoSE/Targets/less-file/node_modules/less/lib/less/visitors/visitor.js');
            function _noop(node) {
                jalangiLabel519:
                    while (true) {
                        try {
                            J$.Fe(201, arguments.callee, this, arguments);
                            arguments = J$.N(209, 'arguments', arguments, 4);
                            node = J$.N(217, 'node', node, 4);
                            return J$.X1(193, J$.Rt(185, J$.R(177, 'node', node, 0)));
                        } catch (J$e) {
                            J$.Ex(3065, J$e);
                        } finally {
                            if (J$.Fr(3073))
                                continue jalangiLabel519;
                            else
                                return J$.Ra();
                        }
                    }
            }
            function indexNodeTypes(parent, ticker) {
                jalangiLabel520:
                    while (true) {
                        try {
                            J$.Fe(521, arguments.callee, this, arguments);
                            arguments = J$.N(529, 'arguments', arguments, 4);
                            parent = J$.N(537, 'parent', parent, 4);
                            ticker = J$.N(545, 'ticker', ticker, 4);
                            J$.N(553, 'key', key, 0);
                            J$.N(561, 'child', child, 0);
                            var key, child;
                            for (J$._tm_p in J$.H(473, J$.R(225, 'parent', parent, 0))) {
                                J$.X1(489, key = J$.W(481, 'key', J$._tm_p, key, 0));
                                {
                                    {
                                        if (J$.X1(3113, J$.C(48, J$.M(249, J$.R(233, 'parent', parent, 0), 'hasOwnProperty', 0)(J$.R(241, 'key', key, 0))))) {
                                            J$.X1(289, child = J$.W(281, 'child', J$.G(273, J$.R(257, 'parent', parent, 0), J$.R(265, 'key', key, 0), 4), child, 0));
                                            switch (J$.X1(3089, J$.C1(24, J$.U(10, 'typeof', J$.R(297, 'child', child, 0))))) {
                                            case J$.X1(3097, J$.C2(32, J$.T(409, 'function', 21, false))):
                                                if (J$.X1(3081, J$.C(16, J$.C(8, J$.G(313, J$.R(305, 'child', child, 0), 'prototype', 0)) ? J$.G(337, J$.G(329, J$.R(321, 'child', child, 0), 'prototype', 0), 'type', 0) : J$._()))) {
                                                    J$.X1(401, J$.P(393, J$.G(353, J$.R(345, 'child', child, 0), 'prototype', 0), 'typeIndex', J$.B(34, '-', ticker = J$.W(377, 'ticker', J$.B(26, '+', J$.U(18, '+', J$.R(369, 'ticker', ticker, 0)), J$.T(361, 1, 22, false), 0), ticker, 0), J$.T(385, 1, 22, false), 0), 0));
                                                }
                                                break;
                                            case J$.X1(3105, J$.C2(40, J$.T(465, 'object', 21, false))):
                                                J$.X1(457, ticker = J$.W(449, 'ticker', J$.F(441, J$.R(417, 'indexNodeTypes', indexNodeTypes, 1), 0)(J$.R(425, 'child', child, 0), J$.R(433, 'ticker', ticker, 0)), ticker, 0));
                                                break;
                                            }
                                        }
                                    }
                                }
                            }
                            return J$.X1(513, J$.Rt(505, J$.R(497, 'ticker', ticker, 0)));
                        } catch (J$e) {
                            J$.Ex(3121, J$e);
                        } finally {
                            if (J$.Fr(3129))
                                continue jalangiLabel520;
                            else
                                return J$.Ra();
                        }
                    }
            }
            J$.N(2985, '__secret__S$', __secret__S$, 0);
            J$.N(2993, '__secret__traits__', __secret__traits__, 0);
            J$.N(3001, 'tree', tree, 0);
            J$.N(3009, '_visitArgs', _visitArgs, 0);
            J$.N(3017, '_hasIndexed', _hasIndexed, 0);
            _noop = J$.N(3033, '_noop', J$.T(3025, _noop, 12, false, 201), 0);
            indexNodeTypes = J$.N(3049, 'indexNodeTypes', J$.T(3041, indexNodeTypes, 12, false, 521), 0);
            J$.N(3057, 'Visitor', Visitor, 0);
            var __secret__S$ = J$.X1(41, J$.W(33, '__secret__S$', J$.F(25, J$.R(9, 'require', require, 2), 0)(J$.T(17, 'S$', 21, false)), __secret__S$, 3));
            var __secret__traits__ = J$.X1(73, J$.W(65, '__secret__traits__', J$.G(57, J$.R(49, '__secret__S$', __secret__S$, 1), 'Traits', 0), __secret__traits__, 3));
            var tree = J$.X1(113, J$.W(105, 'tree', J$.F(97, J$.R(81, 'require', require, 2), 0)(J$.T(89, '../tree', 21, false)), tree, 3));
            var _visitArgs = J$.X1(153, J$.W(145, '_visitArgs', J$.T(129, {
                    visitDeeper: J$.T(121, true, 23, false)
                }, 11, false), _visitArgs, 3)), _hasIndexed = J$.X1(169, J$.W(161, '_hasIndexed', J$.T(137, false, 23, false), _hasIndexed, 3));
            var Visitor = J$.X1(745, J$.W(737, 'Visitor', J$.T(729, function (implementation) {
                jalangiLabel521:
                    while (true) {
                        try {
                            J$.Fe(705, arguments.callee, this, arguments);
                            arguments = J$.N(713, 'arguments', arguments, 4);
                            implementation = J$.N(721, 'implementation', implementation, 4);
                            J$.X1(593, J$.P(585, J$.R(569, 'this', this, 0), '_implementation', J$.R(577, 'implementation', implementation, 0), 0));
                            J$.X1(625, J$.P(617, J$.R(601, 'this', this, 0), '_visitFnCache', J$.T(609, [], 10, false), 0));
                            if (J$.X1(3137, J$.C(56, J$.U(42, '!', J$.R(633, '_hasIndexed', _hasIndexed, 1))))) {
                                J$.X1(673, J$.F(665, J$.R(641, 'indexNodeTypes', indexNodeTypes, 1), 0)(J$.R(649, 'tree', tree, 1), J$.T(657, 1, 22, false)));
                                J$.X1(697, _hasIndexed = J$.W(689, '_hasIndexed', J$.T(681, true, 23, false), _hasIndexed, 2));
                            }
                        } catch (J$e) {
                            J$.Ex(3145, J$e);
                        } finally {
                            if (J$.Fr(3153))
                                continue jalangiLabel521;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 705), Visitor, 3));
            J$.X1(2937, J$.P(2929, J$.R(753, 'Visitor', Visitor, 1), 'prototype', J$.T(2921, {
                visit: J$.T(1721, function (node) {
                    jalangiLabel522:
                        while (true) {
                            try {
                                J$.Fe(1617, arguments.callee, this, arguments);
                                arguments = J$.N(1625, 'arguments', arguments, 4);
                                node = J$.N(1633, 'node', node, 4);
                                J$.N(1641, 'nodeTypeIndex', nodeTypeIndex, 0);
                                J$.N(1649, 'visitFnCache', visitFnCache, 0);
                                J$.N(1657, 'impl', impl, 0);
                                J$.N(1665, 'aryIndx', aryIndx, 0);
                                J$.N(1673, 'outAryIndex', outAryIndex, 0);
                                J$.N(1681, 'func', func, 0);
                                J$.N(1689, 'funcOut', funcOut, 0);
                                J$.N(1697, 'visitArgs', visitArgs, 0);
                                J$.N(1705, 'fnName', fnName, 0);
                                J$.N(1713, 'newNode', newNode, 0);
                                if (J$.X1(3161, J$.C(64, J$.U(50, '!', J$.R(761, 'node', node, 0))))) {
                                    return J$.X1(785, J$.Rt(777, J$.R(769, 'node', node, 0)));
                                }
                                var nodeTypeIndex = J$.X1(817, J$.W(809, 'nodeTypeIndex', J$.G(801, J$.R(793, 'node', node, 0), 'typeIndex', 0), nodeTypeIndex, 1));
                                if (J$.X1(3169, J$.C(72, J$.U(58, '!', J$.R(825, 'nodeTypeIndex', nodeTypeIndex, 0))))) {
                                    return J$.X1(849, J$.Rt(841, J$.R(833, 'node', node, 0)));
                                }
                                var visitFnCache = J$.X1(985, J$.W(977, 'visitFnCache', J$.G(865, J$.R(857, 'this', this, 0), '_visitFnCache', 0), visitFnCache, 1)), impl = J$.X1(1001, J$.W(993, 'impl', J$.G(881, J$.R(873, 'this', this, 0), '_implementation', 0), impl, 1)), aryIndx = J$.X1(1017, J$.W(1009, 'aryIndx', J$.B(66, '<<', J$.R(889, 'nodeTypeIndex', nodeTypeIndex, 0), J$.T(897, 1, 22, false), 0), aryIndx, 1)), outAryIndex = J$.X1(1033, J$.W(1025, 'outAryIndex', J$.B(74, '|', J$.R(905, 'aryIndx', aryIndx, 0), J$.T(913, 1, 22, false), 0), outAryIndex, 1)), func = J$.X1(1049, J$.W(1041, 'func', J$.G(937, J$.R(921, 'visitFnCache', visitFnCache, 0), J$.R(929, 'aryIndx', aryIndx, 0), 4), func, 1)), funcOut = J$.X1(1065, J$.W(1057, 'funcOut', J$.G(961, J$.R(945, 'visitFnCache', visitFnCache, 0), J$.R(953, 'outAryIndex', outAryIndex, 0), 4), funcOut, 1)), visitArgs = J$.X1(1081, J$.W(1073, 'visitArgs', J$.R(969, '_visitArgs', _visitArgs, 1), visitArgs, 1)), fnName;
                                J$.X1(1113, J$.P(1105, J$.R(1089, 'visitArgs', visitArgs, 0), 'visitDeeper', J$.T(1097, true, 23, false), 0));
                                if (J$.X1(3177, J$.C(96, J$.U(82, '!', J$.R(1121, 'func', func, 0))))) {
                                    J$.X1(1161, fnName = J$.W(1153, 'fnName', J$.B(90, '+', J$.T(1129, 'visit', 21, false), J$.G(1145, J$.R(1137, 'node', node, 0), 'type', 0), 0), fnName, 0));
                                    J$.X1(1209, func = J$.W(1201, 'func', J$.C(80, J$.G(1185, J$.R(1169, 'impl', impl, 0), J$.R(1177, 'fnName', fnName, 0), 4)) ? J$._() : J$.R(1193, '_noop', _noop, 1), func, 0));
                                    J$.X1(1265, funcOut = J$.W(1257, 'funcOut', J$.C(88, J$.G(1241, J$.R(1217, 'impl', impl, 0), J$.B(98, '+', J$.R(1225, 'fnName', fnName, 0), J$.T(1233, 'Out', 21, false), 0), 4)) ? J$._() : J$.R(1249, '_noop', _noop, 1), funcOut, 0));
                                    J$.X1(1305, J$.P(1297, J$.R(1273, 'visitFnCache', visitFnCache, 0), J$.R(1281, 'aryIndx', aryIndx, 0), J$.R(1289, 'func', func, 0), 2));
                                    J$.X1(1345, J$.P(1337, J$.R(1313, 'visitFnCache', visitFnCache, 0), J$.R(1321, 'outAryIndex', outAryIndex, 0), J$.R(1329, 'funcOut', funcOut, 0), 2));
                                }
                                if (J$.X1(3193, J$.C(112, J$.B(106, '!==', J$.R(1353, 'func', func, 0), J$.R(1361, '_noop', _noop, 1), 0)))) {
                                    var newNode = J$.X1(1417, J$.W(1409, 'newNode', J$.M(1401, J$.R(1369, 'func', func, 0), 'call', 0)(J$.R(1377, 'impl', impl, 0), J$.R(1385, 'node', node, 0), J$.R(1393, 'visitArgs', visitArgs, 0)), newNode, 1));
                                    if (J$.X1(3185, J$.C(104, J$.G(1433, J$.R(1425, 'impl', impl, 0), 'isReplacing', 0)))) {
                                        J$.X1(1457, node = J$.W(1449, 'node', J$.R(1441, 'newNode', newNode, 0), node, 0));
                                    }
                                }
                                if (J$.X1(3201, J$.C(136, J$.C(128, J$.C(120, J$.G(1473, J$.R(1465, 'visitArgs', visitArgs, 0), 'visitDeeper', 0)) ? J$.R(1481, 'node', node, 0) : J$._()) ? J$.G(1497, J$.R(1489, 'node', node, 0), 'accept', 0) : J$._()))) {
                                    J$.X1(1529, J$.M(1521, J$.R(1505, 'node', node, 0), 'accept', 0)(J$.R(1513, 'this', this, 0)));
                                }
                                if (J$.X1(3209, J$.C(144, J$.B(114, '!=', J$.R(1537, 'funcOut', funcOut, 0), J$.R(1545, '_noop', _noop, 1), 0)))) {
                                    J$.X1(1585, J$.M(1577, J$.R(1553, 'funcOut', funcOut, 0), 'call', 0)(J$.R(1561, 'impl', impl, 0), J$.R(1569, 'node', node, 0)));
                                }
                                return J$.X1(1609, J$.Rt(1601, J$.R(1593, 'node', node, 0)));
                            } catch (J$e) {
                                J$.Ex(3217, J$e);
                            } finally {
                                if (J$.Fr(3225))
                                    continue jalangiLabel522;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 1617),
                visitArray: J$.T(2313, function (nodes, nonReplacing) {
                    jalangiLabel523:
                        while (true) {
                            try {
                                J$.Fe(2249, arguments.callee, this, arguments);
                                arguments = J$.N(2257, 'arguments', arguments, 4);
                                nodes = J$.N(2265, 'nodes', nodes, 4);
                                nonReplacing = J$.N(2273, 'nonReplacing', nonReplacing, 4);
                                J$.N(2281, 'cnt', cnt, 0);
                                J$.N(2289, 'i', i, 0);
                                J$.N(2297, 'out', out, 0);
                                J$.N(2305, 'evald', evald, 0);
                                if (J$.X1(3233, J$.C(152, J$.U(122, '!', J$.R(1729, 'nodes', nodes, 0))))) {
                                    return J$.X1(1753, J$.Rt(1745, J$.R(1737, 'nodes', nodes, 0)));
                                }
                                var cnt = J$.X1(1785, J$.W(1777, 'cnt', J$.G(1769, J$.R(1761, 'nodes', nodes, 0), 'length', 0), cnt, 1)), i;
                                if (J$.X1(3265, J$.C(176, J$.C(160, J$.R(1793, 'nonReplacing', nonReplacing, 0)) ? J$._() : J$.U(130, '!', J$.G(1817, J$.G(1809, J$.R(1801, 'this', this, 0), '_implementation', 0), 'isReplacing', 0))))) {
                                    for (J$.X1(3249, i = J$.W(1833, 'i', J$.T(1825, 0, 22, false), i, 0)); J$.X1(3241, J$.C(168, J$.B(138, '<', J$.R(1841, 'i', i, 0), J$.R(1849, 'cnt', cnt, 0), 0))); J$.X1(3257, J$.B(162, '-', i = J$.W(1873, 'i', J$.B(154, '+', J$.U(146, '+', J$.R(1865, 'i', i, 0)), J$.T(1857, 1, 22, false), 0), i, 0), J$.T(1881, 1, 22, false), 0))) {
                                        J$.X1(1929, J$.M(1921, J$.R(1889, 'this', this, 0), 'visit', 0)(J$.G(1913, J$.R(1897, 'nodes', nodes, 0), J$.R(1905, 'i', i, 0), 4)));
                                    }
                                    return J$.X1(1953, J$.Rt(1945, J$.R(1937, 'nodes', nodes, 0)));
                                }
                                var out = J$.X1(1977, J$.W(1969, 'out', J$.T(1961, [], 10, false), out, 1));
                                for (J$.X1(3305, i = J$.W(1993, 'i', J$.T(1985, 0, 22, false), i, 0)); J$.X1(3297, J$.C(208, J$.B(170, '<', J$.R(2001, 'i', i, 0), J$.R(2009, 'cnt', cnt, 0), 0))); J$.X1(3313, J$.B(194, '-', i = J$.W(2033, 'i', J$.B(186, '+', J$.U(178, '+', J$.R(2025, 'i', i, 0)), J$.T(2017, 1, 22, false), 0), i, 0), J$.T(2041, 1, 22, false), 0))) {
                                    var evald = J$.X1(2097, J$.W(2089, 'evald', J$.M(2081, J$.R(2049, 'this', this, 0), 'visit', 0)(J$.G(2073, J$.R(2057, 'nodes', nodes, 0), J$.R(2065, 'i', i, 0), 4)), evald, 1));
                                    if (J$.X1(3273, J$.C(184, J$.B(202, '===', J$.R(2105, 'evald', evald, 0), J$.T(2113, undefined, 24, false), 0)))) {
                                        continue;
                                    }
                                    if (J$.X1(3289, J$.C(200, J$.U(210, '!', J$.G(2129, J$.R(2121, 'evald', evald, 0), 'splice', 0))))) {
                                        J$.X1(2161, J$.M(2153, J$.R(2137, 'out', out, 0), 'push', 0)(J$.R(2145, 'evald', evald, 0)));
                                    } else if (J$.X1(3281, J$.C(192, J$.G(2177, J$.R(2169, 'evald', evald, 0), 'length', 0)))) {
                                        J$.X1(2217, J$.M(2209, J$.R(2185, 'this', this, 0), 'flatten', 0)(J$.R(2193, 'evald', evald, 0), J$.R(2201, 'out', out, 0)));
                                    }
                                }
                                return J$.X1(2241, J$.Rt(2233, J$.R(2225, 'out', out, 0)));
                            } catch (J$e) {
                                J$.Ex(3321, J$e);
                            } finally {
                                if (J$.Fr(3329))
                                    continue jalangiLabel523;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2249),
                flatten: J$.T(2913, function (arr, out) {
                    jalangiLabel524:
                        while (true) {
                            try {
                                J$.Fe(2833, arguments.callee, this, arguments);
                                arguments = J$.N(2841, 'arguments', arguments, 4);
                                arr = J$.N(2849, 'arr', arr, 4);
                                out = J$.N(2857, 'out', out, 4);
                                J$.N(2865, 'cnt', cnt, 0);
                                J$.N(2873, 'i', i, 0);
                                J$.N(2881, 'item', item, 0);
                                J$.N(2889, 'nestedCnt', nestedCnt, 0);
                                J$.N(2897, 'j', j, 0);
                                J$.N(2905, 'nestedItem', nestedItem, 0);
                                if (J$.X1(3337, J$.C(216, J$.U(218, '!', J$.R(2321, 'out', out, 0))))) {
                                    J$.X1(2345, out = J$.W(2337, 'out', J$.T(2329, [], 10, false), out, 0));
                                }
                                var cnt, i, item, nestedCnt, j, nestedItem;
                                for (J$.X1(3417, (J$.X1(2393, i = J$.W(2361, 'i', J$.T(2353, 0, 22, false), i, 0)), cnt = J$.W(2385, 'cnt', J$.G(2377, J$.R(2369, 'arr', arr, 0), 'length', 0), cnt, 0))); J$.X1(3409, J$.C(272, J$.B(226, '<', J$.R(2401, 'i', i, 0), J$.R(2409, 'cnt', cnt, 0), 0))); J$.X1(3425, J$.B(250, '-', i = J$.W(2433, 'i', J$.B(242, '+', J$.U(234, '+', J$.R(2425, 'i', i, 0)), J$.T(2417, 1, 22, false), 0), i, 0), J$.T(2441, 1, 22, false), 0))) {
                                    J$.X1(2481, item = J$.W(2473, 'item', J$.G(2465, J$.R(2449, 'arr', arr, 0), J$.R(2457, 'i', i, 0), 4), item, 0));
                                    if (J$.X1(3345, J$.C(224, J$.B(258, '===', J$.R(2489, 'item', item, 0), J$.T(2497, undefined, 24, false), 0)))) {
                                        continue;
                                    }
                                    if (J$.X1(3353, J$.C(232, J$.U(266, '!', J$.G(2513, J$.R(2505, 'item', item, 0), 'splice', 0))))) {
                                        J$.X1(2545, J$.M(2537, J$.R(2521, 'out', out, 0), 'push', 0)(J$.R(2529, 'item', item, 0)));
                                        continue;
                                    }
                                    for (J$.X1(3393, (J$.X1(2593, j = J$.W(2561, 'j', J$.T(2553, 0, 22, false), j, 0)), nestedCnt = J$.W(2585, 'nestedCnt', J$.G(2577, J$.R(2569, 'item', item, 0), 'length', 0), nestedCnt, 0))); J$.X1(3385, J$.C(264, J$.B(274, '<', J$.R(2601, 'j', j, 0), J$.R(2609, 'nestedCnt', nestedCnt, 0), 0))); J$.X1(3401, J$.B(298, '-', j = J$.W(2633, 'j', J$.B(290, '+', J$.U(282, '+', J$.R(2625, 'j', j, 0)), J$.T(2617, 1, 22, false), 0), j, 0), J$.T(2641, 1, 22, false), 0))) {
                                        J$.X1(2681, nestedItem = J$.W(2673, 'nestedItem', J$.G(2665, J$.R(2649, 'item', item, 0), J$.R(2657, 'j', j, 0), 4), nestedItem, 0));
                                        if (J$.X1(3361, J$.C(240, J$.B(306, '===', J$.R(2689, 'nestedItem', nestedItem, 0), J$.T(2697, undefined, 24, false), 0)))) {
                                            continue;
                                        }
                                        if (J$.X1(3377, J$.C(256, J$.U(314, '!', J$.G(2713, J$.R(2705, 'nestedItem', nestedItem, 0), 'splice', 0))))) {
                                            J$.X1(2745, J$.M(2737, J$.R(2721, 'out', out, 0), 'push', 0)(J$.R(2729, 'nestedItem', nestedItem, 0)));
                                        } else if (J$.X1(3369, J$.C(248, J$.G(2761, J$.R(2753, 'nestedItem', nestedItem, 0), 'length', 0)))) {
                                            J$.X1(2801, J$.M(2793, J$.R(2769, 'this', this, 0), 'flatten', 0)(J$.R(2777, 'nestedItem', nestedItem, 0), J$.R(2785, 'out', out, 0)));
                                        }
                                    }
                                }
                                return J$.X1(2825, J$.Rt(2817, J$.R(2809, 'out', out, 0)));
                            } catch (J$e) {
                                J$.Ex(3433, J$e);
                            } finally {
                                if (J$.Fr(3441))
                                    continue jalangiLabel524;
                                else
                                    return J$.Ra();
                            }
                        }
                }, 12, false, 2833)
            }, 11, false), 0));
            J$.X1(2969, J$.P(2961, J$.R(2945, 'module', module, 2), 'exports', J$.R(2953, 'Visitor', Visitor, 1), 0));
        } catch (J$e) {
            J$.Ex(3449, J$e);
        } finally {
            if (J$.Sr(3457)) {
                J$.L();
                continue jalangiLabel525;
            } else {
                J$.L();
                break jalangiLabel525;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
